
Smartwatch.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000dc5c  10008000  10008000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000007c  10015c5c  10015c5c  00015c5c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00004aa0  10015cd8  10015cd8  00015cd8  2**2
                  ALLOC
  3 .stack        00000800  1001a778  1001a778  00015cd8  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00015cd8  2**0
                  CONTENTS, READONLY
  5 .comment      000000b4  00000000  00000000  00015d00  2**0
                  CONTENTS, READONLY
  6 .debug_info   0002e8cc  00000000  00000000  00015db4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004108  00000000  00000000  00044680  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 00000978  00000000  00000000  00048788  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_macro  000242f8  00000000  00000000  00049100  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0001189b  00000000  00000000  0006d3f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0013ecc4  00000000  00000000  0007ec93  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00007f72  00000000  00000000  001bd957  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000a10  00000000  00000000  001c58c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000022a0  00000000  00000000  001c62dc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

10008000 <app_entry>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void app_entry(void)
{
10008000:	b510      	push	{r4, lr}

    /* Initialize the relocate segment */
    pSrc = &_etext;
    pDest = &_srelocate;

    if (pSrc != pDest) {
10008002:	4b18      	ldr	r3, [pc, #96]	; (10008064 <app_entry+0x64>)
10008004:	4a18      	ldr	r2, [pc, #96]	; (10008068 <app_entry+0x68>)
10008006:	429a      	cmp	r2, r3
10008008:	d003      	beq.n	10008012 <app_entry+0x12>
        for (; pDest < &_erelocate;) {
1000800a:	4b18      	ldr	r3, [pc, #96]	; (1000806c <app_entry+0x6c>)
1000800c:	4a15      	ldr	r2, [pc, #84]	; (10008064 <app_entry+0x64>)
1000800e:	429a      	cmp	r2, r3
10008010:	d304      	bcc.n	1000801c <app_entry+0x1c>
            *pDest++ = *pSrc++;
        }
    }

    /* Clear the zero segment */
    for (pDest = &_szero; pDest < &_ezero;) {
10008012:	4b17      	ldr	r3, [pc, #92]	; (10008070 <app_entry+0x70>)
10008014:	4a17      	ldr	r2, [pc, #92]	; (10008074 <app_entry+0x74>)
10008016:	429a      	cmp	r2, r3
10008018:	d310      	bcc.n	1000803c <app_entry+0x3c>
1000801a:	e01e      	b.n	1000805a <app_entry+0x5a>
1000801c:	4b16      	ldr	r3, [pc, #88]	; (10008078 <app_entry+0x78>)
1000801e:	4a13      	ldr	r2, [pc, #76]	; (1000806c <app_entry+0x6c>)
10008020:	3203      	adds	r2, #3
10008022:	1ad2      	subs	r2, r2, r3
10008024:	0892      	lsrs	r2, r2, #2
10008026:	3201      	adds	r2, #1
10008028:	0092      	lsls	r2, r2, #2
    /* Initialize the relocate segment */
    pSrc = &_etext;
    pDest = &_srelocate;

    if (pSrc != pDest) {
        for (; pDest < &_erelocate;) {
1000802a:	2300      	movs	r3, #0
            *pDest++ = *pSrc++;
1000802c:	480d      	ldr	r0, [pc, #52]	; (10008064 <app_entry+0x64>)
1000802e:	490e      	ldr	r1, [pc, #56]	; (10008068 <app_entry+0x68>)
10008030:	58cc      	ldr	r4, [r1, r3]
10008032:	50c4      	str	r4, [r0, r3]
10008034:	3304      	adds	r3, #4
    /* Initialize the relocate segment */
    pSrc = &_etext;
    pDest = &_srelocate;

    if (pSrc != pDest) {
        for (; pDest < &_erelocate;) {
10008036:	4293      	cmp	r3, r2
10008038:	d1fa      	bne.n	10008030 <app_entry+0x30>
1000803a:	e7ea      	b.n	10008012 <app_entry+0x12>
1000803c:	4b0f      	ldr	r3, [pc, #60]	; (1000807c <app_entry+0x7c>)
1000803e:	490c      	ldr	r1, [pc, #48]	; (10008070 <app_entry+0x70>)
10008040:	3103      	adds	r1, #3
10008042:	1ac9      	subs	r1, r1, r3
10008044:	0889      	lsrs	r1, r1, #2
10008046:	3101      	adds	r1, #1
10008048:	0089      	lsls	r1, r1, #2
            *pDest++ = *pSrc++;
        }
    }

    /* Clear the zero segment */
    for (pDest = &_szero; pDest < &_ezero;) {
1000804a:	2300      	movs	r3, #0
        *pDest++ = 0;
1000804c:	4c09      	ldr	r4, [pc, #36]	; (10008074 <app_entry+0x74>)
1000804e:	2000      	movs	r0, #0
10008050:	191a      	adds	r2, r3, r4
10008052:	6010      	str	r0, [r2, #0]
10008054:	3304      	adds	r3, #4
            *pDest++ = *pSrc++;
        }
    }

    /* Clear the zero segment */
    for (pDest = &_szero; pDest < &_ezero;) {
10008056:	428b      	cmp	r3, r1
10008058:	d1fa      	bne.n	10008050 <app_entry+0x50>
        *pDest++ = 0;
    }

    /* Initialize the C library */
    __libc_init_array();
1000805a:	4b09      	ldr	r3, [pc, #36]	; (10008080 <app_entry+0x80>)
1000805c:	4798      	blx	r3

    /* Branch to main function */
    main();
1000805e:	4b09      	ldr	r3, [pc, #36]	; (10008084 <app_entry+0x84>)
10008060:	4798      	blx	r3

    /* return to BLE OS*/
    return;
}
10008062:	bd10      	pop	{r4, pc}
10008064:	10015c5c 	.word	0x10015c5c
10008068:	10015c5c 	.word	0x10015c5c
1000806c:	10015cd8 	.word	0x10015cd8
10008070:	1001a778 	.word	0x1001a778
10008074:	10015cd8 	.word	0x10015cd8
10008078:	10015c60 	.word	0x10015c60
1000807c:	10015cdc 	.word	0x10015cdc
10008080:	10012189 	.word	0x10012189
10008084:	1000d869 	.word	0x1000d869

10008088 <__do_global_dtors_aux>:
10008088:	b510      	push	{r4, lr}
1000808a:	4c06      	ldr	r4, [pc, #24]	; (100080a4 <__do_global_dtors_aux+0x1c>)
1000808c:	7823      	ldrb	r3, [r4, #0]
1000808e:	2b00      	cmp	r3, #0
10008090:	d107      	bne.n	100080a2 <__do_global_dtors_aux+0x1a>
10008092:	4b05      	ldr	r3, [pc, #20]	; (100080a8 <__do_global_dtors_aux+0x20>)
10008094:	2b00      	cmp	r3, #0
10008096:	d002      	beq.n	1000809e <__do_global_dtors_aux+0x16>
10008098:	4804      	ldr	r0, [pc, #16]	; (100080ac <__do_global_dtors_aux+0x24>)
1000809a:	e000      	b.n	1000809e <__do_global_dtors_aux+0x16>
1000809c:	bf00      	nop
1000809e:	2301      	movs	r3, #1
100080a0:	7023      	strb	r3, [r4, #0]
100080a2:	bd10      	pop	{r4, pc}
100080a4:	10015cd8 	.word	0x10015cd8
100080a8:	00000000 	.word	0x00000000
100080ac:	10015c5c 	.word	0x10015c5c

100080b0 <frame_dummy>:
100080b0:	4b08      	ldr	r3, [pc, #32]	; (100080d4 <frame_dummy+0x24>)
100080b2:	b510      	push	{r4, lr}
100080b4:	2b00      	cmp	r3, #0
100080b6:	d003      	beq.n	100080c0 <frame_dummy+0x10>
100080b8:	4907      	ldr	r1, [pc, #28]	; (100080d8 <frame_dummy+0x28>)
100080ba:	4808      	ldr	r0, [pc, #32]	; (100080dc <frame_dummy+0x2c>)
100080bc:	e000      	b.n	100080c0 <frame_dummy+0x10>
100080be:	bf00      	nop
100080c0:	4807      	ldr	r0, [pc, #28]	; (100080e0 <frame_dummy+0x30>)
100080c2:	6803      	ldr	r3, [r0, #0]
100080c4:	2b00      	cmp	r3, #0
100080c6:	d100      	bne.n	100080ca <frame_dummy+0x1a>
100080c8:	bd10      	pop	{r4, pc}
100080ca:	4b06      	ldr	r3, [pc, #24]	; (100080e4 <frame_dummy+0x34>)
100080cc:	2b00      	cmp	r3, #0
100080ce:	d0fb      	beq.n	100080c8 <frame_dummy+0x18>
100080d0:	4798      	blx	r3
100080d2:	e7f9      	b.n	100080c8 <frame_dummy+0x18>
100080d4:	00000000 	.word	0x00000000
100080d8:	10015cdc 	.word	0x10015cdc
100080dc:	10015c5c 	.word	0x10015c5c
100080e0:	10015c5c 	.word	0x10015c5c
100080e4:	00000000 	.word	0x00000000

100080e8 <aon_sleep_timer_get_config_defaults>:
 * \param[out]  config  Pointer to a AON Sleep Timer module configuration structure to set
 */
void aon_sleep_timer_get_config_defaults(struct aon_sleep_timer_config *config)
{
	/* Default configuration values */
	config->wakeup = AON_SLEEP_TIMER_WAKEUP_ARM;
100080e8:	2301      	movs	r3, #1
100080ea:	7003      	strb	r3, [r0, #0]
	config->mode = AON_SLEEP_TIMER_SINGLE_MODE;
100080ec:	7043      	strb	r3, [r0, #1]
	config->counter = 32000;
100080ee:	23fa      	movs	r3, #250	; 0xfa
100080f0:	01db      	lsls	r3, r3, #7
100080f2:	6043      	str	r3, [r0, #4]
}
100080f4:	4770      	bx	lr
100080f6:	46c0      	nop			; (mov r8, r8)

100080f8 <aon_sleep_timer_clear_interrup>:
 * This flag will be cleared automatically once the IRQ
 * has been seen on the sleep clock.
 */
void aon_sleep_timer_clear_interrup(void)
{
	AON_SLEEP_TIMER0->CONTROL.reg |= AON_SLEEP_TIMER_CONTROL_IRQ_CLEAR;
100080f8:	4a02      	ldr	r2, [pc, #8]	; (10008104 <aon_sleep_timer_clear_interrup+0xc>)
100080fa:	6811      	ldr	r1, [r2, #0]
100080fc:	2310      	movs	r3, #16
100080fe:	430b      	orrs	r3, r1
10008100:	6013      	str	r3, [r2, #0]
}
10008102:	4770      	bx	lr
10008104:	4000d000 	.word	0x4000d000

10008108 <aon_sleep_timer_isr_handler>:
 *
 * Timer ISR handler.
 *
 */
static void aon_sleep_timer_isr_handler(void)
{
10008108:	b510      	push	{r4, lr}
	aon_sleep_timer_clear_interrup();
1000810a:	4b04      	ldr	r3, [pc, #16]	; (1000811c <aon_sleep_timer_isr_handler+0x14>)
1000810c:	4798      	blx	r3

	if (aon_sleep_timer_callback) {
1000810e:	4b04      	ldr	r3, [pc, #16]	; (10008120 <aon_sleep_timer_isr_handler+0x18>)
10008110:	681b      	ldr	r3, [r3, #0]
10008112:	2b00      	cmp	r3, #0
10008114:	d000      	beq.n	10008118 <aon_sleep_timer_isr_handler+0x10>
		aon_sleep_timer_callback();
10008116:	4798      	blx	r3
	}
}
10008118:	bd10      	pop	{r4, pc}
1000811a:	46c0      	nop			; (mov r8, r8)
1000811c:	100080f9 	.word	0x100080f9
10008120:	10015cf4 	.word	0x10015cf4

10008124 <aon_sleep_timer_register_callback>:
 *
 * \param[in]     callback_func Pointer to callback function
 */
void aon_sleep_timer_register_callback(aon_sleep_timer_callback_t fun)
{
	aon_sleep_timer_callback = fun;
10008124:	4b01      	ldr	r3, [pc, #4]	; (1000812c <aon_sleep_timer_register_callback+0x8>)
10008126:	6018      	str	r0, [r3, #0]
}
10008128:	4770      	bx	lr
1000812a:	46c0      	nop			; (mov r8, r8)
1000812c:	10015cf4 	.word	0x10015cf4

10008130 <aon_sleep_timer_init>:
 *
 * \param[in]     config       Pointer to the AON Sleep Timer configuration options struct
 *
 */
void aon_sleep_timer_init(const struct aon_sleep_timer_config *config)
{
10008130:	b5f0      	push	{r4, r5, r6, r7, lr}
10008132:	b083      	sub	sp, #12
	uint32_t aon_st_ctrl = 0;

	AON_PWR_SEQ0->AON_ST_WAKEUP_CTRL.reg = AON_PWR_SEQ_AON_ST_WAKEUP_CTRL_RESETVALUE;
10008134:	2200      	movs	r2, #0
10008136:	4b2b      	ldr	r3, [pc, #172]	; (100081e4 <aon_sleep_timer_init+0xb4>)
10008138:	731a      	strb	r2, [r3, #12]
	if (config->wakeup == AON_SLEEP_TIMER_WAKEUP_ARM_BLE) {
1000813a:	7803      	ldrb	r3, [r0, #0]
1000813c:	2b02      	cmp	r3, #2
1000813e:	d105      	bne.n	1000814c <aon_sleep_timer_init+0x1c>
		AON_PWR_SEQ0->AON_ST_WAKEUP_CTRL.reg |=
10008140:	4a28      	ldr	r2, [pc, #160]	; (100081e4 <aon_sleep_timer_init+0xb4>)
10008142:	7b11      	ldrb	r1, [r2, #12]
10008144:	3301      	adds	r3, #1
10008146:	430b      	orrs	r3, r1
10008148:	7313      	strb	r3, [r2, #12]
1000814a:	e005      	b.n	10008158 <aon_sleep_timer_init+0x28>
				AON_PWR_SEQ_AON_ST_WAKEUP_CTRL_ARM_ENABLE |
				AON_PWR_SEQ_AON_ST_WAKEUP_CTRL_BLE_ENABLE;
	} else if (config->wakeup == AON_SLEEP_TIMER_WAKEUP_ARM) {
1000814c:	2b01      	cmp	r3, #1
1000814e:	d103      	bne.n	10008158 <aon_sleep_timer_init+0x28>
		AON_PWR_SEQ0->AON_ST_WAKEUP_CTRL.reg |=
10008150:	4a24      	ldr	r2, [pc, #144]	; (100081e4 <aon_sleep_timer_init+0xb4>)
10008152:	7b11      	ldrb	r1, [r2, #12]
10008154:	430b      	orrs	r3, r1
10008156:	7313      	strb	r3, [r2, #12]
				AON_PWR_SEQ_AON_ST_WAKEUP_CTRL_ARM_ENABLE;
	}

	aon_st_ctrl = AON_SLEEP_TIMER0->CONTROL.reg;
10008158:	4b23      	ldr	r3, [pc, #140]	; (100081e8 <aon_sleep_timer_init+0xb8>)
1000815a:	681a      	ldr	r2, [r3, #0]
	while (aon_st_ctrl & ((1UL << 31) - 1)) {
1000815c:	0053      	lsls	r3, r2, #1
1000815e:	d01f      	beq.n	100081a0 <aon_sleep_timer_init+0x70>
		AON_SLEEP_TIMER0->CONTROL.reg = 0;
10008160:	4d21      	ldr	r5, [pc, #132]	; (100081e8 <aon_sleep_timer_init+0xb8>)
10008162:	2700      	movs	r7, #0

static void delay_cycle(uint32_t cycles)
{
	volatile uint32_t i = 0;

	for (i = 0; i < cycles*100; i++) {
10008164:	262c      	movs	r6, #44	; 0x2c
10008166:	36ff      	adds	r6, #255	; 0xff
10008168:	2180      	movs	r1, #128	; 0x80
1000816a:	01c9      	lsls	r1, r1, #7
				AON_PWR_SEQ_AON_ST_WAKEUP_CTRL_ARM_ENABLE;
	}

	aon_st_ctrl = AON_SLEEP_TIMER0->CONTROL.reg;
	while (aon_st_ctrl & ((1UL << 31) - 1)) {
		AON_SLEEP_TIMER0->CONTROL.reg = 0;
1000816c:	602f      	str	r7, [r5, #0]

static aon_sleep_timer_callback_t aon_sleep_timer_callback = NULL;

static void delay_cycle(uint32_t cycles)
{
	volatile uint32_t i = 0;
1000816e:	9701      	str	r7, [sp, #4]

	for (i = 0; i < cycles*100; i++) {
10008170:	9701      	str	r7, [sp, #4]
10008172:	9b01      	ldr	r3, [sp, #4]
10008174:	42b3      	cmp	r3, r6
10008176:	d806      	bhi.n	10008186 <aon_sleep_timer_init+0x56>
		asm volatile ("nop");
10008178:	46c0      	nop			; (mov r8, r8)

static void delay_cycle(uint32_t cycles)
{
	volatile uint32_t i = 0;

	for (i = 0; i < cycles*100; i++) {
1000817a:	9b01      	ldr	r3, [sp, #4]
1000817c:	3301      	adds	r3, #1
1000817e:	9301      	str	r3, [sp, #4]
10008180:	9b01      	ldr	r3, [sp, #4]
10008182:	42b3      	cmp	r3, r6
10008184:	d9f8      	bls.n	10008178 <aon_sleep_timer_init+0x48>
10008186:	7844      	ldrb	r4, [r0, #1]
10008188:	000b      	movs	r3, r1
1000818a:	2c00      	cmp	r4, #0
1000818c:	d103      	bne.n	10008196 <aon_sleep_timer_init+0x66>
1000818e:	2380      	movs	r3, #128	; 0x80
10008190:	009b      	lsls	r3, r3, #2
10008192:	e000      	b.n	10008196 <aon_sleep_timer_init+0x66>
	while (aon_st_ctrl & ((1UL << 31) - 1)) {
		AON_SLEEP_TIMER0->CONTROL.reg = 0;
		delay_cycle(3);
		while (aon_st_ctrl & ((config->mode == AON_SLEEP_TIMER_RELOAD_MODE) ?
				(1 << 9) : (1 << 14))) {
			aon_st_ctrl = AON_SLEEP_TIMER0->CONTROL.reg;
10008194:	682a      	ldr	r2, [r5, #0]

	aon_st_ctrl = AON_SLEEP_TIMER0->CONTROL.reg;
	while (aon_st_ctrl & ((1UL << 31) - 1)) {
		AON_SLEEP_TIMER0->CONTROL.reg = 0;
		delay_cycle(3);
		while (aon_st_ctrl & ((config->mode == AON_SLEEP_TIMER_RELOAD_MODE) ?
10008196:	4213      	tst	r3, r2
10008198:	d1fc      	bne.n	10008194 <aon_sleep_timer_init+0x64>
				(1 << 9) : (1 << 14))) {
			aon_st_ctrl = AON_SLEEP_TIMER0->CONTROL.reg;
		}
		aon_st_ctrl = AON_SLEEP_TIMER0->CONTROL.reg;
1000819a:	682a      	ldr	r2, [r5, #0]
		AON_PWR_SEQ0->AON_ST_WAKEUP_CTRL.reg |=
				AON_PWR_SEQ_AON_ST_WAKEUP_CTRL_ARM_ENABLE;
	}

	aon_st_ctrl = AON_SLEEP_TIMER0->CONTROL.reg;
	while (aon_st_ctrl & ((1UL << 31) - 1)) {
1000819c:	0053      	lsls	r3, r2, #1
1000819e:	d1e5      	bne.n	1000816c <aon_sleep_timer_init+0x3c>
			aon_st_ctrl = AON_SLEEP_TIMER0->CONTROL.reg;
		}
		aon_st_ctrl = AON_SLEEP_TIMER0->CONTROL.reg;
	}

	if (config->mode == AON_SLEEP_TIMER_RELOAD_MODE) {
100081a0:	7843      	ldrb	r3, [r0, #1]
100081a2:	2b00      	cmp	r3, #0
100081a4:	d105      	bne.n	100081b2 <aon_sleep_timer_init+0x82>
		/* Reload counter will start here */
		AON_SLEEP_TIMER0->SINGLE_COUNT_DURATION.reg = config->counter;
100081a6:	4b10      	ldr	r3, [pc, #64]	; (100081e8 <aon_sleep_timer_init+0xb8>)
100081a8:	6842      	ldr	r2, [r0, #4]
100081aa:	605a      	str	r2, [r3, #4]
		AON_SLEEP_TIMER0->CONTROL.reg = AON_SLEEP_TIMER_CONTROL_RELOAD_ENABLE;
100081ac:	2201      	movs	r2, #1
100081ae:	601a      	str	r2, [r3, #0]
100081b0:	e004      	b.n	100081bc <aon_sleep_timer_init+0x8c>
	} else {
		/* Single counter will start here */
		AON_SLEEP_TIMER0->SINGLE_COUNT_DURATION.reg = config->counter;
100081b2:	4b0d      	ldr	r3, [pc, #52]	; (100081e8 <aon_sleep_timer_init+0xb8>)
100081b4:	6842      	ldr	r2, [r0, #4]
100081b6:	605a      	str	r2, [r3, #4]
		AON_SLEEP_TIMER0->CONTROL.reg = AON_SLEEP_TIMER_CONTROL_SINGLE_COUNT_ENABLE;
100081b8:	2202      	movs	r2, #2
100081ba:	601a      	str	r2, [r3, #0]
	}

	if (config->mode == AON_SLEEP_TIMER_SINGLE_MODE) {
100081bc:	7843      	ldrb	r3, [r0, #1]
100081be:	2b01      	cmp	r3, #1
100081c0:	d109      	bne.n	100081d6 <aon_sleep_timer_init+0xa6>
		while ((AON_SLEEP_TIMER0->CONTROL.reg &
100081c2:	4909      	ldr	r1, [pc, #36]	; (100081e8 <aon_sleep_timer_init+0xb8>)
100081c4:	22e0      	movs	r2, #224	; 0xe0
100081c6:	01d2      	lsls	r2, r2, #7
100081c8:	680b      	ldr	r3, [r1, #0]
100081ca:	4013      	ands	r3, r2
100081cc:	4293      	cmp	r3, r2
100081ce:	d1fb      	bne.n	100081c8 <aon_sleep_timer_init+0x98>
				AON_SLEEP_TIMER_CONTROL_SLP_TIMER_SINGLE_COUNT_ENABLE_DLY_Msk)
				!= AON_SLEEP_TIMER_CONTROL_SLP_TIMER_SINGLE_COUNT_ENABLE_DLY_Msk) {
		}
		AON_SLEEP_TIMER0->CONTROL.reg = 0;
100081d0:	2200      	movs	r2, #0
100081d2:	4b05      	ldr	r3, [pc, #20]	; (100081e8 <aon_sleep_timer_init+0xb8>)
100081d4:	601a      	str	r2, [r3, #0]
	}

	system_register_isr(RAM_ISR_TABLE_AON_SLEEP_TIMER_INDEX, (uint32_t)aon_sleep_timer_isr_handler);
100081d6:	4905      	ldr	r1, [pc, #20]	; (100081ec <aon_sleep_timer_init+0xbc>)
100081d8:	202b      	movs	r0, #43	; 0x2b
100081da:	4b05      	ldr	r3, [pc, #20]	; (100081f0 <aon_sleep_timer_init+0xc0>)
100081dc:	4798      	blx	r3
}
100081de:	b003      	add	sp, #12
100081e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
100081e2:	46c0      	nop			; (mov r8, r8)
100081e4:	4000e000 	.word	0x4000e000
100081e8:	4000d000 	.word	0x4000d000
100081ec:	10008109 	.word	0x10008109
100081f0:	1000acd5 	.word	0x1000acd5

100081f4 <spi_slave_inst_get_config_defaults>:
void spi_slave_inst_get_config_defaults(
		struct spi_slave_inst_config *const config)
{
	Assert(config);

	config->ss_pin          = PIN_LP_GPIO_12;
100081f4:	230c      	movs	r3, #12
100081f6:	7003      	strb	r3, [r0, #0]
	config->address_enabled = false;
100081f8:	2300      	movs	r3, #0
100081fa:	7043      	strb	r3, [r0, #1]
	config->address         = 0;
100081fc:	7083      	strb	r3, [r0, #2]
}
100081fe:	4770      	bx	lr

10008200 <spi_get_config_defaults>:
void spi_get_config_defaults(
		struct spi_config *const config)
{
	Assert(config);

	config->mode             = SPI_MODE_MASTER;
10008200:	2301      	movs	r3, #1
10008202:	7003      	strb	r3, [r0, #0]
	config->data_order       = SPI_DATA_ORDER_MSB;
10008204:	2300      	movs	r3, #0
10008206:	7043      	strb	r3, [r0, #1]
	config->transfer_mode    = SPI_TRANSFER_MODE_0;
10008208:	7083      	strb	r3, [r0, #2]
	config->clock_source     = SPI_CLK_INPUT_0;
1000820a:	70c3      	strb	r3, [r0, #3]
	config->clock_divider    = 129;
1000820c:	3381      	adds	r3, #129	; 0x81
1000820e:	7103      	strb	r3, [r0, #4]

	config->pin_number_pad[0] = PIN_LP_GPIO_10;
10008210:	3b77      	subs	r3, #119	; 0x77
10008212:	6083      	str	r3, [r0, #8]
	config->pin_number_pad[1] = PIN_LP_GPIO_11;
10008214:	3301      	adds	r3, #1
10008216:	60c3      	str	r3, [r0, #12]
	config->pin_number_pad[2] = PIN_LP_GPIO_12;
10008218:	3301      	adds	r3, #1
1000821a:	6103      	str	r3, [r0, #16]
	config->pin_number_pad[3] = PIN_LP_GPIO_13;
1000821c:	3301      	adds	r3, #1
1000821e:	6143      	str	r3, [r0, #20]

	config->pinmux_sel_pad[0] = MUX_LP_GPIO_10_SPI0_SCK;
10008220:	3b0b      	subs	r3, #11
10008222:	6183      	str	r3, [r0, #24]
	config->pinmux_sel_pad[1] = MUX_LP_GPIO_11_SPI0_MOSI;
10008224:	61c3      	str	r3, [r0, #28]
	config->pinmux_sel_pad[2] = MUX_LP_GPIO_12_SPI0_SSN;
10008226:	6203      	str	r3, [r0, #32]
	config->pinmux_sel_pad[3] = MUX_LP_GPIO_13_SPI0_MISO;
10008228:	6243      	str	r3, [r0, #36]	; 0x24
};
1000822a:	4770      	bx	lr

1000822c <spi_attach_slave>:
 *
 */
void spi_attach_slave(
		struct spi_slave_inst *const slave,
		struct spi_slave_inst_config *const config)
{
1000822c:	b530      	push	{r4, r5, lr}
1000822e:	b083      	sub	sp, #12
10008230:	0004      	movs	r4, r0
	Assert(slave);
	Assert(config);

	slave->ss_pin          = config->ss_pin;
10008232:	780b      	ldrb	r3, [r1, #0]
10008234:	7003      	strb	r3, [r0, #0]
	slave->address_enabled = config->address_enabled;
10008236:	784b      	ldrb	r3, [r1, #1]
10008238:	7043      	strb	r3, [r0, #1]
	slave->address         = config->address;
1000823a:	788b      	ldrb	r3, [r1, #2]
1000823c:	7083      	strb	r3, [r0, #2]

	struct gpio_config config_gpio;
	gpio_get_config_defaults(&config_gpio);
1000823e:	ad01      	add	r5, sp, #4
10008240:	0028      	movs	r0, r5
10008242:	4b07      	ldr	r3, [pc, #28]	; (10008260 <spi_attach_slave+0x34>)
10008244:	4798      	blx	r3
	config_gpio.direction = GPIO_PIN_DIR_OUTPUT;
10008246:	2301      	movs	r3, #1
10008248:	702b      	strb	r3, [r5, #0]
	gpio_pin_set_config(slave->ss_pin, &config_gpio);
1000824a:	7820      	ldrb	r0, [r4, #0]
1000824c:	0029      	movs	r1, r5
1000824e:	4b05      	ldr	r3, [pc, #20]	; (10008264 <spi_attach_slave+0x38>)
10008250:	4798      	blx	r3

	gpio_pin_set_output_level(slave->ss_pin, true);
10008252:	7820      	ldrb	r0, [r4, #0]
10008254:	2101      	movs	r1, #1
10008256:	4b04      	ldr	r3, [pc, #16]	; (10008268 <spi_attach_slave+0x3c>)
10008258:	4798      	blx	r3
}
1000825a:	b003      	add	sp, #12
1000825c:	bd30      	pop	{r4, r5, pc}
1000825e:	46c0      	nop			; (mov r8, r8)
10008260:	10009b91 	.word	0x10009b91
10008264:	10009ba1 	.word	0x10009ba1
10008268:	10009d59 	.word	0x10009d59

1000826c <spi_enable>:
 *
 * \param[in,out] module  Pointer to the software instance struct
 */
void spi_enable(struct spi_module *const module)
{
	Spi *const spi_module = (module->hw);
1000826c:	6803      	ldr	r3, [r0, #0]

#if SPI_CALLBACK_MODE == true
	if(spi_module == SPI0) {
1000826e:	4a0a      	ldr	r2, [pc, #40]	; (10008298 <spi_enable+0x2c>)
10008270:	4293      	cmp	r3, r2
10008272:	d105      	bne.n	10008280 <spi_enable+0x14>

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
10008274:	4a09      	ldr	r2, [pc, #36]	; (1000829c <spi_enable+0x30>)
10008276:	2110      	movs	r1, #16
10008278:	6011      	str	r1, [r2, #0]
1000827a:	3110      	adds	r1, #16
1000827c:	6011      	str	r1, [r2, #0]
1000827e:	e007      	b.n	10008290 <spi_enable+0x24>
		NVIC_EnableIRQ(SPI0_RX_IRQn);
		NVIC_EnableIRQ(SPI0_TX_IRQn);
	} else if(spi_module == SPI1) {
10008280:	4a07      	ldr	r2, [pc, #28]	; (100082a0 <spi_enable+0x34>)
10008282:	4293      	cmp	r3, r2
10008284:	d104      	bne.n	10008290 <spi_enable+0x24>
10008286:	4a05      	ldr	r2, [pc, #20]	; (1000829c <spi_enable+0x30>)
10008288:	2140      	movs	r1, #64	; 0x40
1000828a:	6011      	str	r1, [r2, #0]
1000828c:	3140      	adds	r1, #64	; 0x40
1000828e:	6011      	str	r1, [r2, #0]
		NVIC_EnableIRQ(SPI1_TX_IRQn);
	}
#endif

	/* Enable SPI */
	spi_module->SPI_MODULE_ENABLE.reg = SPI_MODULE_ENABLE_ENABLE;
10008290:	2201      	movs	r2, #1
10008292:	761a      	strb	r2, [r3, #24]
}
10008294:	4770      	bx	lr
10008296:	46c0      	nop			; (mov r8, r8)
10008298:	40006000 	.word	0x40006000
1000829c:	e000e100 	.word	0xe000e100
100082a0:	40007000 	.word	0x40007000

100082a4 <spi_disable>:
 * This function will disable the SPI module.
 *
 * \param[in,out] module  Pointer to the software instance struct
 */
void spi_disable(struct spi_module *const module)
{
100082a4:	b510      	push	{r4, lr}
	Spi *const spi_module = (module->hw);
100082a6:	6803      	ldr	r3, [r0, #0]

#  if SPI_CALLBACK_MODE == true
	if(spi_module == SPI0) {
100082a8:	4a17      	ldr	r2, [pc, #92]	; (10008308 <spi_disable+0x64>)
100082aa:	4293      	cmp	r3, r2
100082ac:	d106      	bne.n	100082bc <spi_disable+0x18>

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
100082ae:	4917      	ldr	r1, [pc, #92]	; (1000830c <spi_disable+0x68>)
100082b0:	2280      	movs	r2, #128	; 0x80
100082b2:	2410      	movs	r4, #16
100082b4:	508c      	str	r4, [r1, r2]
100082b6:	3410      	adds	r4, #16
100082b8:	508c      	str	r4, [r1, r2]
100082ba:	e007      	b.n	100082cc <spi_disable+0x28>
		NVIC_DisableIRQ(SPI0_RX_IRQn);
		NVIC_DisableIRQ(SPI0_TX_IRQn);
	} else if(spi_module == SPI1) {
100082bc:	4a14      	ldr	r2, [pc, #80]	; (10008310 <spi_disable+0x6c>)
100082be:	4293      	cmp	r3, r2
100082c0:	d104      	bne.n	100082cc <spi_disable+0x28>
100082c2:	4912      	ldr	r1, [pc, #72]	; (1000830c <spi_disable+0x68>)
100082c4:	2280      	movs	r2, #128	; 0x80
100082c6:	2440      	movs	r4, #64	; 0x40
100082c8:	508c      	str	r4, [r1, r2]
100082ca:	508a      	str	r2, [r1, r2]
		NVIC_DisableIRQ(SPI1_TX_IRQn);
	}
#  endif

	/* Disable SPI */
	spi_module->SPI_MODULE_ENABLE.reg = (0x0ul << SPI_MODULE_ENABLE_ENABLE_Pos);
100082cc:	2200      	movs	r2, #0
100082ce:	761a      	strb	r2, [r3, #24]
 */
static void _spi_clock_disable(struct spi_module *const module)
{
	Assert(module);

	Spi *const spi_module = (module->hw);
100082d0:	6803      	ldr	r3, [r0, #0]

	if (spi_module == (void *)SPI0) {
100082d2:	4a0d      	ldr	r2, [pc, #52]	; (10008308 <spi_disable+0x64>)
100082d4:	4293      	cmp	r3, r2
100082d6:	d109      	bne.n	100082ec <spi_disable+0x48>
		system_clock_peripheral_disable(PERIPHERAL_SPI0_SCK_CLK);
100082d8:	2041      	movs	r0, #65	; 0x41
100082da:	4c0e      	ldr	r4, [pc, #56]	; (10008314 <spi_disable+0x70>)
100082dc:	47a0      	blx	r4
		system_clock_peripheral_disable(PERIPHERAL_SPI0_SCK_PHASE);
100082de:	2026      	movs	r0, #38	; 0x26
100082e0:	47a0      	blx	r4
		system_clock_peripheral_disable(PERIPHERAL_SPI0_IF);
100082e2:	2038      	movs	r0, #56	; 0x38
100082e4:	47a0      	blx	r4
		system_clock_peripheral_disable(PERIPHERAL_SPI0_CORE);
100082e6:	2001      	movs	r0, #1
100082e8:	47a0      	blx	r4
100082ea:	e00b      	b.n	10008304 <spi_disable+0x60>
	} else if (spi_module == (void *)SPI1) {
100082ec:	4a08      	ldr	r2, [pc, #32]	; (10008310 <spi_disable+0x6c>)
100082ee:	4293      	cmp	r3, r2
100082f0:	d108      	bne.n	10008304 <spi_disable+0x60>
		system_clock_peripheral_disable(PERIPHERAL_SPI1_SCK_CLK);
100082f2:	2042      	movs	r0, #66	; 0x42
100082f4:	4c07      	ldr	r4, [pc, #28]	; (10008314 <spi_disable+0x70>)
100082f6:	47a0      	blx	r4
		system_clock_peripheral_disable(PERIPHERAL_SPI1_SCK_PHASE);
100082f8:	2027      	movs	r0, #39	; 0x27
100082fa:	47a0      	blx	r4
		system_clock_peripheral_disable(PERIPHERAL_SPI1_IF);
100082fc:	2039      	movs	r0, #57	; 0x39
100082fe:	47a0      	blx	r4
		system_clock_peripheral_disable(PERIPHERAL_SPI1_CORE);
10008300:	2002      	movs	r0, #2
10008302:	47a0      	blx	r4
#  endif

	/* Disable SPI */
	spi_module->SPI_MODULE_ENABLE.reg = (0x0ul << SPI_MODULE_ENABLE_ENABLE_Pos);
	_spi_clock_disable(module);
}
10008304:	bd10      	pop	{r4, pc}
10008306:	46c0      	nop			; (mov r8, r8)
10008308:	40006000 	.word	0x40006000
1000830c:	e000e100 	.word	0xe000e100
10008310:	40007000 	.word	0x40007000
10008314:	1000a501 	.word	0x1000a501

10008318 <spi_reset>:
 * disable it.
 *
 * \param[in,out] module Pointer to the software instance struct
 */
void spi_reset(struct spi_module *const module)
{
10008318:	b510      	push	{r4, lr}
	/* Sanity check arguments */
	Spi *const spi_module = (module->hw);
1000831a:	6804      	ldr	r4, [r0, #0]

	/* Disable the module */
	spi_disable(module);
1000831c:	4b09      	ldr	r3, [pc, #36]	; (10008344 <spi_reset+0x2c>)
1000831e:	4798      	blx	r3

	/* Software reset the module */
	if(spi_module == (void *)SPI0) {
10008320:	4b09      	ldr	r3, [pc, #36]	; (10008348 <spi_reset+0x30>)
10008322:	429c      	cmp	r4, r3
10008324:	d105      	bne.n	10008332 <spi_reset+0x1a>
		system_peripheral_reset(PERIPHERAL_SPI0_CORE);
10008326:	2001      	movs	r0, #1
10008328:	4c08      	ldr	r4, [pc, #32]	; (1000834c <spi_reset+0x34>)
1000832a:	47a0      	blx	r4
		system_peripheral_reset(PERIPHERAL_SPI0_IF);
1000832c:	2038      	movs	r0, #56	; 0x38
1000832e:	47a0      	blx	r4
10008330:	e007      	b.n	10008342 <spi_reset+0x2a>
	} else if (spi_module == (void *)SPI1) {
10008332:	4b07      	ldr	r3, [pc, #28]	; (10008350 <spi_reset+0x38>)
10008334:	429c      	cmp	r4, r3
10008336:	d104      	bne.n	10008342 <spi_reset+0x2a>
		system_peripheral_reset(PERIPHERAL_SPI1_CORE);
10008338:	2002      	movs	r0, #2
1000833a:	4c04      	ldr	r4, [pc, #16]	; (1000834c <spi_reset+0x34>)
1000833c:	47a0      	blx	r4
		system_peripheral_reset(PERIPHERAL_SPI1_IF);
1000833e:	2039      	movs	r0, #57	; 0x39
10008340:	47a0      	blx	r4
	}
}
10008342:	bd10      	pop	{r4, pc}
10008344:	100082a5 	.word	0x100082a5
10008348:	40006000 	.word	0x40006000
1000834c:	1000a86d 	.word	0x1000a86d
10008350:	40007000 	.word	0x40007000

10008354 <spi_init>:
 */
enum status_code spi_init(
		struct spi_module *const module,
		Spi *const hw,
		const struct spi_config *const config)
{
10008354:	b5f0      	push	{r4, r5, r6, r7, lr}
10008356:	4657      	mov	r7, sl
10008358:	4646      	mov	r6, r8
1000835a:	b4c0      	push	{r6, r7}
1000835c:	b083      	sub	sp, #12
1000835e:	0005      	movs	r5, r0
10008360:	4688      	mov	r8, r1
10008362:	0016      	movs	r6, r2
	Assert(config);

	uint8_t idx;

	/* Initialize device instance */
	module->hw = hw;
10008364:	6029      	str	r1, [r5, #0]

	Spi *const spi_module = (module->hw);

	/* Check if module is enabled. */
	if (spi_module->SPI_MODULE_ENABLE.reg & SPI_MODULE_ENABLE_MASK) {
10008366:	7e0b      	ldrb	r3, [r1, #24]
10008368:	07db      	lsls	r3, r3, #31
1000836a:	d501      	bpl.n	10008370 <spi_init+0x1c>
		spi_module->SPI_MODULE_ENABLE.reg = (0x0ul << SPI_MODULE_ENABLE_ENABLE_Pos);
1000836c:	2300      	movs	r3, #0
1000836e:	760b      	strb	r3, [r1, #24]
	}

	spi_reset(module);
10008370:	0028      	movs	r0, r5
10008372:	4b5e      	ldr	r3, [pc, #376]	; (100084ec <spi_init+0x198>)
10008374:	4798      	blx	r3
 */
static void _spi_clock_enable(struct spi_module *const module)
{
	Assert(module);

	Spi *const spi_module = (module->hw);
10008376:	682b      	ldr	r3, [r5, #0]

	if (spi_module == (void *)SPI0) {
10008378:	4a5d      	ldr	r2, [pc, #372]	; (100084f0 <spi_init+0x19c>)
1000837a:	4293      	cmp	r3, r2
1000837c:	d109      	bne.n	10008392 <spi_init+0x3e>
		system_clock_peripheral_enable(PERIPHERAL_SPI0_SCK_CLK);
1000837e:	2041      	movs	r0, #65	; 0x41
10008380:	4c5c      	ldr	r4, [pc, #368]	; (100084f4 <spi_init+0x1a0>)
10008382:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_SPI0_SCK_PHASE);
10008384:	2026      	movs	r0, #38	; 0x26
10008386:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_SPI0_IF);
10008388:	2038      	movs	r0, #56	; 0x38
1000838a:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_SPI0_CORE);
1000838c:	2001      	movs	r0, #1
1000838e:	47a0      	blx	r4
10008390:	e00b      	b.n	100083aa <spi_init+0x56>
	} else if (spi_module == (void *)SPI1) {
10008392:	4a59      	ldr	r2, [pc, #356]	; (100084f8 <spi_init+0x1a4>)
10008394:	4293      	cmp	r3, r2
10008396:	d122      	bne.n	100083de <spi_init+0x8a>
		system_clock_peripheral_enable(PERIPHERAL_SPI1_SCK_CLK);
10008398:	2042      	movs	r0, #66	; 0x42
1000839a:	4c56      	ldr	r4, [pc, #344]	; (100084f4 <spi_init+0x1a0>)
1000839c:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_SPI1_SCK_PHASE);
1000839e:	2027      	movs	r0, #39	; 0x27
100083a0:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_SPI1_IF);
100083a2:	2039      	movs	r0, #57	; 0x39
100083a4:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_SPI1_CORE);
100083a6:	2002      	movs	r0, #2
100083a8:	47a0      	blx	r4

	spi_reset(module);
	_spi_clock_enable(module);

#if SPI_CALLBACK_MODE == true
	if (module->hw == SPI0) {
100083aa:	682b      	ldr	r3, [r5, #0]
100083ac:	4a50      	ldr	r2, [pc, #320]	; (100084f0 <spi_init+0x19c>)
100083ae:	4293      	cmp	r3, r2
100083b0:	d109      	bne.n	100083c6 <spi_init+0x72>
		_spi_instances[0] = module;
100083b2:	4b52      	ldr	r3, [pc, #328]	; (100084fc <spi_init+0x1a8>)
100083b4:	601d      	str	r5, [r3, #0]
		system_register_isr(RAM_ISR_TABLE_SPIRX0_INDEX, (uint32_t)spi_rx0_isr_handler);
100083b6:	4952      	ldr	r1, [pc, #328]	; (10008500 <spi_init+0x1ac>)
100083b8:	2014      	movs	r0, #20
100083ba:	4c52      	ldr	r4, [pc, #328]	; (10008504 <spi_init+0x1b0>)
100083bc:	47a0      	blx	r4
		system_register_isr(RAM_ISR_TABLE_SPITX0_INDEX, (uint32_t)spi_tx0_isr_handler);
100083be:	4952      	ldr	r1, [pc, #328]	; (10008508 <spi_init+0x1b4>)
100083c0:	2015      	movs	r0, #21
100083c2:	47a0      	blx	r4
100083c4:	e00b      	b.n	100083de <spi_init+0x8a>
	} else if (module->hw == SPI1) {
100083c6:	4a4c      	ldr	r2, [pc, #304]	; (100084f8 <spi_init+0x1a4>)
100083c8:	4293      	cmp	r3, r2
100083ca:	d108      	bne.n	100083de <spi_init+0x8a>
		_spi_instances[1] = module;
100083cc:	4b4b      	ldr	r3, [pc, #300]	; (100084fc <spi_init+0x1a8>)
100083ce:	605d      	str	r5, [r3, #4]
		system_register_isr(RAM_ISR_TABLE_SPIRX1_INDEX, (uint32_t)spi_rx1_isr_handler);
100083d0:	494e      	ldr	r1, [pc, #312]	; (1000850c <spi_init+0x1b8>)
100083d2:	2016      	movs	r0, #22
100083d4:	4c4b      	ldr	r4, [pc, #300]	; (10008504 <spi_init+0x1b0>)
100083d6:	47a0      	blx	r4
		system_register_isr(RAM_ISR_TABLE_SPITX1_INDEX, (uint32_t)spi_tx1_isr_handler);
100083d8:	494d      	ldr	r1, [pc, #308]	; (10008510 <spi_init+0x1bc>)
100083da:	2017      	movs	r0, #23
100083dc:	47a0      	blx	r4
	}
#endif

	//Program the pinmux.
	struct gpio_config config_gpio;
	gpio_get_config_defaults(&config_gpio);
100083de:	a801      	add	r0, sp, #4
100083e0:	4b4c      	ldr	r3, [pc, #304]	; (10008514 <spi_init+0x1c0>)
100083e2:	4798      	blx	r3
100083e4:	0034      	movs	r4, r6
100083e6:	3408      	adds	r4, #8
100083e8:	2318      	movs	r3, #24
100083ea:	469a      	mov	sl, r3
100083ec:	44b2      	add	sl, r6
100083ee:	0027      	movs	r7, r4

	/* Set the pinmux for this spi module. */
	for(idx = 0; idx < 4; idx++) {
		if (config->pin_number_pad[idx] != PINMUX_UNUSED) {
100083f0:	6820      	ldr	r0, [r4, #0]
100083f2:	1c43      	adds	r3, r0, #1
100083f4:	d011      	beq.n	1000841a <spi_init+0xc6>
			if (config->mode == SPI_MODE_MASTER) {
100083f6:	7833      	ldrb	r3, [r6, #0]
100083f8:	2b01      	cmp	r3, #1
100083fa:	d102      	bne.n	10008402 <spi_init+0xae>
				config_gpio.direction = GPIO_PIN_DIR_OUTPUT;
100083fc:	466a      	mov	r2, sp
100083fe:	7113      	strb	r3, [r2, #4]
10008400:	e003      	b.n	1000840a <spi_init+0xb6>
			} else if (config->mode == SPI_MODE_SLAVE) {
10008402:	2b00      	cmp	r3, #0
10008404:	d101      	bne.n	1000840a <spi_init+0xb6>
				config_gpio.direction = GPIO_PIN_DIR_INPUT;
10008406:	466a      	mov	r2, sp
10008408:	7113      	strb	r3, [r2, #4]
			}
			gpio_pin_set_config(config->pin_number_pad[idx], &config_gpio);
1000840a:	b2c0      	uxtb	r0, r0
1000840c:	a901      	add	r1, sp, #4
1000840e:	4b42      	ldr	r3, [pc, #264]	; (10008518 <spi_init+0x1c4>)
10008410:	4798      	blx	r3
			gpio_pinmux_cofiguration(config->pin_number_pad[idx], \
10008412:	8a39      	ldrh	r1, [r7, #16]
10008414:	7838      	ldrb	r0, [r7, #0]
10008416:	4b41      	ldr	r3, [pc, #260]	; (1000851c <spi_init+0x1c8>)
10008418:	4798      	blx	r3
1000841a:	3404      	adds	r4, #4
	//Program the pinmux.
	struct gpio_config config_gpio;
	gpio_get_config_defaults(&config_gpio);

	/* Set the pinmux for this spi module. */
	for(idx = 0; idx < 4; idx++) {
1000841c:	4554      	cmp	r4, sl
1000841e:	d1e6      	bne.n	100083ee <spi_init+0x9a>
						(uint16_t)(config->pinmux_sel_pad[idx]));
		}
	}

	/* Set up the input clock for the module */
	spi_module->CLOCK_SOURCE_SELECT.reg = config->clock_source;
10008420:	78f3      	ldrb	r3, [r6, #3]
10008422:	4642      	mov	r2, r8
10008424:	7413      	strb	r3, [r2, #16]

#  if CONF_SPI_MASTER_ENABLE == true
	if (config->mode == SPI_MODE_MASTER) {
10008426:	7833      	ldrb	r3, [r6, #0]
10008428:	2b01      	cmp	r3, #1
1000842a:	d100      	bne.n	1000842e <spi_init+0xda>
		/* Set the mode in SPI master mode */
		spi_module->SPI_MASTER_MODE.reg = SPI_MODE_MASTER;
1000842c:	7713      	strb	r3, [r2, #28]
	/* Temporary variables */
	uint8_t i;

	/* Initialize parameters */
	for (i = 0; i < SPI_CALLBACK_N; i++) {
		module->callback[i]        = NULL;
1000842e:	2300      	movs	r3, #0
10008430:	60ab      	str	r3, [r5, #8]
10008432:	60eb      	str	r3, [r5, #12]
10008434:	612b      	str	r3, [r5, #16]
10008436:	616b      	str	r3, [r5, #20]
	}
	module->tx_buffer_ptr              = NULL;
10008438:	61eb      	str	r3, [r5, #28]
	module->rx_buffer_ptr              = NULL;
1000843a:	61ab      	str	r3, [r5, #24]
	module->remaining_tx_buffer_length = 0x0000;
1000843c:	2200      	movs	r2, #0
1000843e:	84ab      	strh	r3, [r5, #36]	; 0x24
	module->remaining_rx_buffer_length = 0x0000;
10008440:	842b      	strh	r3, [r5, #32]
	module->registered_callback        = 0x00;
10008442:	3326      	adds	r3, #38	; 0x26
10008444:	54ea      	strb	r2, [r5, r3]
	module->enabled_callback           = 0x00;
10008446:	3301      	adds	r3, #1
10008448:	54ea      	strb	r2, [r5, r3]
	module->status                     = STATUS_OK;
1000844a:	3301      	adds	r3, #1
1000844c:	54ea      	strb	r2, [r5, r3]
	module->dir                        = SPI_DIRECTION_IDLE;
1000844e:	3b25      	subs	r3, #37	; 0x25
10008450:	71eb      	strb	r3, [r5, #7]
	module->locked                     = 0;
10008452:	712a      	strb	r2, [r5, #4]
		const struct spi_config *const config)
{
	Assert(module);
	Assert(config);

	Spi *const spi_module = (module->hw);
10008454:	682b      	ldr	r3, [r5, #0]

	module->mode  = config->mode;
10008456:	7832      	ldrb	r2, [r6, #0]
10008458:	716a      	strb	r2, [r5, #5]

#if CONF_SPI_MASTER_ENABLE == true
	/* Find baud value and write it */
	if (config->mode == SPI_MODE_MASTER) {
1000845a:	7832      	ldrb	r2, [r6, #0]
1000845c:	2a01      	cmp	r2, #1
1000845e:	d101      	bne.n	10008464 <spi_init+0x110>
		spi_module->SPI_CLK_DIVIDER.reg = config->clock_divider;
10008460:	7932      	ldrb	r2, [r6, #4]
10008462:	829a      	strh	r2, [r3, #20]
	}
#endif

	/* Set data order */
	if (config->data_order == SPI_DATA_ORDER_LSB) {
10008464:	7872      	ldrb	r2, [r6, #1]
10008466:	2a04      	cmp	r2, #4
10008468:	d104      	bne.n	10008474 <spi_init+0x120>
		spi_module->SPI_CONFIGURATION.bit.LSB_FIRST_ENABLE = 0x1;
1000846a:	2124      	movs	r1, #36	; 0x24
1000846c:	5c58      	ldrb	r0, [r3, r1]
1000846e:	4302      	orrs	r2, r0
10008470:	545a      	strb	r2, [r3, r1]
10008472:	e004      	b.n	1000847e <spi_init+0x12a>
	} else {
		spi_module->SPI_CONFIGURATION.bit.LSB_FIRST_ENABLE = 0x0;
10008474:	2124      	movs	r1, #36	; 0x24
10008476:	5c5a      	ldrb	r2, [r3, r1]
10008478:	2004      	movs	r0, #4
1000847a:	4382      	bics	r2, r0
1000847c:	545a      	strb	r2, [r3, r1]
	}

	/* Set clock polarity and clock phase */
	switch(config->transfer_mode)
1000847e:	78b2      	ldrb	r2, [r6, #2]
10008480:	2a01      	cmp	r2, #1
10008482:	d01a      	beq.n	100084ba <spi_init+0x166>
10008484:	2a00      	cmp	r2, #0
10008486:	d004      	beq.n	10008492 <spi_init+0x13e>
10008488:	2a02      	cmp	r2, #2
1000848a:	d00c      	beq.n	100084a6 <spi_init+0x152>
1000848c:	2a03      	cmp	r2, #3
1000848e:	d01e      	beq.n	100084ce <spi_init+0x17a>
10008490:	e026      	b.n	100084e0 <spi_init+0x18c>
	{
		case SPI_TRANSFER_MODE_0:
			spi_module->SPI_CONFIGURATION.bit.SCK_PHASE = 0x0;
10008492:	2224      	movs	r2, #36	; 0x24
10008494:	5c99      	ldrb	r1, [r3, r2]
10008496:	2002      	movs	r0, #2
10008498:	4381      	bics	r1, r0
1000849a:	5499      	strb	r1, [r3, r2]
			spi_module->SPI_CONFIGURATION.bit.SCK_POLARITY = 0x0;
1000849c:	5c99      	ldrb	r1, [r3, r2]
1000849e:	3801      	subs	r0, #1
100084a0:	4381      	bics	r1, r0
100084a2:	5499      	strb	r1, [r3, r2]
100084a4:	e01c      	b.n	100084e0 <spi_init+0x18c>
			break;
		case SPI_TRANSFER_MODE_1:
			spi_module->SPI_CONFIGURATION.bit.SCK_PHASE = 0x1;
100084a6:	2224      	movs	r2, #36	; 0x24
100084a8:	5c98      	ldrb	r0, [r3, r2]
100084aa:	2102      	movs	r1, #2
100084ac:	4301      	orrs	r1, r0
100084ae:	5499      	strb	r1, [r3, r2]
			spi_module->SPI_CONFIGURATION.bit.SCK_POLARITY = 0x0;
100084b0:	5c99      	ldrb	r1, [r3, r2]
100084b2:	2001      	movs	r0, #1
100084b4:	4381      	bics	r1, r0
100084b6:	5499      	strb	r1, [r3, r2]
100084b8:	e012      	b.n	100084e0 <spi_init+0x18c>
			break;
		case SPI_TRANSFER_MODE_2:
			spi_module->SPI_CONFIGURATION.bit.SCK_PHASE = 0x0;
100084ba:	2224      	movs	r2, #36	; 0x24
100084bc:	5c99      	ldrb	r1, [r3, r2]
100084be:	2002      	movs	r0, #2
100084c0:	4381      	bics	r1, r0
100084c2:	5499      	strb	r1, [r3, r2]
			spi_module->SPI_CONFIGURATION.bit.SCK_POLARITY = 0x1;
100084c4:	5c98      	ldrb	r0, [r3, r2]
100084c6:	2101      	movs	r1, #1
100084c8:	4301      	orrs	r1, r0
100084ca:	5499      	strb	r1, [r3, r2]
100084cc:	e008      	b.n	100084e0 <spi_init+0x18c>
			break;
		case SPI_TRANSFER_MODE_3:
			spi_module->SPI_CONFIGURATION.bit.SCK_PHASE = 0x1;
100084ce:	2224      	movs	r2, #36	; 0x24
100084d0:	5c98      	ldrb	r0, [r3, r2]
100084d2:	2102      	movs	r1, #2
100084d4:	4301      	orrs	r1, r0
100084d6:	5499      	strb	r1, [r3, r2]
			spi_module->SPI_CONFIGURATION.bit.SCK_POLARITY = 0x1;
100084d8:	5c98      	ldrb	r0, [r3, r2]
100084da:	2101      	movs	r1, #1
100084dc:	4301      	orrs	r1, r0
100084de:	5499      	strb	r1, [r3, r2]
	module->locked                     = 0;
#endif

	/* Write configuration to module and return status code */
	return _spi_set_config(module, config);
}
100084e0:	2000      	movs	r0, #0
100084e2:	b003      	add	sp, #12
100084e4:	bc0c      	pop	{r2, r3}
100084e6:	4690      	mov	r8, r2
100084e8:	469a      	mov	sl, r3
100084ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
100084ec:	10008319 	.word	0x10008319
100084f0:	40006000 	.word	0x40006000
100084f4:	1000a1a5 	.word	0x1000a1a5
100084f8:	40007000 	.word	0x40007000
100084fc:	100177a8 	.word	0x100177a8
10008500:	100085c5 	.word	0x100085c5
10008504:	1000acd5 	.word	0x1000acd5
10008508:	100086f1 	.word	0x100086f1
1000850c:	100087f5 	.word	0x100087f5
10008510:	10008921 	.word	0x10008921
10008514:	10009b91 	.word	0x10009b91
10008518:	10009ba1 	.word	0x10009ba1
1000851c:	10009e31 	.word	0x10009e31

10008520 <spi_write>:
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	Spi *const spi_module = (module->hw);
10008520:	6803      	ldr	r3, [r0, #0]
		Spi *const spi_module)
{
	Assert(spi_module);

	/* Check interrupt flag */
	return (spi_module->TRANSMIT_STATUS.bit.TX_FIFO_NOT_FULL);
10008522:	7a1a      	ldrb	r2, [r3, #8]
	Spi *const spi_module = (module->hw);

	/* Check if the data register has been copied to the shift register */
	if (!_spi_is_ready_to_write(spi_module)) {
		/* Data register has not been copied to the shift register, return */
		return STATUS_BUSY;
10008524:	2005      	movs	r0, #5
	Assert(module->hw);

	Spi *const spi_module = (module->hw);

	/* Check if the data register has been copied to the shift register */
	if (!_spi_is_ready_to_write(spi_module)) {
10008526:	07d2      	lsls	r2, r2, #31
10008528:	d501      	bpl.n	1000852e <spi_write+0xe>
		/* Data register has not been copied to the shift register, return */
		return STATUS_BUSY;
	}

	/* Write the character to the DATA register */
	spi_module->TRANSMIT_DATA.reg = tx_data & SPI_TRANSMIT_DATA_MASK;
1000852a:	7019      	strb	r1, [r3, #0]

	return STATUS_OK;
1000852c:	2000      	movs	r0, #0
}
1000852e:	4770      	bx	lr

10008530 <spi_transceive_buffer_wait>:
enum status_code spi_transceive_buffer_wait(
		struct spi_module *const module,
		uint8_t *tx_data,
		uint8_t *rx_data,
		uint16_t length)
{
10008530:	b5f0      	push	{r4, r5, r6, r7, lr}
10008532:	b083      	sub	sp, #12
	Spi *spi_module = module->hw;
10008534:	6804      	ldr	r4, [r0, #0]
	uint8_t dummy = 0;
10008536:	2600      	movs	r6, #0
10008538:	466d      	mov	r5, sp
1000853a:	71ee      	strb	r6, [r5, #7]
1000853c:	3507      	adds	r5, #7
	uint8_t skip_mosi = 0;
	uint8_t skip_miso = 0;
	uint8_t status;
	uint16_t transfer_len = 0;

	if(spi_module == 0) {
1000853e:	2c00      	cmp	r4, #0
10008540:	d034      	beq.n	100085ac <spi_transceive_buffer_wait+0x7c>
		return STATUS_ERR_NOT_INITIALIZED;
	}
	if(!tx_data) {
10008542:	2900      	cmp	r1, #0
10008544:	d104      	bne.n	10008550 <spi_transceive_buffer_wait+0x20>
		tx_data = &dummy;
		*tx_data = module->tx_dummy_byte;
10008546:	0029      	movs	r1, r5
10008548:	7980      	ldrb	r0, [r0, #6]
1000854a:	7028      	strb	r0, [r5, #0]
		skip_mosi = 1;
1000854c:	2701      	movs	r7, #1
1000854e:	e00b      	b.n	10008568 <spi_transceive_buffer_wait+0x38>
	} else if(!rx_data) {
10008550:	2a00      	cmp	r2, #0
10008552:	d005      	beq.n	10008560 <spi_transceive_buffer_wait+0x30>
		rx_data = &dummy;
		skip_miso = 1;
	} else if(length == 0) {
		return STATUS_ERR_INVALID_ARG;
10008554:	2017      	movs	r0, #23
		*tx_data = module->tx_dummy_byte;
		skip_mosi = 1;
	} else if(!rx_data) {
		rx_data = &dummy;
		skip_miso = 1;
	} else if(length == 0) {
10008556:	2b00      	cmp	r3, #0
10008558:	d029      	beq.n	100085ae <spi_transceive_buffer_wait+0x7e>
		uint16_t length)
{
	Spi *spi_module = module->hw;
	uint8_t dummy = 0;
	uint8_t skip_mosi = 0;
	uint8_t skip_miso = 0;
1000855a:	2600      	movs	r6, #0
		uint8_t *rx_data,
		uint16_t length)
{
	Spi *spi_module = module->hw;
	uint8_t dummy = 0;
	uint8_t skip_mosi = 0;
1000855c:	2700      	movs	r7, #0
1000855e:	e003      	b.n	10008568 <spi_transceive_buffer_wait+0x38>
		tx_data = &dummy;
		*tx_data = module->tx_dummy_byte;
		skip_mosi = 1;
	} else if(!rx_data) {
		rx_data = &dummy;
		skip_miso = 1;
10008560:	2601      	movs	r6, #1
		uint8_t *rx_data,
		uint16_t length)
{
	Spi *spi_module = module->hw;
	uint8_t dummy = 0;
	uint8_t skip_mosi = 0;
10008562:	2700      	movs	r7, #0
	if(!tx_data) {
		tx_data = &dummy;
		*tx_data = module->tx_dummy_byte;
		skip_mosi = 1;
	} else if(!rx_data) {
		rx_data = &dummy;
10008564:	466a      	mov	r2, sp
10008566:	3207      	adds	r2, #7
 */
static bool _spi_is_active(Spi *const spi_module)
{
	Assert(spi_module);

	return spi_module->SPI_BUS_STATUS.bit.SPI_ACTIVE;
10008568:	2528      	movs	r5, #40	; 0x28
1000856a:	5d60      	ldrb	r0, [r4, r5]
	}

	/* Check for Idle */
	do {
		status = _spi_is_active(spi_module);
	}while(status);
1000856c:	07c0      	lsls	r0, r0, #31
1000856e:	d4fc      	bmi.n	1000856a <spi_transceive_buffer_wait+0x3a>

	/* Clear all status registers */
	spi_module->RECEIVE_STATUS.reg;
10008570:	7b20      	ldrb	r0, [r4, #12]
	spi_module->TRANSMIT_STATUS.reg;
10008572:	7a20      	ldrb	r0, [r4, #8]

	/* Start transfer */
	while(transfer_len < length) {
10008574:	2b00      	cmp	r3, #0
10008576:	d014      	beq.n	100085a2 <spi_transceive_buffer_wait+0x72>
10008578:	2500      	movs	r5, #0
		/* Read data shifted from MISO */
		while(!_spi_is_ready_to_read(spi_module));
		*rx_data = spi_module->RECEIVE_DATA.reg;
		transfer_len++;
		if (!skip_mosi) {
			tx_data++;
1000857a:	4278      	negs	r0, r7
1000857c:	4147      	adcs	r7, r0
		}
		if (!skip_miso) {
			rx_data++;
1000857e:	4270      	negs	r0, r6
10008580:	4146      	adcs	r6, r0
		Spi *const spi_module)
{
	Assert(spi_module);

	/* Check interrupt flag */
	return (spi_module->TRANSMIT_STATUS.bit.TX_FIFO_NOT_FULL);
10008582:	7a20      	ldrb	r0, [r4, #8]
	spi_module->TRANSMIT_STATUS.reg;

	/* Start transfer */
	while(transfer_len < length) {
		/* Write data to MOSI */
		while(!_spi_is_ready_to_write(spi_module));
10008584:	07c0      	lsls	r0, r0, #31
10008586:	d5fc      	bpl.n	10008582 <spi_transceive_buffer_wait+0x52>
		spi_module->TRANSMIT_DATA.reg = *tx_data;
10008588:	7808      	ldrb	r0, [r1, #0]
1000858a:	7020      	strb	r0, [r4, #0]
		Spi *const spi_module)
{
	Assert(spi_module);

	/* Check interrupt flag */
	return (spi_module->RECEIVE_STATUS.bit.RX_FIFO_NOT_EMPTY);
1000858c:	7b20      	ldrb	r0, [r4, #12]
	while(transfer_len < length) {
		/* Write data to MOSI */
		while(!_spi_is_ready_to_write(spi_module));
		spi_module->TRANSMIT_DATA.reg = *tx_data;
		/* Read data shifted from MISO */
		while(!_spi_is_ready_to_read(spi_module));
1000858e:	07c0      	lsls	r0, r0, #31
10008590:	d5fc      	bpl.n	1000858c <spi_transceive_buffer_wait+0x5c>
		*rx_data = spi_module->RECEIVE_DATA.reg;
10008592:	7920      	ldrb	r0, [r4, #4]
10008594:	7010      	strb	r0, [r2, #0]
		transfer_len++;
10008596:	3501      	adds	r5, #1
10008598:	b2ad      	uxth	r5, r5
		if (!skip_mosi) {
			tx_data++;
1000859a:	19c9      	adds	r1, r1, r7
		}
		if (!skip_miso) {
			rx_data++;
1000859c:	1992      	adds	r2, r2, r6
	/* Clear all status registers */
	spi_module->RECEIVE_STATUS.reg;
	spi_module->TRANSMIT_STATUS.reg;

	/* Start transfer */
	while(transfer_len < length) {
1000859e:	42ab      	cmp	r3, r5
100085a0:	d1ef      	bne.n	10008582 <spi_transceive_buffer_wait+0x52>
		Spi *const spi_module)
{
	Assert(spi_module);

	/* Check interrupt flag */
	return (spi_module->TRANSMIT_STATUS.bit.TX_FIFO_EMPTY);
100085a2:	7a23      	ldrb	r3, [r4, #8]
		}
	}
	/* check TXFIFO is empty */
	do {
		status = _spi_is_write_complete(spi_module);
	}while(!status);
100085a4:	06db      	lsls	r3, r3, #27
100085a6:	d5fc      	bpl.n	100085a2 <spi_transceive_buffer_wait+0x72>

	return STATUS_OK;
100085a8:	2000      	movs	r0, #0
100085aa:	e000      	b.n	100085ae <spi_transceive_buffer_wait+0x7e>
	uint8_t skip_miso = 0;
	uint8_t status;
	uint16_t transfer_len = 0;

	if(spi_module == 0) {
		return STATUS_ERR_NOT_INITIALIZED;
100085ac:	201f      	movs	r0, #31
		status = _spi_is_write_complete(spi_module);
	}while(!status);

	return STATUS_OK;

}
100085ae:	b003      	add	sp, #12
100085b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
100085b2:	46c0      	nop			; (mov r8, r8)

100085b4 <spi_write_buffer_wait>:
 */
enum status_code spi_write_buffer_wait(
		struct spi_module *const module,
		uint8_t *tx_data,
		uint16_t length)
{
100085b4:	b510      	push	{r4, lr}
100085b6:	0013      	movs	r3, r2
	return spi_transceive_buffer_wait(module, tx_data, NULL, length);
100085b8:	2200      	movs	r2, #0
100085ba:	4c01      	ldr	r4, [pc, #4]	; (100085c0 <spi_write_buffer_wait+0xc>)
100085bc:	47a0      	blx	r4
}
100085be:	bd10      	pop	{r4, pc}
100085c0:	10008531 	.word	0x10008531

100085c4 <spi_rx0_isr_handler>:
	/* Decrement remaining dummy buffer length */
	module->remaining_dummy_buffer_length--;
}

void spi_rx0_isr_handler(void)
{
100085c4:	b510      	push	{r4, lr}
	struct spi_module *module = _spi_instances[0];
100085c6:	4b48      	ldr	r3, [pc, #288]	; (100086e8 <spi_rx0_isr_handler+0x124>)
100085c8:	681c      	ldr	r4, [r3, #0]

	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->RECEIVE_STATUS.reg;
100085ca:	6823      	ldr	r3, [r4, #0]
100085cc:	7b1a      	ldrb	r2, [r3, #12]
	flags &= module->hw->RX_INTERRUPT_MASK.reg;
100085ce:	2130      	movs	r1, #48	; 0x30
100085d0:	5c59      	ldrb	r1, [r3, r1]

	if (flags & SPI_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
100085d2:	400a      	ands	r2, r1
100085d4:	07d2      	lsls	r2, r2, #31
100085d6:	d400      	bmi.n	100085da <spi_rx0_isr_handler+0x16>
100085d8:	e085      	b.n	100086e6 <spi_rx0_isr_handler+0x122>
		if (module->hw->RECEIVE_STATUS.reg & SPI_RECEIVE_STATUS_FIFO_OVERRUN) {
100085da:	7b1a      	ldrb	r2, [r3, #12]
100085dc:	0692      	lsls	r2, r2, #26
100085de:	d523      	bpl.n	10008628 <spi_rx0_isr_handler+0x64>
			if (module->dir != SPI_DIRECTION_WRITE) {
100085e0:	79e2      	ldrb	r2, [r4, #7]
100085e2:	2a01      	cmp	r2, #1
100085e4:	d01d      	beq.n	10008622 <spi_rx0_isr_handler+0x5e>
				/* Store the error code */
				module->status = STATUS_ERR_OVERFLOW;
100085e6:	211e      	movs	r1, #30
100085e8:	2228      	movs	r2, #40	; 0x28
100085ea:	54a1      	strb	r1, [r4, r2]

				/* End transaction */
				module->dir = SPI_DIRECTION_IDLE;
100085ec:	3a25      	subs	r2, #37	; 0x25
100085ee:	71e2      	strb	r2, [r4, #7]

				module->hw->RX_INTERRUPT_MASK.reg &=
100085f0:	3112      	adds	r1, #18
100085f2:	5c5a      	ldrb	r2, [r3, r1]
100085f4:	2021      	movs	r0, #33	; 0x21
100085f6:	4382      	bics	r2, r0
100085f8:	545a      	strb	r2, [r3, r1]
					~(SPI_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
					SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
				/* Run callback if registered and enabled */
				if ((module->enabled_callback & (1 << SPI_CALLBACK_ERROR)) &&
100085fa:	2327      	movs	r3, #39	; 0x27
100085fc:	5ce3      	ldrb	r3, [r4, r3]
100085fe:	071b      	lsls	r3, r3, #28
10008600:	d50f      	bpl.n	10008622 <spi_rx0_isr_handler+0x5e>
					(module->registered_callback & (1 << SPI_CALLBACK_ERROR))) {
10008602:	2326      	movs	r3, #38	; 0x26

				module->hw->RX_INTERRUPT_MASK.reg &=
					~(SPI_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
					SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
				/* Run callback if registered and enabled */
				if ((module->enabled_callback & (1 << SPI_CALLBACK_ERROR)) &&
10008604:	5ce3      	ldrb	r3, [r4, r3]
10008606:	071b      	lsls	r3, r3, #28
10008608:	d50b      	bpl.n	10008622 <spi_rx0_isr_handler+0x5e>
					(module->registered_callback & (1 << SPI_CALLBACK_ERROR))) {
					module->status = STATUS_ERR_OVERFLOW;
1000860a:	221e      	movs	r2, #30
1000860c:	2328      	movs	r3, #40	; 0x28
1000860e:	54e2      	strb	r2, [r4, r3]
					module->hw->RX_INTERRUPT_MASK.reg &=
10008610:	6821      	ldr	r1, [r4, #0]
10008612:	3212      	adds	r2, #18
10008614:	5c8b      	ldrb	r3, [r1, r2]
10008616:	3801      	subs	r0, #1
10008618:	4383      	bics	r3, r0
1000861a:	548b      	strb	r3, [r1, r2]
							~(SPI_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK);
					(module->callback[SPI_CALLBACK_ERROR])(module);
1000861c:	0020      	movs	r0, r4
1000861e:	6963      	ldr	r3, [r4, #20]
10008620:	4798      	blx	r3
				}
			}
			/* Flush */
			uint16_t flush = module->hw->RECEIVE_DATA.reg;
10008622:	6823      	ldr	r3, [r4, #0]
10008624:	791b      	ldrb	r3, [r3, #4]
10008626:	e05e      	b.n	100086e6 <spi_rx0_isr_handler+0x122>
			UNUSED(flush);
		} else {
			if (module->dir == SPI_DIRECTION_WRITE) {
10008628:	79e2      	ldrb	r2, [r4, #7]
1000862a:	2a01      	cmp	r2, #1
1000862c:	d113      	bne.n	10008656 <spi_rx0_isr_handler+0x92>
	/* Pointer to the hardware module instance */
	Spi *const spi_hw = module->hw;
	uint16_t flush = 0;

	/* Read dummy byte */
	flush = spi_hw->RECEIVE_DATA.reg;
1000862e:	791a      	ldrb	r2, [r3, #4]
	UNUSED(flush);

	/* Decrement remaining dummy buffer length */
	module->remaining_dummy_buffer_length--;
10008630:	8c62      	ldrh	r2, [r4, #34]	; 0x22
10008632:	3a01      	subs	r2, #1
10008634:	b292      	uxth	r2, r2
10008636:	8462      	strh	r2, [r4, #34]	; 0x22
			UNUSED(flush);
		} else {
			if (module->dir == SPI_DIRECTION_WRITE) {
				/* Flush receive buffer when writing */
				_spi_read_dummy(module);
				if (module->remaining_dummy_buffer_length == 0) {
10008638:	8c62      	ldrh	r2, [r4, #34]	; 0x22
1000863a:	b292      	uxth	r2, r2
1000863c:	2a00      	cmp	r2, #0
1000863e:	d152      	bne.n	100086e6 <spi_rx0_isr_handler+0x122>
					module->hw->RX_INTERRUPT_MASK.reg &=
10008640:	2130      	movs	r1, #48	; 0x30
10008642:	5c5a      	ldrb	r2, [r3, r1]
10008644:	2020      	movs	r0, #32
10008646:	4382      	bics	r2, r0
10008648:	545a      	strb	r2, [r3, r1]
						~SPI_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK;
					module->status = STATUS_OK;
1000864a:	2200      	movs	r2, #0
1000864c:	2328      	movs	r3, #40	; 0x28
1000864e:	54e2      	strb	r2, [r4, r3]
					module->dir = SPI_DIRECTION_IDLE;
10008650:	3b25      	subs	r3, #37	; 0x25
10008652:	71e3      	strb	r3, [r4, #7]
10008654:	e047      	b.n	100086e6 <spi_rx0_isr_handler+0x122>
		struct spi_module *const module)
{
	/* Pointer to the hardware module instance */
	Spi *const spi_hw = module->hw;

	uint16_t received_data = (spi_hw->RECEIVE_DATA.reg & SPI_RECEIVE_DATA_MASK);
10008656:	791b      	ldrb	r3, [r3, #4]
10008658:	b2db      	uxtb	r3, r3

	/* Read value will be at least 8-bits long */
	*(module->rx_buffer_ptr) = received_data;
1000865a:	69a2      	ldr	r2, [r4, #24]
1000865c:	7013      	strb	r3, [r2, #0]
	/* Increment 8-bit pointer */
	module->rx_buffer_ptr += 1;
1000865e:	69a3      	ldr	r3, [r4, #24]
10008660:	3301      	adds	r3, #1
10008662:	61a3      	str	r3, [r4, #24]

	/* Decrement length of the remaining buffer */
	module->remaining_rx_buffer_length--;
10008664:	8c23      	ldrh	r3, [r4, #32]
10008666:	3b01      	subs	r3, #1
10008668:	b29b      	uxth	r3, r3
1000866a:	8423      	strh	r3, [r4, #32]
						//(module->callback[SPI_CALLBACK_BUFFER_TRANSMITTED])(module);
					//}
				}
			} else {
				_spi_read(module);
				if (module->remaining_rx_buffer_length == 0) {
1000866c:	8c23      	ldrh	r3, [r4, #32]
1000866e:	b29b      	uxth	r3, r3
10008670:	2b00      	cmp	r3, #0
10008672:	d138      	bne.n	100086e6 <spi_rx0_isr_handler+0x122>
					if(module->dir == SPI_DIRECTION_READ) {
10008674:	79e3      	ldrb	r3, [r4, #7]
10008676:	2b00      	cmp	r3, #0
10008678:	d114      	bne.n	100086a4 <spi_rx0_isr_handler+0xe0>
						if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_RECEIVED)) &&
1000867a:	3327      	adds	r3, #39	; 0x27
1000867c:	5ce3      	ldrb	r3, [r4, r3]
1000867e:	079b      	lsls	r3, r3, #30
10008680:	d531      	bpl.n	100086e6 <spi_rx0_isr_handler+0x122>
							(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_RECEIVED))) {
10008682:	2326      	movs	r3, #38	; 0x26
				}
			} else {
				_spi_read(module);
				if (module->remaining_rx_buffer_length == 0) {
					if(module->dir == SPI_DIRECTION_READ) {
						if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_RECEIVED)) &&
10008684:	5ce3      	ldrb	r3, [r4, r3]
10008686:	079b      	lsls	r3, r3, #30
10008688:	d52d      	bpl.n	100086e6 <spi_rx0_isr_handler+0x122>
							(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_RECEIVED))) {
							module->status = STATUS_OK;
1000868a:	2200      	movs	r2, #0
1000868c:	2328      	movs	r3, #40	; 0x28
1000868e:	54e2      	strb	r2, [r4, r3]
							module->hw->RX_INTERRUPT_MASK.reg &=
10008690:	6821      	ldr	r1, [r4, #0]
10008692:	3230      	adds	r2, #48	; 0x30
10008694:	5c8b      	ldrb	r3, [r1, r2]
10008696:	2001      	movs	r0, #1
10008698:	4383      	bics	r3, r0
1000869a:	548b      	strb	r3, [r1, r2]
									~(SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
							(module->callback[SPI_CALLBACK_BUFFER_RECEIVED])(module);
1000869c:	68e3      	ldr	r3, [r4, #12]
1000869e:	0020      	movs	r0, r4
100086a0:	4798      	blx	r3
100086a2:	e020      	b.n	100086e6 <spi_rx0_isr_handler+0x122>
						}
					} else if (module->dir == SPI_DIRECTION_BOTH) {
100086a4:	79e3      	ldrb	r3, [r4, #7]
100086a6:	2b02      	cmp	r3, #2
100086a8:	d11d      	bne.n	100086e6 <spi_rx0_isr_handler+0x122>
						if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED)) &&
100086aa:	3325      	adds	r3, #37	; 0x25
100086ac:	5ce3      	ldrb	r3, [r4, r3]
100086ae:	075b      	lsls	r3, r3, #29
100086b0:	d519      	bpl.n	100086e6 <spi_rx0_isr_handler+0x122>
							(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED))) {
100086b2:	2326      	movs	r3, #38	; 0x26
							module->hw->RX_INTERRUPT_MASK.reg &=
									~(SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
							(module->callback[SPI_CALLBACK_BUFFER_RECEIVED])(module);
						}
					} else if (module->dir == SPI_DIRECTION_BOTH) {
						if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED)) &&
100086b4:	5ce3      	ldrb	r3, [r4, r3]
100086b6:	075b      	lsls	r3, r3, #29
100086b8:	d515      	bpl.n	100086e6 <spi_rx0_isr_handler+0x122>
							(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED))) {
								module->hw->RX_INTERRUPT_MASK.reg &=
100086ba:	6821      	ldr	r1, [r4, #0]
100086bc:	2230      	movs	r2, #48	; 0x30
100086be:	5c8b      	ldrb	r3, [r1, r2]
100086c0:	2001      	movs	r0, #1
100086c2:	4383      	bics	r3, r0
100086c4:	548b      	strb	r3, [r1, r2]
										~(SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
								if (flag_direction_both[0]) {
100086c6:	4b09      	ldr	r3, [pc, #36]	; (100086ec <spi_rx0_isr_handler+0x128>)
100086c8:	781b      	ldrb	r3, [r3, #0]
100086ca:	2b00      	cmp	r3, #0
100086cc:	d008      	beq.n	100086e0 <spi_rx0_isr_handler+0x11c>
									module->status = STATUS_OK;
100086ce:	2300      	movs	r3, #0
100086d0:	3a08      	subs	r2, #8
100086d2:	54a3      	strb	r3, [r4, r2]
									flag_direction_both[0] = false;
100086d4:	4a05      	ldr	r2, [pc, #20]	; (100086ec <spi_rx0_isr_handler+0x128>)
100086d6:	7013      	strb	r3, [r2, #0]
									(module->callback[SPI_CALLBACK_BUFFER_TRANSCEIVED])(module);
100086d8:	6923      	ldr	r3, [r4, #16]
100086da:	0020      	movs	r0, r4
100086dc:	4798      	blx	r3
100086de:	e002      	b.n	100086e6 <spi_rx0_isr_handler+0x122>
								} else {
									flag_direction_both[0] = true;
100086e0:	2201      	movs	r2, #1
100086e2:	4b02      	ldr	r3, [pc, #8]	; (100086ec <spi_rx0_isr_handler+0x128>)
100086e4:	701a      	strb	r2, [r3, #0]
					}
				}
			}
		}
	}
}
100086e6:	bd10      	pop	{r4, pc}
100086e8:	100177a8 	.word	0x100177a8
100086ec:	10015cf8 	.word	0x10015cf8

100086f0 <spi_tx0_isr_handler>:

void spi_tx0_isr_handler(void)
{
100086f0:	b570      	push	{r4, r5, r6, lr}
	struct spi_module *module = _spi_instances[0];
100086f2:	4b3d      	ldr	r3, [pc, #244]	; (100087e8 <spi_tx0_isr_handler+0xf8>)
100086f4:	6818      	ldr	r0, [r3, #0]

	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
100086f6:	6802      	ldr	r2, [r0, #0]
100086f8:	7a13      	ldrb	r3, [r2, #8]
	flags &= module->hw->TX_INTERRUPT_MASK.reg;
100086fa:	212c      	movs	r1, #44	; 0x2c
100086fc:	5c51      	ldrb	r1, [r2, r1]
100086fe:	400b      	ands	r3, r1

	if (flags & SPI_TRANSMIT_STATUS_TX_FIFO_NOT_FULL_1) {
10008700:	07d9      	lsls	r1, r3, #31
10008702:	d536      	bpl.n	10008772 <spi_tx0_isr_handler+0x82>
#  if CONF_SPI_MASTER_ENABLE == true
		if ((module->mode == SPI_MODE_MASTER) &&
10008704:	7941      	ldrb	r1, [r0, #5]
10008706:	2901      	cmp	r1, #1
10008708:	d133      	bne.n	10008772 <spi_tx0_isr_handler+0x82>
			(module->dir == SPI_DIRECTION_READ)) {
1000870a:	79c1      	ldrb	r1, [r0, #7]
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
	flags &= module->hw->TX_INTERRUPT_MASK.reg;

	if (flags & SPI_TRANSMIT_STATUS_TX_FIFO_NOT_FULL_1) {
#  if CONF_SPI_MASTER_ENABLE == true
		if ((module->mode == SPI_MODE_MASTER) &&
1000870c:	2900      	cmp	r1, #0
1000870e:	d113      	bne.n	10008738 <spi_tx0_isr_handler+0x48>
{
	/* Pointer to the hardware module instance */
	Spi *const spi_hw = module->hw;

	/* Write dummy byte */
	spi_hw->TRANSMIT_DATA.reg = dummy_write;
10008710:	4936      	ldr	r1, [pc, #216]	; (100087ec <spi_tx0_isr_handler+0xfc>)
10008712:	7809      	ldrb	r1, [r1, #0]
10008714:	7011      	strb	r1, [r2, #0]

	/* Decrement remaining dummy buffer length */
	module->remaining_dummy_buffer_length--;
10008716:	8c42      	ldrh	r2, [r0, #34]	; 0x22
10008718:	3a01      	subs	r2, #1
1000871a:	b292      	uxth	r2, r2
1000871c:	8442      	strh	r2, [r0, #34]	; 0x22
#  if CONF_SPI_MASTER_ENABLE == true
		if ((module->mode == SPI_MODE_MASTER) &&
			(module->dir == SPI_DIRECTION_READ)) {
			/* Send dummy byte when reading in master mode */
			_spi_write_dummy(module);
			if (module->remaining_dummy_buffer_length == 0) {
1000871e:	8c42      	ldrh	r2, [r0, #34]	; 0x22
10008720:	b292      	uxth	r2, r2
10008722:	2a00      	cmp	r2, #0
10008724:	d105      	bne.n	10008732 <spi_tx0_isr_handler+0x42>
				/* Disable the Data Register Empty Interrupt */
				module->hw->TX_INTERRUPT_MASK.reg &=
10008726:	6804      	ldr	r4, [r0, #0]
10008728:	212c      	movs	r1, #44	; 0x2c
1000872a:	5c62      	ldrb	r2, [r4, r1]
1000872c:	2501      	movs	r5, #1
1000872e:	43aa      	bics	r2, r5
10008730:	5462      	strb	r2, [r4, r1]
					~SPI_TX_INTERRUPT_MASK_TX_FIFO_NOT_FULL_MASK;
			}
		}
#  endif
		if (0
10008732:	7942      	ldrb	r2, [r0, #5]
10008734:	2a01      	cmp	r2, #1
10008736:	d11c      	bne.n	10008772 <spi_tx0_isr_handler+0x82>
#  if CONF_SPI_MASTER_ENABLE == true
		|| ((module->mode == SPI_MODE_MASTER) &&
		(module->dir != SPI_DIRECTION_READ))
10008738:	79c2      	ldrb	r2, [r0, #7]
			}
		}
#  endif
		if (0
#  if CONF_SPI_MASTER_ENABLE == true
		|| ((module->mode == SPI_MODE_MASTER) &&
1000873a:	2a00      	cmp	r2, #0
1000873c:	d019      	beq.n	10008772 <spi_tx0_isr_handler+0x82>
{
	/* Pointer to the hardware module instance */
	Spi *const spi_hw = module->hw;

	/* Write value will be at least 8-bits long */
	uint16_t data_to_send = *(module->tx_buffer_ptr);
1000873e:	69c2      	ldr	r2, [r0, #28]
10008740:	7811      	ldrb	r1, [r2, #0]
10008742:	b2c9      	uxtb	r1, r1
	/* Increment 8-bit pointer */
	(module->tx_buffer_ptr)++;
10008744:	3201      	adds	r2, #1
10008746:	61c2      	str	r2, [r0, #28]

	/* Write the data to send*/
	spi_hw->TRANSMIT_DATA.reg = data_to_send & SPI_TRANSMIT_DATA_MASK;
10008748:	6802      	ldr	r2, [r0, #0]
1000874a:	7011      	strb	r1, [r2, #0]

	/* Decrement remaining buffer length */
	(module->remaining_tx_buffer_length)--;
1000874c:	8c82      	ldrh	r2, [r0, #36]	; 0x24
1000874e:	3a01      	subs	r2, #1
10008750:	b292      	uxth	r2, r2
10008752:	8482      	strh	r2, [r0, #36]	; 0x24
		|| ((module->mode == SPI_MODE_SLAVE) &&
		(module->dir != SPI_DIRECTION_READ))
#  endif
		) {
			_spi_write(module);
			if (module->remaining_tx_buffer_length == 0) {
10008754:	8c82      	ldrh	r2, [r0, #36]	; 0x24
10008756:	b292      	uxth	r2, r2
10008758:	2a00      	cmp	r2, #0
1000875a:	d10a      	bne.n	10008772 <spi_tx0_isr_handler+0x82>
				module->hw->TX_INTERRUPT_MASK.reg &=
1000875c:	6804      	ldr	r4, [r0, #0]
1000875e:	322c      	adds	r2, #44	; 0x2c
10008760:	5ca1      	ldrb	r1, [r4, r2]
10008762:	2501      	movs	r5, #1
10008764:	43a9      	bics	r1, r5
10008766:	54a1      	strb	r1, [r4, r2]
						~SPI_TX_INTERRUPT_MASK_TX_FIFO_NOT_FULL_MASK;
				module->hw->TX_INTERRUPT_MASK.reg |=
10008768:	6804      	ldr	r4, [r0, #0]
1000876a:	5ca5      	ldrb	r5, [r4, r2]
1000876c:	2110      	movs	r1, #16
1000876e:	4329      	orrs	r1, r5
10008770:	54a1      	strb	r1, [r4, r2]
						SPI_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
			}
		}
	}
	if (flags & SPI_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
10008772:	06db      	lsls	r3, r3, #27
10008774:	d536      	bpl.n	100087e4 <spi_tx0_isr_handler+0xf4>
		if (module->dir == SPI_DIRECTION_WRITE) {
10008776:	79c3      	ldrb	r3, [r0, #7]
10008778:	2b01      	cmp	r3, #1
1000877a:	d113      	bne.n	100087a4 <spi_tx0_isr_handler+0xb4>
			if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_TRANSMITTED)) &&
1000877c:	3326      	adds	r3, #38	; 0x26
1000877e:	5cc3      	ldrb	r3, [r0, r3]
10008780:	07db      	lsls	r3, r3, #31
10008782:	d52f      	bpl.n	100087e4 <spi_tx0_isr_handler+0xf4>
				(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_TRANSMITTED))) {
10008784:	2326      	movs	r3, #38	; 0x26
			}
		}
	}
	if (flags & SPI_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
		if (module->dir == SPI_DIRECTION_WRITE) {
			if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_TRANSMITTED)) &&
10008786:	5cc3      	ldrb	r3, [r0, r3]
10008788:	07db      	lsls	r3, r3, #31
1000878a:	d52b      	bpl.n	100087e4 <spi_tx0_isr_handler+0xf4>
				(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_TRANSMITTED))) {
					module->status = STATUS_OK;
1000878c:	2200      	movs	r2, #0
1000878e:	2328      	movs	r3, #40	; 0x28
10008790:	54c2      	strb	r2, [r0, r3]
					/* Disable interrupt */
					module->hw->TX_INTERRUPT_MASK.reg &=
10008792:	6801      	ldr	r1, [r0, #0]
10008794:	322c      	adds	r2, #44	; 0x2c
10008796:	5c8b      	ldrb	r3, [r1, r2]
10008798:	2410      	movs	r4, #16
1000879a:	43a3      	bics	r3, r4
1000879c:	548b      	strb	r3, [r1, r2]
							~SPI_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
					(module->callback[SPI_CALLBACK_BUFFER_TRANSMITTED])(module);
1000879e:	6883      	ldr	r3, [r0, #8]
100087a0:	4798      	blx	r3
100087a2:	e01f      	b.n	100087e4 <spi_tx0_isr_handler+0xf4>
				}
		} else if (module->dir == SPI_DIRECTION_BOTH) {
100087a4:	79c3      	ldrb	r3, [r0, #7]
100087a6:	2b02      	cmp	r3, #2
100087a8:	d11c      	bne.n	100087e4 <spi_tx0_isr_handler+0xf4>
			if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED)) &&
100087aa:	3325      	adds	r3, #37	; 0x25
100087ac:	5cc3      	ldrb	r3, [r0, r3]
100087ae:	075b      	lsls	r3, r3, #29
100087b0:	d518      	bpl.n	100087e4 <spi_tx0_isr_handler+0xf4>
				(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED))) {
100087b2:	2326      	movs	r3, #38	; 0x26
					module->hw->TX_INTERRUPT_MASK.reg &=
							~SPI_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
					(module->callback[SPI_CALLBACK_BUFFER_TRANSMITTED])(module);
				}
		} else if (module->dir == SPI_DIRECTION_BOTH) {
			if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED)) &&
100087b4:	5cc3      	ldrb	r3, [r0, r3]
100087b6:	075b      	lsls	r3, r3, #29
100087b8:	d514      	bpl.n	100087e4 <spi_tx0_isr_handler+0xf4>
				(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED))) {
					/* Disable interrupt */
					module->hw->TX_INTERRUPT_MASK.reg &=
100087ba:	6801      	ldr	r1, [r0, #0]
100087bc:	222c      	movs	r2, #44	; 0x2c
100087be:	5c8b      	ldrb	r3, [r1, r2]
100087c0:	2410      	movs	r4, #16
100087c2:	43a3      	bics	r3, r4
100087c4:	548b      	strb	r3, [r1, r2]
							~SPI_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
					if (flag_direction_both[0]) {
100087c6:	4b0a      	ldr	r3, [pc, #40]	; (100087f0 <spi_tx0_isr_handler+0x100>)
100087c8:	781b      	ldrb	r3, [r3, #0]
100087ca:	2b00      	cmp	r3, #0
100087cc:	d007      	beq.n	100087de <spi_tx0_isr_handler+0xee>
						module->status = STATUS_OK;
100087ce:	2300      	movs	r3, #0
100087d0:	3a04      	subs	r2, #4
100087d2:	5483      	strb	r3, [r0, r2]
						flag_direction_both[0] = false;
100087d4:	4a06      	ldr	r2, [pc, #24]	; (100087f0 <spi_tx0_isr_handler+0x100>)
100087d6:	7013      	strb	r3, [r2, #0]
						(module->callback[SPI_CALLBACK_BUFFER_TRANSCEIVED])(module);
100087d8:	6903      	ldr	r3, [r0, #16]
100087da:	4798      	blx	r3
100087dc:	e002      	b.n	100087e4 <spi_tx0_isr_handler+0xf4>
					} else {
						flag_direction_both[0] = true;
100087de:	2201      	movs	r2, #1
100087e0:	4b03      	ldr	r3, [pc, #12]	; (100087f0 <spi_tx0_isr_handler+0x100>)
100087e2:	701a      	strb	r2, [r3, #0]
					}
			}
		}
	}
}
100087e4:	bd70      	pop	{r4, r5, r6, pc}
100087e6:	46c0      	nop			; (mov r8, r8)
100087e8:	100177a8 	.word	0x100177a8
100087ec:	10015cfa 	.word	0x10015cfa
100087f0:	10015cf8 	.word	0x10015cf8

100087f4 <spi_rx1_isr_handler>:

void spi_rx1_isr_handler(void)
{
100087f4:	b510      	push	{r4, lr}
	struct spi_module *module = _spi_instances[1];
100087f6:	4b48      	ldr	r3, [pc, #288]	; (10008918 <spi_rx1_isr_handler+0x124>)
100087f8:	685c      	ldr	r4, [r3, #4]

	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->RECEIVE_STATUS.reg;
100087fa:	6823      	ldr	r3, [r4, #0]
100087fc:	7b1a      	ldrb	r2, [r3, #12]
	flags &= module->hw->RX_INTERRUPT_MASK.reg;
100087fe:	2130      	movs	r1, #48	; 0x30
10008800:	5c59      	ldrb	r1, [r3, r1]

	if (flags & SPI_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
10008802:	400a      	ands	r2, r1
10008804:	07d2      	lsls	r2, r2, #31
10008806:	d400      	bmi.n	1000880a <spi_rx1_isr_handler+0x16>
10008808:	e085      	b.n	10008916 <spi_rx1_isr_handler+0x122>
		if (module->hw->RECEIVE_STATUS.reg & SPI_RECEIVE_STATUS_FIFO_OVERRUN) {
1000880a:	7b1a      	ldrb	r2, [r3, #12]
1000880c:	0692      	lsls	r2, r2, #26
1000880e:	d523      	bpl.n	10008858 <spi_rx1_isr_handler+0x64>
			if (module->dir != SPI_DIRECTION_WRITE) {
10008810:	79e2      	ldrb	r2, [r4, #7]
10008812:	2a01      	cmp	r2, #1
10008814:	d01d      	beq.n	10008852 <spi_rx1_isr_handler+0x5e>
				/* Store the error code */
				module->status = STATUS_ERR_OVERFLOW;
10008816:	211e      	movs	r1, #30
10008818:	2228      	movs	r2, #40	; 0x28
1000881a:	54a1      	strb	r1, [r4, r2]

				/* End transaction */
				module->dir = SPI_DIRECTION_IDLE;
1000881c:	3a25      	subs	r2, #37	; 0x25
1000881e:	71e2      	strb	r2, [r4, #7]

				module->hw->RX_INTERRUPT_MASK.reg &=
10008820:	3112      	adds	r1, #18
10008822:	5c5a      	ldrb	r2, [r3, r1]
10008824:	2021      	movs	r0, #33	; 0x21
10008826:	4382      	bics	r2, r0
10008828:	545a      	strb	r2, [r3, r1]
						~(SPI_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
						SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
				/* Run callback if registered and enabled */
				if ((module->enabled_callback & (1 << SPI_CALLBACK_ERROR)) &&
1000882a:	2327      	movs	r3, #39	; 0x27
1000882c:	5ce3      	ldrb	r3, [r4, r3]
1000882e:	071b      	lsls	r3, r3, #28
10008830:	d50f      	bpl.n	10008852 <spi_rx1_isr_handler+0x5e>
					(module->registered_callback & (1 << SPI_CALLBACK_ERROR))) {
10008832:	2326      	movs	r3, #38	; 0x26

				module->hw->RX_INTERRUPT_MASK.reg &=
						~(SPI_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
						SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
				/* Run callback if registered and enabled */
				if ((module->enabled_callback & (1 << SPI_CALLBACK_ERROR)) &&
10008834:	5ce3      	ldrb	r3, [r4, r3]
10008836:	071b      	lsls	r3, r3, #28
10008838:	d50b      	bpl.n	10008852 <spi_rx1_isr_handler+0x5e>
					(module->registered_callback & (1 << SPI_CALLBACK_ERROR))) {
					module->status = STATUS_ERR_OVERFLOW;
1000883a:	221e      	movs	r2, #30
1000883c:	2328      	movs	r3, #40	; 0x28
1000883e:	54e2      	strb	r2, [r4, r3]
					module->hw->RX_INTERRUPT_MASK.reg &=
10008840:	6821      	ldr	r1, [r4, #0]
10008842:	3212      	adds	r2, #18
10008844:	5c8b      	ldrb	r3, [r1, r2]
10008846:	3801      	subs	r0, #1
10008848:	4383      	bics	r3, r0
1000884a:	548b      	strb	r3, [r1, r2]
							~(SPI_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK);
					(module->callback[SPI_CALLBACK_ERROR])(module);
1000884c:	0020      	movs	r0, r4
1000884e:	6963      	ldr	r3, [r4, #20]
10008850:	4798      	blx	r3
				}
			}
			/* Flush */
			uint16_t flush = module->hw->RECEIVE_DATA.reg;
10008852:	6823      	ldr	r3, [r4, #0]
10008854:	791b      	ldrb	r3, [r3, #4]
10008856:	e05e      	b.n	10008916 <spi_rx1_isr_handler+0x122>
			UNUSED(flush);
		} else {
			if (module->dir == SPI_DIRECTION_WRITE) {
10008858:	79e2      	ldrb	r2, [r4, #7]
1000885a:	2a01      	cmp	r2, #1
1000885c:	d113      	bne.n	10008886 <spi_rx1_isr_handler+0x92>
	/* Pointer to the hardware module instance */
	Spi *const spi_hw = module->hw;
	uint16_t flush = 0;

	/* Read dummy byte */
	flush = spi_hw->RECEIVE_DATA.reg;
1000885e:	791a      	ldrb	r2, [r3, #4]
	UNUSED(flush);

	/* Decrement remaining dummy buffer length */
	module->remaining_dummy_buffer_length--;
10008860:	8c62      	ldrh	r2, [r4, #34]	; 0x22
10008862:	3a01      	subs	r2, #1
10008864:	b292      	uxth	r2, r2
10008866:	8462      	strh	r2, [r4, #34]	; 0x22
			UNUSED(flush);
		} else {
			if (module->dir == SPI_DIRECTION_WRITE) {
				/* Flush receive buffer when writing */
				_spi_read_dummy(module);
				if (module->remaining_dummy_buffer_length == 0) {
10008868:	8c62      	ldrh	r2, [r4, #34]	; 0x22
1000886a:	b292      	uxth	r2, r2
1000886c:	2a00      	cmp	r2, #0
1000886e:	d152      	bne.n	10008916 <spi_rx1_isr_handler+0x122>
					module->hw->RX_INTERRUPT_MASK.reg &=
10008870:	2130      	movs	r1, #48	; 0x30
10008872:	5c5a      	ldrb	r2, [r3, r1]
10008874:	2020      	movs	r0, #32
10008876:	4382      	bics	r2, r0
10008878:	545a      	strb	r2, [r3, r1]
							~SPI_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK;
					module->status = STATUS_OK;
1000887a:	2200      	movs	r2, #0
1000887c:	2328      	movs	r3, #40	; 0x28
1000887e:	54e2      	strb	r2, [r4, r3]
					module->dir = SPI_DIRECTION_IDLE;
10008880:	3b25      	subs	r3, #37	; 0x25
10008882:	71e3      	strb	r3, [r4, #7]
10008884:	e047      	b.n	10008916 <spi_rx1_isr_handler+0x122>
		struct spi_module *const module)
{
	/* Pointer to the hardware module instance */
	Spi *const spi_hw = module->hw;

	uint16_t received_data = (spi_hw->RECEIVE_DATA.reg & SPI_RECEIVE_DATA_MASK);
10008886:	791b      	ldrb	r3, [r3, #4]
10008888:	b2db      	uxtb	r3, r3

	/* Read value will be at least 8-bits long */
	*(module->rx_buffer_ptr) = received_data;
1000888a:	69a2      	ldr	r2, [r4, #24]
1000888c:	7013      	strb	r3, [r2, #0]
	/* Increment 8-bit pointer */
	module->rx_buffer_ptr += 1;
1000888e:	69a3      	ldr	r3, [r4, #24]
10008890:	3301      	adds	r3, #1
10008892:	61a3      	str	r3, [r4, #24]

	/* Decrement length of the remaining buffer */
	module->remaining_rx_buffer_length--;
10008894:	8c23      	ldrh	r3, [r4, #32]
10008896:	3b01      	subs	r3, #1
10008898:	b29b      	uxth	r3, r3
1000889a:	8423      	strh	r3, [r4, #32]
					module->status = STATUS_OK;
					module->dir = SPI_DIRECTION_IDLE;
				}
			} else {
				_spi_read(module);
				if (module->remaining_rx_buffer_length == 0) {
1000889c:	8c23      	ldrh	r3, [r4, #32]
1000889e:	b29b      	uxth	r3, r3
100088a0:	2b00      	cmp	r3, #0
100088a2:	d138      	bne.n	10008916 <spi_rx1_isr_handler+0x122>
					if(module->dir == SPI_DIRECTION_READ) {
100088a4:	79e3      	ldrb	r3, [r4, #7]
100088a6:	2b00      	cmp	r3, #0
100088a8:	d114      	bne.n	100088d4 <spi_rx1_isr_handler+0xe0>
						if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_RECEIVED)) &&
100088aa:	3327      	adds	r3, #39	; 0x27
100088ac:	5ce3      	ldrb	r3, [r4, r3]
100088ae:	079b      	lsls	r3, r3, #30
100088b0:	d531      	bpl.n	10008916 <spi_rx1_isr_handler+0x122>
							(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_RECEIVED))) {
100088b2:	2326      	movs	r3, #38	; 0x26
				}
			} else {
				_spi_read(module);
				if (module->remaining_rx_buffer_length == 0) {
					if(module->dir == SPI_DIRECTION_READ) {
						if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_RECEIVED)) &&
100088b4:	5ce3      	ldrb	r3, [r4, r3]
100088b6:	079b      	lsls	r3, r3, #30
100088b8:	d52d      	bpl.n	10008916 <spi_rx1_isr_handler+0x122>
							(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_RECEIVED))) {
							module->status = STATUS_OK;
100088ba:	2200      	movs	r2, #0
100088bc:	2328      	movs	r3, #40	; 0x28
100088be:	54e2      	strb	r2, [r4, r3]
							module->hw->RX_INTERRUPT_MASK.reg &=
100088c0:	6821      	ldr	r1, [r4, #0]
100088c2:	3230      	adds	r2, #48	; 0x30
100088c4:	5c8b      	ldrb	r3, [r1, r2]
100088c6:	2001      	movs	r0, #1
100088c8:	4383      	bics	r3, r0
100088ca:	548b      	strb	r3, [r1, r2]
									~(SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
							(module->callback[SPI_CALLBACK_BUFFER_RECEIVED])(module);
100088cc:	68e3      	ldr	r3, [r4, #12]
100088ce:	0020      	movs	r0, r4
100088d0:	4798      	blx	r3
100088d2:	e020      	b.n	10008916 <spi_rx1_isr_handler+0x122>
						}
					} else if (module->dir == SPI_DIRECTION_BOTH) {
100088d4:	79e3      	ldrb	r3, [r4, #7]
100088d6:	2b02      	cmp	r3, #2
100088d8:	d11d      	bne.n	10008916 <spi_rx1_isr_handler+0x122>
						if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED)) &&
100088da:	3325      	adds	r3, #37	; 0x25
100088dc:	5ce3      	ldrb	r3, [r4, r3]
100088de:	075b      	lsls	r3, r3, #29
100088e0:	d519      	bpl.n	10008916 <spi_rx1_isr_handler+0x122>
							(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED))) {
100088e2:	2326      	movs	r3, #38	; 0x26
							module->hw->RX_INTERRUPT_MASK.reg &=
									~(SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
							(module->callback[SPI_CALLBACK_BUFFER_RECEIVED])(module);
						}
					} else if (module->dir == SPI_DIRECTION_BOTH) {
						if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED)) &&
100088e4:	5ce3      	ldrb	r3, [r4, r3]
100088e6:	075b      	lsls	r3, r3, #29
100088e8:	d515      	bpl.n	10008916 <spi_rx1_isr_handler+0x122>
							(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED))) {
							module->hw->RX_INTERRUPT_MASK.reg &=
100088ea:	6821      	ldr	r1, [r4, #0]
100088ec:	2230      	movs	r2, #48	; 0x30
100088ee:	5c8b      	ldrb	r3, [r1, r2]
100088f0:	2001      	movs	r0, #1
100088f2:	4383      	bics	r3, r0
100088f4:	548b      	strb	r3, [r1, r2]
									~(SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
							if (flag_direction_both[1]) {
100088f6:	4b09      	ldr	r3, [pc, #36]	; (1000891c <spi_rx1_isr_handler+0x128>)
100088f8:	785b      	ldrb	r3, [r3, #1]
100088fa:	2b00      	cmp	r3, #0
100088fc:	d008      	beq.n	10008910 <spi_rx1_isr_handler+0x11c>
								module->status = STATUS_OK;
100088fe:	2300      	movs	r3, #0
10008900:	3a08      	subs	r2, #8
10008902:	54a3      	strb	r3, [r4, r2]
								flag_direction_both[1] = false;
10008904:	4a05      	ldr	r2, [pc, #20]	; (1000891c <spi_rx1_isr_handler+0x128>)
10008906:	7053      	strb	r3, [r2, #1]
								(module->callback[SPI_CALLBACK_BUFFER_TRANSCEIVED])(module);
10008908:	6923      	ldr	r3, [r4, #16]
1000890a:	0020      	movs	r0, r4
1000890c:	4798      	blx	r3
1000890e:	e002      	b.n	10008916 <spi_rx1_isr_handler+0x122>
							} else {
								flag_direction_both[1] = true;
10008910:	2201      	movs	r2, #1
10008912:	4b02      	ldr	r3, [pc, #8]	; (1000891c <spi_rx1_isr_handler+0x128>)
10008914:	705a      	strb	r2, [r3, #1]
					}
				}
			}
		}
	}
}
10008916:	bd10      	pop	{r4, pc}
10008918:	100177a8 	.word	0x100177a8
1000891c:	10015cf8 	.word	0x10015cf8

10008920 <spi_tx1_isr_handler>:

void spi_tx1_isr_handler(void)
{
10008920:	b570      	push	{r4, r5, r6, lr}
	struct spi_module *module = _spi_instances[1];
10008922:	4b3d      	ldr	r3, [pc, #244]	; (10008a18 <spi_tx1_isr_handler+0xf8>)
10008924:	6858      	ldr	r0, [r3, #4]

	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
10008926:	6802      	ldr	r2, [r0, #0]
10008928:	7a13      	ldrb	r3, [r2, #8]
	flags &= module->hw->TX_INTERRUPT_MASK.reg;
1000892a:	212c      	movs	r1, #44	; 0x2c
1000892c:	5c51      	ldrb	r1, [r2, r1]
1000892e:	400b      	ands	r3, r1

	if (flags & SPI_TRANSMIT_STATUS_TX_FIFO_NOT_FULL_1) {
10008930:	07d9      	lsls	r1, r3, #31
10008932:	d536      	bpl.n	100089a2 <spi_tx1_isr_handler+0x82>
#  if CONF_SPI_MASTER_ENABLE == true
		if ((module->mode == SPI_MODE_MASTER) &&
10008934:	7941      	ldrb	r1, [r0, #5]
10008936:	2901      	cmp	r1, #1
10008938:	d133      	bne.n	100089a2 <spi_tx1_isr_handler+0x82>
		(module->dir == SPI_DIRECTION_READ)) {
1000893a:	79c1      	ldrb	r1, [r0, #7]
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
	flags &= module->hw->TX_INTERRUPT_MASK.reg;

	if (flags & SPI_TRANSMIT_STATUS_TX_FIFO_NOT_FULL_1) {
#  if CONF_SPI_MASTER_ENABLE == true
		if ((module->mode == SPI_MODE_MASTER) &&
1000893c:	2900      	cmp	r1, #0
1000893e:	d113      	bne.n	10008968 <spi_tx1_isr_handler+0x48>
{
	/* Pointer to the hardware module instance */
	Spi *const spi_hw = module->hw;

	/* Write dummy byte */
	spi_hw->TRANSMIT_DATA.reg = dummy_write;
10008940:	4936      	ldr	r1, [pc, #216]	; (10008a1c <spi_tx1_isr_handler+0xfc>)
10008942:	7809      	ldrb	r1, [r1, #0]
10008944:	7011      	strb	r1, [r2, #0]

	/* Decrement remaining dummy buffer length */
	module->remaining_dummy_buffer_length--;
10008946:	8c42      	ldrh	r2, [r0, #34]	; 0x22
10008948:	3a01      	subs	r2, #1
1000894a:	b292      	uxth	r2, r2
1000894c:	8442      	strh	r2, [r0, #34]	; 0x22
#  if CONF_SPI_MASTER_ENABLE == true
		if ((module->mode == SPI_MODE_MASTER) &&
		(module->dir == SPI_DIRECTION_READ)) {
			/* Send dummy byte when reading in master mode */
			_spi_write_dummy(module);
			if (module->remaining_dummy_buffer_length == 0) {
1000894e:	8c42      	ldrh	r2, [r0, #34]	; 0x22
10008950:	b292      	uxth	r2, r2
10008952:	2a00      	cmp	r2, #0
10008954:	d105      	bne.n	10008962 <spi_tx1_isr_handler+0x42>
				/* Disable the Data Register Empty Interrupt */
				module->hw->TX_INTERRUPT_MASK.reg &=
10008956:	6804      	ldr	r4, [r0, #0]
10008958:	212c      	movs	r1, #44	; 0x2c
1000895a:	5c62      	ldrb	r2, [r4, r1]
1000895c:	2501      	movs	r5, #1
1000895e:	43aa      	bics	r2, r5
10008960:	5462      	strb	r2, [r4, r1]
				~SPI_TX_INTERRUPT_MASK_TX_FIFO_NOT_FULL_MASK;
			}
		}
#  endif
		if (0
10008962:	7942      	ldrb	r2, [r0, #5]
10008964:	2a01      	cmp	r2, #1
10008966:	d11c      	bne.n	100089a2 <spi_tx1_isr_handler+0x82>
#  if CONF_SPI_MASTER_ENABLE == true
		|| ((module->mode == SPI_MODE_MASTER) &&
		(module->dir != SPI_DIRECTION_READ))
10008968:	79c2      	ldrb	r2, [r0, #7]
			}
		}
#  endif
		if (0
#  if CONF_SPI_MASTER_ENABLE == true
		|| ((module->mode == SPI_MODE_MASTER) &&
1000896a:	2a00      	cmp	r2, #0
1000896c:	d019      	beq.n	100089a2 <spi_tx1_isr_handler+0x82>
{
	/* Pointer to the hardware module instance */
	Spi *const spi_hw = module->hw;

	/* Write value will be at least 8-bits long */
	uint16_t data_to_send = *(module->tx_buffer_ptr);
1000896e:	69c2      	ldr	r2, [r0, #28]
10008970:	7811      	ldrb	r1, [r2, #0]
10008972:	b2c9      	uxtb	r1, r1
	/* Increment 8-bit pointer */
	(module->tx_buffer_ptr)++;
10008974:	3201      	adds	r2, #1
10008976:	61c2      	str	r2, [r0, #28]

	/* Write the data to send*/
	spi_hw->TRANSMIT_DATA.reg = data_to_send & SPI_TRANSMIT_DATA_MASK;
10008978:	6802      	ldr	r2, [r0, #0]
1000897a:	7011      	strb	r1, [r2, #0]

	/* Decrement remaining buffer length */
	(module->remaining_tx_buffer_length)--;
1000897c:	8c82      	ldrh	r2, [r0, #36]	; 0x24
1000897e:	3a01      	subs	r2, #1
10008980:	b292      	uxth	r2, r2
10008982:	8482      	strh	r2, [r0, #36]	; 0x24
		|| ((module->mode == SPI_MODE_SLAVE) &&
		(module->dir != SPI_DIRECTION_READ))
#  endif
		) {
			_spi_write(module);
			if (module->remaining_tx_buffer_length == 0) {
10008984:	8c82      	ldrh	r2, [r0, #36]	; 0x24
10008986:	b292      	uxth	r2, r2
10008988:	2a00      	cmp	r2, #0
1000898a:	d10a      	bne.n	100089a2 <spi_tx1_isr_handler+0x82>
				module->hw->TX_INTERRUPT_MASK.reg &=
1000898c:	6804      	ldr	r4, [r0, #0]
1000898e:	322c      	adds	r2, #44	; 0x2c
10008990:	5ca1      	ldrb	r1, [r4, r2]
10008992:	2501      	movs	r5, #1
10008994:	43a9      	bics	r1, r5
10008996:	54a1      	strb	r1, [r4, r2]
						~SPI_TX_INTERRUPT_MASK_TX_FIFO_NOT_FULL_MASK;
				module->hw->TX_INTERRUPT_MASK.reg |=
10008998:	6804      	ldr	r4, [r0, #0]
1000899a:	5ca5      	ldrb	r5, [r4, r2]
1000899c:	2110      	movs	r1, #16
1000899e:	4329      	orrs	r1, r5
100089a0:	54a1      	strb	r1, [r4, r2]
				SPI_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
			}
		}
	}
	if (flags & SPI_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
100089a2:	06db      	lsls	r3, r3, #27
100089a4:	d536      	bpl.n	10008a14 <spi_tx1_isr_handler+0xf4>
		if (module->dir == SPI_DIRECTION_WRITE) {
100089a6:	79c3      	ldrb	r3, [r0, #7]
100089a8:	2b01      	cmp	r3, #1
100089aa:	d113      	bne.n	100089d4 <spi_tx1_isr_handler+0xb4>
			if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_TRANSMITTED)) &&
100089ac:	3326      	adds	r3, #38	; 0x26
100089ae:	5cc3      	ldrb	r3, [r0, r3]
100089b0:	07db      	lsls	r3, r3, #31
100089b2:	d52f      	bpl.n	10008a14 <spi_tx1_isr_handler+0xf4>
			(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_TRANSMITTED))) {
100089b4:	2326      	movs	r3, #38	; 0x26
			}
		}
	}
	if (flags & SPI_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
		if (module->dir == SPI_DIRECTION_WRITE) {
			if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_TRANSMITTED)) &&
100089b6:	5cc3      	ldrb	r3, [r0, r3]
100089b8:	07db      	lsls	r3, r3, #31
100089ba:	d52b      	bpl.n	10008a14 <spi_tx1_isr_handler+0xf4>
			(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_TRANSMITTED))) {
				module->status = STATUS_OK;
100089bc:	2200      	movs	r2, #0
100089be:	2328      	movs	r3, #40	; 0x28
100089c0:	54c2      	strb	r2, [r0, r3]
				/* Disable interrupt */
				module->hw->TX_INTERRUPT_MASK.reg &=
100089c2:	6801      	ldr	r1, [r0, #0]
100089c4:	322c      	adds	r2, #44	; 0x2c
100089c6:	5c8b      	ldrb	r3, [r1, r2]
100089c8:	2410      	movs	r4, #16
100089ca:	43a3      	bics	r3, r4
100089cc:	548b      	strb	r3, [r1, r2]
						~SPI_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
				(module->callback[SPI_CALLBACK_BUFFER_TRANSMITTED])(module);
100089ce:	6883      	ldr	r3, [r0, #8]
100089d0:	4798      	blx	r3
100089d2:	e01f      	b.n	10008a14 <spi_tx1_isr_handler+0xf4>
			}
		} else if (module->dir == SPI_DIRECTION_BOTH) {
100089d4:	79c3      	ldrb	r3, [r0, #7]
100089d6:	2b02      	cmp	r3, #2
100089d8:	d11c      	bne.n	10008a14 <spi_tx1_isr_handler+0xf4>
			if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED)) &&
100089da:	3325      	adds	r3, #37	; 0x25
100089dc:	5cc3      	ldrb	r3, [r0, r3]
100089de:	075b      	lsls	r3, r3, #29
100089e0:	d518      	bpl.n	10008a14 <spi_tx1_isr_handler+0xf4>
				(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED))) {
100089e2:	2326      	movs	r3, #38	; 0x26
				module->hw->TX_INTERRUPT_MASK.reg &=
						~SPI_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
				(module->callback[SPI_CALLBACK_BUFFER_TRANSMITTED])(module);
			}
		} else if (module->dir == SPI_DIRECTION_BOTH) {
			if ((module->enabled_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED)) &&
100089e4:	5cc3      	ldrb	r3, [r0, r3]
100089e6:	075b      	lsls	r3, r3, #29
100089e8:	d514      	bpl.n	10008a14 <spi_tx1_isr_handler+0xf4>
				(module->registered_callback & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED))) {
				/* Disable interrupt */
				module->hw->TX_INTERRUPT_MASK.reg &=
100089ea:	6801      	ldr	r1, [r0, #0]
100089ec:	222c      	movs	r2, #44	; 0x2c
100089ee:	5c8b      	ldrb	r3, [r1, r2]
100089f0:	2410      	movs	r4, #16
100089f2:	43a3      	bics	r3, r4
100089f4:	548b      	strb	r3, [r1, r2]
						~SPI_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
				if (flag_direction_both[1]) {
100089f6:	4b0a      	ldr	r3, [pc, #40]	; (10008a20 <spi_tx1_isr_handler+0x100>)
100089f8:	785b      	ldrb	r3, [r3, #1]
100089fa:	2b00      	cmp	r3, #0
100089fc:	d007      	beq.n	10008a0e <spi_tx1_isr_handler+0xee>
					module->status = STATUS_OK;
100089fe:	2300      	movs	r3, #0
10008a00:	3a04      	subs	r2, #4
10008a02:	5483      	strb	r3, [r0, r2]
					flag_direction_both[1] = false;
10008a04:	4a06      	ldr	r2, [pc, #24]	; (10008a20 <spi_tx1_isr_handler+0x100>)
10008a06:	7053      	strb	r3, [r2, #1]
					(module->callback[SPI_CALLBACK_BUFFER_TRANSCEIVED])(module);
10008a08:	6903      	ldr	r3, [r0, #16]
10008a0a:	4798      	blx	r3
10008a0c:	e002      	b.n	10008a14 <spi_tx1_isr_handler+0xf4>
				} else {
					flag_direction_both[1] = true;
10008a0e:	2201      	movs	r2, #1
10008a10:	4b03      	ldr	r3, [pc, #12]	; (10008a20 <spi_tx1_isr_handler+0x100>)
10008a12:	705a      	strb	r2, [r3, #1]
				}
			}
		}
	}
}
10008a14:	bd70      	pop	{r4, r5, r6, pc}
10008a16:	46c0      	nop			; (mov r8, r8)
10008a18:	100177a8 	.word	0x100177a8
10008a1c:	10015cfa 	.word	0x10015cfa
10008a20:	10015cf8 	.word	0x10015cf8

10008a24 <draw_pixel>:
10008a24:	b530      	push	{r4, r5, lr}
10008a26:	004c      	lsls	r4, r1, #1
10008a28:	190c      	adds	r4, r1, r4
10008a2a:	2507      	movs	r5, #7
10008a2c:	402c      	ands	r4, r5
10008a2e:	0055      	lsls	r5, r2, #1
10008a30:	18aa      	adds	r2, r5, r2
10008a32:	0112      	lsls	r2, r2, #4
10008a34:	1880      	adds	r0, r0, r2
10008a36:	004a      	lsls	r2, r1, #1
10008a38:	1851      	adds	r1, r2, r1
10008a3a:	10c9      	asrs	r1, r1, #3
10008a3c:	25e0      	movs	r5, #224	; 0xe0
10008a3e:	4125      	asrs	r5, r4
10008a40:	5c42      	ldrb	r2, [r0, r1]
10008a42:	43aa      	bics	r2, r5
10008a44:	001d      	movs	r5, r3
10008a46:	4125      	asrs	r5, r4
10008a48:	432a      	orrs	r2, r5
10008a4a:	5442      	strb	r2, [r0, r1]
10008a4c:	2c05      	cmp	r4, #5
10008a4e:	d90a      	bls.n	10008a66 <draw_pixel+0x42>
10008a50:	3101      	adds	r1, #1
10008a52:	1f65      	subs	r5, r4, #5
10008a54:	22ff      	movs	r2, #255	; 0xff
10008a56:	412a      	asrs	r2, r5
10008a58:	5c45      	ldrb	r5, [r0, r1]
10008a5a:	402a      	ands	r2, r5
10008a5c:	2508      	movs	r5, #8
10008a5e:	1b2c      	subs	r4, r5, r4
10008a60:	40a3      	lsls	r3, r4
10008a62:	4313      	orrs	r3, r2
10008a64:	5443      	strb	r3, [r0, r1]
10008a66:	bd30      	pop	{r4, r5, pc}

10008a68 <delay_us>:
10008a68:	b510      	push	{r4, lr}
10008a6a:	231a      	movs	r3, #26
10008a6c:	4343      	muls	r3, r0
10008a6e:	001a      	movs	r2, r3
10008a70:	2100      	movs	r1, #0
10008a72:	2000      	movs	r0, #0
10008a74:	4b03      	ldr	r3, [pc, #12]	; (10008a84 <delay_us+0x1c>)
10008a76:	4798      	blx	r3
10008a78:	4c03      	ldr	r4, [pc, #12]	; (10008a88 <delay_us+0x20>)
10008a7a:	2000      	movs	r0, #0
10008a7c:	47a0      	blx	r4
10008a7e:	2800      	cmp	r0, #0
10008a80:	d1fb      	bne.n	10008a7a <delay_us+0x12>
10008a82:	bd10      	pop	{r4, pc}
10008a84:	100098d9 	.word	0x100098d9
10008a88:	100098c5 	.word	0x100098c5

10008a8c <draw_string>:
10008a8c:	b5f0      	push	{r4, r5, r6, r7, lr}
10008a8e:	465f      	mov	r7, fp
10008a90:	4656      	mov	r6, sl
10008a92:	464d      	mov	r5, r9
10008a94:	4644      	mov	r4, r8
10008a96:	b4f0      	push	{r4, r5, r6, r7}
10008a98:	b093      	sub	sp, #76	; 0x4c
10008a9a:	900e      	str	r0, [sp, #56]	; 0x38
10008a9c:	9111      	str	r1, [sp, #68]	; 0x44
10008a9e:	9202      	str	r2, [sp, #8]
10008aa0:	9306      	str	r3, [sp, #24]
10008aa2:	ab1c      	add	r3, sp, #112	; 0x70
10008aa4:	781b      	ldrb	r3, [r3, #0]
10008aa6:	001a      	movs	r2, r3
10008aa8:	9308      	str	r3, [sp, #32]
10008aaa:	ab1d      	add	r3, sp, #116	; 0x74
10008aac:	7818      	ldrb	r0, [r3, #0]
10008aae:	9004      	str	r0, [sp, #16]
10008ab0:	ab1e      	add	r3, sp, #120	; 0x78
10008ab2:	7818      	ldrb	r0, [r3, #0]
10008ab4:	9003      	str	r0, [sp, #12]
10008ab6:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
10008ab8:	1e0b      	subs	r3, r1, #0
10008aba:	d101      	bne.n	10008ac0 <draw_string+0x34>
10008abc:	f000 fd1e 	bl	100094fc <draw_string+0xa70>
10008ac0:	3b01      	subs	r3, #1
10008ac2:	b2db      	uxtb	r3, r3
10008ac4:	3301      	adds	r3, #1
10008ac6:	9310      	str	r3, [sp, #64]	; 0x40
10008ac8:	2300      	movs	r3, #0
10008aca:	930d      	str	r3, [sp, #52]	; 0x34
10008acc:	0fd3      	lsrs	r3, r2, #31
10008ace:	2700      	movs	r7, #0
10008ad0:	217f      	movs	r1, #127	; 0x7f
10008ad2:	4291      	cmp	r1, r2
10008ad4:	417b      	adcs	r3, r7
10008ad6:	b2db      	uxtb	r3, r3
10008ad8:	930f      	str	r3, [sp, #60]	; 0x3c
10008ada:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10008adc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
10008ade:	5c9b      	ldrb	r3, [r3, r2]
10008ae0:	9307      	str	r3, [sp, #28]
10008ae2:	9a08      	ldr	r2, [sp, #32]
10008ae4:	9209      	str	r2, [sp, #36]	; 0x24
10008ae6:	7823      	ldrb	r3, [r4, #0]
10008ae8:	2b00      	cmp	r3, #0
10008aea:	d101      	bne.n	10008af0 <draw_string+0x64>
10008aec:	f000 fcb4 	bl	10009458 <draw_string+0x9cc>
10008af0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10008af2:	2b00      	cmp	r3, #0
10008af4:	d101      	bne.n	10008afa <draw_string+0x6e>
10008af6:	f000 fcaf 	bl	10009458 <draw_string+0x9cc>
10008afa:	9201      	str	r2, [sp, #4]
10008afc:	9a06      	ldr	r2, [sp, #24]
10008afe:	4692      	mov	sl, r2
10008b00:	0fd3      	lsrs	r3, r2, #31
10008b02:	930b      	str	r3, [sp, #44]	; 0x2c
10008b04:	227f      	movs	r2, #127	; 0x7f
10008b06:	4651      	mov	r1, sl
10008b08:	428a      	cmp	r2, r1
10008b0a:	417b      	adcs	r3, r7
10008b0c:	b2db      	uxtb	r3, r3
10008b0e:	930a      	str	r3, [sp, #40]	; 0x28
10008b10:	4656      	mov	r6, sl
10008b12:	46ba      	mov	sl, r7
10008b14:	9a07      	ldr	r2, [sp, #28]
10008b16:	0015      	movs	r5, r2
10008b18:	7863      	ldrb	r3, [r4, #1]
10008b1a:	1ad3      	subs	r3, r2, r3
10008b1c:	009b      	lsls	r3, r3, #2
10008b1e:	6862      	ldr	r2, [r4, #4]
10008b20:	4694      	mov	ip, r2
10008b22:	4463      	add	r3, ip
10008b24:	781a      	ldrb	r2, [r3, #0]
10008b26:	2a08      	cmp	r2, #8
10008b28:	d843      	bhi.n	10008bb2 <draw_string+0x126>
10008b2a:	2a00      	cmp	r2, #0
10008b2c:	d101      	bne.n	10008b32 <draw_string+0xa6>
10008b2e:	f000 fc7a 	bl	10009426 <draw_string+0x99a>
10008b32:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10008b34:	2a00      	cmp	r2, #0
10008b36:	d101      	bne.n	10008b3c <draw_string+0xb0>
10008b38:	f000 fc75 	bl	10009426 <draw_string+0x99a>
10008b3c:	46b0      	mov	r8, r6
10008b3e:	0039      	movs	r1, r7
10008b40:	4ad0      	ldr	r2, [pc, #832]	; (10008e84 <draw_string+0x3f8>)
10008b42:	4693      	mov	fp, r2
10008b44:	2201      	movs	r2, #1
10008b46:	9806      	ldr	r0, [sp, #24]
10008b48:	1a12      	subs	r2, r2, r0
10008b4a:	4691      	mov	r9, r2
10008b4c:	9505      	str	r5, [sp, #20]
10008b4e:	0035      	movs	r5, r6
10008b50:	885a      	ldrh	r2, [r3, #2]
10008b52:	68a3      	ldr	r3, [r4, #8]
10008b54:	4453      	add	r3, sl
10008b56:	5c9a      	ldrb	r2, [r3, r2]
10008b58:	2380      	movs	r3, #128	; 0x80
10008b5a:	410b      	asrs	r3, r1
10008b5c:	4213      	tst	r3, r2
10008b5e:	d006      	beq.n	10008b6e <draw_string+0xe2>
10008b60:	9b04      	ldr	r3, [sp, #16]
10008b62:	9a01      	ldr	r2, [sp, #4]
10008b64:	0029      	movs	r1, r5
10008b66:	9802      	ldr	r0, [sp, #8]
10008b68:	4ec6      	ldr	r6, [pc, #792]	; (10008e84 <draw_string+0x3f8>)
10008b6a:	47b0      	blx	r6
10008b6c:	e004      	b.n	10008b78 <draw_string+0xec>
10008b6e:	9b03      	ldr	r3, [sp, #12]
10008b70:	9a01      	ldr	r2, [sp, #4]
10008b72:	0029      	movs	r1, r5
10008b74:	9802      	ldr	r0, [sp, #8]
10008b76:	47d8      	blx	fp
10008b78:	464b      	mov	r3, r9
10008b7a:	18ea      	adds	r2, r5, r3
10008b7c:	b2d2      	uxtb	r2, r2
10008b7e:	7863      	ldrb	r3, [r4, #1]
10008b80:	9905      	ldr	r1, [sp, #20]
10008b82:	1acb      	subs	r3, r1, r3
10008b84:	009b      	lsls	r3, r3, #2
10008b86:	6861      	ldr	r1, [r4, #4]
10008b88:	468c      	mov	ip, r1
10008b8a:	4463      	add	r3, ip
10008b8c:	0011      	movs	r1, r2
10008b8e:	3501      	adds	r5, #1
10008b90:	b2ed      	uxtb	r5, r5
10008b92:	7818      	ldrb	r0, [r3, #0]
10008b94:	4282      	cmp	r2, r0
10008b96:	d301      	bcc.n	10008b9c <draw_string+0x110>
10008b98:	f000 fc3c 	bl	10009414 <draw_string+0x988>
10008b9c:	4442      	add	r2, r8
10008b9e:	0fd0      	lsrs	r0, r2, #31
10008ba0:	267f      	movs	r6, #127	; 0x7f
10008ba2:	4296      	cmp	r6, r2
10008ba4:	4178      	adcs	r0, r7
10008ba6:	b2c2      	uxtb	r2, r0
10008ba8:	2a00      	cmp	r2, #0
10008baa:	d1d1      	bne.n	10008b50 <draw_string+0xc4>
10008bac:	4646      	mov	r6, r8
10008bae:	f000 fc3a 	bl	10009426 <draw_string+0x99a>
10008bb2:	2a10      	cmp	r2, #16
10008bb4:	d900      	bls.n	10008bb8 <draw_string+0x12c>
10008bb6:	e0a2      	b.n	10008cfe <draw_string+0x272>
10008bb8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10008bba:	217f      	movs	r1, #127	; 0x7f
10008bbc:	9a06      	ldr	r2, [sp, #24]
10008bbe:	4291      	cmp	r1, r2
10008bc0:	417b      	adcs	r3, r7
10008bc2:	b2db      	uxtb	r3, r3
10008bc4:	930c      	str	r3, [sp, #48]	; 0x30
10008bc6:	2a7f      	cmp	r2, #127	; 0x7f
10008bc8:	dd01      	ble.n	10008bce <draw_string+0x142>
10008bca:	f000 fc2c 	bl	10009426 <draw_string+0x99a>
10008bce:	4653      	mov	r3, sl
10008bd0:	005b      	lsls	r3, r3, #1
10008bd2:	469b      	mov	fp, r3
10008bd4:	46b1      	mov	r9, r6
10008bd6:	003a      	movs	r2, r7
10008bd8:	0033      	movs	r3, r6
10008bda:	0026      	movs	r6, r4
10008bdc:	003c      	movs	r4, r7
10008bde:	46a8      	mov	r8, r5
10008be0:	9305      	str	r3, [sp, #20]
10008be2:	7873      	ldrb	r3, [r6, #1]
10008be4:	4641      	mov	r1, r8
10008be6:	1acb      	subs	r3, r1, r3
10008be8:	009b      	lsls	r3, r3, #2
10008bea:	6871      	ldr	r1, [r6, #4]
10008bec:	468c      	mov	ip, r1
10008bee:	4463      	add	r3, ip
10008bf0:	8859      	ldrh	r1, [r3, #2]
10008bf2:	68b3      	ldr	r3, [r6, #8]
10008bf4:	445b      	add	r3, fp
10008bf6:	5c5b      	ldrb	r3, [r3, r1]
10008bf8:	2180      	movs	r1, #128	; 0x80
10008bfa:	4111      	asrs	r1, r2
10008bfc:	4219      	tst	r1, r3
10008bfe:	d006      	beq.n	10008c0e <draw_string+0x182>
10008c00:	9b04      	ldr	r3, [sp, #16]
10008c02:	9a01      	ldr	r2, [sp, #4]
10008c04:	9905      	ldr	r1, [sp, #20]
10008c06:	9802      	ldr	r0, [sp, #8]
10008c08:	4d9e      	ldr	r5, [pc, #632]	; (10008e84 <draw_string+0x3f8>)
10008c0a:	47a8      	blx	r5
10008c0c:	e005      	b.n	10008c1a <draw_string+0x18e>
10008c0e:	9b03      	ldr	r3, [sp, #12]
10008c10:	9a01      	ldr	r2, [sp, #4]
10008c12:	9905      	ldr	r1, [sp, #20]
10008c14:	9802      	ldr	r0, [sp, #8]
10008c16:	4d9b      	ldr	r5, [pc, #620]	; (10008e84 <draw_string+0x3f8>)
10008c18:	47a8      	blx	r5
10008c1a:	3401      	adds	r4, #1
10008c1c:	b2e4      	uxtb	r4, r4
10008c1e:	0022      	movs	r2, r4
10008c20:	9d05      	ldr	r5, [sp, #20]
10008c22:	3501      	adds	r5, #1
10008c24:	b2eb      	uxtb	r3, r5
10008c26:	9305      	str	r3, [sp, #20]
10008c28:	464b      	mov	r3, r9
10008c2a:	18e1      	adds	r1, r4, r3
10008c2c:	0fcb      	lsrs	r3, r1, #31
10008c2e:	207f      	movs	r0, #127	; 0x7f
10008c30:	4288      	cmp	r0, r1
10008c32:	417b      	adcs	r3, r7
10008c34:	b2db      	uxtb	r3, r3
10008c36:	2b00      	cmp	r3, #0
10008c38:	d006      	beq.n	10008c48 <draw_string+0x1bc>
10008c3a:	2307      	movs	r3, #7
10008c3c:	0039      	movs	r1, r7
10008c3e:	42a3      	cmp	r3, r4
10008c40:	4179      	adcs	r1, r7
10008c42:	b2cb      	uxtb	r3, r1
10008c44:	2b00      	cmp	r3, #0
10008c46:	d1cc      	bne.n	10008be2 <draw_string+0x156>
10008c48:	4645      	mov	r5, r8
10008c4a:	0034      	movs	r4, r6
10008c4c:	464e      	mov	r6, r9
10008c4e:	7863      	ldrb	r3, [r4, #1]
10008c50:	9a07      	ldr	r2, [sp, #28]
10008c52:	1ad3      	subs	r3, r2, r3
10008c54:	009b      	lsls	r3, r3, #2
10008c56:	6862      	ldr	r2, [r4, #4]
10008c58:	4694      	mov	ip, r2
10008c5a:	4463      	add	r3, ip
10008c5c:	781a      	ldrb	r2, [r3, #0]
10008c5e:	3a08      	subs	r2, #8
10008c60:	2a00      	cmp	r2, #0
10008c62:	dc00      	bgt.n	10008c66 <draw_string+0x1da>
10008c64:	e3df      	b.n	10009426 <draw_string+0x99a>
10008c66:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10008c68:	2a00      	cmp	r2, #0
10008c6a:	d100      	bne.n	10008c6e <draw_string+0x1e2>
10008c6c:	e3db      	b.n	10009426 <draw_string+0x99a>
10008c6e:	4652      	mov	r2, sl
10008c70:	0052      	lsls	r2, r2, #1
10008c72:	4692      	mov	sl, r2
10008c74:	9806      	ldr	r0, [sp, #24]
10008c76:	0002      	movs	r2, r0
10008c78:	3208      	adds	r2, #8
10008c7a:	b2d2      	uxtb	r2, r2
10008c7c:	4690      	mov	r8, r2
10008c7e:	0039      	movs	r1, r7
10008c80:	4a80      	ldr	r2, [pc, #512]	; (10008e84 <draw_string+0x3f8>)
10008c82:	4693      	mov	fp, r2
10008c84:	2207      	movs	r2, #7
10008c86:	4252      	negs	r2, r2
10008c88:	1a12      	subs	r2, r2, r0
10008c8a:	4691      	mov	r9, r2
10008c8c:	9505      	str	r5, [sp, #20]
10008c8e:	4645      	mov	r5, r8
10008c90:	46b0      	mov	r8, r6
10008c92:	885b      	ldrh	r3, [r3, #2]
10008c94:	68a2      	ldr	r2, [r4, #8]
10008c96:	4452      	add	r2, sl
10008c98:	18d3      	adds	r3, r2, r3
10008c9a:	785a      	ldrb	r2, [r3, #1]
10008c9c:	2380      	movs	r3, #128	; 0x80
10008c9e:	410b      	asrs	r3, r1
10008ca0:	4213      	tst	r3, r2
10008ca2:	d006      	beq.n	10008cb2 <draw_string+0x226>
10008ca4:	9b04      	ldr	r3, [sp, #16]
10008ca6:	9a01      	ldr	r2, [sp, #4]
10008ca8:	0029      	movs	r1, r5
10008caa:	9802      	ldr	r0, [sp, #8]
10008cac:	4e75      	ldr	r6, [pc, #468]	; (10008e84 <draw_string+0x3f8>)
10008cae:	47b0      	blx	r6
10008cb0:	e004      	b.n	10008cbc <draw_string+0x230>
10008cb2:	9b03      	ldr	r3, [sp, #12]
10008cb4:	9a01      	ldr	r2, [sp, #4]
10008cb6:	0029      	movs	r1, r5
10008cb8:	9802      	ldr	r0, [sp, #8]
10008cba:	47d8      	blx	fp
10008cbc:	464b      	mov	r3, r9
10008cbe:	18e9      	adds	r1, r5, r3
10008cc0:	b2c9      	uxtb	r1, r1
10008cc2:	7863      	ldrb	r3, [r4, #1]
10008cc4:	9a05      	ldr	r2, [sp, #20]
10008cc6:	1ad3      	subs	r3, r2, r3
10008cc8:	009b      	lsls	r3, r3, #2
10008cca:	6862      	ldr	r2, [r4, #4]
10008ccc:	4694      	mov	ip, r2
10008cce:	4463      	add	r3, ip
10008cd0:	3501      	adds	r5, #1
10008cd2:	b2ed      	uxtb	r5, r5
10008cd4:	7818      	ldrb	r0, [r3, #0]
10008cd6:	3808      	subs	r0, #8
10008cd8:	2201      	movs	r2, #1
10008cda:	4281      	cmp	r1, r0
10008cdc:	db00      	blt.n	10008ce0 <draw_string+0x254>
10008cde:	2200      	movs	r2, #0
10008ce0:	b2d2      	uxtb	r2, r2
10008ce2:	2a00      	cmp	r2, #0
10008ce4:	d100      	bne.n	10008ce8 <draw_string+0x25c>
10008ce6:	e397      	b.n	10009418 <draw_string+0x98c>
10008ce8:	4642      	mov	r2, r8
10008cea:	1888      	adds	r0, r1, r2
10008cec:	0fc2      	lsrs	r2, r0, #31
10008cee:	267f      	movs	r6, #127	; 0x7f
10008cf0:	4286      	cmp	r6, r0
10008cf2:	417a      	adcs	r2, r7
10008cf4:	b2d2      	uxtb	r2, r2
10008cf6:	2a00      	cmp	r2, #0
10008cf8:	d1cb      	bne.n	10008c92 <draw_string+0x206>
10008cfa:	4646      	mov	r6, r8
10008cfc:	e393      	b.n	10009426 <draw_string+0x99a>
10008cfe:	2a18      	cmp	r2, #24
10008d00:	d900      	bls.n	10008d04 <draw_string+0x278>
10008d02:	e0e7      	b.n	10008ed4 <draw_string+0x448>
10008d04:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10008d06:	217f      	movs	r1, #127	; 0x7f
10008d08:	9a06      	ldr	r2, [sp, #24]
10008d0a:	4291      	cmp	r1, r2
10008d0c:	417b      	adcs	r3, r7
10008d0e:	b2db      	uxtb	r3, r3
10008d10:	930c      	str	r3, [sp, #48]	; 0x30
10008d12:	2a7f      	cmp	r2, #127	; 0x7f
10008d14:	dd00      	ble.n	10008d18 <draw_string+0x28c>
10008d16:	e386      	b.n	10009426 <draw_string+0x99a>
10008d18:	4653      	mov	r3, sl
10008d1a:	005b      	lsls	r3, r3, #1
10008d1c:	4453      	add	r3, sl
10008d1e:	469b      	mov	fp, r3
10008d20:	46b1      	mov	r9, r6
10008d22:	003a      	movs	r2, r7
10008d24:	0033      	movs	r3, r6
10008d26:	0026      	movs	r6, r4
10008d28:	003c      	movs	r4, r7
10008d2a:	46a8      	mov	r8, r5
10008d2c:	9305      	str	r3, [sp, #20]
10008d2e:	7873      	ldrb	r3, [r6, #1]
10008d30:	4641      	mov	r1, r8
10008d32:	1acb      	subs	r3, r1, r3
10008d34:	009b      	lsls	r3, r3, #2
10008d36:	6871      	ldr	r1, [r6, #4]
10008d38:	468c      	mov	ip, r1
10008d3a:	4463      	add	r3, ip
10008d3c:	8859      	ldrh	r1, [r3, #2]
10008d3e:	68b3      	ldr	r3, [r6, #8]
10008d40:	445b      	add	r3, fp
10008d42:	5c5b      	ldrb	r3, [r3, r1]
10008d44:	2180      	movs	r1, #128	; 0x80
10008d46:	4111      	asrs	r1, r2
10008d48:	4219      	tst	r1, r3
10008d4a:	d006      	beq.n	10008d5a <draw_string+0x2ce>
10008d4c:	9b04      	ldr	r3, [sp, #16]
10008d4e:	9a01      	ldr	r2, [sp, #4]
10008d50:	9905      	ldr	r1, [sp, #20]
10008d52:	9802      	ldr	r0, [sp, #8]
10008d54:	4d4b      	ldr	r5, [pc, #300]	; (10008e84 <draw_string+0x3f8>)
10008d56:	47a8      	blx	r5
10008d58:	e005      	b.n	10008d66 <draw_string+0x2da>
10008d5a:	9b03      	ldr	r3, [sp, #12]
10008d5c:	9a01      	ldr	r2, [sp, #4]
10008d5e:	9905      	ldr	r1, [sp, #20]
10008d60:	9802      	ldr	r0, [sp, #8]
10008d62:	4d48      	ldr	r5, [pc, #288]	; (10008e84 <draw_string+0x3f8>)
10008d64:	47a8      	blx	r5
10008d66:	3401      	adds	r4, #1
10008d68:	b2e4      	uxtb	r4, r4
10008d6a:	0022      	movs	r2, r4
10008d6c:	9d05      	ldr	r5, [sp, #20]
10008d6e:	3501      	adds	r5, #1
10008d70:	b2eb      	uxtb	r3, r5
10008d72:	9305      	str	r3, [sp, #20]
10008d74:	464b      	mov	r3, r9
10008d76:	18e1      	adds	r1, r4, r3
10008d78:	0fcb      	lsrs	r3, r1, #31
10008d7a:	207f      	movs	r0, #127	; 0x7f
10008d7c:	4288      	cmp	r0, r1
10008d7e:	417b      	adcs	r3, r7
10008d80:	b2db      	uxtb	r3, r3
10008d82:	2b00      	cmp	r3, #0
10008d84:	d006      	beq.n	10008d94 <draw_string+0x308>
10008d86:	2307      	movs	r3, #7
10008d88:	0039      	movs	r1, r7
10008d8a:	42a3      	cmp	r3, r4
10008d8c:	4179      	adcs	r1, r7
10008d8e:	b2cb      	uxtb	r3, r1
10008d90:	2b00      	cmp	r3, #0
10008d92:	d1cc      	bne.n	10008d2e <draw_string+0x2a2>
10008d94:	4645      	mov	r5, r8
10008d96:	0034      	movs	r4, r6
10008d98:	464e      	mov	r6, r9
10008d9a:	9b06      	ldr	r3, [sp, #24]
10008d9c:	3308      	adds	r3, #8
10008d9e:	b2db      	uxtb	r3, r3
10008da0:	4699      	mov	r9, r3
10008da2:	003a      	movs	r2, r7
10008da4:	0033      	movs	r3, r6
10008da6:	0026      	movs	r6, r4
10008da8:	003c      	movs	r4, r7
10008daa:	46a8      	mov	r8, r5
10008dac:	4649      	mov	r1, r9
10008dae:	9105      	str	r1, [sp, #20]
10008db0:	4699      	mov	r9, r3
10008db2:	7873      	ldrb	r3, [r6, #1]
10008db4:	4641      	mov	r1, r8
10008db6:	1acb      	subs	r3, r1, r3
10008db8:	009b      	lsls	r3, r3, #2
10008dba:	6871      	ldr	r1, [r6, #4]
10008dbc:	468c      	mov	ip, r1
10008dbe:	4463      	add	r3, ip
10008dc0:	885b      	ldrh	r3, [r3, #2]
10008dc2:	68b1      	ldr	r1, [r6, #8]
10008dc4:	4459      	add	r1, fp
10008dc6:	18cb      	adds	r3, r1, r3
10008dc8:	785b      	ldrb	r3, [r3, #1]
10008dca:	2180      	movs	r1, #128	; 0x80
10008dcc:	4111      	asrs	r1, r2
10008dce:	4219      	tst	r1, r3
10008dd0:	d006      	beq.n	10008de0 <draw_string+0x354>
10008dd2:	9b04      	ldr	r3, [sp, #16]
10008dd4:	9a01      	ldr	r2, [sp, #4]
10008dd6:	9905      	ldr	r1, [sp, #20]
10008dd8:	9802      	ldr	r0, [sp, #8]
10008dda:	4d2a      	ldr	r5, [pc, #168]	; (10008e84 <draw_string+0x3f8>)
10008ddc:	47a8      	blx	r5
10008dde:	e005      	b.n	10008dec <draw_string+0x360>
10008de0:	9b03      	ldr	r3, [sp, #12]
10008de2:	9a01      	ldr	r2, [sp, #4]
10008de4:	9905      	ldr	r1, [sp, #20]
10008de6:	9802      	ldr	r0, [sp, #8]
10008de8:	4d26      	ldr	r5, [pc, #152]	; (10008e84 <draw_string+0x3f8>)
10008dea:	47a8      	blx	r5
10008dec:	3401      	adds	r4, #1
10008dee:	b2e4      	uxtb	r4, r4
10008df0:	0022      	movs	r2, r4
10008df2:	9d05      	ldr	r5, [sp, #20]
10008df4:	3501      	adds	r5, #1
10008df6:	b2eb      	uxtb	r3, r5
10008df8:	9305      	str	r3, [sp, #20]
10008dfa:	464b      	mov	r3, r9
10008dfc:	18e1      	adds	r1, r4, r3
10008dfe:	0fcb      	lsrs	r3, r1, #31
10008e00:	207f      	movs	r0, #127	; 0x7f
10008e02:	4288      	cmp	r0, r1
10008e04:	417b      	adcs	r3, r7
10008e06:	b2db      	uxtb	r3, r3
10008e08:	2b00      	cmp	r3, #0
10008e0a:	d006      	beq.n	10008e1a <draw_string+0x38e>
10008e0c:	230f      	movs	r3, #15
10008e0e:	0039      	movs	r1, r7
10008e10:	42a3      	cmp	r3, r4
10008e12:	4179      	adcs	r1, r7
10008e14:	b2cb      	uxtb	r3, r1
10008e16:	2b00      	cmp	r3, #0
10008e18:	d1cb      	bne.n	10008db2 <draw_string+0x326>
10008e1a:	4645      	mov	r5, r8
10008e1c:	0034      	movs	r4, r6
10008e1e:	464e      	mov	r6, r9
10008e20:	7863      	ldrb	r3, [r4, #1]
10008e22:	9a07      	ldr	r2, [sp, #28]
10008e24:	1ad3      	subs	r3, r2, r3
10008e26:	009b      	lsls	r3, r3, #2
10008e28:	6862      	ldr	r2, [r4, #4]
10008e2a:	4694      	mov	ip, r2
10008e2c:	4463      	add	r3, ip
10008e2e:	781a      	ldrb	r2, [r3, #0]
10008e30:	3a10      	subs	r2, #16
10008e32:	2a00      	cmp	r2, #0
10008e34:	dc00      	bgt.n	10008e38 <draw_string+0x3ac>
10008e36:	e2f6      	b.n	10009426 <draw_string+0x99a>
10008e38:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10008e3a:	2a00      	cmp	r2, #0
10008e3c:	d100      	bne.n	10008e40 <draw_string+0x3b4>
10008e3e:	e2f2      	b.n	10009426 <draw_string+0x99a>
10008e40:	4652      	mov	r2, sl
10008e42:	0052      	lsls	r2, r2, #1
10008e44:	4492      	add	sl, r2
10008e46:	9806      	ldr	r0, [sp, #24]
10008e48:	0002      	movs	r2, r0
10008e4a:	3210      	adds	r2, #16
10008e4c:	b2d2      	uxtb	r2, r2
10008e4e:	4690      	mov	r8, r2
10008e50:	0039      	movs	r1, r7
10008e52:	4a0c      	ldr	r2, [pc, #48]	; (10008e84 <draw_string+0x3f8>)
10008e54:	4693      	mov	fp, r2
10008e56:	220f      	movs	r2, #15
10008e58:	4252      	negs	r2, r2
10008e5a:	1a12      	subs	r2, r2, r0
10008e5c:	4691      	mov	r9, r2
10008e5e:	9505      	str	r5, [sp, #20]
10008e60:	4645      	mov	r5, r8
10008e62:	46b0      	mov	r8, r6
10008e64:	885b      	ldrh	r3, [r3, #2]
10008e66:	68a2      	ldr	r2, [r4, #8]
10008e68:	4452      	add	r2, sl
10008e6a:	18d3      	adds	r3, r2, r3
10008e6c:	789a      	ldrb	r2, [r3, #2]
10008e6e:	2380      	movs	r3, #128	; 0x80
10008e70:	410b      	asrs	r3, r1
10008e72:	4213      	tst	r3, r2
10008e74:	d008      	beq.n	10008e88 <draw_string+0x3fc>
10008e76:	9b04      	ldr	r3, [sp, #16]
10008e78:	9a01      	ldr	r2, [sp, #4]
10008e7a:	0029      	movs	r1, r5
10008e7c:	9802      	ldr	r0, [sp, #8]
10008e7e:	4e01      	ldr	r6, [pc, #4]	; (10008e84 <draw_string+0x3f8>)
10008e80:	47b0      	blx	r6
10008e82:	e006      	b.n	10008e92 <draw_string+0x406>
10008e84:	10008a25 	.word	0x10008a25
10008e88:	9b03      	ldr	r3, [sp, #12]
10008e8a:	9a01      	ldr	r2, [sp, #4]
10008e8c:	0029      	movs	r1, r5
10008e8e:	9802      	ldr	r0, [sp, #8]
10008e90:	47d8      	blx	fp
10008e92:	464b      	mov	r3, r9
10008e94:	18e9      	adds	r1, r5, r3
10008e96:	b2c9      	uxtb	r1, r1
10008e98:	7863      	ldrb	r3, [r4, #1]
10008e9a:	9a05      	ldr	r2, [sp, #20]
10008e9c:	1ad3      	subs	r3, r2, r3
10008e9e:	009b      	lsls	r3, r3, #2
10008ea0:	6862      	ldr	r2, [r4, #4]
10008ea2:	4694      	mov	ip, r2
10008ea4:	4463      	add	r3, ip
10008ea6:	3501      	adds	r5, #1
10008ea8:	b2ed      	uxtb	r5, r5
10008eaa:	7818      	ldrb	r0, [r3, #0]
10008eac:	3810      	subs	r0, #16
10008eae:	2201      	movs	r2, #1
10008eb0:	4281      	cmp	r1, r0
10008eb2:	db00      	blt.n	10008eb6 <draw_string+0x42a>
10008eb4:	2200      	movs	r2, #0
10008eb6:	b2d2      	uxtb	r2, r2
10008eb8:	2a00      	cmp	r2, #0
10008eba:	d100      	bne.n	10008ebe <draw_string+0x432>
10008ebc:	e2ae      	b.n	1000941c <draw_string+0x990>
10008ebe:	4642      	mov	r2, r8
10008ec0:	1888      	adds	r0, r1, r2
10008ec2:	0fc2      	lsrs	r2, r0, #31
10008ec4:	267f      	movs	r6, #127	; 0x7f
10008ec6:	4286      	cmp	r6, r0
10008ec8:	417a      	adcs	r2, r7
10008eca:	b2d2      	uxtb	r2, r2
10008ecc:	2a00      	cmp	r2, #0
10008ece:	d1c9      	bne.n	10008e64 <draw_string+0x3d8>
10008ed0:	4646      	mov	r6, r8
10008ed2:	e2a8      	b.n	10009426 <draw_string+0x99a>
10008ed4:	2a20      	cmp	r2, #32
10008ed6:	d900      	bls.n	10008eda <draw_string+0x44e>
10008ed8:	e12a      	b.n	10009130 <draw_string+0x6a4>
10008eda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10008edc:	217f      	movs	r1, #127	; 0x7f
10008ede:	9a06      	ldr	r2, [sp, #24]
10008ee0:	4291      	cmp	r1, r2
10008ee2:	417b      	adcs	r3, r7
10008ee4:	b2db      	uxtb	r3, r3
10008ee6:	930c      	str	r3, [sp, #48]	; 0x30
10008ee8:	2a7f      	cmp	r2, #127	; 0x7f
10008eea:	dd00      	ble.n	10008eee <draw_string+0x462>
10008eec:	e29b      	b.n	10009426 <draw_string+0x99a>
10008eee:	4653      	mov	r3, sl
10008ef0:	009b      	lsls	r3, r3, #2
10008ef2:	469b      	mov	fp, r3
10008ef4:	46b1      	mov	r9, r6
10008ef6:	003a      	movs	r2, r7
10008ef8:	0033      	movs	r3, r6
10008efa:	0026      	movs	r6, r4
10008efc:	003c      	movs	r4, r7
10008efe:	46a8      	mov	r8, r5
10008f00:	9305      	str	r3, [sp, #20]
10008f02:	7873      	ldrb	r3, [r6, #1]
10008f04:	4641      	mov	r1, r8
10008f06:	1acb      	subs	r3, r1, r3
10008f08:	009b      	lsls	r3, r3, #2
10008f0a:	6871      	ldr	r1, [r6, #4]
10008f0c:	468c      	mov	ip, r1
10008f0e:	4463      	add	r3, ip
10008f10:	8859      	ldrh	r1, [r3, #2]
10008f12:	68b3      	ldr	r3, [r6, #8]
10008f14:	445b      	add	r3, fp
10008f16:	5c5b      	ldrb	r3, [r3, r1]
10008f18:	2180      	movs	r1, #128	; 0x80
10008f1a:	4111      	asrs	r1, r2
10008f1c:	4219      	tst	r1, r3
10008f1e:	d006      	beq.n	10008f2e <draw_string+0x4a2>
10008f20:	9b04      	ldr	r3, [sp, #16]
10008f22:	9a01      	ldr	r2, [sp, #4]
10008f24:	9905      	ldr	r1, [sp, #20]
10008f26:	9802      	ldr	r0, [sp, #8]
10008f28:	4ddd      	ldr	r5, [pc, #884]	; (100092a0 <draw_string+0x814>)
10008f2a:	47a8      	blx	r5
10008f2c:	e005      	b.n	10008f3a <draw_string+0x4ae>
10008f2e:	9b03      	ldr	r3, [sp, #12]
10008f30:	9a01      	ldr	r2, [sp, #4]
10008f32:	9905      	ldr	r1, [sp, #20]
10008f34:	9802      	ldr	r0, [sp, #8]
10008f36:	4dda      	ldr	r5, [pc, #872]	; (100092a0 <draw_string+0x814>)
10008f38:	47a8      	blx	r5
10008f3a:	3401      	adds	r4, #1
10008f3c:	b2e4      	uxtb	r4, r4
10008f3e:	0022      	movs	r2, r4
10008f40:	9d05      	ldr	r5, [sp, #20]
10008f42:	3501      	adds	r5, #1
10008f44:	b2eb      	uxtb	r3, r5
10008f46:	9305      	str	r3, [sp, #20]
10008f48:	464b      	mov	r3, r9
10008f4a:	18e1      	adds	r1, r4, r3
10008f4c:	0fcb      	lsrs	r3, r1, #31
10008f4e:	207f      	movs	r0, #127	; 0x7f
10008f50:	4288      	cmp	r0, r1
10008f52:	417b      	adcs	r3, r7
10008f54:	b2db      	uxtb	r3, r3
10008f56:	2b00      	cmp	r3, #0
10008f58:	d006      	beq.n	10008f68 <draw_string+0x4dc>
10008f5a:	2307      	movs	r3, #7
10008f5c:	0039      	movs	r1, r7
10008f5e:	42a3      	cmp	r3, r4
10008f60:	4179      	adcs	r1, r7
10008f62:	b2cb      	uxtb	r3, r1
10008f64:	2b00      	cmp	r3, #0
10008f66:	d1cc      	bne.n	10008f02 <draw_string+0x476>
10008f68:	4645      	mov	r5, r8
10008f6a:	0034      	movs	r4, r6
10008f6c:	464e      	mov	r6, r9
10008f6e:	9b06      	ldr	r3, [sp, #24]
10008f70:	3308      	adds	r3, #8
10008f72:	b2db      	uxtb	r3, r3
10008f74:	4699      	mov	r9, r3
10008f76:	003a      	movs	r2, r7
10008f78:	0033      	movs	r3, r6
10008f7a:	0026      	movs	r6, r4
10008f7c:	003c      	movs	r4, r7
10008f7e:	46a8      	mov	r8, r5
10008f80:	4649      	mov	r1, r9
10008f82:	9105      	str	r1, [sp, #20]
10008f84:	4699      	mov	r9, r3
10008f86:	7873      	ldrb	r3, [r6, #1]
10008f88:	4641      	mov	r1, r8
10008f8a:	1acb      	subs	r3, r1, r3
10008f8c:	009b      	lsls	r3, r3, #2
10008f8e:	6871      	ldr	r1, [r6, #4]
10008f90:	468c      	mov	ip, r1
10008f92:	4463      	add	r3, ip
10008f94:	885b      	ldrh	r3, [r3, #2]
10008f96:	68b1      	ldr	r1, [r6, #8]
10008f98:	4459      	add	r1, fp
10008f9a:	18cb      	adds	r3, r1, r3
10008f9c:	785b      	ldrb	r3, [r3, #1]
10008f9e:	2180      	movs	r1, #128	; 0x80
10008fa0:	4111      	asrs	r1, r2
10008fa2:	4219      	tst	r1, r3
10008fa4:	d006      	beq.n	10008fb4 <draw_string+0x528>
10008fa6:	9b04      	ldr	r3, [sp, #16]
10008fa8:	9a01      	ldr	r2, [sp, #4]
10008faa:	9905      	ldr	r1, [sp, #20]
10008fac:	9802      	ldr	r0, [sp, #8]
10008fae:	4dbc      	ldr	r5, [pc, #752]	; (100092a0 <draw_string+0x814>)
10008fb0:	47a8      	blx	r5
10008fb2:	e005      	b.n	10008fc0 <draw_string+0x534>
10008fb4:	9b03      	ldr	r3, [sp, #12]
10008fb6:	9a01      	ldr	r2, [sp, #4]
10008fb8:	9905      	ldr	r1, [sp, #20]
10008fba:	9802      	ldr	r0, [sp, #8]
10008fbc:	4db8      	ldr	r5, [pc, #736]	; (100092a0 <draw_string+0x814>)
10008fbe:	47a8      	blx	r5
10008fc0:	3401      	adds	r4, #1
10008fc2:	b2e4      	uxtb	r4, r4
10008fc4:	0022      	movs	r2, r4
10008fc6:	9d05      	ldr	r5, [sp, #20]
10008fc8:	3501      	adds	r5, #1
10008fca:	b2eb      	uxtb	r3, r5
10008fcc:	9305      	str	r3, [sp, #20]
10008fce:	464b      	mov	r3, r9
10008fd0:	18e1      	adds	r1, r4, r3
10008fd2:	0fcb      	lsrs	r3, r1, #31
10008fd4:	207f      	movs	r0, #127	; 0x7f
10008fd6:	4288      	cmp	r0, r1
10008fd8:	417b      	adcs	r3, r7
10008fda:	b2db      	uxtb	r3, r3
10008fdc:	2b00      	cmp	r3, #0
10008fde:	d006      	beq.n	10008fee <draw_string+0x562>
10008fe0:	230f      	movs	r3, #15
10008fe2:	0039      	movs	r1, r7
10008fe4:	42a3      	cmp	r3, r4
10008fe6:	4179      	adcs	r1, r7
10008fe8:	b2cb      	uxtb	r3, r1
10008fea:	2b00      	cmp	r3, #0
10008fec:	d1cb      	bne.n	10008f86 <draw_string+0x4fa>
10008fee:	4645      	mov	r5, r8
10008ff0:	0034      	movs	r4, r6
10008ff2:	464e      	mov	r6, r9
10008ff4:	4653      	mov	r3, sl
10008ff6:	009b      	lsls	r3, r3, #2
10008ff8:	469b      	mov	fp, r3
10008ffa:	9b06      	ldr	r3, [sp, #24]
10008ffc:	3310      	adds	r3, #16
10008ffe:	b2db      	uxtb	r3, r3
10009000:	4699      	mov	r9, r3
10009002:	003a      	movs	r2, r7
10009004:	0033      	movs	r3, r6
10009006:	0026      	movs	r6, r4
10009008:	003c      	movs	r4, r7
1000900a:	46a8      	mov	r8, r5
1000900c:	4649      	mov	r1, r9
1000900e:	9105      	str	r1, [sp, #20]
10009010:	4699      	mov	r9, r3
10009012:	7873      	ldrb	r3, [r6, #1]
10009014:	4641      	mov	r1, r8
10009016:	1acb      	subs	r3, r1, r3
10009018:	009b      	lsls	r3, r3, #2
1000901a:	6871      	ldr	r1, [r6, #4]
1000901c:	468c      	mov	ip, r1
1000901e:	4463      	add	r3, ip
10009020:	885b      	ldrh	r3, [r3, #2]
10009022:	68b1      	ldr	r1, [r6, #8]
10009024:	4459      	add	r1, fp
10009026:	18cb      	adds	r3, r1, r3
10009028:	789b      	ldrb	r3, [r3, #2]
1000902a:	2180      	movs	r1, #128	; 0x80
1000902c:	4111      	asrs	r1, r2
1000902e:	4219      	tst	r1, r3
10009030:	d006      	beq.n	10009040 <draw_string+0x5b4>
10009032:	9b04      	ldr	r3, [sp, #16]
10009034:	9a01      	ldr	r2, [sp, #4]
10009036:	9905      	ldr	r1, [sp, #20]
10009038:	9802      	ldr	r0, [sp, #8]
1000903a:	4d99      	ldr	r5, [pc, #612]	; (100092a0 <draw_string+0x814>)
1000903c:	47a8      	blx	r5
1000903e:	e005      	b.n	1000904c <draw_string+0x5c0>
10009040:	9b03      	ldr	r3, [sp, #12]
10009042:	9a01      	ldr	r2, [sp, #4]
10009044:	9905      	ldr	r1, [sp, #20]
10009046:	9802      	ldr	r0, [sp, #8]
10009048:	4d95      	ldr	r5, [pc, #596]	; (100092a0 <draw_string+0x814>)
1000904a:	47a8      	blx	r5
1000904c:	3401      	adds	r4, #1
1000904e:	b2e4      	uxtb	r4, r4
10009050:	0022      	movs	r2, r4
10009052:	9d05      	ldr	r5, [sp, #20]
10009054:	3501      	adds	r5, #1
10009056:	b2eb      	uxtb	r3, r5
10009058:	9305      	str	r3, [sp, #20]
1000905a:	464b      	mov	r3, r9
1000905c:	18e1      	adds	r1, r4, r3
1000905e:	0fcb      	lsrs	r3, r1, #31
10009060:	207f      	movs	r0, #127	; 0x7f
10009062:	4288      	cmp	r0, r1
10009064:	417b      	adcs	r3, r7
10009066:	b2db      	uxtb	r3, r3
10009068:	2b00      	cmp	r3, #0
1000906a:	d006      	beq.n	1000907a <draw_string+0x5ee>
1000906c:	2317      	movs	r3, #23
1000906e:	0039      	movs	r1, r7
10009070:	42a3      	cmp	r3, r4
10009072:	4179      	adcs	r1, r7
10009074:	b2cb      	uxtb	r3, r1
10009076:	2b00      	cmp	r3, #0
10009078:	d1cb      	bne.n	10009012 <draw_string+0x586>
1000907a:	4645      	mov	r5, r8
1000907c:	0034      	movs	r4, r6
1000907e:	464e      	mov	r6, r9
10009080:	7863      	ldrb	r3, [r4, #1]
10009082:	9a07      	ldr	r2, [sp, #28]
10009084:	1ad3      	subs	r3, r2, r3
10009086:	009b      	lsls	r3, r3, #2
10009088:	6862      	ldr	r2, [r4, #4]
1000908a:	4694      	mov	ip, r2
1000908c:	4463      	add	r3, ip
1000908e:	781a      	ldrb	r2, [r3, #0]
10009090:	3a18      	subs	r2, #24
10009092:	2a00      	cmp	r2, #0
10009094:	dc00      	bgt.n	10009098 <draw_string+0x60c>
10009096:	e1c6      	b.n	10009426 <draw_string+0x99a>
10009098:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1000909a:	2a00      	cmp	r2, #0
1000909c:	d100      	bne.n	100090a0 <draw_string+0x614>
1000909e:	e1c2      	b.n	10009426 <draw_string+0x99a>
100090a0:	4652      	mov	r2, sl
100090a2:	0092      	lsls	r2, r2, #2
100090a4:	4692      	mov	sl, r2
100090a6:	9806      	ldr	r0, [sp, #24]
100090a8:	0002      	movs	r2, r0
100090aa:	3218      	adds	r2, #24
100090ac:	b2d2      	uxtb	r2, r2
100090ae:	4690      	mov	r8, r2
100090b0:	0039      	movs	r1, r7
100090b2:	4a7b      	ldr	r2, [pc, #492]	; (100092a0 <draw_string+0x814>)
100090b4:	4693      	mov	fp, r2
100090b6:	2217      	movs	r2, #23
100090b8:	4252      	negs	r2, r2
100090ba:	1a12      	subs	r2, r2, r0
100090bc:	4691      	mov	r9, r2
100090be:	9505      	str	r5, [sp, #20]
100090c0:	4645      	mov	r5, r8
100090c2:	46b0      	mov	r8, r6
100090c4:	885b      	ldrh	r3, [r3, #2]
100090c6:	68a2      	ldr	r2, [r4, #8]
100090c8:	4452      	add	r2, sl
100090ca:	18d3      	adds	r3, r2, r3
100090cc:	78da      	ldrb	r2, [r3, #3]
100090ce:	2380      	movs	r3, #128	; 0x80
100090d0:	410b      	asrs	r3, r1
100090d2:	4213      	tst	r3, r2
100090d4:	d006      	beq.n	100090e4 <draw_string+0x658>
100090d6:	9b04      	ldr	r3, [sp, #16]
100090d8:	9a01      	ldr	r2, [sp, #4]
100090da:	0029      	movs	r1, r5
100090dc:	9802      	ldr	r0, [sp, #8]
100090de:	4e70      	ldr	r6, [pc, #448]	; (100092a0 <draw_string+0x814>)
100090e0:	47b0      	blx	r6
100090e2:	e004      	b.n	100090ee <draw_string+0x662>
100090e4:	9b03      	ldr	r3, [sp, #12]
100090e6:	9a01      	ldr	r2, [sp, #4]
100090e8:	0029      	movs	r1, r5
100090ea:	9802      	ldr	r0, [sp, #8]
100090ec:	47d8      	blx	fp
100090ee:	464b      	mov	r3, r9
100090f0:	18e9      	adds	r1, r5, r3
100090f2:	b2c9      	uxtb	r1, r1
100090f4:	7863      	ldrb	r3, [r4, #1]
100090f6:	9a05      	ldr	r2, [sp, #20]
100090f8:	1ad3      	subs	r3, r2, r3
100090fa:	009b      	lsls	r3, r3, #2
100090fc:	6862      	ldr	r2, [r4, #4]
100090fe:	4694      	mov	ip, r2
10009100:	4463      	add	r3, ip
10009102:	3501      	adds	r5, #1
10009104:	b2ed      	uxtb	r5, r5
10009106:	7818      	ldrb	r0, [r3, #0]
10009108:	3818      	subs	r0, #24
1000910a:	2201      	movs	r2, #1
1000910c:	4281      	cmp	r1, r0
1000910e:	db00      	blt.n	10009112 <draw_string+0x686>
10009110:	2200      	movs	r2, #0
10009112:	b2d2      	uxtb	r2, r2
10009114:	2a00      	cmp	r2, #0
10009116:	d100      	bne.n	1000911a <draw_string+0x68e>
10009118:	e182      	b.n	10009420 <draw_string+0x994>
1000911a:	4642      	mov	r2, r8
1000911c:	1888      	adds	r0, r1, r2
1000911e:	0fc2      	lsrs	r2, r0, #31
10009120:	267f      	movs	r6, #127	; 0x7f
10009122:	4286      	cmp	r6, r0
10009124:	417a      	adcs	r2, r7
10009126:	b2d2      	uxtb	r2, r2
10009128:	2a00      	cmp	r2, #0
1000912a:	d1cb      	bne.n	100090c4 <draw_string+0x638>
1000912c:	4646      	mov	r6, r8
1000912e:	e17a      	b.n	10009426 <draw_string+0x99a>
10009130:	2a28      	cmp	r2, #40	; 0x28
10009132:	d900      	bls.n	10009136 <draw_string+0x6aa>
10009134:	e177      	b.n	10009426 <draw_string+0x99a>
10009136:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10009138:	217f      	movs	r1, #127	; 0x7f
1000913a:	9a06      	ldr	r2, [sp, #24]
1000913c:	4291      	cmp	r1, r2
1000913e:	417b      	adcs	r3, r7
10009140:	b2db      	uxtb	r3, r3
10009142:	930c      	str	r3, [sp, #48]	; 0x30
10009144:	2a7f      	cmp	r2, #127	; 0x7f
10009146:	dd00      	ble.n	1000914a <draw_string+0x6be>
10009148:	e16d      	b.n	10009426 <draw_string+0x99a>
1000914a:	4653      	mov	r3, sl
1000914c:	009b      	lsls	r3, r3, #2
1000914e:	4453      	add	r3, sl
10009150:	469b      	mov	fp, r3
10009152:	46b1      	mov	r9, r6
10009154:	003a      	movs	r2, r7
10009156:	0033      	movs	r3, r6
10009158:	0026      	movs	r6, r4
1000915a:	003c      	movs	r4, r7
1000915c:	46a8      	mov	r8, r5
1000915e:	9305      	str	r3, [sp, #20]
10009160:	7873      	ldrb	r3, [r6, #1]
10009162:	4641      	mov	r1, r8
10009164:	1acb      	subs	r3, r1, r3
10009166:	009b      	lsls	r3, r3, #2
10009168:	6871      	ldr	r1, [r6, #4]
1000916a:	468c      	mov	ip, r1
1000916c:	4463      	add	r3, ip
1000916e:	8859      	ldrh	r1, [r3, #2]
10009170:	68b3      	ldr	r3, [r6, #8]
10009172:	445b      	add	r3, fp
10009174:	5c5b      	ldrb	r3, [r3, r1]
10009176:	2180      	movs	r1, #128	; 0x80
10009178:	4111      	asrs	r1, r2
1000917a:	4219      	tst	r1, r3
1000917c:	d006      	beq.n	1000918c <draw_string+0x700>
1000917e:	9b04      	ldr	r3, [sp, #16]
10009180:	9a01      	ldr	r2, [sp, #4]
10009182:	9905      	ldr	r1, [sp, #20]
10009184:	9802      	ldr	r0, [sp, #8]
10009186:	4d46      	ldr	r5, [pc, #280]	; (100092a0 <draw_string+0x814>)
10009188:	47a8      	blx	r5
1000918a:	e005      	b.n	10009198 <draw_string+0x70c>
1000918c:	9b03      	ldr	r3, [sp, #12]
1000918e:	9a01      	ldr	r2, [sp, #4]
10009190:	9905      	ldr	r1, [sp, #20]
10009192:	9802      	ldr	r0, [sp, #8]
10009194:	4d42      	ldr	r5, [pc, #264]	; (100092a0 <draw_string+0x814>)
10009196:	47a8      	blx	r5
10009198:	3401      	adds	r4, #1
1000919a:	b2e4      	uxtb	r4, r4
1000919c:	0022      	movs	r2, r4
1000919e:	9d05      	ldr	r5, [sp, #20]
100091a0:	3501      	adds	r5, #1
100091a2:	b2eb      	uxtb	r3, r5
100091a4:	9305      	str	r3, [sp, #20]
100091a6:	464b      	mov	r3, r9
100091a8:	18e1      	adds	r1, r4, r3
100091aa:	0fcb      	lsrs	r3, r1, #31
100091ac:	207f      	movs	r0, #127	; 0x7f
100091ae:	4288      	cmp	r0, r1
100091b0:	417b      	adcs	r3, r7
100091b2:	b2db      	uxtb	r3, r3
100091b4:	2b00      	cmp	r3, #0
100091b6:	d006      	beq.n	100091c6 <draw_string+0x73a>
100091b8:	2307      	movs	r3, #7
100091ba:	0039      	movs	r1, r7
100091bc:	42a3      	cmp	r3, r4
100091be:	4179      	adcs	r1, r7
100091c0:	b2cb      	uxtb	r3, r1
100091c2:	2b00      	cmp	r3, #0
100091c4:	d1cc      	bne.n	10009160 <draw_string+0x6d4>
100091c6:	4645      	mov	r5, r8
100091c8:	0034      	movs	r4, r6
100091ca:	464e      	mov	r6, r9
100091cc:	9b06      	ldr	r3, [sp, #24]
100091ce:	3308      	adds	r3, #8
100091d0:	b2db      	uxtb	r3, r3
100091d2:	4699      	mov	r9, r3
100091d4:	003a      	movs	r2, r7
100091d6:	0033      	movs	r3, r6
100091d8:	0026      	movs	r6, r4
100091da:	003c      	movs	r4, r7
100091dc:	46a8      	mov	r8, r5
100091de:	4649      	mov	r1, r9
100091e0:	9105      	str	r1, [sp, #20]
100091e2:	4699      	mov	r9, r3
100091e4:	7873      	ldrb	r3, [r6, #1]
100091e6:	4641      	mov	r1, r8
100091e8:	1acb      	subs	r3, r1, r3
100091ea:	009b      	lsls	r3, r3, #2
100091ec:	6871      	ldr	r1, [r6, #4]
100091ee:	468c      	mov	ip, r1
100091f0:	4463      	add	r3, ip
100091f2:	885b      	ldrh	r3, [r3, #2]
100091f4:	68b1      	ldr	r1, [r6, #8]
100091f6:	4459      	add	r1, fp
100091f8:	18cb      	adds	r3, r1, r3
100091fa:	785b      	ldrb	r3, [r3, #1]
100091fc:	2180      	movs	r1, #128	; 0x80
100091fe:	4111      	asrs	r1, r2
10009200:	4219      	tst	r1, r3
10009202:	d006      	beq.n	10009212 <draw_string+0x786>
10009204:	9b04      	ldr	r3, [sp, #16]
10009206:	9a01      	ldr	r2, [sp, #4]
10009208:	9905      	ldr	r1, [sp, #20]
1000920a:	9802      	ldr	r0, [sp, #8]
1000920c:	4d24      	ldr	r5, [pc, #144]	; (100092a0 <draw_string+0x814>)
1000920e:	47a8      	blx	r5
10009210:	e005      	b.n	1000921e <draw_string+0x792>
10009212:	9b03      	ldr	r3, [sp, #12]
10009214:	9a01      	ldr	r2, [sp, #4]
10009216:	9905      	ldr	r1, [sp, #20]
10009218:	9802      	ldr	r0, [sp, #8]
1000921a:	4d21      	ldr	r5, [pc, #132]	; (100092a0 <draw_string+0x814>)
1000921c:	47a8      	blx	r5
1000921e:	3401      	adds	r4, #1
10009220:	b2e4      	uxtb	r4, r4
10009222:	0022      	movs	r2, r4
10009224:	9d05      	ldr	r5, [sp, #20]
10009226:	3501      	adds	r5, #1
10009228:	b2eb      	uxtb	r3, r5
1000922a:	9305      	str	r3, [sp, #20]
1000922c:	464b      	mov	r3, r9
1000922e:	18e1      	adds	r1, r4, r3
10009230:	0fcb      	lsrs	r3, r1, #31
10009232:	207f      	movs	r0, #127	; 0x7f
10009234:	4288      	cmp	r0, r1
10009236:	417b      	adcs	r3, r7
10009238:	b2db      	uxtb	r3, r3
1000923a:	2b00      	cmp	r3, #0
1000923c:	d006      	beq.n	1000924c <draw_string+0x7c0>
1000923e:	230f      	movs	r3, #15
10009240:	0039      	movs	r1, r7
10009242:	42a3      	cmp	r3, r4
10009244:	4179      	adcs	r1, r7
10009246:	b2cb      	uxtb	r3, r1
10009248:	2b00      	cmp	r3, #0
1000924a:	d1cb      	bne.n	100091e4 <draw_string+0x758>
1000924c:	4645      	mov	r5, r8
1000924e:	0034      	movs	r4, r6
10009250:	464e      	mov	r6, r9
10009252:	4653      	mov	r3, sl
10009254:	009b      	lsls	r3, r3, #2
10009256:	4453      	add	r3, sl
10009258:	469b      	mov	fp, r3
1000925a:	9b06      	ldr	r3, [sp, #24]
1000925c:	3310      	adds	r3, #16
1000925e:	b2db      	uxtb	r3, r3
10009260:	4699      	mov	r9, r3
10009262:	003a      	movs	r2, r7
10009264:	0033      	movs	r3, r6
10009266:	0026      	movs	r6, r4
10009268:	003c      	movs	r4, r7
1000926a:	46a8      	mov	r8, r5
1000926c:	4649      	mov	r1, r9
1000926e:	9105      	str	r1, [sp, #20]
10009270:	4699      	mov	r9, r3
10009272:	7873      	ldrb	r3, [r6, #1]
10009274:	4641      	mov	r1, r8
10009276:	1acb      	subs	r3, r1, r3
10009278:	009b      	lsls	r3, r3, #2
1000927a:	6871      	ldr	r1, [r6, #4]
1000927c:	468c      	mov	ip, r1
1000927e:	4463      	add	r3, ip
10009280:	885b      	ldrh	r3, [r3, #2]
10009282:	68b1      	ldr	r1, [r6, #8]
10009284:	4459      	add	r1, fp
10009286:	18cb      	adds	r3, r1, r3
10009288:	789b      	ldrb	r3, [r3, #2]
1000928a:	2180      	movs	r1, #128	; 0x80
1000928c:	4111      	asrs	r1, r2
1000928e:	4219      	tst	r1, r3
10009290:	d008      	beq.n	100092a4 <draw_string+0x818>
10009292:	9b04      	ldr	r3, [sp, #16]
10009294:	9a01      	ldr	r2, [sp, #4]
10009296:	9905      	ldr	r1, [sp, #20]
10009298:	9802      	ldr	r0, [sp, #8]
1000929a:	4d01      	ldr	r5, [pc, #4]	; (100092a0 <draw_string+0x814>)
1000929c:	47a8      	blx	r5
1000929e:	e007      	b.n	100092b0 <draw_string+0x824>
100092a0:	10008a25 	.word	0x10008a25
100092a4:	9b03      	ldr	r3, [sp, #12]
100092a6:	9a01      	ldr	r2, [sp, #4]
100092a8:	9905      	ldr	r1, [sp, #20]
100092aa:	9802      	ldr	r0, [sp, #8]
100092ac:	4d97      	ldr	r5, [pc, #604]	; (1000950c <draw_string+0xa80>)
100092ae:	47a8      	blx	r5
100092b0:	3401      	adds	r4, #1
100092b2:	b2e4      	uxtb	r4, r4
100092b4:	0022      	movs	r2, r4
100092b6:	9d05      	ldr	r5, [sp, #20]
100092b8:	3501      	adds	r5, #1
100092ba:	b2eb      	uxtb	r3, r5
100092bc:	9305      	str	r3, [sp, #20]
100092be:	464b      	mov	r3, r9
100092c0:	18e1      	adds	r1, r4, r3
100092c2:	0fcb      	lsrs	r3, r1, #31
100092c4:	207f      	movs	r0, #127	; 0x7f
100092c6:	4288      	cmp	r0, r1
100092c8:	417b      	adcs	r3, r7
100092ca:	b2db      	uxtb	r3, r3
100092cc:	2b00      	cmp	r3, #0
100092ce:	d006      	beq.n	100092de <draw_string+0x852>
100092d0:	2317      	movs	r3, #23
100092d2:	0039      	movs	r1, r7
100092d4:	42a3      	cmp	r3, r4
100092d6:	4179      	adcs	r1, r7
100092d8:	b2cb      	uxtb	r3, r1
100092da:	2b00      	cmp	r3, #0
100092dc:	d1c9      	bne.n	10009272 <draw_string+0x7e6>
100092de:	4645      	mov	r5, r8
100092e0:	0034      	movs	r4, r6
100092e2:	464e      	mov	r6, r9
100092e4:	9b06      	ldr	r3, [sp, #24]
100092e6:	3318      	adds	r3, #24
100092e8:	b2db      	uxtb	r3, r3
100092ea:	4699      	mov	r9, r3
100092ec:	003a      	movs	r2, r7
100092ee:	0033      	movs	r3, r6
100092f0:	0026      	movs	r6, r4
100092f2:	003c      	movs	r4, r7
100092f4:	46a8      	mov	r8, r5
100092f6:	4649      	mov	r1, r9
100092f8:	9105      	str	r1, [sp, #20]
100092fa:	4699      	mov	r9, r3
100092fc:	7873      	ldrb	r3, [r6, #1]
100092fe:	4641      	mov	r1, r8
10009300:	1acb      	subs	r3, r1, r3
10009302:	009b      	lsls	r3, r3, #2
10009304:	6871      	ldr	r1, [r6, #4]
10009306:	468c      	mov	ip, r1
10009308:	4463      	add	r3, ip
1000930a:	885b      	ldrh	r3, [r3, #2]
1000930c:	68b1      	ldr	r1, [r6, #8]
1000930e:	4459      	add	r1, fp
10009310:	18cb      	adds	r3, r1, r3
10009312:	78db      	ldrb	r3, [r3, #3]
10009314:	2180      	movs	r1, #128	; 0x80
10009316:	4111      	asrs	r1, r2
10009318:	4219      	tst	r1, r3
1000931a:	d006      	beq.n	1000932a <draw_string+0x89e>
1000931c:	9b04      	ldr	r3, [sp, #16]
1000931e:	9a01      	ldr	r2, [sp, #4]
10009320:	9905      	ldr	r1, [sp, #20]
10009322:	9802      	ldr	r0, [sp, #8]
10009324:	4d79      	ldr	r5, [pc, #484]	; (1000950c <draw_string+0xa80>)
10009326:	47a8      	blx	r5
10009328:	e005      	b.n	10009336 <draw_string+0x8aa>
1000932a:	9b03      	ldr	r3, [sp, #12]
1000932c:	9a01      	ldr	r2, [sp, #4]
1000932e:	9905      	ldr	r1, [sp, #20]
10009330:	9802      	ldr	r0, [sp, #8]
10009332:	4d76      	ldr	r5, [pc, #472]	; (1000950c <draw_string+0xa80>)
10009334:	47a8      	blx	r5
10009336:	3401      	adds	r4, #1
10009338:	b2e4      	uxtb	r4, r4
1000933a:	0022      	movs	r2, r4
1000933c:	9d05      	ldr	r5, [sp, #20]
1000933e:	3501      	adds	r5, #1
10009340:	b2eb      	uxtb	r3, r5
10009342:	9305      	str	r3, [sp, #20]
10009344:	464b      	mov	r3, r9
10009346:	18e1      	adds	r1, r4, r3
10009348:	0fcb      	lsrs	r3, r1, #31
1000934a:	207f      	movs	r0, #127	; 0x7f
1000934c:	4288      	cmp	r0, r1
1000934e:	417b      	adcs	r3, r7
10009350:	b2db      	uxtb	r3, r3
10009352:	2b00      	cmp	r3, #0
10009354:	d006      	beq.n	10009364 <draw_string+0x8d8>
10009356:	231f      	movs	r3, #31
10009358:	0039      	movs	r1, r7
1000935a:	42a3      	cmp	r3, r4
1000935c:	4179      	adcs	r1, r7
1000935e:	b2cb      	uxtb	r3, r1
10009360:	2b00      	cmp	r3, #0
10009362:	d1cb      	bne.n	100092fc <draw_string+0x870>
10009364:	4645      	mov	r5, r8
10009366:	0034      	movs	r4, r6
10009368:	464e      	mov	r6, r9
1000936a:	7863      	ldrb	r3, [r4, #1]
1000936c:	9a07      	ldr	r2, [sp, #28]
1000936e:	1ad3      	subs	r3, r2, r3
10009370:	009b      	lsls	r3, r3, #2
10009372:	6862      	ldr	r2, [r4, #4]
10009374:	4694      	mov	ip, r2
10009376:	4463      	add	r3, ip
10009378:	781a      	ldrb	r2, [r3, #0]
1000937a:	3a20      	subs	r2, #32
1000937c:	2a00      	cmp	r2, #0
1000937e:	dd52      	ble.n	10009426 <draw_string+0x99a>
10009380:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10009382:	2a00      	cmp	r2, #0
10009384:	d04f      	beq.n	10009426 <draw_string+0x99a>
10009386:	4652      	mov	r2, sl
10009388:	0092      	lsls	r2, r2, #2
1000938a:	4492      	add	sl, r2
1000938c:	9806      	ldr	r0, [sp, #24]
1000938e:	0002      	movs	r2, r0
10009390:	3220      	adds	r2, #32
10009392:	b2d2      	uxtb	r2, r2
10009394:	4690      	mov	r8, r2
10009396:	0039      	movs	r1, r7
10009398:	4a5c      	ldr	r2, [pc, #368]	; (1000950c <draw_string+0xa80>)
1000939a:	4693      	mov	fp, r2
1000939c:	221f      	movs	r2, #31
1000939e:	4252      	negs	r2, r2
100093a0:	1a12      	subs	r2, r2, r0
100093a2:	4691      	mov	r9, r2
100093a4:	9505      	str	r5, [sp, #20]
100093a6:	4645      	mov	r5, r8
100093a8:	46b0      	mov	r8, r6
100093aa:	885b      	ldrh	r3, [r3, #2]
100093ac:	68a2      	ldr	r2, [r4, #8]
100093ae:	4452      	add	r2, sl
100093b0:	18d3      	adds	r3, r2, r3
100093b2:	791a      	ldrb	r2, [r3, #4]
100093b4:	2380      	movs	r3, #128	; 0x80
100093b6:	410b      	asrs	r3, r1
100093b8:	4213      	tst	r3, r2
100093ba:	d006      	beq.n	100093ca <draw_string+0x93e>
100093bc:	9b04      	ldr	r3, [sp, #16]
100093be:	9a01      	ldr	r2, [sp, #4]
100093c0:	0029      	movs	r1, r5
100093c2:	9802      	ldr	r0, [sp, #8]
100093c4:	4e51      	ldr	r6, [pc, #324]	; (1000950c <draw_string+0xa80>)
100093c6:	47b0      	blx	r6
100093c8:	e004      	b.n	100093d4 <draw_string+0x948>
100093ca:	9b03      	ldr	r3, [sp, #12]
100093cc:	9a01      	ldr	r2, [sp, #4]
100093ce:	0029      	movs	r1, r5
100093d0:	9802      	ldr	r0, [sp, #8]
100093d2:	47d8      	blx	fp
100093d4:	464b      	mov	r3, r9
100093d6:	18e9      	adds	r1, r5, r3
100093d8:	b2c9      	uxtb	r1, r1
100093da:	7863      	ldrb	r3, [r4, #1]
100093dc:	9a05      	ldr	r2, [sp, #20]
100093de:	1ad3      	subs	r3, r2, r3
100093e0:	009b      	lsls	r3, r3, #2
100093e2:	6862      	ldr	r2, [r4, #4]
100093e4:	4694      	mov	ip, r2
100093e6:	4463      	add	r3, ip
100093e8:	3501      	adds	r5, #1
100093ea:	b2ed      	uxtb	r5, r5
100093ec:	7818      	ldrb	r0, [r3, #0]
100093ee:	3820      	subs	r0, #32
100093f0:	2201      	movs	r2, #1
100093f2:	4281      	cmp	r1, r0
100093f4:	db00      	blt.n	100093f8 <draw_string+0x96c>
100093f6:	2200      	movs	r2, #0
100093f8:	b2d2      	uxtb	r2, r2
100093fa:	2a00      	cmp	r2, #0
100093fc:	d012      	beq.n	10009424 <draw_string+0x998>
100093fe:	4642      	mov	r2, r8
10009400:	1888      	adds	r0, r1, r2
10009402:	0fc2      	lsrs	r2, r0, #31
10009404:	267f      	movs	r6, #127	; 0x7f
10009406:	4286      	cmp	r6, r0
10009408:	417a      	adcs	r2, r7
1000940a:	b2d2      	uxtb	r2, r2
1000940c:	2a00      	cmp	r2, #0
1000940e:	d1cc      	bne.n	100093aa <draw_string+0x91e>
10009410:	4646      	mov	r6, r8
10009412:	e008      	b.n	10009426 <draw_string+0x99a>
10009414:	4646      	mov	r6, r8
10009416:	e006      	b.n	10009426 <draw_string+0x99a>
10009418:	4646      	mov	r6, r8
1000941a:	e004      	b.n	10009426 <draw_string+0x99a>
1000941c:	4646      	mov	r6, r8
1000941e:	e002      	b.n	10009426 <draw_string+0x99a>
10009420:	4646      	mov	r6, r8
10009422:	e000      	b.n	10009426 <draw_string+0x99a>
10009424:	4646      	mov	r6, r8
10009426:	9a01      	ldr	r2, [sp, #4]
10009428:	9908      	ldr	r1, [sp, #32]
1000942a:	1a53      	subs	r3, r2, r1
1000942c:	3301      	adds	r3, #1
1000942e:	b2db      	uxtb	r3, r3
10009430:	469a      	mov	sl, r3
10009432:	0013      	movs	r3, r2
10009434:	3301      	adds	r3, #1
10009436:	b2db      	uxtb	r3, r3
10009438:	9301      	str	r3, [sp, #4]
1000943a:	7823      	ldrb	r3, [r4, #0]
1000943c:	459a      	cmp	sl, r3
1000943e:	d20b      	bcs.n	10009458 <draw_string+0x9cc>
10009440:	9b09      	ldr	r3, [sp, #36]	; 0x24
10009442:	4453      	add	r3, sl
10009444:	001a      	movs	r2, r3
10009446:	0fdb      	lsrs	r3, r3, #31
10009448:	217f      	movs	r1, #127	; 0x7f
1000944a:	4291      	cmp	r1, r2
1000944c:	417b      	adcs	r3, r7
1000944e:	b2db      	uxtb	r3, r3
10009450:	2b00      	cmp	r3, #0
10009452:	d001      	beq.n	10009458 <draw_string+0x9cc>
10009454:	f7ff fb5e 	bl	10008b14 <draw_string+0x88>
10009458:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1000945a:	990d      	ldr	r1, [sp, #52]	; 0x34
1000945c:	5c53      	ldrb	r3, [r2, r1]
1000945e:	7862      	ldrb	r2, [r4, #1]
10009460:	1a9b      	subs	r3, r3, r2
10009462:	009b      	lsls	r3, r3, #2
10009464:	6862      	ldr	r2, [r4, #4]
10009466:	5c9b      	ldrb	r3, [r3, r2]
10009468:	9a06      	ldr	r2, [sp, #24]
1000946a:	4694      	mov	ip, r2
1000946c:	4463      	add	r3, ip
1000946e:	b2db      	uxtb	r3, r3
10009470:	9301      	str	r3, [sp, #4]
10009472:	2b7e      	cmp	r3, #126	; 0x7e
10009474:	d842      	bhi.n	100094fc <draw_string+0xa70>
10009476:	9b11      	ldr	r3, [sp, #68]	; 0x44
10009478:	3b01      	subs	r3, #1
1000947a:	2201      	movs	r2, #1
1000947c:	428b      	cmp	r3, r1
1000947e:	dc00      	bgt.n	10009482 <draw_string+0x9f6>
10009480:	2200      	movs	r2, #0
10009482:	b2d3      	uxtb	r3, r2
10009484:	4698      	mov	r8, r3
10009486:	7823      	ldrb	r3, [r4, #0]
10009488:	1e5a      	subs	r2, r3, #1
1000948a:	4193      	sbcs	r3, r2
1000948c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
1000948e:	4213      	tst	r3, r2
10009490:	d028      	beq.n	100094e4 <draw_string+0xa58>
10009492:	4643      	mov	r3, r8
10009494:	2b00      	cmp	r3, #0
10009496:	d025      	beq.n	100094e4 <draw_string+0xa58>
10009498:	2600      	movs	r6, #0
1000949a:	4b1c      	ldr	r3, [pc, #112]	; (1000950c <draw_string+0xa80>)
1000949c:	4699      	mov	r9, r3
1000949e:	9b09      	ldr	r3, [sp, #36]	; 0x24
100094a0:	469b      	mov	fp, r3
100094a2:	46a2      	mov	sl, r4
100094a4:	4644      	mov	r4, r8
100094a6:	9b08      	ldr	r3, [sp, #32]
100094a8:	4698      	mov	r8, r3
100094aa:	b2f5      	uxtb	r5, r6
100094ac:	4643      	mov	r3, r8
100094ae:	195a      	adds	r2, r3, r5
100094b0:	b2d2      	uxtb	r2, r2
100094b2:	9b03      	ldr	r3, [sp, #12]
100094b4:	9901      	ldr	r1, [sp, #4]
100094b6:	9802      	ldr	r0, [sp, #8]
100094b8:	47c8      	blx	r9
100094ba:	3501      	adds	r5, #1
100094bc:	b2ed      	uxtb	r5, r5
100094be:	3601      	adds	r6, #1
100094c0:	4653      	mov	r3, sl
100094c2:	781b      	ldrb	r3, [r3, #0]
100094c4:	429d      	cmp	r5, r3
100094c6:	419b      	sbcs	r3, r3
100094c8:	425b      	negs	r3, r3
100094ca:	4223      	tst	r3, r4
100094cc:	d009      	beq.n	100094e2 <draw_string+0xa56>
100094ce:	445d      	add	r5, fp
100094d0:	0feb      	lsrs	r3, r5, #31
100094d2:	227f      	movs	r2, #127	; 0x7f
100094d4:	42aa      	cmp	r2, r5
100094d6:	417b      	adcs	r3, r7
100094d8:	b2db      	uxtb	r3, r3
100094da:	2b00      	cmp	r3, #0
100094dc:	d1e5      	bne.n	100094aa <draw_string+0xa1e>
100094de:	4654      	mov	r4, sl
100094e0:	e000      	b.n	100094e4 <draw_string+0xa58>
100094e2:	4654      	mov	r4, sl
100094e4:	9b01      	ldr	r3, [sp, #4]
100094e6:	3301      	adds	r3, #1
100094e8:	b2db      	uxtb	r3, r3
100094ea:	9306      	str	r3, [sp, #24]
100094ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100094ee:	3301      	adds	r3, #1
100094f0:	930d      	str	r3, [sp, #52]	; 0x34
100094f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
100094f4:	4293      	cmp	r3, r2
100094f6:	d001      	beq.n	100094fc <draw_string+0xa70>
100094f8:	f7ff faef 	bl	10008ada <draw_string+0x4e>
100094fc:	b013      	add	sp, #76	; 0x4c
100094fe:	bc3c      	pop	{r2, r3, r4, r5}
10009500:	4690      	mov	r8, r2
10009502:	4699      	mov	r9, r3
10009504:	46a2      	mov	sl, r4
10009506:	46ab      	mov	fp, r5
10009508:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000950a:	46c0      	nop			; (mov r8, r8)
1000950c:	10008a25 	.word	0x10008a25

10009510 <draw_horizontal_line>:
10009510:	b5f0      	push	{r4, r5, r6, r7, lr}
10009512:	b083      	sub	sp, #12
10009514:	9000      	str	r0, [sp, #0]
10009516:	000c      	movs	r4, r1
10009518:	0016      	movs	r6, r2
1000951a:	9301      	str	r3, [sp, #4]
1000951c:	ab08      	add	r3, sp, #32
1000951e:	781f      	ldrb	r7, [r3, #0]
10009520:	4291      	cmp	r1, r2
10009522:	d809      	bhi.n	10009538 <draw_horizontal_line+0x28>
10009524:	4d05      	ldr	r5, [pc, #20]	; (1000953c <draw_horizontal_line+0x2c>)
10009526:	003b      	movs	r3, r7
10009528:	9a01      	ldr	r2, [sp, #4]
1000952a:	0021      	movs	r1, r4
1000952c:	9800      	ldr	r0, [sp, #0]
1000952e:	47a8      	blx	r5
10009530:	3401      	adds	r4, #1
10009532:	b2e4      	uxtb	r4, r4
10009534:	42a6      	cmp	r6, r4
10009536:	d2f6      	bcs.n	10009526 <draw_horizontal_line+0x16>
10009538:	b003      	add	sp, #12
1000953a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000953c:	10008a25 	.word	0x10008a25

10009540 <draw_sprite>:
10009540:	b5f0      	push	{r4, r5, r6, r7, lr}
10009542:	465f      	mov	r7, fp
10009544:	4656      	mov	r6, sl
10009546:	464d      	mov	r5, r9
10009548:	4644      	mov	r4, r8
1000954a:	b4f0      	push	{r4, r5, r6, r7}
1000954c:	b08f      	sub	sp, #60	; 0x3c
1000954e:	9001      	str	r0, [sp, #4]
10009550:	910b      	str	r1, [sp, #44]	; 0x2c
10009552:	0014      	movs	r4, r2
10009554:	9200      	str	r2, [sp, #0]
10009556:	9302      	str	r3, [sp, #8]
10009558:	ab18      	add	r3, sp, #96	; 0x60
1000955a:	781b      	ldrb	r3, [r3, #0]
1000955c:	9303      	str	r3, [sp, #12]
1000955e:	ab19      	add	r3, sp, #100	; 0x64
10009560:	791a      	ldrb	r2, [r3, #4]
10009562:	9919      	ldr	r1, [sp, #100]	; 0x64
10009564:	9105      	str	r1, [sp, #20]
10009566:	7959      	ldrb	r1, [r3, #5]
10009568:	0020      	movs	r0, r4
1000956a:	9408      	str	r4, [sp, #32]
1000956c:	799b      	ldrb	r3, [r3, #6]
1000956e:	46a4      	mov	ip, r4
10009570:	4463      	add	r3, ip
10009572:	001d      	movs	r5, r3
10009574:	930a      	str	r3, [sp, #40]	; 0x28
10009576:	2301      	movs	r3, #1
10009578:	42a8      	cmp	r0, r5
1000957a:	db00      	blt.n	1000957e <draw_sprite+0x3e>
1000957c:	2300      	movs	r3, #0
1000957e:	b2db      	uxtb	r3, r3
10009580:	2b00      	cmp	r3, #0
10009582:	d100      	bne.n	10009586 <draw_sprite+0x46>
10009584:	e08e      	b.n	100096a4 <draw_sprite+0x164>
10009586:	9b00      	ldr	r3, [sp, #0]
10009588:	43db      	mvns	r3, r3
1000958a:	061b      	lsls	r3, r3, #24
1000958c:	d400      	bmi.n	10009590 <draw_sprite+0x50>
1000958e:	e089      	b.n	100096a4 <draw_sprite+0x164>
10009590:	9109      	str	r1, [sp, #36]	; 0x24
10009592:	1e4b      	subs	r3, r1, #1
10009594:	4699      	mov	r9, r3
10009596:	00db      	lsls	r3, r3, #3
10009598:	990b      	ldr	r1, [sp, #44]	; 0x2c
1000959a:	468c      	mov	ip, r1
1000959c:	4463      	add	r3, ip
1000959e:	b2db      	uxtb	r3, r3
100095a0:	930d      	str	r3, [sp, #52]	; 0x34
100095a2:	9b08      	ldr	r3, [sp, #32]
100095a4:	9307      	str	r3, [sp, #28]
100095a6:	2307      	movs	r3, #7
100095a8:	4013      	ands	r3, r2
100095aa:	930c      	str	r3, [sp, #48]	; 0x30
100095ac:	e067      	b.n	1000967e <draw_sprite+0x13e>
100095ae:	7833      	ldrb	r3, [r6, #0]
100095b0:	003a      	movs	r2, r7
100095b2:	412a      	asrs	r2, r5
100095b4:	421a      	tst	r2, r3
100095b6:	d005      	beq.n	100095c4 <draw_sprite+0x84>
100095b8:	9b02      	ldr	r3, [sp, #8]
100095ba:	9a00      	ldr	r2, [sp, #0]
100095bc:	0021      	movs	r1, r4
100095be:	9801      	ldr	r0, [sp, #4]
100095c0:	47d0      	blx	sl
100095c2:	e004      	b.n	100095ce <draw_sprite+0x8e>
100095c4:	9b03      	ldr	r3, [sp, #12]
100095c6:	9a00      	ldr	r2, [sp, #0]
100095c8:	0021      	movs	r1, r4
100095ca:	9801      	ldr	r0, [sp, #4]
100095cc:	47d8      	blx	fp
100095ce:	3501      	adds	r5, #1
100095d0:	3401      	adds	r4, #1
100095d2:	b2e4      	uxtb	r4, r4
100095d4:	2d08      	cmp	r5, #8
100095d6:	d1ea      	bne.n	100095ae <draw_sprite+0x6e>
100095d8:	4643      	mov	r3, r8
100095da:	3301      	adds	r3, #1
100095dc:	b2db      	uxtb	r3, r3
100095de:	4698      	mov	r8, r3
100095e0:	001e      	movs	r6, r3
100095e2:	9b04      	ldr	r3, [sp, #16]
100095e4:	3308      	adds	r3, #8
100095e6:	b2db      	uxtb	r3, r3
100095e8:	9304      	str	r3, [sp, #16]
100095ea:	45c8      	cmp	r8, r9
100095ec:	da08      	bge.n	10009600 <draw_sprite+0xc0>
100095ee:	9b06      	ldr	r3, [sp, #24]
100095f0:	469c      	mov	ip, r3
100095f2:	4466      	add	r6, ip
100095f4:	9b05      	ldr	r3, [sp, #20]
100095f6:	469c      	mov	ip, r3
100095f8:	4466      	add	r6, ip
100095fa:	9c04      	ldr	r4, [sp, #16]
100095fc:	2500      	movs	r5, #0
100095fe:	e7d6      	b.n	100095ae <draw_sprite+0x6e>
10009600:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10009602:	2a00      	cmp	r2, #0
10009604:	dd29      	ble.n	1000965a <draw_sprite+0x11a>
10009606:	9b07      	ldr	r3, [sp, #28]
10009608:	9908      	ldr	r1, [sp, #32]
1000960a:	1a5d      	subs	r5, r3, r1
1000960c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000960e:	435d      	muls	r5, r3
10009610:	444d      	add	r5, r9
10009612:	9b05      	ldr	r3, [sp, #20]
10009614:	469c      	mov	ip, r3
10009616:	4465      	add	r5, ip
10009618:	2400      	movs	r4, #0
1000961a:	2300      	movs	r3, #0
1000961c:	2680      	movs	r6, #128	; 0x80
1000961e:	4f25      	ldr	r7, [pc, #148]	; (100096b4 <draw_sprite+0x174>)
10009620:	46b8      	mov	r8, r7
10009622:	990d      	ldr	r1, [sp, #52]	; 0x34
10009624:	468b      	mov	fp, r1
10009626:	4692      	mov	sl, r2
10009628:	782a      	ldrb	r2, [r5, #0]
1000962a:	0031      	movs	r1, r6
1000962c:	4119      	asrs	r1, r3
1000962e:	4211      	tst	r1, r2
10009630:	d007      	beq.n	10009642 <draw_sprite+0x102>
10009632:	465b      	mov	r3, fp
10009634:	1919      	adds	r1, r3, r4
10009636:	b2c9      	uxtb	r1, r1
10009638:	9b02      	ldr	r3, [sp, #8]
1000963a:	9a00      	ldr	r2, [sp, #0]
1000963c:	9801      	ldr	r0, [sp, #4]
1000963e:	47c0      	blx	r8
10009640:	e006      	b.n	10009650 <draw_sprite+0x110>
10009642:	465b      	mov	r3, fp
10009644:	1919      	adds	r1, r3, r4
10009646:	b2c9      	uxtb	r1, r1
10009648:	9b03      	ldr	r3, [sp, #12]
1000964a:	9a00      	ldr	r2, [sp, #0]
1000964c:	9801      	ldr	r0, [sp, #4]
1000964e:	47b8      	blx	r7
10009650:	1c63      	adds	r3, r4, #1
10009652:	b2db      	uxtb	r3, r3
10009654:	3401      	adds	r4, #1
10009656:	4553      	cmp	r3, sl
10009658:	dbe6      	blt.n	10009628 <draw_sprite+0xe8>
1000965a:	9b00      	ldr	r3, [sp, #0]
1000965c:	3301      	adds	r3, #1
1000965e:	b2db      	uxtb	r3, r3
10009660:	001a      	movs	r2, r3
10009662:	9300      	str	r3, [sp, #0]
10009664:	9307      	str	r3, [sp, #28]
10009666:	2301      	movs	r3, #1
10009668:	990a      	ldr	r1, [sp, #40]	; 0x28
1000966a:	428a      	cmp	r2, r1
1000966c:	db00      	blt.n	10009670 <draw_sprite+0x130>
1000966e:	2300      	movs	r3, #0
10009670:	b2db      	uxtb	r3, r3
10009672:	2b00      	cmp	r3, #0
10009674:	d016      	beq.n	100096a4 <draw_sprite+0x164>
10009676:	9b00      	ldr	r3, [sp, #0]
10009678:	43db      	mvns	r3, r3
1000967a:	061b      	lsls	r3, r3, #24
1000967c:	d512      	bpl.n	100096a4 <draw_sprite+0x164>
1000967e:	464b      	mov	r3, r9
10009680:	2b00      	cmp	r3, #0
10009682:	ddbd      	ble.n	10009600 <draw_sprite+0xc0>
10009684:	9b07      	ldr	r3, [sp, #28]
10009686:	9a08      	ldr	r2, [sp, #32]
10009688:	1a9b      	subs	r3, r3, r2
1000968a:	9a09      	ldr	r2, [sp, #36]	; 0x24
1000968c:	435a      	muls	r2, r3
1000968e:	9206      	str	r2, [sp, #24]
10009690:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10009692:	9304      	str	r3, [sp, #16]
10009694:	2600      	movs	r6, #0
10009696:	2300      	movs	r3, #0
10009698:	4698      	mov	r8, r3
1000969a:	2780      	movs	r7, #128	; 0x80
1000969c:	4b05      	ldr	r3, [pc, #20]	; (100096b4 <draw_sprite+0x174>)
1000969e:	469b      	mov	fp, r3
100096a0:	469a      	mov	sl, r3
100096a2:	e7a4      	b.n	100095ee <draw_sprite+0xae>
100096a4:	b00f      	add	sp, #60	; 0x3c
100096a6:	bc3c      	pop	{r2, r3, r4, r5}
100096a8:	4690      	mov	r8, r2
100096aa:	4699      	mov	r9, r3
100096ac:	46a2      	mov	sl, r4
100096ae:	46ab      	mov	fp, r5
100096b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
100096b2:	46c0      	nop			; (mov r8, r8)
100096b4:	10008a25 	.word	0x10008a25

100096b8 <Setup>:
100096b8:	b530      	push	{r4, r5, lr}
100096ba:	b08d      	sub	sp, #52	; 0x34
100096bc:	0005      	movs	r5, r0
100096be:	ac01      	add	r4, sp, #4
100096c0:	0020      	movs	r0, r4
100096c2:	4b14      	ldr	r3, [pc, #80]	; (10009714 <Setup+0x5c>)
100096c4:	4798      	blx	r3
100096c6:	2310      	movs	r3, #16
100096c8:	7023      	strb	r3, [r4, #0]
100096ca:	0028      	movs	r0, r5
100096cc:	302c      	adds	r0, #44	; 0x2c
100096ce:	0021      	movs	r1, r4
100096d0:	4b11      	ldr	r3, [pc, #68]	; (10009718 <Setup+0x60>)
100096d2:	4798      	blx	r3
100096d4:	ac02      	add	r4, sp, #8
100096d6:	0020      	movs	r0, r4
100096d8:	4b10      	ldr	r3, [pc, #64]	; (1000971c <Setup+0x64>)
100096da:	4798      	blx	r3
100096dc:	2300      	movs	r3, #0
100096de:	70a3      	strb	r3, [r4, #2]
100096e0:	339a      	adds	r3, #154	; 0x9a
100096e2:	7123      	strb	r3, [r4, #4]
100096e4:	3b89      	subs	r3, #137	; 0x89
100096e6:	60a3      	str	r3, [r4, #8]
100096e8:	3b0d      	subs	r3, #13
100096ea:	61a3      	str	r3, [r4, #24]
100096ec:	2213      	movs	r2, #19
100096ee:	60e2      	str	r2, [r4, #12]
100096f0:	61e3      	str	r3, [r4, #28]
100096f2:	3a14      	subs	r2, #20
100096f4:	6122      	str	r2, [r4, #16]
100096f6:	6222      	str	r2, [r4, #32]
100096f8:	3213      	adds	r2, #19
100096fa:	6162      	str	r2, [r4, #20]
100096fc:	6263      	str	r3, [r4, #36]	; 0x24
100096fe:	0022      	movs	r2, r4
10009700:	4907      	ldr	r1, [pc, #28]	; (10009720 <Setup+0x68>)
10009702:	0028      	movs	r0, r5
10009704:	4b07      	ldr	r3, [pc, #28]	; (10009724 <Setup+0x6c>)
10009706:	4798      	blx	r3
10009708:	0028      	movs	r0, r5
1000970a:	4b07      	ldr	r3, [pc, #28]	; (10009728 <Setup+0x70>)
1000970c:	4798      	blx	r3
1000970e:	b00d      	add	sp, #52	; 0x34
10009710:	bd30      	pop	{r4, r5, pc}
10009712:	46c0      	nop			; (mov r8, r8)
10009714:	100081f5 	.word	0x100081f5
10009718:	1000822d 	.word	0x1000822d
1000971c:	10008201 	.word	0x10008201
10009720:	40007000 	.word	0x40007000
10009724:	10008355 	.word	0x10008355
10009728:	1000826d 	.word	0x1000826d

1000972c <Transfer>:
1000972c:	b5f0      	push	{r4, r5, r6, r7, lr}
1000972e:	465f      	mov	r7, fp
10009730:	464e      	mov	r6, r9
10009732:	4645      	mov	r5, r8
10009734:	b4e0      	push	{r5, r6, r7}
10009736:	b082      	sub	sp, #8
10009738:	4681      	mov	r9, r0
1000973a:	000d      	movs	r5, r1
1000973c:	4690      	mov	r8, r2
1000973e:	001c      	movs	r4, r3
10009740:	9301      	str	r3, [sp, #4]
10009742:	2101      	movs	r1, #1
10009744:	2010      	movs	r0, #16
10009746:	4b29      	ldr	r3, [pc, #164]	; (100097ec <Transfer+0xc0>)
10009748:	4798      	blx	r3
1000974a:	2005      	movs	r0, #5
1000974c:	4b28      	ldr	r3, [pc, #160]	; (100097f0 <Transfer+0xc4>)
1000974e:	4798      	blx	r3
10009750:	9400      	str	r4, [sp, #0]
10009752:	2180      	movs	r1, #128	; 0x80
10009754:	0020      	movs	r0, r4
10009756:	4b27      	ldr	r3, [pc, #156]	; (100097f4 <Transfer+0xc8>)
10009758:	4798      	blx	r3
1000975a:	3d01      	subs	r5, #1
1000975c:	b2ed      	uxtb	r5, r5
1000975e:	4545      	cmp	r5, r8
10009760:	d231      	bcs.n	100097c6 <Transfer+0x9a>
10009762:	2340      	movs	r3, #64	; 0x40
10009764:	469b      	mov	fp, r3
10009766:	4f23      	ldr	r7, [pc, #140]	; (100097f4 <Transfer+0xc8>)
10009768:	4e23      	ldr	r6, [pc, #140]	; (100097f8 <Transfer+0xcc>)
1000976a:	1c6c      	adds	r4, r5, #1
1000976c:	b2e4      	uxtb	r4, r4
1000976e:	0163      	lsls	r3, r4, #5
10009770:	4659      	mov	r1, fp
10009772:	4019      	ands	r1, r3
10009774:	00e2      	lsls	r2, r4, #3
10009776:	2320      	movs	r3, #32
10009778:	4013      	ands	r3, r2
1000977a:	430b      	orrs	r3, r1
1000977c:	01e2      	lsls	r2, r4, #7
1000977e:	4313      	orrs	r3, r2
10009780:	0062      	lsls	r2, r4, #1
10009782:	2110      	movs	r1, #16
10009784:	400a      	ands	r2, r1
10009786:	4313      	orrs	r3, r2
10009788:	1062      	asrs	r2, r4, #1
1000978a:	3908      	subs	r1, #8
1000978c:	400a      	ands	r2, r1
1000978e:	4313      	orrs	r3, r2
10009790:	10e2      	asrs	r2, r4, #3
10009792:	3904      	subs	r1, #4
10009794:	400a      	ands	r2, r1
10009796:	4313      	orrs	r3, r2
10009798:	1162      	asrs	r2, r4, #5
1000979a:	3902      	subs	r1, #2
1000979c:	400a      	ands	r2, r1
1000979e:	4313      	orrs	r3, r2
100097a0:	b2db      	uxtb	r3, r3
100097a2:	09e1      	lsrs	r1, r4, #7
100097a4:	4319      	orrs	r1, r3
100097a6:	9800      	ldr	r0, [sp, #0]
100097a8:	47b8      	blx	r7
100097aa:	0069      	lsls	r1, r5, #1
100097ac:	1949      	adds	r1, r1, r5
100097ae:	0109      	lsls	r1, r1, #4
100097b0:	4449      	add	r1, r9
100097b2:	2230      	movs	r2, #48	; 0x30
100097b4:	9d00      	ldr	r5, [sp, #0]
100097b6:	0028      	movs	r0, r5
100097b8:	47b0      	blx	r6
100097ba:	2100      	movs	r1, #0
100097bc:	0028      	movs	r0, r5
100097be:	47b8      	blx	r7
100097c0:	0025      	movs	r5, r4
100097c2:	45a0      	cmp	r8, r4
100097c4:	d8d1      	bhi.n	1000976a <Transfer+0x3e>
100097c6:	2100      	movs	r1, #0
100097c8:	9801      	ldr	r0, [sp, #4]
100097ca:	4b0a      	ldr	r3, [pc, #40]	; (100097f4 <Transfer+0xc8>)
100097cc:	4798      	blx	r3
100097ce:	20dc      	movs	r0, #220	; 0xdc
100097d0:	4c07      	ldr	r4, [pc, #28]	; (100097f0 <Transfer+0xc4>)
100097d2:	47a0      	blx	r4
100097d4:	2100      	movs	r1, #0
100097d6:	2010      	movs	r0, #16
100097d8:	4b04      	ldr	r3, [pc, #16]	; (100097ec <Transfer+0xc0>)
100097da:	4798      	blx	r3
100097dc:	2064      	movs	r0, #100	; 0x64
100097de:	47a0      	blx	r4
100097e0:	b002      	add	sp, #8
100097e2:	bc1c      	pop	{r2, r3, r4}
100097e4:	4690      	mov	r8, r2
100097e6:	4699      	mov	r9, r3
100097e8:	46a3      	mov	fp, r4
100097ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
100097ec:	10009d59 	.word	0x10009d59
100097f0:	10008a69 	.word	0x10008a69
100097f4:	10008521 	.word	0x10008521
100097f8:	100085b5 	.word	0x100085b5

100097fc <ClearDisplay>:
100097fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100097fe:	0007      	movs	r7, r0
10009800:	2101      	movs	r1, #1
10009802:	2010      	movs	r0, #16
10009804:	4d0a      	ldr	r5, [pc, #40]	; (10009830 <ClearDisplay+0x34>)
10009806:	47a8      	blx	r5
10009808:	2005      	movs	r0, #5
1000980a:	4c0a      	ldr	r4, [pc, #40]	; (10009834 <ClearDisplay+0x38>)
1000980c:	47a0      	blx	r4
1000980e:	2120      	movs	r1, #32
10009810:	0038      	movs	r0, r7
10009812:	4e09      	ldr	r6, [pc, #36]	; (10009838 <ClearDisplay+0x3c>)
10009814:	47b0      	blx	r6
10009816:	2100      	movs	r1, #0
10009818:	0038      	movs	r0, r7
1000981a:	47b0      	blx	r6
1000981c:	20aa      	movs	r0, #170	; 0xaa
1000981e:	47a0      	blx	r4
10009820:	2100      	movs	r1, #0
10009822:	2010      	movs	r0, #16
10009824:	47a8      	blx	r5
10009826:	20fa      	movs	r0, #250	; 0xfa
10009828:	0080      	lsls	r0, r0, #2
1000982a:	47a0      	blx	r4
1000982c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000982e:	46c0      	nop			; (mov r8, r8)
10009830:	10009d59 	.word	0x10009d59
10009834:	10008a69 	.word	0x10008a69
10009838:	10008521 	.word	0x10008521

1000983c <ClearBuffer>:
1000983c:	23c0      	movs	r3, #192	; 0xc0
1000983e:	015b      	lsls	r3, r3, #5
10009840:	18c1      	adds	r1, r0, r3
10009842:	22ff      	movs	r2, #255	; 0xff
10009844:	e006      	b.n	10009854 <ClearBuffer+0x18>
10009846:	7002      	strb	r2, [r0, #0]
10009848:	3001      	adds	r0, #1
1000984a:	4298      	cmp	r0, r3
1000984c:	d1fb      	bne.n	10009846 <ClearBuffer+0xa>
1000984e:	0018      	movs	r0, r3
10009850:	4299      	cmp	r1, r3
10009852:	d002      	beq.n	1000985a <ClearBuffer+0x1e>
10009854:	0003      	movs	r3, r0
10009856:	3330      	adds	r3, #48	; 0x30
10009858:	e7f5      	b.n	10009846 <ClearBuffer+0xa>
1000985a:	4770      	bx	lr

1000985c <dualtimer_isr_handler>:
 *
 * Dualtimer ISR handler.
 *
 */
static void dualtimer_isr_handler(void)
{
1000985c:	b510      	push	{r4, lr}
 * \retval The interrupt status of timer1/timer2
 */
uint8_t dualtimer_get_interrupt_status(enum dualtimer_timer timer)
{
	if (timer == DUALTIMER_TIMER1) {
		return DUALTIMER0->TIMER1MIS.reg;
1000985e:	4b0d      	ldr	r3, [pc, #52]	; (10009894 <dualtimer_isr_handler+0x38>)
10009860:	7d1b      	ldrb	r3, [r3, #20]
 * Dualtimer ISR handler.
 *
 */
static void dualtimer_isr_handler(void)
{
	if (dualtimer_get_interrupt_status(DUALTIMER_TIMER1)) {
10009862:	2b00      	cmp	r3, #0
10009864:	d007      	beq.n	10009876 <dualtimer_isr_handler+0x1a>
 * \param[in]     timer        Timer1/Timer2
 */
void dualtimer_clear_interrupt_status(enum dualtimer_timer timer)
{
	if (timer == DUALTIMER_TIMER1) {
		DUALTIMER0->TIMER1INTCLR.reg = 1;
10009866:	2201      	movs	r2, #1
10009868:	4b0a      	ldr	r3, [pc, #40]	; (10009894 <dualtimer_isr_handler+0x38>)
1000986a:	731a      	strb	r2, [r3, #12]
 */
static void dualtimer_isr_handler(void)
{
	if (dualtimer_get_interrupt_status(DUALTIMER_TIMER1)) {
		dualtimer_clear_interrupt_status(DUALTIMER_TIMER1);
		if (dualtimer_callback_timer1)
1000986c:	4b0a      	ldr	r3, [pc, #40]	; (10009898 <dualtimer_isr_handler+0x3c>)
1000986e:	681b      	ldr	r3, [r3, #0]
10009870:	2b00      	cmp	r3, #0
10009872:	d000      	beq.n	10009876 <dualtimer_isr_handler+0x1a>
			dualtimer_callback_timer1();
10009874:	4798      	blx	r3
uint8_t dualtimer_get_interrupt_status(enum dualtimer_timer timer)
{
	if (timer == DUALTIMER_TIMER1) {
		return DUALTIMER0->TIMER1MIS.reg;
	} else {
		return DUALTIMER0->TIMER2MIS.reg;
10009876:	2334      	movs	r3, #52	; 0x34
10009878:	4a06      	ldr	r2, [pc, #24]	; (10009894 <dualtimer_isr_handler+0x38>)
1000987a:	5cd3      	ldrb	r3, [r2, r3]
	if (dualtimer_get_interrupt_status(DUALTIMER_TIMER1)) {
		dualtimer_clear_interrupt_status(DUALTIMER_TIMER1);
		if (dualtimer_callback_timer1)
			dualtimer_callback_timer1();
	}
	if (dualtimer_get_interrupt_status(DUALTIMER_TIMER2)) {
1000987c:	2b00      	cmp	r3, #0
1000987e:	d007      	beq.n	10009890 <dualtimer_isr_handler+0x34>
void dualtimer_clear_interrupt_status(enum dualtimer_timer timer)
{
	if (timer == DUALTIMER_TIMER1) {
		DUALTIMER0->TIMER1INTCLR.reg = 1;
	} else {
		DUALTIMER0->TIMER2INTCLR.reg = 1;
10009880:	2101      	movs	r1, #1
10009882:	232c      	movs	r3, #44	; 0x2c
10009884:	54d1      	strb	r1, [r2, r3]
		if (dualtimer_callback_timer1)
			dualtimer_callback_timer1();
	}
	if (dualtimer_get_interrupt_status(DUALTIMER_TIMER2)) {
		dualtimer_clear_interrupt_status(DUALTIMER_TIMER2);
		if (dualtimer_callback_timer2)
10009886:	4b05      	ldr	r3, [pc, #20]	; (1000989c <dualtimer_isr_handler+0x40>)
10009888:	681b      	ldr	r3, [r3, #0]
1000988a:	2b00      	cmp	r3, #0
1000988c:	d000      	beq.n	10009890 <dualtimer_isr_handler+0x34>
			dualtimer_callback_timer2();
1000988e:	4798      	blx	r3
	}
}
10009890:	bd10      	pop	{r4, pc}
10009892:	46c0      	nop			; (mov r8, r8)
10009894:	40001000 	.word	0x40001000
10009898:	10015cfc 	.word	0x10015cfc
1000989c:	10015d00 	.word	0x10015d00

100098a0 <dualtimer_get_config_defaults>:
 *
 * \param[out]  config  Pointer to a DUALTIMER module configuration structure to set
 */
void dualtimer_get_config_defaults(struct dualtimer_config *config)
{
	config->timer1.timer_enable = true;
100098a0:	2301      	movs	r3, #1
100098a2:	7003      	strb	r3, [r0, #0]
	config->timer2.timer_enable = true;
100098a4:	7303      	strb	r3, [r0, #12]

	config->timer1.counter_mode = DUALTIMER_PERIODIC_MODE;
100098a6:	2202      	movs	r2, #2
100098a8:	7042      	strb	r2, [r0, #1]
	config->timer2.counter_mode = DUALTIMER_PERIODIC_MODE;
100098aa:	7342      	strb	r2, [r0, #13]

	config->timer1.counter_size = DUALTIMER_COUNTER_SIZE_32BIT;
100098ac:	7083      	strb	r3, [r0, #2]
	config->timer2.counter_size = DUALTIMER_COUNTER_SIZE_32BIT;
100098ae:	7383      	strb	r3, [r0, #14]

	config->timer1.clock_prescaler = DUALTIMER_CLOCK_PRESCALER_DIV1;
100098b0:	2200      	movs	r2, #0
100098b2:	70c2      	strb	r2, [r0, #3]
	config->timer2.clock_prescaler = DUALTIMER_CLOCK_PRESCALER_DIV1;
100098b4:	73c2      	strb	r2, [r0, #15]

	config->timer1.interrup_enable = true;
100098b6:	7103      	strb	r3, [r0, #4]
	config->timer2.interrup_enable = true;
100098b8:	7403      	strb	r3, [r0, #16]

	config->timer1.load_value = 0;
100098ba:	6082      	str	r2, [r0, #8]
	config->timer2.load_value = 0;
100098bc:	6142      	str	r2, [r0, #20]

	config->clock_source = DUALTIMER_CLK_INPUT_0;
100098be:	7602      	strb	r2, [r0, #24]
}
100098c0:	4770      	bx	lr
100098c2:	46c0      	nop			; (mov r8, r8)

100098c4 <dualtimer_get_value>:
 *
 * \retval Timer1/Timer2 current value
 */
uint32_t dualtimer_get_value(enum dualtimer_timer timer)
{
	if (timer == DUALTIMER_TIMER1) {
100098c4:	2800      	cmp	r0, #0
100098c6:	d102      	bne.n	100098ce <dualtimer_get_value+0xa>
		return DUALTIMER0->TIMER1VALUE.reg;
100098c8:	4b02      	ldr	r3, [pc, #8]	; (100098d4 <dualtimer_get_value+0x10>)
100098ca:	6858      	ldr	r0, [r3, #4]
100098cc:	e001      	b.n	100098d2 <dualtimer_get_value+0xe>
	} else {
		return DUALTIMER0->TIMER2VALUE.reg;
100098ce:	4b01      	ldr	r3, [pc, #4]	; (100098d4 <dualtimer_get_value+0x10>)
100098d0:	6a58      	ldr	r0, [r3, #36]	; 0x24
	}
}
100098d2:	4770      	bx	lr
100098d4:	40001000 	.word	0x40001000

100098d8 <dualtimer_set_counter>:
 * \param[in]     value        Load value
 */
void dualtimer_set_counter(enum dualtimer_timer timer,
		enum dualtimer_set_register cur_bg, uint32_t value)
{
	if (timer == DUALTIMER_TIMER1) {
100098d8:	2800      	cmp	r0, #0
100098da:	d107      	bne.n	100098ec <dualtimer_set_counter+0x14>
		if (cur_bg == DUALTIMER_SET_CURRUNT_REG) {
100098dc:	2900      	cmp	r1, #0
100098de:	d102      	bne.n	100098e6 <dualtimer_set_counter+0xe>
			DUALTIMER0->TIMER1LOAD.reg = value;
100098e0:	4b06      	ldr	r3, [pc, #24]	; (100098fc <dualtimer_set_counter+0x24>)
100098e2:	601a      	str	r2, [r3, #0]
100098e4:	e009      	b.n	100098fa <dualtimer_set_counter+0x22>
		} else {
			DUALTIMER0->TIMER1BGLOAD.reg = value;
100098e6:	4b05      	ldr	r3, [pc, #20]	; (100098fc <dualtimer_set_counter+0x24>)
100098e8:	619a      	str	r2, [r3, #24]
100098ea:	e006      	b.n	100098fa <dualtimer_set_counter+0x22>
		}
	} else {
		if (cur_bg == DUALTIMER_SET_CURRUNT_REG) {
100098ec:	2900      	cmp	r1, #0
100098ee:	d102      	bne.n	100098f6 <dualtimer_set_counter+0x1e>
			DUALTIMER0->TIMER2LOAD.reg = value;
100098f0:	4b02      	ldr	r3, [pc, #8]	; (100098fc <dualtimer_set_counter+0x24>)
100098f2:	621a      	str	r2, [r3, #32]
100098f4:	e001      	b.n	100098fa <dualtimer_set_counter+0x22>
			} else {
			DUALTIMER0->TIMER2BGLOAD.reg = value;
100098f6:	4b01      	ldr	r3, [pc, #4]	; (100098fc <dualtimer_set_counter+0x24>)
100098f8:	639a      	str	r2, [r3, #56]	; 0x38
		}
	}
}
100098fa:	4770      	bx	lr
100098fc:	40001000 	.word	0x40001000

10009900 <dualtimer_enable>:
 *
 * \param[in]     timer        Timer1/Timer2
 */
void dualtimer_enable(enum dualtimer_timer timer)
{
	if (timer == DUALTIMER_TIMER1) {
10009900:	2800      	cmp	r0, #0
10009902:	d105      	bne.n	10009910 <dualtimer_enable+0x10>
		DUALTIMER0->TIMER1CONTROL.reg |= DUALTIMER_TIMER1CONTROL_TIMER_ENABLE;
10009904:	4a06      	ldr	r2, [pc, #24]	; (10009920 <dualtimer_enable+0x20>)
10009906:	7a11      	ldrb	r1, [r2, #8]
10009908:	2380      	movs	r3, #128	; 0x80
1000990a:	430b      	orrs	r3, r1
1000990c:	7213      	strb	r3, [r2, #8]
1000990e:	e005      	b.n	1000991c <dualtimer_enable+0x1c>
	} else {
		DUALTIMER0->TIMER2CONTROL.reg |= DUALTIMER_TIMER2CONTROL_TIMER_ENABLE;
10009910:	4903      	ldr	r1, [pc, #12]	; (10009920 <dualtimer_enable+0x20>)
10009912:	2228      	movs	r2, #40	; 0x28
10009914:	5c88      	ldrb	r0, [r1, r2]
10009916:	2380      	movs	r3, #128	; 0x80
10009918:	4303      	orrs	r3, r0
1000991a:	548b      	strb	r3, [r1, r2]
	}
}
1000991c:	4770      	bx	lr
1000991e:	46c0      	nop			; (mov r8, r8)
10009920:	40001000 	.word	0x40001000

10009924 <dualtimer_init>:
 * \param[in]     config       Pointer to the Dualtimer configuration options struct
 *
 * \return Status of the initialization procedure.
 */
void dualtimer_init(const struct dualtimer_config *config)
{
10009924:	b570      	push	{r4, r5, r6, lr}
10009926:	0004      	movs	r4, r0
	uint8_t regval = 0;

	/* Global reset */
	system_peripheral_reset(PERIPHERAL_DUALT_TIMER);
10009928:	2004      	movs	r0, #4
1000992a:	4b39      	ldr	r3, [pc, #228]	; (10009a10 <dualtimer_init+0xec>)
1000992c:	4798      	blx	r3

	/* Common config */
	if (config->timer1.timer_enable || config->timer2.timer_enable) {
1000992e:	7823      	ldrb	r3, [r4, #0]
10009930:	2b00      	cmp	r3, #0
10009932:	d102      	bne.n	1000993a <dualtimer_init+0x16>
10009934:	7b23      	ldrb	r3, [r4, #12]
10009936:	2b00      	cmp	r3, #0
10009938:	d065      	beq.n	10009a06 <dualtimer_init+0xe2>
		LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |=
1000993a:	4936      	ldr	r1, [pc, #216]	; (10009a14 <dualtimer_init+0xf0>)
1000993c:	68ca      	ldr	r2, [r1, #12]
1000993e:	2320      	movs	r3, #32
10009940:	4313      	orrs	r3, r2
10009942:	60cb      	str	r3, [r1, #12]
		LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_DUALTIMER0_CLK_EN;
		LPMCU_MISC_REGS0->LPMCU_CTRL.bit.DUALTIMER0_CLK_SEL = config->clock_source;
10009944:	7e22      	ldrb	r2, [r4, #24]
10009946:	698b      	ldr	r3, [r1, #24]
10009948:	2003      	movs	r0, #3
1000994a:	4002      	ands	r2, r0
1000994c:	0112      	lsls	r2, r2, #4
1000994e:	302d      	adds	r0, #45	; 0x2d
10009950:	4383      	bics	r3, r0
10009952:	4313      	orrs	r3, r2
10009954:	618b      	str	r3, [r1, #24]
	}
	
	/* Timer1 config */
	if (config->timer1.timer_enable) {
10009956:	7823      	ldrb	r3, [r4, #0]
10009958:	2b00      	cmp	r3, #0
1000995a:	d026      	beq.n	100099aa <dualtimer_init+0x86>
		if (config->timer1.counter_mode == DUALTIMER_ONE_SHOT_MODE) {
1000995c:	7863      	ldrb	r3, [r4, #1]
			regval = DUALTIMER_TIMER1CONTROL_ONE_SHOT_COUNT_1;
1000995e:	2101      	movs	r1, #1
		LPMCU_MISC_REGS0->LPMCU_CTRL.bit.DUALTIMER0_CLK_SEL = config->clock_source;
	}
	
	/* Timer1 config */
	if (config->timer1.timer_enable) {
		if (config->timer1.counter_mode == DUALTIMER_ONE_SHOT_MODE) {
10009960:	2b00      	cmp	r3, #0
10009962:	d003      	beq.n	1000996c <dualtimer_init+0x48>
			regval = DUALTIMER_TIMER1CONTROL_ONE_SHOT_COUNT_1;
		} else if (config->timer1.counter_mode == DUALTIMER_FREE_RUNNING_MODE) {
			regval = DUALTIMER_TIMER1CONTROL_TIMER_MODE_0;
		} else if (config->timer1.counter_mode == DUALTIMER_PERIODIC_MODE) {
			regval = DUALTIMER_TIMER1CONTROL_TIMER_MODE_1;
10009964:	3b02      	subs	r3, #2
10009966:	425d      	negs	r5, r3
10009968:	415d      	adcs	r5, r3
1000996a:	01a9      	lsls	r1, r5, #6
		}
		regval |= (DUALTIMER_TIMER1CONTROL_TIMER_SIZE &
1000996c:	78a2      	ldrb	r2, [r4, #2]
1000996e:	0052      	lsls	r2, r2, #1
10009970:	2502      	movs	r5, #2
10009972:	402a      	ands	r2, r5
10009974:	78e3      	ldrb	r3, [r4, #3]
10009976:	009b      	lsls	r3, r3, #2
10009978:	350a      	adds	r5, #10
1000997a:	402b      	ands	r3, r5
1000997c:	431a      	orrs	r2, r3
1000997e:	0015      	movs	r5, r2
10009980:	430d      	orrs	r5, r1
				((config->timer1.counter_size) << DUALTIMER_TIMER1CONTROL_TIMER_SIZE_Pos)) |
				DUALTIMER_TIMER1CONTROL_TIMERPRE(config->timer1.clock_prescaler);
		if (config->timer1.interrup_enable) {
10009982:	7923      	ldrb	r3, [r4, #4]
10009984:	2b00      	cmp	r3, #0
10009986:	d001      	beq.n	1000998c <dualtimer_init+0x68>
			regval |= DUALTIMER_TIMER1CONTROL_INTERRUPT_ENABLE;
10009988:	2320      	movs	r3, #32
1000998a:	431d      	orrs	r5, r3
		}
		DUALTIMER0->TIMER1LOAD.reg = config->timer1.load_value;
1000998c:	4b22      	ldr	r3, [pc, #136]	; (10009a18 <dualtimer_init+0xf4>)
1000998e:	68a2      	ldr	r2, [r4, #8]
10009990:	601a      	str	r2, [r3, #0]
		DUALTIMER0->TIMER1CONTROL.reg = regval;
10009992:	721d      	strb	r5, [r3, #8]
		LPMCU_MISC_REGS0->DUALTIMER0_CTRL.reg |= LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_1_ENABLE;
10009994:	491f      	ldr	r1, [pc, #124]	; (10009a14 <dualtimer_init+0xf0>)
10009996:	22c4      	movs	r2, #196	; 0xc4
10009998:	0052      	lsls	r2, r2, #1
1000999a:	5c88      	ldrb	r0, [r1, r2]
1000999c:	2301      	movs	r3, #1
1000999e:	4303      	orrs	r3, r0
100099a0:	548b      	strb	r3, [r1, r2]
		dualtimer_enable(DUALTIMER_TIMER1);
100099a2:	2000      	movs	r0, #0
100099a4:	4b1d      	ldr	r3, [pc, #116]	; (10009a1c <dualtimer_init+0xf8>)
100099a6:	4798      	blx	r3
100099a8:	e000      	b.n	100099ac <dualtimer_init+0x88>
 *
 * \return Status of the initialization procedure.
 */
void dualtimer_init(const struct dualtimer_config *config)
{
	uint8_t regval = 0;
100099aa:	2500      	movs	r5, #0
		LPMCU_MISC_REGS0->DUALTIMER0_CTRL.reg |= LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_1_ENABLE;
		dualtimer_enable(DUALTIMER_TIMER1);
	}

	/* Timer2 config */
	if (config->timer2.timer_enable) {
100099ac:	7b23      	ldrb	r3, [r4, #12]
100099ae:	2b00      	cmp	r3, #0
100099b0:	d029      	beq.n	10009a06 <dualtimer_init+0xe2>
		if (config->timer2.counter_mode == DUALTIMER_ONE_SHOT_MODE) {
100099b2:	7b63      	ldrb	r3, [r4, #13]
100099b4:	2b00      	cmp	r3, #0
100099b6:	d005      	beq.n	100099c4 <dualtimer_init+0xa0>
			regval = DUALTIMER_TIMER2CONTROL_ONE_SHOT_COUNT_1;
		} else if (config->timer2.counter_mode == DUALTIMER_FREE_RUNNING_MODE) {
100099b8:	2b01      	cmp	r3, #1
100099ba:	d005      	beq.n	100099c8 <dualtimer_init+0xa4>
			regval = DUALTIMER_TIMER2CONTROL_TIMER_MODE_0;
		} else if (config->timer2.counter_mode == DUALTIMER_PERIODIC_MODE) {
100099bc:	2b02      	cmp	r3, #2
100099be:	d104      	bne.n	100099ca <dualtimer_init+0xa6>
			regval = DUALTIMER_TIMER2CONTROL_TIMER_MODE_1;
100099c0:	2540      	movs	r5, #64	; 0x40
100099c2:	e002      	b.n	100099ca <dualtimer_init+0xa6>
	}

	/* Timer2 config */
	if (config->timer2.timer_enable) {
		if (config->timer2.counter_mode == DUALTIMER_ONE_SHOT_MODE) {
			regval = DUALTIMER_TIMER2CONTROL_ONE_SHOT_COUNT_1;
100099c4:	2501      	movs	r5, #1
100099c6:	e000      	b.n	100099ca <dualtimer_init+0xa6>
		} else if (config->timer2.counter_mode == DUALTIMER_FREE_RUNNING_MODE) {
			regval = DUALTIMER_TIMER2CONTROL_TIMER_MODE_0;
100099c8:	2500      	movs	r5, #0
		} else if (config->timer2.counter_mode == DUALTIMER_PERIODIC_MODE) {
			regval = DUALTIMER_TIMER2CONTROL_TIMER_MODE_1;
		}
		regval |= (DUALTIMER_TIMER2CONTROL_TIMER_SIZE &
100099ca:	7ba3      	ldrb	r3, [r4, #14]
100099cc:	005b      	lsls	r3, r3, #1
100099ce:	2102      	movs	r1, #2
100099d0:	4019      	ands	r1, r3
100099d2:	7be2      	ldrb	r2, [r4, #15]
100099d4:	0092      	lsls	r2, r2, #2
100099d6:	230c      	movs	r3, #12
100099d8:	4013      	ands	r3, r2
100099da:	430b      	orrs	r3, r1
100099dc:	431d      	orrs	r5, r3
				((config->timer2.counter_size) << DUALTIMER_TIMER2CONTROL_TIMER_SIZE_Pos)) |
				DUALTIMER_TIMER2CONTROL_TIMERPRE(config->timer2.clock_prescaler);
		if (config->timer2.interrup_enable) {
100099de:	7c23      	ldrb	r3, [r4, #16]
100099e0:	2b00      	cmp	r3, #0
100099e2:	d001      	beq.n	100099e8 <dualtimer_init+0xc4>
			regval |= DUALTIMER_TIMER2CONTROL_INTERRUPT_ENABLE;
100099e4:	2320      	movs	r3, #32
100099e6:	431d      	orrs	r5, r3
		}
		DUALTIMER0->TIMER2LOAD.reg = config->timer2.load_value;
100099e8:	6962      	ldr	r2, [r4, #20]
100099ea:	4b0b      	ldr	r3, [pc, #44]	; (10009a18 <dualtimer_init+0xf4>)
100099ec:	621a      	str	r2, [r3, #32]
		DUALTIMER0->TIMER2CONTROL.reg = regval;
100099ee:	2228      	movs	r2, #40	; 0x28
100099f0:	549d      	strb	r5, [r3, r2]
		LPMCU_MISC_REGS0->DUALTIMER0_CTRL.reg |= LPMCU_MISC_REGS_DUALTIMER0_CTRL_CNTR_2_ENABLE;
100099f2:	4908      	ldr	r1, [pc, #32]	; (10009a14 <dualtimer_init+0xf0>)
100099f4:	3261      	adds	r2, #97	; 0x61
100099f6:	32ff      	adds	r2, #255	; 0xff
100099f8:	5c88      	ldrb	r0, [r1, r2]
100099fa:	2302      	movs	r3, #2
100099fc:	4303      	orrs	r3, r0
100099fe:	548b      	strb	r3, [r1, r2]
		dualtimer_enable(DUALTIMER_TIMER2);
10009a00:	2001      	movs	r0, #1
10009a02:	4b06      	ldr	r3, [pc, #24]	; (10009a1c <dualtimer_init+0xf8>)
10009a04:	4798      	blx	r3
	}

	system_register_isr(RAM_ISR_TABLE_DUALTIMER_INDEX, (uint32_t)dualtimer_isr_handler);
10009a06:	4906      	ldr	r1, [pc, #24]	; (10009a20 <dualtimer_init+0xfc>)
10009a08:	201e      	movs	r0, #30
10009a0a:	4b06      	ldr	r3, [pc, #24]	; (10009a24 <dualtimer_init+0x100>)
10009a0c:	4798      	blx	r3
}
10009a0e:	bd70      	pop	{r4, r5, r6, pc}
10009a10:	1000a86d 	.word	0x1000a86d
10009a14:	4000b000 	.word	0x4000b000
10009a18:	40001000 	.word	0x40001000
10009a1c:	10009901 	.word	0x10009901
10009a20:	1000985d 	.word	0x1000985d
10009a24:	1000acd5 	.word	0x1000acd5

10009a28 <dualtimer_register_callback>:
 *
 * \param[in]     callback_func Pointer to callback function
 */
void dualtimer_register_callback(enum dualtimer_timer timer, dualtimer_callback_t fun)
{
	if (timer == DUALTIMER_TIMER1) {
10009a28:	2800      	cmp	r0, #0
10009a2a:	d102      	bne.n	10009a32 <dualtimer_register_callback+0xa>
		dualtimer_callback_timer1 = fun;
10009a2c:	4b02      	ldr	r3, [pc, #8]	; (10009a38 <dualtimer_register_callback+0x10>)
10009a2e:	6019      	str	r1, [r3, #0]
10009a30:	e001      	b.n	10009a36 <dualtimer_register_callback+0xe>
	} else {
		dualtimer_callback_timer2 = fun;
10009a32:	4b02      	ldr	r3, [pc, #8]	; (10009a3c <dualtimer_register_callback+0x14>)
10009a34:	6019      	str	r1, [r3, #0]
	}
}
10009a36:	4770      	bx	lr
10009a38:	10015cfc 	.word	0x10015cfc
10009a3c:	10015d00 	.word	0x10015d00

10009a40 <gpio_port0_isr_handler>:
 *
 * This function will enter interrupt.
 *
 */
static void gpio_port0_isr_handler(void)
{
10009a40:	b570      	push	{r4, r5, r6, lr}
	uint32_t flag = _gpio_instances[0].hw->INTSTATUSCLEAR.reg;
10009a42:	4b16      	ldr	r3, [pc, #88]	; (10009a9c <gpio_port0_isr_handler+0x5c>)
10009a44:	681d      	ldr	r5, [r3, #0]
10009a46:	8f29      	ldrh	r1, [r5, #56]	; 0x38
10009a48:	b289      	uxth	r1, r1

	for (uint8_t i = 0; i < 16; i++){
		if (flag & (1 << i)) {
10009a4a:	07cb      	lsls	r3, r1, #31
10009a4c:	d407      	bmi.n	10009a5e <gpio_port0_isr_handler+0x1e>
10009a4e:	2301      	movs	r3, #1
10009a50:	2401      	movs	r4, #1
10009a52:	0018      	movs	r0, r3
10009a54:	0022      	movs	r2, r4
10009a56:	409a      	lsls	r2, r3
10009a58:	4211      	tst	r1, r2
10009a5a:	d014      	beq.n	10009a86 <gpio_port0_isr_handler+0x46>
10009a5c:	e001      	b.n	10009a62 <gpio_port0_isr_handler+0x22>
10009a5e:	2201      	movs	r2, #1
10009a60:	2000      	movs	r0, #0
			/* Clear interrupt flag */
			_gpio_instances[0].hw->INTSTATUSCLEAR.reg = (1 << i);
10009a62:	b292      	uxth	r2, r2
10009a64:	872a      	strh	r2, [r5, #56]	; 0x38
			if ((_gpio_instances[0].callback_enable_mask & (1 << i)) && \
10009a66:	2346      	movs	r3, #70	; 0x46
10009a68:	4a0c      	ldr	r2, [pc, #48]	; (10009a9c <gpio_port0_isr_handler+0x5c>)
10009a6a:	5ad3      	ldrh	r3, [r2, r3]
10009a6c:	4103      	asrs	r3, r0
10009a6e:	07db      	lsls	r3, r3, #31
10009a70:	d50c      	bpl.n	10009a8c <gpio_port0_isr_handler+0x4c>
                    (_gpio_instances[0].callback_reg_mask & (1 << i)))
10009a72:	2344      	movs	r3, #68	; 0x44

	for (uint8_t i = 0; i < 16; i++){
		if (flag & (1 << i)) {
			/* Clear interrupt flag */
			_gpio_instances[0].hw->INTSTATUSCLEAR.reg = (1 << i);
			if ((_gpio_instances[0].callback_enable_mask & (1 << i)) && \
10009a74:	5ad3      	ldrh	r3, [r2, r3]
10009a76:	4103      	asrs	r3, r0
10009a78:	07db      	lsls	r3, r3, #31
10009a7a:	d507      	bpl.n	10009a8c <gpio_port0_isr_handler+0x4c>
                    (_gpio_instances[0].callback_reg_mask & (1 << i)))
                _gpio_instances[0].callback[i]();
10009a7c:	0080      	lsls	r0, r0, #2
10009a7e:	1810      	adds	r0, r2, r0
10009a80:	6843      	ldr	r3, [r0, #4]
10009a82:	4798      	blx	r3
10009a84:	e002      	b.n	10009a8c <gpio_port0_isr_handler+0x4c>
10009a86:	3301      	adds	r3, #1
 */
static void gpio_port0_isr_handler(void)
{
	uint32_t flag = _gpio_instances[0].hw->INTSTATUSCLEAR.reg;

	for (uint8_t i = 0; i < 16; i++){
10009a88:	2b10      	cmp	r3, #16
10009a8a:	d1e2      	bne.n	10009a52 <gpio_port0_isr_handler+0x12>

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
10009a8c:	2180      	movs	r1, #128	; 0x80
10009a8e:	0409      	lsls	r1, r1, #16
10009a90:	23c0      	movs	r3, #192	; 0xc0
10009a92:	005b      	lsls	r3, r3, #1
10009a94:	4a02      	ldr	r2, [pc, #8]	; (10009aa0 <gpio_port0_isr_handler+0x60>)
10009a96:	50d1      	str	r1, [r2, r3]
                _gpio_instances[0].callback[i]();
			break;
		}
	}
	NVIC_ClearPendingIRQ(GPIO0_IRQn);
}
10009a98:	bd70      	pop	{r4, r5, r6, pc}
10009a9a:	46c0      	nop			; (mov r8, r8)
10009a9c:	100177b0 	.word	0x100177b0
10009aa0:	e000e100 	.word	0xe000e100

10009aa4 <gpio_port1_isr_handler>:
 *
 * This function will enter interrupt.
 *
 */
static void gpio_port1_isr_handler(void)
{
10009aa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint32_t flag = _gpio_instances[1].hw->INTSTATUSCLEAR.reg;
10009aa6:	4b18      	ldr	r3, [pc, #96]	; (10009b08 <gpio_port1_isr_handler+0x64>)
10009aa8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
10009aaa:	8f1e      	ldrh	r6, [r3, #56]	; 0x38
10009aac:	b2b6      	uxth	r6, r6
10009aae:	0037      	movs	r7, r6
10009ab0:	2400      	movs	r4, #0

	for (uint8_t i = 0; i < 16; i++){
		/* For AON wakeup pin clear interrupt */
		if (flag & ((1<<15) | (1<<14) | (1<<13))) {
10009ab2:	0b76      	lsrs	r6, r6, #13
10009ab4:	0376      	lsls	r6, r6, #13
			aon_handle_ext_wakeup_isr();
		}

		if (flag & (1 << i)) {
			/* Clear interrupt flag */
			_gpio_instances[1].hw->INTSTATUSCLEAR.reg = (1 << i);
10009ab6:	4d14      	ldr	r5, [pc, #80]	; (10009b08 <gpio_port1_isr_handler+0x64>)
{
	uint32_t flag = _gpio_instances[1].hw->INTSTATUSCLEAR.reg;

	for (uint8_t i = 0; i < 16; i++){
		/* For AON wakeup pin clear interrupt */
		if (flag & ((1<<15) | (1<<14) | (1<<13))) {
10009ab8:	2e00      	cmp	r6, #0
10009aba:	d001      	beq.n	10009ac0 <gpio_port1_isr_handler+0x1c>
			aon_handle_ext_wakeup_isr();
10009abc:	4b13      	ldr	r3, [pc, #76]	; (10009b0c <gpio_port1_isr_handler+0x68>)
10009abe:	4798      	blx	r3
		}

		if (flag & (1 << i)) {
10009ac0:	0022      	movs	r2, r4
10009ac2:	2301      	movs	r3, #1
10009ac4:	40a3      	lsls	r3, r4
10009ac6:	421f      	tst	r7, r3
10009ac8:	d013      	beq.n	10009af2 <gpio_port1_isr_handler+0x4e>
			/* Clear interrupt flag */
			_gpio_instances[1].hw->INTSTATUSCLEAR.reg = (1 << i);
10009aca:	b29b      	uxth	r3, r3
10009acc:	6ca9      	ldr	r1, [r5, #72]	; 0x48
10009ace:	870b      	strh	r3, [r1, #56]	; 0x38
			if ((_gpio_instances[1].callback_enable_mask & (1 << i)) && \
10009ad0:	238e      	movs	r3, #142	; 0x8e
10009ad2:	5aeb      	ldrh	r3, [r5, r3]
10009ad4:	4123      	asrs	r3, r4
10009ad6:	07db      	lsls	r3, r3, #31
10009ad8:	d50b      	bpl.n	10009af2 <gpio_port1_isr_handler+0x4e>
			(_gpio_instances[1].callback_reg_mask & (1 << i))) {
10009ada:	238c      	movs	r3, #140	; 0x8c
		}

		if (flag & (1 << i)) {
			/* Clear interrupt flag */
			_gpio_instances[1].hw->INTSTATUSCLEAR.reg = (1 << i);
			if ((_gpio_instances[1].callback_enable_mask & (1 << i)) && \
10009adc:	490a      	ldr	r1, [pc, #40]	; (10009b08 <gpio_port1_isr_handler+0x64>)
10009ade:	5acb      	ldrh	r3, [r1, r3]
10009ae0:	4123      	asrs	r3, r4
10009ae2:	07db      	lsls	r3, r3, #31
10009ae4:	d505      	bpl.n	10009af2 <gpio_port1_isr_handler+0x4e>
			(_gpio_instances[1].callback_reg_mask & (1 << i))) {
				_gpio_instances[1].callback[i]();
10009ae6:	3212      	adds	r2, #18
10009ae8:	0092      	lsls	r2, r2, #2
10009aea:	188a      	adds	r2, r1, r2
10009aec:	6853      	ldr	r3, [r2, #4]
10009aee:	4798      	blx	r3
				break;
10009af0:	e002      	b.n	10009af8 <gpio_port1_isr_handler+0x54>
10009af2:	3401      	adds	r4, #1
 */
static void gpio_port1_isr_handler(void)
{
	uint32_t flag = _gpio_instances[1].hw->INTSTATUSCLEAR.reg;

	for (uint8_t i = 0; i < 16; i++){
10009af4:	2c10      	cmp	r4, #16
10009af6:	d1df      	bne.n	10009ab8 <gpio_port1_isr_handler+0x14>
10009af8:	2180      	movs	r1, #128	; 0x80
10009afa:	0449      	lsls	r1, r1, #17
10009afc:	23c0      	movs	r3, #192	; 0xc0
10009afe:	005b      	lsls	r3, r3, #1
10009b00:	4a03      	ldr	r2, [pc, #12]	; (10009b10 <gpio_port1_isr_handler+0x6c>)
10009b02:	50d1      	str	r1, [r2, r3]
				break;
			}
		}
	}
	NVIC_ClearPendingIRQ(GPIO1_IRQn);
}
10009b04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10009b06:	46c0      	nop			; (mov r8, r8)
10009b08:	100177b0 	.word	0x100177b0
10009b0c:	0001bc51 	.word	0x0001bc51
10009b10:	e000e100 	.word	0xe000e100

10009b14 <gpio_port2_isr_handler>:
 *
 * This function will enter interrupt.
 *
 */
static void gpio_port2_isr_handler(void)
{
10009b14:	b510      	push	{r4, lr}
	uint32_t flag = _gpio_instances[2].hw->INTSTATUSCLEAR.reg;
10009b16:	2390      	movs	r3, #144	; 0x90
10009b18:	4a1b      	ldr	r2, [pc, #108]	; (10009b88 <gpio_port2_isr_handler+0x74>)
10009b1a:	58d2      	ldr	r2, [r2, r3]
10009b1c:	8f13      	ldrh	r3, [r2, #56]	; 0x38
10009b1e:	b29b      	uxth	r3, r3

	for (uint8_t i = 12; i < 16; i++){
		if (flag & (1 << i)) {
10009b20:	04d9      	lsls	r1, r3, #19
10009b22:	d414      	bmi.n	10009b4e <gpio_port2_isr_handler+0x3a>
10009b24:	0499      	lsls	r1, r3, #18
10009b26:	d40a      	bmi.n	10009b3e <gpio_port2_isr_handler+0x2a>
10009b28:	0459      	lsls	r1, r3, #17
10009b2a:	d40c      	bmi.n	10009b46 <gpio_port2_isr_handler+0x32>
10009b2c:	0bdb      	lsrs	r3, r3, #15
10009b2e:	03db      	lsls	r3, r3, #15
10009b30:	b29b      	uxth	r3, r3
10009b32:	2b00      	cmp	r3, #0
10009b34:	d020      	beq.n	10009b78 <gpio_port2_isr_handler+0x64>
10009b36:	2380      	movs	r3, #128	; 0x80
10009b38:	021b      	lsls	r3, r3, #8
10009b3a:	210f      	movs	r1, #15
10009b3c:	e00a      	b.n	10009b54 <gpio_port2_isr_handler+0x40>
10009b3e:	2380      	movs	r3, #128	; 0x80
10009b40:	019b      	lsls	r3, r3, #6
10009b42:	210d      	movs	r1, #13
10009b44:	e006      	b.n	10009b54 <gpio_port2_isr_handler+0x40>
10009b46:	2380      	movs	r3, #128	; 0x80
10009b48:	01db      	lsls	r3, r3, #7
10009b4a:	210e      	movs	r1, #14
10009b4c:	e002      	b.n	10009b54 <gpio_port2_isr_handler+0x40>
10009b4e:	2380      	movs	r3, #128	; 0x80
10009b50:	015b      	lsls	r3, r3, #5
10009b52:	210c      	movs	r1, #12
			/* Clear interrupt flag */
			_gpio_instances[2].hw->INTSTATUSCLEAR.reg = (1 << i);
10009b54:	b29b      	uxth	r3, r3
10009b56:	8713      	strh	r3, [r2, #56]	; 0x38
			if ((_gpio_instances[2].callback_enable_mask & (1 << i)) && \
10009b58:	23d6      	movs	r3, #214	; 0xd6
10009b5a:	4a0b      	ldr	r2, [pc, #44]	; (10009b88 <gpio_port2_isr_handler+0x74>)
10009b5c:	5ad3      	ldrh	r3, [r2, r3]
10009b5e:	410b      	asrs	r3, r1
10009b60:	07db      	lsls	r3, r3, #31
10009b62:	d509      	bpl.n	10009b78 <gpio_port2_isr_handler+0x64>
                    (_gpio_instances[2].callback_reg_mask & (1 << i)))
10009b64:	23d4      	movs	r3, #212	; 0xd4

	for (uint8_t i = 12; i < 16; i++){
		if (flag & (1 << i)) {
			/* Clear interrupt flag */
			_gpio_instances[2].hw->INTSTATUSCLEAR.reg = (1 << i);
			if ((_gpio_instances[2].callback_enable_mask & (1 << i)) && \
10009b66:	5ad3      	ldrh	r3, [r2, r3]
10009b68:	410b      	asrs	r3, r1
10009b6a:	07db      	lsls	r3, r3, #31
10009b6c:	d504      	bpl.n	10009b78 <gpio_port2_isr_handler+0x64>
                    (_gpio_instances[2].callback_reg_mask & (1 << i)))
                _gpio_instances[2].callback[i]();
10009b6e:	3124      	adds	r1, #36	; 0x24
10009b70:	0089      	lsls	r1, r1, #2
10009b72:	1851      	adds	r1, r2, r1
10009b74:	684b      	ldr	r3, [r1, #4]
10009b76:	4798      	blx	r3
10009b78:	2180      	movs	r1, #128	; 0x80
10009b7a:	0489      	lsls	r1, r1, #18
10009b7c:	23c0      	movs	r3, #192	; 0xc0
10009b7e:	005b      	lsls	r3, r3, #1
10009b80:	4a02      	ldr	r2, [pc, #8]	; (10009b8c <gpio_port2_isr_handler+0x78>)
10009b82:	50d1      	str	r1, [r2, r3]
			break;
		}
	}
	NVIC_ClearPendingIRQ(GPIO2_IRQn);
}
10009b84:	bd10      	pop	{r4, pc}
10009b86:	46c0      	nop			; (mov r8, r8)
10009b88:	100177b0 	.word	0x100177b0
10009b8c:	e000e100 	.word	0xe000e100

10009b90 <gpio_get_config_defaults>:
 *  \param[out] config  Configuration structure to initialize to default values.
 */
void gpio_get_config_defaults(struct gpio_config *const config)
{
	/* Default configuration values */
	config->direction  = GPIO_PIN_DIR_INPUT;
10009b90:	2300      	movs	r3, #0
10009b92:	7003      	strb	r3, [r0, #0]
	config->input_pull = GPIO_PIN_PULL_UP;
10009b94:	2201      	movs	r2, #1
10009b96:	7042      	strb	r2, [r0, #1]
	config->powersave  = false;
10009b98:	7083      	strb	r3, [r0, #2]
	config->aon_wakeup = false;
10009b9a:	70c3      	strb	r3, [r0, #3]
}
10009b9c:	4770      	bx	lr
10009b9e:	46c0      	nop			; (mov r8, r8)

10009ba0 <gpio_pin_set_config>:
 *  \retval STATUS_RESOURCE_NOT_AVAILABLE   Requested gpio is already in use.
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
10009ba0:	b570      	push	{r4, r5, r6, lr}
	* GPIO_0 & GPIO_1 are used for SWD.
	*/
	if ((gpio_pin == PIN_LP_GPIO_0) || \
		(gpio_pin == PIN_LP_GPIO_1))
	{
		status = STATUS_ERR_INVALID_ARG;
10009ba2:	2317      	movs	r3, #23
	enum status_code status = STATUS_OK;

	/* Following GPIO's should never be modified by user.
	* GPIO_0 & GPIO_1 are used for SWD.
	*/
	if ((gpio_pin == PIN_LP_GPIO_0) || \
10009ba4:	2801      	cmp	r0, #1
10009ba6:	d800      	bhi.n	10009baa <gpio_pin_set_config+0xa>
10009ba8:	e0c8      	b.n	10009d3c <gpio_pin_set_config+0x19c>
		(gpio_pin == PIN_LP_GPIO_1))
	{
		status = STATUS_ERR_INVALID_ARG;
	} else {
		if (gpio_pin <= 7) {
10009baa:	2807      	cmp	r0, #7
10009bac:	d809      	bhi.n	10009bc2 <gpio_pin_set_config+0x22>
			LPMCU_MISC_REGS0->PINMUX_SEL_0.reg &= ~(7 << ((gpio_pin % 8) * 4));
10009bae:	4d64      	ldr	r5, [pc, #400]	; (10009d40 <gpio_pin_set_config+0x1a0>)
10009bb0:	6c6a      	ldr	r2, [r5, #68]	; 0x44
10009bb2:	3b10      	subs	r3, #16
10009bb4:	4003      	ands	r3, r0
10009bb6:	009b      	lsls	r3, r3, #2
10009bb8:	2407      	movs	r4, #7
10009bba:	409c      	lsls	r4, r3
10009bbc:	43a2      	bics	r2, r4
10009bbe:	646a      	str	r2, [r5, #68]	; 0x44
10009bc0:	e029      	b.n	10009c16 <gpio_pin_set_config+0x76>
		} else if (gpio_pin <= 15) {
10009bc2:	280f      	cmp	r0, #15
10009bc4:	d809      	bhi.n	10009bda <gpio_pin_set_config+0x3a>
			LPMCU_MISC_REGS0->PINMUX_SEL_1.reg &= ~(7 << ((gpio_pin % 8) * 4));
10009bc6:	4d5e      	ldr	r5, [pc, #376]	; (10009d40 <gpio_pin_set_config+0x1a0>)
10009bc8:	6caa      	ldr	r2, [r5, #72]	; 0x48
10009bca:	2307      	movs	r3, #7
10009bcc:	4003      	ands	r3, r0
10009bce:	009b      	lsls	r3, r3, #2
10009bd0:	2407      	movs	r4, #7
10009bd2:	409c      	lsls	r4, r3
10009bd4:	43a2      	bics	r2, r4
10009bd6:	64aa      	str	r2, [r5, #72]	; 0x48
10009bd8:	e01d      	b.n	10009c16 <gpio_pin_set_config+0x76>
		} else if (gpio_pin <= 23) {
10009bda:	2817      	cmp	r0, #23
10009bdc:	d809      	bhi.n	10009bf2 <gpio_pin_set_config+0x52>
			LPMCU_MISC_REGS0->PINMUX_SEL_2.reg &= ~(7 << ((gpio_pin % 8) * 4));
10009bde:	4d58      	ldr	r5, [pc, #352]	; (10009d40 <gpio_pin_set_config+0x1a0>)
10009be0:	6cea      	ldr	r2, [r5, #76]	; 0x4c
10009be2:	2307      	movs	r3, #7
10009be4:	4003      	ands	r3, r0
10009be6:	009b      	lsls	r3, r3, #2
10009be8:	2407      	movs	r4, #7
10009bea:	409c      	lsls	r4, r3
10009bec:	43a2      	bics	r2, r4
10009bee:	64ea      	str	r2, [r5, #76]	; 0x4c
10009bf0:	e011      	b.n	10009c16 <gpio_pin_set_config+0x76>
		} else if (44 <= gpio_pin  && gpio_pin < 48) {
10009bf2:	0003      	movs	r3, r0
10009bf4:	3b2c      	subs	r3, #44	; 0x2c
10009bf6:	2b03      	cmp	r3, #3
10009bf8:	d80d      	bhi.n	10009c16 <gpio_pin_set_config+0x76>
			/* Set GPIO_MSx as digital mode */
			AON_GP_REGS0->MS_GPIO_MODE.vec.ANALOG_ENABLE_ &= ~(1 << (gpio_pin - PIN_GPIO_MS4));
10009bfa:	4d52      	ldr	r5, [pc, #328]	; (10009d44 <gpio_pin_set_config+0x1a4>)
10009bfc:	2482      	movs	r4, #130	; 0x82
10009bfe:	00e4      	lsls	r4, r4, #3
10009c00:	5d2a      	ldrb	r2, [r5, r4]
10009c02:	0712      	lsls	r2, r2, #28
10009c04:	2601      	movs	r6, #1
10009c06:	409e      	lsls	r6, r3
10009c08:	0f12      	lsrs	r2, r2, #28
10009c0a:	5d2b      	ldrb	r3, [r5, r4]
10009c0c:	43b2      	bics	r2, r6
10009c0e:	260f      	movs	r6, #15
10009c10:	43b3      	bics	r3, r6
10009c12:	4313      	orrs	r3, r2
10009c14:	552b      	strb	r3, [r5, r4]
		}
	
		if ((gpio_pin == PIN_AO_GPIO_0) || (gpio_pin == PIN_AO_GPIO_1) ||
10009c16:	0003      	movs	r3, r0
10009c18:	3b1d      	subs	r3, #29
10009c1a:	2b02      	cmp	r3, #2
10009c1c:	d829      	bhi.n	10009c72 <gpio_pin_set_config+0xd2>
				(gpio_pin == PIN_AO_GPIO_2)) {
			/* Active Low, Always On Pull Enable Control */
			if (config->input_pull == GPIO_PIN_PULL_UP) {
10009c1e:	784b      	ldrb	r3, [r1, #1]
10009c20:	2b01      	cmp	r3, #1
10009c22:	d108      	bne.n	10009c36 <gpio_pin_set_config+0x96>
				AON_GP_REGS0->AON_PULL_ENABLE.reg &= ~(1 << (31 - gpio_pin));
10009c24:	4d47      	ldr	r5, [pc, #284]	; (10009d44 <gpio_pin_set_config+0x1a4>)
10009c26:	7d2b      	ldrb	r3, [r5, #20]
10009c28:	241f      	movs	r4, #31
10009c2a:	1a24      	subs	r4, r4, r0
10009c2c:	2201      	movs	r2, #1
10009c2e:	40a2      	lsls	r2, r4
10009c30:	4393      	bics	r3, r2
10009c32:	752b      	strb	r3, [r5, #20]
10009c34:	e008      	b.n	10009c48 <gpio_pin_set_config+0xa8>
			} else {
				AON_GP_REGS0->AON_PULL_ENABLE.reg |= 1 << (31 - gpio_pin);
10009c36:	4c43      	ldr	r4, [pc, #268]	; (10009d44 <gpio_pin_set_config+0x1a4>)
10009c38:	7d25      	ldrb	r5, [r4, #20]
10009c3a:	221f      	movs	r2, #31
10009c3c:	1a12      	subs	r2, r2, r0
10009c3e:	2301      	movs	r3, #1
10009c40:	4093      	lsls	r3, r2
10009c42:	432b      	orrs	r3, r5
10009c44:	b2db      	uxtb	r3, r3
10009c46:	7523      	strb	r3, [r4, #20]
			}
			if (config->aon_wakeup) {
10009c48:	78ca      	ldrb	r2, [r1, #3]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10009c4a:	2300      	movs	r3, #0
			if (config->input_pull == GPIO_PIN_PULL_UP) {
				AON_GP_REGS0->AON_PULL_ENABLE.reg &= ~(1 << (31 - gpio_pin));
			} else {
				AON_GP_REGS0->AON_PULL_ENABLE.reg |= 1 << (31 - gpio_pin);
			}
			if (config->aon_wakeup) {
10009c4c:	2a00      	cmp	r2, #0
10009c4e:	d075      	beq.n	10009d3c <gpio_pin_set_config+0x19c>
				/* Enable AON_GPIO_x to be a wakeup MCU from sleep mode */
				AON_GP_REGS0->AON_PINMUX_SEL.reg |= 1 << (4 * (31 - gpio_pin));
10009c50:	493c      	ldr	r1, [pc, #240]	; (10009d44 <gpio_pin_set_config+0x1a4>)
10009c52:	880c      	ldrh	r4, [r1, #0]
10009c54:	221f      	movs	r2, #31
10009c56:	1a10      	subs	r0, r2, r0
10009c58:	0080      	lsls	r0, r0, #2
10009c5a:	3301      	adds	r3, #1
10009c5c:	4083      	lsls	r3, r0
10009c5e:	4323      	orrs	r3, r4
10009c60:	b29b      	uxth	r3, r3
10009c62:	800b      	strh	r3, [r1, #0]
				/* Enable AON_GPIO_x to wake up the BLE domain from sleep mode */
				AON_PWR_SEQ0->GPIO_WAKEUP_CTRL.bit.BLE_ENABLE = 1;
10009c64:	4a38      	ldr	r2, [pc, #224]	; (10009d48 <gpio_pin_set_config+0x1a8>)
10009c66:	7811      	ldrb	r1, [r2, #0]
10009c68:	2302      	movs	r3, #2
10009c6a:	430b      	orrs	r3, r1
10009c6c:	7013      	strb	r3, [r2, #0]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10009c6e:	2300      	movs	r3, #0
10009c70:	e064      	b.n	10009d3c <gpio_pin_set_config+0x19c>
				AON_GP_REGS0->AON_PINMUX_SEL.reg |= 1 << (4 * (31 - gpio_pin));
				/* Enable AON_GPIO_x to wake up the BLE domain from sleep mode */
				AON_PWR_SEQ0->GPIO_WAKEUP_CTRL.bit.BLE_ENABLE = 1;
			}
		} else {
			if(config->direction == GPIO_PIN_DIR_INPUT) {
10009c72:	780a      	ldrb	r2, [r1, #0]
10009c74:	2a00      	cmp	r2, #0
10009c76:	d140      	bne.n	10009cfa <gpio_pin_set_config+0x15a>
				if(gpio_pin < 16) {
10009c78:	280f      	cmp	r0, #15
10009c7a:	d808      	bhi.n	10009c8e <gpio_pin_set_config+0xee>
					GPIO0->OUTENCLR.reg = (1 << gpio_pin);
10009c7c:	2301      	movs	r3, #1
10009c7e:	4083      	lsls	r3, r0
10009c80:	b29b      	uxth	r3, r3
10009c82:	4a32      	ldr	r2, [pc, #200]	; (10009d4c <gpio_pin_set_config+0x1ac>)
10009c84:	8293      	strh	r3, [r2, #20]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10009c86:	2300      	movs	r3, #0
					GPIO1->OUTENCLR.reg = (1 << (gpio_pin % 16));
				} else {
					GPIO2->OUTENCLR.reg = (1 << (gpio_pin % 16));
				}
				/* pull_enable. */
				if (gpio_pin < 32) {
10009c88:	281f      	cmp	r0, #31
10009c8a:	d857      	bhi.n	10009d3c <gpio_pin_set_config+0x19c>
10009c8c:	e012      	b.n	10009cb4 <gpio_pin_set_config+0x114>
			}
		} else {
			if(config->direction == GPIO_PIN_DIR_INPUT) {
				if(gpio_pin < 16) {
					GPIO0->OUTENCLR.reg = (1 << gpio_pin);
				} else if (gpio_pin < 32){
10009c8e:	281f      	cmp	r0, #31
10009c90:	d807      	bhi.n	10009ca2 <gpio_pin_set_config+0x102>
					GPIO1->OUTENCLR.reg = (1 << (gpio_pin % 16));
10009c92:	220f      	movs	r2, #15
10009c94:	4002      	ands	r2, r0
10009c96:	2301      	movs	r3, #1
10009c98:	4093      	lsls	r3, r2
10009c9a:	b29b      	uxth	r3, r3
10009c9c:	4a2c      	ldr	r2, [pc, #176]	; (10009d50 <gpio_pin_set_config+0x1b0>)
10009c9e:	8293      	strh	r3, [r2, #20]
10009ca0:	e008      	b.n	10009cb4 <gpio_pin_set_config+0x114>
				} else {
					GPIO2->OUTENCLR.reg = (1 << (gpio_pin % 16));
10009ca2:	230f      	movs	r3, #15
10009ca4:	4018      	ands	r0, r3
10009ca6:	3b0e      	subs	r3, #14
10009ca8:	4083      	lsls	r3, r0
10009caa:	b29b      	uxth	r3, r3
10009cac:	4a29      	ldr	r2, [pc, #164]	; (10009d54 <gpio_pin_set_config+0x1b4>)
10009cae:	8293      	strh	r3, [r2, #20]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10009cb0:	2300      	movs	r3, #0
10009cb2:	e043      	b.n	10009d3c <gpio_pin_set_config+0x19c>
				} else {
					GPIO2->OUTENCLR.reg = (1 << (gpio_pin % 16));
				}
				/* pull_enable. */
				if (gpio_pin < 32) {
					switch(config->input_pull) {
10009cb4:	784b      	ldrb	r3, [r1, #1]
10009cb6:	2b01      	cmp	r3, #1
10009cb8:	d00c      	beq.n	10009cd4 <gpio_pin_set_config+0x134>
10009cba:	2b00      	cmp	r3, #0
10009cbc:	d002      	beq.n	10009cc4 <gpio_pin_set_config+0x124>
10009cbe:	2b02      	cmp	r3, #2
10009cc0:	d010      	beq.n	10009ce4 <gpio_pin_set_config+0x144>
10009cc2:	e03a      	b.n	10009d3a <gpio_pin_set_config+0x19a>
						case GPIO_PIN_PULL_NONE:
							LPMCU_MISC_REGS0->PULL_ENABLE.reg |= (1 << gpio_pin);
10009cc4:	491e      	ldr	r1, [pc, #120]	; (10009d40 <gpio_pin_set_config+0x1a0>)
10009cc6:	6d0a      	ldr	r2, [r1, #80]	; 0x50
10009cc8:	2301      	movs	r3, #1
10009cca:	4083      	lsls	r3, r0
10009ccc:	4313      	orrs	r3, r2
10009cce:	650b      	str	r3, [r1, #80]	; 0x50
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10009cd0:	2300      	movs	r3, #0
				/* pull_enable. */
				if (gpio_pin < 32) {
					switch(config->input_pull) {
						case GPIO_PIN_PULL_NONE:
							LPMCU_MISC_REGS0->PULL_ENABLE.reg |= (1 << gpio_pin);
							break;
10009cd2:	e033      	b.n	10009d3c <gpio_pin_set_config+0x19c>
						case GPIO_PIN_PULL_UP:
							LPMCU_MISC_REGS0->PULL_ENABLE.reg &= ~(1 << gpio_pin);
10009cd4:	491a      	ldr	r1, [pc, #104]	; (10009d40 <gpio_pin_set_config+0x1a0>)
10009cd6:	6d0b      	ldr	r3, [r1, #80]	; 0x50
10009cd8:	2201      	movs	r2, #1
10009cda:	4082      	lsls	r2, r0
10009cdc:	4393      	bics	r3, r2
10009cde:	650b      	str	r3, [r1, #80]	; 0x50
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10009ce0:	2300      	movs	r3, #0
						case GPIO_PIN_PULL_NONE:
							LPMCU_MISC_REGS0->PULL_ENABLE.reg |= (1 << gpio_pin);
							break;
						case GPIO_PIN_PULL_UP:
							LPMCU_MISC_REGS0->PULL_ENABLE.reg &= ~(1 << gpio_pin);
							break;
10009ce2:	e02b      	b.n	10009d3c <gpio_pin_set_config+0x19c>
						case GPIO_PIN_PULL_DOWN:
							/* Set R-Type */
							LPMCU_MISC_REGS0->RTYPE_PAD_0.reg |= (1 << gpio_pin);
10009ce4:	4b16      	ldr	r3, [pc, #88]	; (10009d40 <gpio_pin_set_config+0x1a0>)
10009ce6:	6d59      	ldr	r1, [r3, #84]	; 0x54
10009ce8:	2201      	movs	r2, #1
10009cea:	4082      	lsls	r2, r0
10009cec:	4311      	orrs	r1, r2
10009cee:	6559      	str	r1, [r3, #84]	; 0x54
							/* Set REN */
							LPMCU_MISC_REGS0->PULL_ENABLE.reg &= ~(1 << gpio_pin);
10009cf0:	6d19      	ldr	r1, [r3, #80]	; 0x50
10009cf2:	4391      	bics	r1, r2
10009cf4:	6519      	str	r1, [r3, #80]	; 0x50
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10009cf6:	2300      	movs	r3, #0
						case GPIO_PIN_PULL_DOWN:
							/* Set R-Type */
							LPMCU_MISC_REGS0->RTYPE_PAD_0.reg |= (1 << gpio_pin);
							/* Set REN */
							LPMCU_MISC_REGS0->PULL_ENABLE.reg &= ~(1 << gpio_pin);
							break;
10009cf8:	e020      	b.n	10009d3c <gpio_pin_set_config+0x19c>
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10009cfa:	2300      	movs	r3, #0
						default:
							status = STATUS_ERR_INVALID_ARG;
							break;
					}
				}
			} else if(config->direction == GPIO_PIN_DIR_OUTPUT) {
10009cfc:	2a01      	cmp	r2, #1
10009cfe:	d11d      	bne.n	10009d3c <gpio_pin_set_config+0x19c>
				if (gpio_pin < 16) {
10009d00:	280f      	cmp	r0, #15
10009d02:	d806      	bhi.n	10009d12 <gpio_pin_set_config+0x172>
					GPIO0->OUTENSET.reg = (1 << gpio_pin);
10009d04:	3301      	adds	r3, #1
10009d06:	4083      	lsls	r3, r0
10009d08:	b29b      	uxth	r3, r3
10009d0a:	4a10      	ldr	r2, [pc, #64]	; (10009d4c <gpio_pin_set_config+0x1ac>)
10009d0c:	8213      	strh	r3, [r2, #16]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10009d0e:	2300      	movs	r3, #0
10009d10:	e014      	b.n	10009d3c <gpio_pin_set_config+0x19c>
					}
				}
			} else if(config->direction == GPIO_PIN_DIR_OUTPUT) {
				if (gpio_pin < 16) {
					GPIO0->OUTENSET.reg = (1 << gpio_pin);
				} else if (gpio_pin < 32) {
10009d12:	281f      	cmp	r0, #31
10009d14:	d808      	bhi.n	10009d28 <gpio_pin_set_config+0x188>
					GPIO1->OUTENSET.reg = (1 << (gpio_pin % 16));
10009d16:	230f      	movs	r3, #15
10009d18:	4018      	ands	r0, r3
10009d1a:	3b0e      	subs	r3, #14
10009d1c:	4083      	lsls	r3, r0
10009d1e:	b29b      	uxth	r3, r3
10009d20:	4a0b      	ldr	r2, [pc, #44]	; (10009d50 <gpio_pin_set_config+0x1b0>)
10009d22:	8213      	strh	r3, [r2, #16]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10009d24:	2300      	movs	r3, #0
10009d26:	e009      	b.n	10009d3c <gpio_pin_set_config+0x19c>
				if (gpio_pin < 16) {
					GPIO0->OUTENSET.reg = (1 << gpio_pin);
				} else if (gpio_pin < 32) {
					GPIO1->OUTENSET.reg = (1 << (gpio_pin % 16));
				} else {
					GPIO2->OUTENSET.reg = (1 << (gpio_pin % 16));
10009d28:	230f      	movs	r3, #15
10009d2a:	4018      	ands	r0, r3
10009d2c:	3b0e      	subs	r3, #14
10009d2e:	4083      	lsls	r3, r0
10009d30:	b29b      	uxth	r3, r3
10009d32:	4a08      	ldr	r2, [pc, #32]	; (10009d54 <gpio_pin_set_config+0x1b4>)
10009d34:	8213      	strh	r3, [r2, #16]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10009d36:	2300      	movs	r3, #0
10009d38:	e000      	b.n	10009d3c <gpio_pin_set_config+0x19c>
							LPMCU_MISC_REGS0->RTYPE_PAD_0.reg |= (1 << gpio_pin);
							/* Set REN */
							LPMCU_MISC_REGS0->PULL_ENABLE.reg &= ~(1 << gpio_pin);
							break;
						default:
							status = STATUS_ERR_INVALID_ARG;
10009d3a:	2317      	movs	r3, #23
				}
			}
		}
	}
	return status;
}
10009d3c:	0018      	movs	r0, r3
10009d3e:	bd70      	pop	{r4, r5, r6, pc}
10009d40:	4000b000 	.word	0x4000b000
10009d44:	4000f000 	.word	0x4000f000
10009d48:	4000e000 	.word	0x4000e000
10009d4c:	40010000 	.word	0x40010000
10009d50:	40011000 	.word	0x40011000
10009d54:	40013000 	.word	0x40013000

10009d58 <gpio_pin_set_output_level>:
 *
 *  \param[in] gpio_pin  Index of the GPIO pin to write to.
 *  \param[in] level     Logical level to set the given pin to.
 */
void gpio_pin_set_output_level(const uint8_t gpio_pin, const bool level)
{
10009d58:	b510      	push	{r4, lr}
	if (gpio_pin < 16) {
10009d5a:	280f      	cmp	r0, #15
10009d5c:	d810      	bhi.n	10009d80 <gpio_pin_set_output_level+0x28>
		if(level) {
10009d5e:	2900      	cmp	r1, #0
10009d60:	d007      	beq.n	10009d72 <gpio_pin_set_output_level+0x1a>
			GPIO0->DATAOUT.reg |= (1 << gpio_pin);
10009d62:	4a1d      	ldr	r2, [pc, #116]	; (10009dd8 <gpio_pin_set_output_level+0x80>)
10009d64:	8891      	ldrh	r1, [r2, #4]
10009d66:	2301      	movs	r3, #1
10009d68:	4083      	lsls	r3, r0
10009d6a:	430b      	orrs	r3, r1
10009d6c:	b29b      	uxth	r3, r3
10009d6e:	8093      	strh	r3, [r2, #4]
10009d70:	e031      	b.n	10009dd6 <gpio_pin_set_output_level+0x7e>
		} else {
			GPIO0->DATAOUT.reg &= ~(1 << gpio_pin);
10009d72:	4919      	ldr	r1, [pc, #100]	; (10009dd8 <gpio_pin_set_output_level+0x80>)
10009d74:	888b      	ldrh	r3, [r1, #4]
10009d76:	2201      	movs	r2, #1
10009d78:	4082      	lsls	r2, r0
10009d7a:	4393      	bics	r3, r2
10009d7c:	808b      	strh	r3, [r1, #4]
10009d7e:	e02a      	b.n	10009dd6 <gpio_pin_set_output_level+0x7e>
		}
	} else if (gpio_pin < 32) {
10009d80:	281f      	cmp	r0, #31
10009d82:	d814      	bhi.n	10009dae <gpio_pin_set_output_level+0x56>
		if(level) {
10009d84:	2900      	cmp	r1, #0
10009d86:	d009      	beq.n	10009d9c <gpio_pin_set_output_level+0x44>
			GPIO1->DATAOUT.reg |= (1 << (gpio_pin % 16));
10009d88:	4914      	ldr	r1, [pc, #80]	; (10009ddc <gpio_pin_set_output_level+0x84>)
10009d8a:	888c      	ldrh	r4, [r1, #4]
10009d8c:	220f      	movs	r2, #15
10009d8e:	4010      	ands	r0, r2
10009d90:	2301      	movs	r3, #1
10009d92:	4083      	lsls	r3, r0
10009d94:	4323      	orrs	r3, r4
10009d96:	b29b      	uxth	r3, r3
10009d98:	808b      	strh	r3, [r1, #4]
10009d9a:	e01c      	b.n	10009dd6 <gpio_pin_set_output_level+0x7e>
		} else {
			GPIO1->DATAOUT.reg &= ~(1 << (gpio_pin % 16));
10009d9c:	490f      	ldr	r1, [pc, #60]	; (10009ddc <gpio_pin_set_output_level+0x84>)
10009d9e:	888b      	ldrh	r3, [r1, #4]
10009da0:	220f      	movs	r2, #15
10009da2:	4010      	ands	r0, r2
10009da4:	3a0e      	subs	r2, #14
10009da6:	4082      	lsls	r2, r0
10009da8:	4393      	bics	r3, r2
10009daa:	808b      	strh	r3, [r1, #4]
10009dac:	e013      	b.n	10009dd6 <gpio_pin_set_output_level+0x7e>
		}
	} else {
		if(level) {
10009dae:	2900      	cmp	r1, #0
10009db0:	d009      	beq.n	10009dc6 <gpio_pin_set_output_level+0x6e>
			GPIO2->DATAOUT.reg |= (1 << (gpio_pin % 16));
10009db2:	490b      	ldr	r1, [pc, #44]	; (10009de0 <gpio_pin_set_output_level+0x88>)
10009db4:	888c      	ldrh	r4, [r1, #4]
10009db6:	220f      	movs	r2, #15
10009db8:	4010      	ands	r0, r2
10009dba:	2301      	movs	r3, #1
10009dbc:	4083      	lsls	r3, r0
10009dbe:	4323      	orrs	r3, r4
10009dc0:	b29b      	uxth	r3, r3
10009dc2:	808b      	strh	r3, [r1, #4]
10009dc4:	e007      	b.n	10009dd6 <gpio_pin_set_output_level+0x7e>
		} else {
			GPIO2->DATAOUT.reg &= ~(1 << (gpio_pin % 16));
10009dc6:	4906      	ldr	r1, [pc, #24]	; (10009de0 <gpio_pin_set_output_level+0x88>)
10009dc8:	888b      	ldrh	r3, [r1, #4]
10009dca:	220f      	movs	r2, #15
10009dcc:	4010      	ands	r0, r2
10009dce:	3a0e      	subs	r2, #14
10009dd0:	4082      	lsls	r2, r0
10009dd2:	4393      	bics	r3, r2
10009dd4:	808b      	strh	r3, [r1, #4]
		}
	}
}
10009dd6:	bd10      	pop	{r4, pc}
10009dd8:	40010000 	.word	0x40010000
10009ddc:	40011000 	.word	0x40011000
10009de0:	40013000 	.word	0x40013000

10009de4 <gpio_pin_toggle_output_level>:
 *
 *  \param[in] gpio_pin  Index of the GPIO pin to toggle.
 */
void gpio_pin_toggle_output_level(const uint8_t gpio_pin)
{
	if (gpio_pin < 16) {
10009de4:	280f      	cmp	r0, #15
10009de6:	d807      	bhi.n	10009df8 <gpio_pin_toggle_output_level+0x14>
		GPIO0->DATAOUT.reg ^= (1 << gpio_pin);
10009de8:	4a0e      	ldr	r2, [pc, #56]	; (10009e24 <gpio_pin_toggle_output_level+0x40>)
10009dea:	8891      	ldrh	r1, [r2, #4]
10009dec:	2301      	movs	r3, #1
10009dee:	4083      	lsls	r3, r0
10009df0:	404b      	eors	r3, r1
10009df2:	b29b      	uxth	r3, r3
10009df4:	8093      	strh	r3, [r2, #4]
10009df6:	e014      	b.n	10009e22 <gpio_pin_toggle_output_level+0x3e>
	} else if (gpio_pin < 32) {
10009df8:	281f      	cmp	r0, #31
10009dfa:	d809      	bhi.n	10009e10 <gpio_pin_toggle_output_level+0x2c>
		GPIO1->DATAOUT.reg ^= (1 << (gpio_pin % 16));
10009dfc:	4a0a      	ldr	r2, [pc, #40]	; (10009e28 <gpio_pin_toggle_output_level+0x44>)
10009dfe:	8891      	ldrh	r1, [r2, #4]
10009e00:	230f      	movs	r3, #15
10009e02:	4018      	ands	r0, r3
10009e04:	3b0e      	subs	r3, #14
10009e06:	4083      	lsls	r3, r0
10009e08:	404b      	eors	r3, r1
10009e0a:	b29b      	uxth	r3, r3
10009e0c:	8093      	strh	r3, [r2, #4]
10009e0e:	e008      	b.n	10009e22 <gpio_pin_toggle_output_level+0x3e>
	} else {
		GPIO2->DATAOUT.reg ^= (1 << (gpio_pin % 16));
10009e10:	4a06      	ldr	r2, [pc, #24]	; (10009e2c <gpio_pin_toggle_output_level+0x48>)
10009e12:	8891      	ldrh	r1, [r2, #4]
10009e14:	230f      	movs	r3, #15
10009e16:	4018      	ands	r0, r3
10009e18:	3b0e      	subs	r3, #14
10009e1a:	4083      	lsls	r3, r0
10009e1c:	404b      	eors	r3, r1
10009e1e:	b29b      	uxth	r3, r3
10009e20:	8093      	strh	r3, [r2, #4]
	}
}
10009e22:	4770      	bx	lr
10009e24:	40010000 	.word	0x40010000
10009e28:	40011000 	.word	0x40011000
10009e2c:	40013000 	.word	0x40013000

10009e30 <gpio_pinmux_cofiguration>:
 *
 *  \param[in] gpio_pin   Index of the GPIO pin to toggle.
 *  \param[in] pinmux_sel PINMUX selection.
 */
void gpio_pinmux_cofiguration(const uint8_t gpio_pin, uint16_t pinmux_sel)
{
10009e30:	b570      	push	{r4, r5, r6, lr}
	uint8_t megamux_sel = (pinmux_sel >> 8) & 0xFF;
10009e32:	0a0d      	lsrs	r5, r1, #8

	pinmux_sel &= 0xFF;
10009e34:	23ff      	movs	r3, #255	; 0xff
10009e36:	4019      	ands	r1, r3

	if (gpio_pin <= 7) {
10009e38:	2807      	cmp	r0, #7
10009e3a:	d833      	bhi.n	10009ea4 <gpio_pinmux_cofiguration+0x74>
		LPMCU_MISC_REGS0->PINMUX_SEL_0.reg &= ~(7 << ((gpio_pin % 8) * 4));
10009e3c:	4a4e      	ldr	r2, [pc, #312]	; (10009f78 <gpio_pinmux_cofiguration+0x148>)
10009e3e:	6c54      	ldr	r4, [r2, #68]	; 0x44
10009e40:	3bf8      	subs	r3, #248	; 0xf8
10009e42:	4003      	ands	r3, r0
10009e44:	009b      	lsls	r3, r3, #2
10009e46:	2607      	movs	r6, #7
10009e48:	409e      	lsls	r6, r3
10009e4a:	43b4      	bics	r4, r6
10009e4c:	6454      	str	r4, [r2, #68]	; 0x44
		LPMCU_MISC_REGS0->PINMUX_SEL_0.reg |= (pinmux_sel << ((gpio_pin % 8)*4));
10009e4e:	6c54      	ldr	r4, [r2, #68]	; 0x44
10009e50:	000e      	movs	r6, r1
10009e52:	409e      	lsls	r6, r3
10009e54:	0033      	movs	r3, r6
10009e56:	4323      	orrs	r3, r4
10009e58:	6453      	str	r3, [r2, #68]	; 0x44
		if (pinmux_sel == 0x01) {
10009e5a:	2901      	cmp	r1, #1
10009e5c:	d000      	beq.n	10009e60 <gpio_pinmux_cofiguration+0x30>
10009e5e:	e08a      	b.n	10009f76 <gpio_pinmux_cofiguration+0x146>
			if (gpio_pin <= 3) {
10009e60:	2803      	cmp	r0, #3
10009e62:	d80f      	bhi.n	10009e84 <gpio_pinmux_cofiguration+0x54>
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_0.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10009e64:	0011      	movs	r1, r2
10009e66:	22d0      	movs	r2, #208	; 0xd0
10009e68:	0052      	lsls	r2, r2, #1
10009e6a:	588c      	ldr	r4, [r1, r2]
10009e6c:	2303      	movs	r3, #3
10009e6e:	4018      	ands	r0, r3
10009e70:	00c0      	lsls	r0, r0, #3
10009e72:	333c      	adds	r3, #60	; 0x3c
10009e74:	4083      	lsls	r3, r0
10009e76:	439c      	bics	r4, r3
10009e78:	508c      	str	r4, [r1, r2]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_0.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10009e7a:	588b      	ldr	r3, [r1, r2]
10009e7c:	4085      	lsls	r5, r0
10009e7e:	431d      	orrs	r5, r3
10009e80:	508d      	str	r5, [r1, r2]
10009e82:	e078      	b.n	10009f76 <gpio_pinmux_cofiguration+0x146>
			} else if (gpio_pin <= 7) {
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_1.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10009e84:	493c      	ldr	r1, [pc, #240]	; (10009f78 <gpio_pinmux_cofiguration+0x148>)
10009e86:	22d2      	movs	r2, #210	; 0xd2
10009e88:	0052      	lsls	r2, r2, #1
10009e8a:	588c      	ldr	r4, [r1, r2]
10009e8c:	2303      	movs	r3, #3
10009e8e:	4018      	ands	r0, r3
10009e90:	00c0      	lsls	r0, r0, #3
10009e92:	333c      	adds	r3, #60	; 0x3c
10009e94:	4083      	lsls	r3, r0
10009e96:	439c      	bics	r4, r3
10009e98:	508c      	str	r4, [r1, r2]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_1.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10009e9a:	588b      	ldr	r3, [r1, r2]
10009e9c:	4085      	lsls	r5, r0
10009e9e:	431d      	orrs	r5, r3
10009ea0:	508d      	str	r5, [r1, r2]
10009ea2:	e068      	b.n	10009f76 <gpio_pinmux_cofiguration+0x146>
			}
		}
	} else if (gpio_pin <= 15) {
10009ea4:	280f      	cmp	r0, #15
10009ea6:	d832      	bhi.n	10009f0e <gpio_pinmux_cofiguration+0xde>
		LPMCU_MISC_REGS0->PINMUX_SEL_1.reg &= ~(7 << ((gpio_pin % 8) * 4));
10009ea8:	4a33      	ldr	r2, [pc, #204]	; (10009f78 <gpio_pinmux_cofiguration+0x148>)
10009eaa:	6c94      	ldr	r4, [r2, #72]	; 0x48
10009eac:	2307      	movs	r3, #7
10009eae:	4003      	ands	r3, r0
10009eb0:	009b      	lsls	r3, r3, #2
10009eb2:	2607      	movs	r6, #7
10009eb4:	409e      	lsls	r6, r3
10009eb6:	43b4      	bics	r4, r6
10009eb8:	6494      	str	r4, [r2, #72]	; 0x48
		LPMCU_MISC_REGS0->PINMUX_SEL_1.reg |= (pinmux_sel << ((gpio_pin % 8)*4));
10009eba:	6c94      	ldr	r4, [r2, #72]	; 0x48
10009ebc:	000e      	movs	r6, r1
10009ebe:	409e      	lsls	r6, r3
10009ec0:	0033      	movs	r3, r6
10009ec2:	4323      	orrs	r3, r4
10009ec4:	6493      	str	r3, [r2, #72]	; 0x48
		if (pinmux_sel == 0x01) {
10009ec6:	2901      	cmp	r1, #1
10009ec8:	d155      	bne.n	10009f76 <gpio_pinmux_cofiguration+0x146>
			if (gpio_pin <= 11) {
10009eca:	280b      	cmp	r0, #11
10009ecc:	d80f      	bhi.n	10009eee <gpio_pinmux_cofiguration+0xbe>
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_2.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10009ece:	0011      	movs	r1, r2
10009ed0:	22d4      	movs	r2, #212	; 0xd4
10009ed2:	0052      	lsls	r2, r2, #1
10009ed4:	588c      	ldr	r4, [r1, r2]
10009ed6:	2303      	movs	r3, #3
10009ed8:	4018      	ands	r0, r3
10009eda:	00c0      	lsls	r0, r0, #3
10009edc:	333c      	adds	r3, #60	; 0x3c
10009ede:	4083      	lsls	r3, r0
10009ee0:	439c      	bics	r4, r3
10009ee2:	508c      	str	r4, [r1, r2]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_2.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10009ee4:	588b      	ldr	r3, [r1, r2]
10009ee6:	4085      	lsls	r5, r0
10009ee8:	431d      	orrs	r5, r3
10009eea:	508d      	str	r5, [r1, r2]
10009eec:	e043      	b.n	10009f76 <gpio_pinmux_cofiguration+0x146>
			} else if (gpio_pin <= 15) {
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_3.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10009eee:	4922      	ldr	r1, [pc, #136]	; (10009f78 <gpio_pinmux_cofiguration+0x148>)
10009ef0:	22d6      	movs	r2, #214	; 0xd6
10009ef2:	0052      	lsls	r2, r2, #1
10009ef4:	588c      	ldr	r4, [r1, r2]
10009ef6:	2303      	movs	r3, #3
10009ef8:	4018      	ands	r0, r3
10009efa:	00c0      	lsls	r0, r0, #3
10009efc:	333c      	adds	r3, #60	; 0x3c
10009efe:	4083      	lsls	r3, r0
10009f00:	439c      	bics	r4, r3
10009f02:	508c      	str	r4, [r1, r2]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_3.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10009f04:	588b      	ldr	r3, [r1, r2]
10009f06:	4085      	lsls	r5, r0
10009f08:	431d      	orrs	r5, r3
10009f0a:	508d      	str	r5, [r1, r2]
10009f0c:	e033      	b.n	10009f76 <gpio_pinmux_cofiguration+0x146>
			}
		}
	} else if (gpio_pin <= 23) {
10009f0e:	2817      	cmp	r0, #23
10009f10:	d831      	bhi.n	10009f76 <gpio_pinmux_cofiguration+0x146>
		LPMCU_MISC_REGS0->PINMUX_SEL_2.reg &= ~(7 << ((gpio_pin % 8) * 4));
10009f12:	4a19      	ldr	r2, [pc, #100]	; (10009f78 <gpio_pinmux_cofiguration+0x148>)
10009f14:	6cd4      	ldr	r4, [r2, #76]	; 0x4c
10009f16:	2307      	movs	r3, #7
10009f18:	4003      	ands	r3, r0
10009f1a:	009b      	lsls	r3, r3, #2
10009f1c:	2607      	movs	r6, #7
10009f1e:	409e      	lsls	r6, r3
10009f20:	43b4      	bics	r4, r6
10009f22:	64d4      	str	r4, [r2, #76]	; 0x4c
		LPMCU_MISC_REGS0->PINMUX_SEL_2.reg |= (pinmux_sel << ((gpio_pin % 8)*4));
10009f24:	6cd4      	ldr	r4, [r2, #76]	; 0x4c
10009f26:	000e      	movs	r6, r1
10009f28:	409e      	lsls	r6, r3
10009f2a:	0033      	movs	r3, r6
10009f2c:	4323      	orrs	r3, r4
10009f2e:	64d3      	str	r3, [r2, #76]	; 0x4c
		if (pinmux_sel == 0x01) {
10009f30:	2901      	cmp	r1, #1
10009f32:	d120      	bne.n	10009f76 <gpio_pinmux_cofiguration+0x146>
			if (gpio_pin <= 19) {
10009f34:	2813      	cmp	r0, #19
10009f36:	d80f      	bhi.n	10009f58 <gpio_pinmux_cofiguration+0x128>
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_4.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10009f38:	0011      	movs	r1, r2
10009f3a:	22d8      	movs	r2, #216	; 0xd8
10009f3c:	0052      	lsls	r2, r2, #1
10009f3e:	588c      	ldr	r4, [r1, r2]
10009f40:	2303      	movs	r3, #3
10009f42:	4018      	ands	r0, r3
10009f44:	00c0      	lsls	r0, r0, #3
10009f46:	333c      	adds	r3, #60	; 0x3c
10009f48:	4083      	lsls	r3, r0
10009f4a:	439c      	bics	r4, r3
10009f4c:	508c      	str	r4, [r1, r2]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_4.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10009f4e:	588b      	ldr	r3, [r1, r2]
10009f50:	4085      	lsls	r5, r0
10009f52:	431d      	orrs	r5, r3
10009f54:	508d      	str	r5, [r1, r2]
10009f56:	e00e      	b.n	10009f76 <gpio_pinmux_cofiguration+0x146>
			} else if (gpio_pin <= 23) {
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_5.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10009f58:	4a07      	ldr	r2, [pc, #28]	; (10009f78 <gpio_pinmux_cofiguration+0x148>)
10009f5a:	23da      	movs	r3, #218	; 0xda
10009f5c:	005b      	lsls	r3, r3, #1
10009f5e:	58d1      	ldr	r1, [r2, r3]
10009f60:	2403      	movs	r4, #3
10009f62:	4020      	ands	r0, r4
10009f64:	00c0      	lsls	r0, r0, #3
10009f66:	343c      	adds	r4, #60	; 0x3c
10009f68:	4084      	lsls	r4, r0
10009f6a:	43a1      	bics	r1, r4
10009f6c:	50d1      	str	r1, [r2, r3]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_5.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10009f6e:	58d1      	ldr	r1, [r2, r3]
10009f70:	4085      	lsls	r5, r0
10009f72:	430d      	orrs	r5, r1
10009f74:	50d5      	str	r5, [r2, r3]
			}
		}
	}
}
10009f76:	bd70      	pop	{r4, r5, r6, pc}
10009f78:	4000b000 	.word	0x4000b000

10009f7c <gpio_register_callback>:
 * \param[in]  callback_type  Callback type given by an enum
 *
 */
void gpio_register_callback(uint8_t gpio_pin, gpio_callback_t callback_func,
				enum gpio_callback callback_type)
{
10009f7c:	b5f0      	push	{r4, r5, r6, r7, lr}
	Assert(gpio_pin < 48);

	uint8_t gpio_port = 0;

	if (gpio_pin < 16) {
		gpio_port = 0;
10009f7e:	2300      	movs	r3, #0
	Assert(callback_func);
	Assert(gpio_pin < 48);

	uint8_t gpio_port = 0;

	if (gpio_pin < 16) {
10009f80:	280f      	cmp	r0, #15
10009f82:	d904      	bls.n	10009f8e <gpio_register_callback+0x12>
		gpio_port = 0;
	} else if (gpio_pin < 32) {
		gpio_port = 1;
	} else {
		gpio_port = 2;
10009f84:	241f      	movs	r4, #31
10009f86:	4284      	cmp	r4, r0
10009f88:	415b      	adcs	r3, r3
10009f8a:	3c1d      	subs	r4, #29
10009f8c:	1ae3      	subs	r3, r4, r3
	}
	switch (callback_type) {
10009f8e:	2a01      	cmp	r2, #1
10009f90:	d016      	beq.n	10009fc0 <gpio_register_callback+0x44>
10009f92:	2a00      	cmp	r2, #0
10009f94:	d004      	beq.n	10009fa0 <gpio_register_callback+0x24>
10009f96:	2a02      	cmp	r2, #2
10009f98:	d022      	beq.n	10009fe0 <gpio_register_callback+0x64>
10009f9a:	2a03      	cmp	r2, #3
10009f9c:	d030      	beq.n	1000a000 <gpio_register_callback+0x84>
10009f9e:	e03e      	b.n	1000a01e <gpio_register_callback+0xa2>
	case GPIO_CALLBACK_LOW:
		_gpio_instances[gpio_port].hw->INTTYPECLR.reg = 1 << (gpio_pin % 16);
10009fa0:	4e29      	ldr	r6, [pc, #164]	; (1000a048 <gpio_register_callback+0xcc>)
10009fa2:	00dc      	lsls	r4, r3, #3
10009fa4:	18e2      	adds	r2, r4, r3
10009fa6:	00d2      	lsls	r2, r2, #3
10009fa8:	5997      	ldr	r7, [r2, r6]
10009faa:	250f      	movs	r5, #15
10009fac:	4005      	ands	r5, r0
10009fae:	2201      	movs	r2, #1
10009fb0:	40aa      	lsls	r2, r5
10009fb2:	b292      	uxth	r2, r2
10009fb4:	85ba      	strh	r2, [r7, #44]	; 0x2c
		_gpio_instances[gpio_port].hw->INTPOLCLR.reg = 1 << (gpio_pin % 16);
10009fb6:	18e4      	adds	r4, r4, r3
10009fb8:	00e4      	lsls	r4, r4, #3
10009fba:	59a4      	ldr	r4, [r4, r6]
10009fbc:	86a2      	strh	r2, [r4, #52]	; 0x34
		break;
10009fbe:	e02e      	b.n	1000a01e <gpio_register_callback+0xa2>

	case GPIO_CALLBACK_HIGH:
		_gpio_instances[gpio_port].hw->INTTYPECLR.reg = 1 << (gpio_pin % 16);
10009fc0:	4e21      	ldr	r6, [pc, #132]	; (1000a048 <gpio_register_callback+0xcc>)
10009fc2:	00dc      	lsls	r4, r3, #3
10009fc4:	18e2      	adds	r2, r4, r3
10009fc6:	00d2      	lsls	r2, r2, #3
10009fc8:	5997      	ldr	r7, [r2, r6]
10009fca:	250f      	movs	r5, #15
10009fcc:	4005      	ands	r5, r0
10009fce:	2201      	movs	r2, #1
10009fd0:	40aa      	lsls	r2, r5
10009fd2:	b292      	uxth	r2, r2
10009fd4:	85ba      	strh	r2, [r7, #44]	; 0x2c
		_gpio_instances[gpio_port].hw->INTPOLSET.reg = 1 << (gpio_pin % 16);
10009fd6:	18e4      	adds	r4, r4, r3
10009fd8:	00e4      	lsls	r4, r4, #3
10009fda:	59a4      	ldr	r4, [r4, r6]
10009fdc:	8622      	strh	r2, [r4, #48]	; 0x30
		break;
10009fde:	e01e      	b.n	1000a01e <gpio_register_callback+0xa2>

	case GPIO_CALLBACK_RISING:
		_gpio_instances[gpio_port].hw->INTTYPESET.reg = 1 << (gpio_pin % 16);
10009fe0:	4e19      	ldr	r6, [pc, #100]	; (1000a048 <gpio_register_callback+0xcc>)
10009fe2:	00dc      	lsls	r4, r3, #3
10009fe4:	18e2      	adds	r2, r4, r3
10009fe6:	00d2      	lsls	r2, r2, #3
10009fe8:	5997      	ldr	r7, [r2, r6]
10009fea:	250f      	movs	r5, #15
10009fec:	4005      	ands	r5, r0
10009fee:	2201      	movs	r2, #1
10009ff0:	40aa      	lsls	r2, r5
10009ff2:	b292      	uxth	r2, r2
10009ff4:	853a      	strh	r2, [r7, #40]	; 0x28
		_gpio_instances[gpio_port].hw->INTPOLSET.reg = 1 << (gpio_pin % 16);
10009ff6:	18e4      	adds	r4, r4, r3
10009ff8:	00e4      	lsls	r4, r4, #3
10009ffa:	59a4      	ldr	r4, [r4, r6]
10009ffc:	8622      	strh	r2, [r4, #48]	; 0x30
		break;
10009ffe:	e00e      	b.n	1000a01e <gpio_register_callback+0xa2>

	case GPIO_CALLBACK_FALLING:
		_gpio_instances[gpio_port].hw->INTTYPESET.reg = 1 << (gpio_pin % 16);
1000a000:	4e11      	ldr	r6, [pc, #68]	; (1000a048 <gpio_register_callback+0xcc>)
1000a002:	00dc      	lsls	r4, r3, #3
1000a004:	18e2      	adds	r2, r4, r3
1000a006:	00d2      	lsls	r2, r2, #3
1000a008:	5997      	ldr	r7, [r2, r6]
1000a00a:	250f      	movs	r5, #15
1000a00c:	4005      	ands	r5, r0
1000a00e:	2201      	movs	r2, #1
1000a010:	40aa      	lsls	r2, r5
1000a012:	b292      	uxth	r2, r2
1000a014:	853a      	strh	r2, [r7, #40]	; 0x28
		_gpio_instances[gpio_port].hw->INTPOLCLR.reg = (1 << (gpio_pin % 16));
1000a016:	18e4      	adds	r4, r4, r3
1000a018:	00e4      	lsls	r4, r4, #3
1000a01a:	59a4      	ldr	r4, [r4, r6]
1000a01c:	86a2      	strh	r2, [r4, #52]	; 0x34

	case GPIO_CALLBACK_N:
		break;
	}
	/* Register callback function */
	_gpio_instances[gpio_port].callback[gpio_pin % 16] = callback_func;
1000a01e:	220f      	movs	r2, #15
1000a020:	4010      	ands	r0, r2
1000a022:	4c09      	ldr	r4, [pc, #36]	; (1000a048 <gpio_register_callback+0xcc>)
1000a024:	00dd      	lsls	r5, r3, #3
1000a026:	18ea      	adds	r2, r5, r3
1000a028:	0052      	lsls	r2, r2, #1
1000a02a:	1812      	adds	r2, r2, r0
1000a02c:	0092      	lsls	r2, r2, #2
1000a02e:	18a2      	adds	r2, r4, r2
1000a030:	6051      	str	r1, [r2, #4]
	/* Set the bit corresponding to the gpio pin */
	_gpio_instances[gpio_port].callback_reg_mask |= (1 << (gpio_pin % 16));
1000a032:	18ea      	adds	r2, r5, r3
1000a034:	00d2      	lsls	r2, r2, #3
1000a036:	18a2      	adds	r2, r4, r2
1000a038:	3244      	adds	r2, #68	; 0x44
1000a03a:	2101      	movs	r1, #1
1000a03c:	4081      	lsls	r1, r0
1000a03e:	8813      	ldrh	r3, [r2, #0]
1000a040:	430b      	orrs	r3, r1
1000a042:	8013      	strh	r3, [r2, #0]
}
1000a044:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000a046:	46c0      	nop			; (mov r8, r8)
1000a048:	100177b0 	.word	0x100177b0

1000a04c <gpio_enable_callback>:
 * conditions for the callback type are met.
 *
 * \param[in]  gpio_pin   GPIO pin
 */
void gpio_enable_callback(uint8_t gpio_pin)
{
1000a04c:	b530      	push	{r4, r5, lr}
	Assert(gpio_pin < 48);

	uint8_t gpio_port = 0;

	if (gpio_pin < 16) {
1000a04e:	280f      	cmp	r0, #15
1000a050:	d805      	bhi.n	1000a05e <gpio_enable_callback+0x12>

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
1000a052:	2280      	movs	r2, #128	; 0x80
1000a054:	0412      	lsls	r2, r2, #16
1000a056:	4b12      	ldr	r3, [pc, #72]	; (1000a0a0 <gpio_enable_callback+0x54>)
1000a058:	601a      	str	r2, [r3, #0]
		gpio_port = 0;
1000a05a:	2200      	movs	r2, #0
1000a05c:	e00c      	b.n	1000a078 <gpio_enable_callback+0x2c>
		NVIC_EnableIRQ(GPIO0_IRQn);
	} else if (gpio_pin < 32) {
1000a05e:	281f      	cmp	r0, #31
1000a060:	d805      	bhi.n	1000a06e <gpio_enable_callback+0x22>
1000a062:	2280      	movs	r2, #128	; 0x80
1000a064:	0452      	lsls	r2, r2, #17
1000a066:	4b0e      	ldr	r3, [pc, #56]	; (1000a0a0 <gpio_enable_callback+0x54>)
1000a068:	601a      	str	r2, [r3, #0]
		gpio_port = 1;
1000a06a:	2201      	movs	r2, #1
1000a06c:	e004      	b.n	1000a078 <gpio_enable_callback+0x2c>
1000a06e:	2280      	movs	r2, #128	; 0x80
1000a070:	0492      	lsls	r2, r2, #18
1000a072:	4b0b      	ldr	r3, [pc, #44]	; (1000a0a0 <gpio_enable_callback+0x54>)
1000a074:	601a      	str	r2, [r3, #0]
		NVIC_EnableIRQ(GPIO1_IRQn);
	} else {
		gpio_port = 2;
1000a076:	2202      	movs	r2, #2
		NVIC_EnableIRQ(GPIO2_IRQn);
	}

	/* Enable callback */
	_gpio_instances[gpio_port].callback_enable_mask |= (1 << (gpio_pin % 16));
1000a078:	230f      	movs	r3, #15
1000a07a:	4018      	ands	r0, r3
1000a07c:	2101      	movs	r1, #1
1000a07e:	4081      	lsls	r1, r0
1000a080:	4c08      	ldr	r4, [pc, #32]	; (1000a0a4 <gpio_enable_callback+0x58>)
1000a082:	00d5      	lsls	r5, r2, #3
1000a084:	18ab      	adds	r3, r5, r2
1000a086:	00db      	lsls	r3, r3, #3
1000a088:	18e3      	adds	r3, r4, r3
1000a08a:	3346      	adds	r3, #70	; 0x46
1000a08c:	8818      	ldrh	r0, [r3, #0]
1000a08e:	4308      	orrs	r0, r1
1000a090:	8018      	strh	r0, [r3, #0]
	_gpio_instances[gpio_port].hw->INTENSET.reg = (1 << (gpio_pin % 16));
1000a092:	18aa      	adds	r2, r5, r2
1000a094:	00d2      	lsls	r2, r2, #3
1000a096:	5913      	ldr	r3, [r2, r4]
1000a098:	b289      	uxth	r1, r1
1000a09a:	8419      	strh	r1, [r3, #32]
}
1000a09c:	bd30      	pop	{r4, r5, pc}
1000a09e:	46c0      	nop			; (mov r8, r8)
1000a0a0:	e000e100 	.word	0xe000e100
1000a0a4:	100177b0 	.word	0x100177b0

1000a0a8 <gpio_init>:
 *
 * This function will init GPIO callback.
 *
 */
void gpio_init(void)
{
1000a0a8:	b510      	push	{r4, lr}
1000a0aa:	4a11      	ldr	r2, [pc, #68]	; (1000a0f0 <gpio_init+0x48>)
1000a0ac:	0010      	movs	r0, r2
1000a0ae:	30d8      	adds	r0, #216	; 0xd8
	uint8_t i, j;

	for(i = 0; i < 3; i++) {
		for(j = 0; j < 16; j++) {
			_gpio_instances[i].callback[j] = NULL;
1000a0b0:	2100      	movs	r1, #0
1000a0b2:	e007      	b.n	1000a0c4 <gpio_init+0x1c>
1000a0b4:	c302      	stmia	r3!, {r1}
void gpio_init(void)
{
	uint8_t i, j;

	for(i = 0; i < 3; i++) {
		for(j = 0; j < 16; j++) {
1000a0b6:	4293      	cmp	r3, r2
1000a0b8:	d1fc      	bne.n	1000a0b4 <gpio_init+0xc>
			_gpio_instances[i].callback[j] = NULL;
		}
		_gpio_instances[i].callback_enable_mask = 0;
1000a0ba:	8051      	strh	r1, [r2, #2]
		_gpio_instances[i].callback_reg_mask = 0;
1000a0bc:	8011      	strh	r1, [r2, #0]
1000a0be:	3248      	adds	r2, #72	; 0x48
 */
void gpio_init(void)
{
	uint8_t i, j;

	for(i = 0; i < 3; i++) {
1000a0c0:	4282      	cmp	r2, r0
1000a0c2:	d002      	beq.n	1000a0ca <gpio_init+0x22>
1000a0c4:	0013      	movs	r3, r2
1000a0c6:	3b40      	subs	r3, #64	; 0x40
1000a0c8:	e7f4      	b.n	1000a0b4 <gpio_init+0xc>
			_gpio_instances[i].callback[j] = NULL;
		}
		_gpio_instances[i].callback_enable_mask = 0;
		_gpio_instances[i].callback_reg_mask = 0;
	}
	_gpio_instances[0].hw = (void *)GPIO0;
1000a0ca:	4b0a      	ldr	r3, [pc, #40]	; (1000a0f4 <gpio_init+0x4c>)
1000a0cc:	4a0a      	ldr	r2, [pc, #40]	; (1000a0f8 <gpio_init+0x50>)
1000a0ce:	601a      	str	r2, [r3, #0]
	_gpio_instances[1].hw = (void *)GPIO1;
1000a0d0:	4a0a      	ldr	r2, [pc, #40]	; (1000a0fc <gpio_init+0x54>)
1000a0d2:	649a      	str	r2, [r3, #72]	; 0x48
	_gpio_instances[2].hw = (void *)GPIO2;
1000a0d4:	490a      	ldr	r1, [pc, #40]	; (1000a100 <gpio_init+0x58>)
1000a0d6:	2290      	movs	r2, #144	; 0x90
1000a0d8:	5099      	str	r1, [r3, r2]
	system_register_isr(RAM_ISR_TABLE_PORT0_COMB_INDEX, (uint32_t)gpio_port0_isr_handler);
1000a0da:	490a      	ldr	r1, [pc, #40]	; (1000a104 <gpio_init+0x5c>)
1000a0dc:	2027      	movs	r0, #39	; 0x27
1000a0de:	4c0a      	ldr	r4, [pc, #40]	; (1000a108 <gpio_init+0x60>)
1000a0e0:	47a0      	blx	r4
	system_register_isr(RAM_ISR_TABLE_PORT1_COMB_INDEX, (uint32_t)gpio_port1_isr_handler);
1000a0e2:	490a      	ldr	r1, [pc, #40]	; (1000a10c <gpio_init+0x64>)
1000a0e4:	2028      	movs	r0, #40	; 0x28
1000a0e6:	47a0      	blx	r4
	system_register_isr(RAM_ISR_TABLE_PORT2_COMB_INDEX, (uint32_t)gpio_port2_isr_handler);
1000a0e8:	4909      	ldr	r1, [pc, #36]	; (1000a110 <gpio_init+0x68>)
1000a0ea:	2029      	movs	r0, #41	; 0x29
1000a0ec:	47a0      	blx	r4
}
1000a0ee:	bd10      	pop	{r4, pc}
1000a0f0:	100177f4 	.word	0x100177f4
1000a0f4:	100177b0 	.word	0x100177b0
1000a0f8:	40010000 	.word	0x40010000
1000a0fc:	40011000 	.word	0x40011000
1000a100:	40013000 	.word	0x40013000
1000a104:	10009a41 	.word	0x10009a41
1000a108:	1000acd5 	.word	0x1000acd5
1000a10c:	10009aa5 	.word	0x10009aa5
1000a110:	10009b15 	.word	0x10009b15

1000a114 <system_clock_config>:
 * \retval STATUS_ERR_INVALID_ARG  If data is invalid
 */
enum status_code system_clock_config(enum system_clock_resource resoure, \
				enum system_clock_freq freq)
{
	switch (resoure) {
1000a114:	2801      	cmp	r0, #1
1000a116:	d00d      	beq.n	1000a134 <system_clock_config+0x20>
1000a118:	2800      	cmp	r0, #0
1000a11a:	d002      	beq.n	1000a122 <system_clock_config+0xe>
1000a11c:	2802      	cmp	r0, #2
1000a11e:	d01c      	beq.n	1000a15a <system_clock_config+0x46>
1000a120:	e02e      	b.n	1000a180 <system_clock_config+0x6c>
		case CLOCK_RESOURCE_XO_26_MHZ:
			LPMCU_MISC_REGS0->LPMCU_CTRL.reg |= \
1000a122:	4a18      	ldr	r2, [pc, #96]	; (1000a184 <system_clock_config+0x70>)
1000a124:	6990      	ldr	r0, [r2, #24]
1000a126:	230c      	movs	r3, #12
1000a128:	4303      	orrs	r3, r0
1000a12a:	6193      	str	r3, [r2, #24]
					LPMCU_MISC_REGS_LPMCU_CTRL_USE_BT26M_CLK | \
					LPMCU_MISC_REGS_LPMCU_CTRL_USE_ARM_LP_CLK;
			system_clock_value = 26000000;
1000a12c:	4a16      	ldr	r2, [pc, #88]	; (1000a188 <system_clock_config+0x74>)
1000a12e:	4b17      	ldr	r3, [pc, #92]	; (1000a18c <system_clock_config+0x78>)
1000a130:	601a      	str	r2, [r3, #0]
			break;
1000a132:	e01a      	b.n	1000a16a <system_clock_config+0x56>

		case CLOCK_RESOURCE_LP_2_MHZ:
			LPMCU_MISC_REGS0->LPMCU_CTRL.reg |= \
1000a134:	4b13      	ldr	r3, [pc, #76]	; (1000a184 <system_clock_config+0x70>)
1000a136:	6998      	ldr	r0, [r3, #24]
1000a138:	2208      	movs	r2, #8
1000a13a:	4302      	orrs	r2, r0
1000a13c:	619a      	str	r2, [r3, #24]
					LPMCU_MISC_REGS_LPMCU_CTRL_USE_ARM_LP_CLK;
			LPMCU_MISC_REGS0->LPMCU_CTRL.reg &= \
1000a13e:	699a      	ldr	r2, [r3, #24]
1000a140:	2004      	movs	r0, #4
1000a142:	4382      	bics	r2, r0
1000a144:	619a      	str	r2, [r3, #24]
					~LPMCU_MISC_REGS_LPMCU_CTRL_USE_BT26M_CLK;
			AON_GP_REGS0->AON_PMU_CTRL.reg |= \
1000a146:	4a12      	ldr	r2, [pc, #72]	; (1000a190 <system_clock_config+0x7c>)
1000a148:	6853      	ldr	r3, [r2, #4]
1000a14a:	2080      	movs	r0, #128	; 0x80
1000a14c:	0300      	lsls	r0, r0, #12
1000a14e:	4303      	orrs	r3, r0
1000a150:	6053      	str	r3, [r2, #4]
					AON_GP_REGS_AON_PMU_CTRL_PMU_2MHZ_CLK_EN;
			system_clock_value = 2000000;
1000a152:	4a10      	ldr	r2, [pc, #64]	; (1000a194 <system_clock_config+0x80>)
1000a154:	4b0d      	ldr	r3, [pc, #52]	; (1000a18c <system_clock_config+0x78>)
1000a156:	601a      	str	r2, [r3, #0]
			break;
1000a158:	e007      	b.n	1000a16a <system_clock_config+0x56>

		case CLOCK_RESOURCE_RC_26_MHZ:
			LPMCU_MISC_REGS0->LPMCU_CTRL.reg &= \
1000a15a:	4a0a      	ldr	r2, [pc, #40]	; (1000a184 <system_clock_config+0x70>)
1000a15c:	6993      	ldr	r3, [r2, #24]
1000a15e:	200c      	movs	r0, #12
1000a160:	4383      	bics	r3, r0
1000a162:	6193      	str	r3, [r2, #24]
					~(LPMCU_MISC_REGS_LPMCU_CTRL_USE_BT26M_CLK | \
					LPMCU_MISC_REGS_LPMCU_CTRL_USE_ARM_LP_CLK);
			system_clock_value = 26000000;
1000a164:	4a08      	ldr	r2, [pc, #32]	; (1000a188 <system_clock_config+0x74>)
1000a166:	4b09      	ldr	r3, [pc, #36]	; (1000a18c <system_clock_config+0x78>)
1000a168:	601a      	str	r2, [r3, #0]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	LPMCU_MISC_REGS0->LPMCU_CTRL.reg &= \
1000a16a:	4b06      	ldr	r3, [pc, #24]	; (1000a184 <system_clock_config+0x70>)
1000a16c:	699a      	ldr	r2, [r3, #24]
1000a16e:	2003      	movs	r0, #3
1000a170:	4382      	bics	r2, r0
1000a172:	619a      	str	r2, [r3, #24]
		~LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_Msk;
	LPMCU_MISC_REGS0->LPMCU_CTRL.reg |= \
1000a174:	699a      	ldr	r2, [r3, #24]
1000a176:	4001      	ands	r1, r0
1000a178:	4311      	orrs	r1, r2
1000a17a:	6199      	str	r1, [r3, #24]
		LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL(freq);

	return STATUS_OK;
1000a17c:	2000      	movs	r0, #0
1000a17e:	e000      	b.n	1000a182 <system_clock_config+0x6e>
					LPMCU_MISC_REGS_LPMCU_CTRL_USE_ARM_LP_CLK);
			system_clock_value = 26000000;
			break;

		default:
			return STATUS_ERR_INVALID_ARG;
1000a180:	2017      	movs	r0, #23
		~LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL_Msk;
	LPMCU_MISC_REGS0->LPMCU_CTRL.reg |= \
		LPMCU_MISC_REGS_LPMCU_CTRL_LPMCU_CLK_SEL(freq);

	return STATUS_OK;
}
1000a182:	4770      	bx	lr
1000a184:	4000b000 	.word	0x4000b000
1000a188:	018cba80 	.word	0x018cba80
1000a18c:	10017888 	.word	0x10017888
1000a190:	4000f000 	.word	0x4000f000
1000a194:	001e8480 	.word	0x001e8480

1000a198 <system_clock_get_value>:
 *
 * \return system clock value.
 */
uint32_t system_clock_get_value(void)
{
	return system_clock_value;
1000a198:	4b01      	ldr	r3, [pc, #4]	; (1000a1a0 <system_clock_get_value+0x8>)
1000a19a:	6818      	ldr	r0, [r3, #0]
}
1000a19c:	4770      	bx	lr
1000a19e:	46c0      	nop			; (mov r8, r8)
1000a1a0:	10017888 	.word	0x10017888

1000a1a4 <system_clock_peripheral_enable>:
 * \return Status of operation.
 * \retval STATUS_OK               Clock config correctly
 * \retval STATUS_ERR_INVALID_ARG  If data is invalid
 */
enum status_code system_clock_peripheral_enable(enum system_peripheral peripheral)
{
1000a1a4:	b500      	push	{lr}
	switch (peripheral) {
1000a1a6:	2835      	cmp	r0, #53	; 0x35
1000a1a8:	d900      	bls.n	1000a1ac <system_clock_peripheral_enable+0x8>
1000a1aa:	e1a2      	b.n	1000a4f2 <system_clock_peripheral_enable+0x34e>
1000a1ac:	0080      	lsls	r0, r0, #2
1000a1ae:	4bd2      	ldr	r3, [pc, #840]	; (1000a4f8 <system_clock_peripheral_enable+0x354>)
1000a1b0:	581b      	ldr	r3, [r3, r0]
1000a1b2:	469f      	mov	pc, r3
		case PERIPHERAL_SPI_FLASH:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a1b4:	4ad1      	ldr	r2, [pc, #836]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a1b6:	68d1      	ldr	r1, [r2, #12]
1000a1b8:	2302      	movs	r3, #2
1000a1ba:	430b      	orrs	r3, r1
1000a1bc:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a1be:	2000      	movs	r0, #0
{
	switch (peripheral) {
		case PERIPHERAL_SPI_FLASH:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI_FLASH0_CLK_EN;
		break;
1000a1c0:	e198      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_SPI0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a1c2:	4ace      	ldr	r2, [pc, #824]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a1c4:	68d1      	ldr	r1, [r2, #12]
1000a1c6:	2304      	movs	r3, #4
1000a1c8:	430b      	orrs	r3, r1
1000a1ca:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a1cc:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SPI0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI0_CORE_CLK_EN;
		break;
1000a1ce:	e191      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_SPI1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a1d0:	4aca      	ldr	r2, [pc, #808]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a1d2:	68d1      	ldr	r1, [r2, #12]
1000a1d4:	2308      	movs	r3, #8
1000a1d6:	430b      	orrs	r3, r1
1000a1d8:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a1da:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SPI1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI1_CORE_CLK_EN;
		break;
1000a1dc:	e18a      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_I2C0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a1de:	4ac7      	ldr	r2, [pc, #796]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a1e0:	68d1      	ldr	r1, [r2, #12]
1000a1e2:	2310      	movs	r3, #16
1000a1e4:	430b      	orrs	r3, r1
1000a1e6:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a1e8:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_I2C0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C0_CORE_CLK_EN;
		break;
1000a1ea:	e183      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_DUALT_TIMER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a1ec:	4ac3      	ldr	r2, [pc, #780]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a1ee:	68d1      	ldr	r1, [r2, #12]
1000a1f0:	2320      	movs	r3, #32
1000a1f2:	430b      	orrs	r3, r1
1000a1f4:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a1f6:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_DUALT_TIMER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_DUALTIMER0_CLK_EN;
		break;
1000a1f8:	e17c      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_GPIO_CLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a1fa:	4ac0      	ldr	r2, [pc, #768]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a1fc:	68d1      	ldr	r1, [r2, #12]
1000a1fe:	2380      	movs	r3, #128	; 0x80
1000a200:	430b      	orrs	r3, r1
1000a202:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a204:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_GPIO_CLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_GPIO_CLK_EN;
		break;
1000a206:	e175      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_TIMER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a208:	4abc      	ldr	r2, [pc, #752]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a20a:	68d3      	ldr	r3, [r2, #12]
1000a20c:	2180      	movs	r1, #128	; 0x80
1000a20e:	0049      	lsls	r1, r1, #1
1000a210:	430b      	orrs	r3, r1
1000a212:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a214:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_TIMER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_TIMER0_CLK_EN;
		break;
1000a216:	e16d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_WDT0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a218:	4ab8      	ldr	r2, [pc, #736]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a21a:	68d3      	ldr	r3, [r2, #12]
1000a21c:	2180      	movs	r1, #128	; 0x80
1000a21e:	0109      	lsls	r1, r1, #4
1000a220:	430b      	orrs	r3, r1
1000a222:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a224:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_WDT0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT0_CLK_EN;
		break;
1000a226:	e165      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_WDT1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a228:	4ab4      	ldr	r2, [pc, #720]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a22a:	68d3      	ldr	r3, [r2, #12]
1000a22c:	2180      	movs	r1, #128	; 0x80
1000a22e:	0149      	lsls	r1, r1, #5
1000a230:	430b      	orrs	r3, r1
1000a232:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a234:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_WDT1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT1_CLK_EN;
		break;
1000a236:	e15d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_UART0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a238:	4ab0      	ldr	r2, [pc, #704]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a23a:	68d3      	ldr	r3, [r2, #12]
1000a23c:	2180      	movs	r1, #128	; 0x80
1000a23e:	0189      	lsls	r1, r1, #6
1000a240:	430b      	orrs	r3, r1
1000a242:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a244:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_UART0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_CORE_CLK_EN;
		break;
1000a246:	e155      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_UART0_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a248:	4aac      	ldr	r2, [pc, #688]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a24a:	68d3      	ldr	r3, [r2, #12]
1000a24c:	2180      	movs	r1, #128	; 0x80
1000a24e:	01c9      	lsls	r1, r1, #7
1000a250:	430b      	orrs	r3, r1
1000a252:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a254:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_UART0_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_IF_CLK_EN;
		break;
1000a256:	e14d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_UART1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a258:	4aa8      	ldr	r2, [pc, #672]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a25a:	68d3      	ldr	r3, [r2, #12]
1000a25c:	2180      	movs	r1, #128	; 0x80
1000a25e:	0209      	lsls	r1, r1, #8
1000a260:	430b      	orrs	r3, r1
1000a262:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a264:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_UART1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_CORE_CLK_EN;
		break;
1000a266:	e145      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_UART1_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a268:	4aa4      	ldr	r2, [pc, #656]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a26a:	68d3      	ldr	r3, [r2, #12]
1000a26c:	2180      	movs	r1, #128	; 0x80
1000a26e:	0249      	lsls	r1, r1, #9
1000a270:	430b      	orrs	r3, r1
1000a272:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a274:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_UART1_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_IF_CLK_EN;
		break;
1000a276:	e13d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_NVIC:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a278:	4aa0      	ldr	r2, [pc, #640]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a27a:	68d3      	ldr	r3, [r2, #12]
1000a27c:	2180      	movs	r1, #128	; 0x80
1000a27e:	0289      	lsls	r1, r1, #10
1000a280:	430b      	orrs	r3, r1
1000a282:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a284:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_NVIC:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IRQ_CTRLR_CORE_CLK_EN;
		break;
1000a286:	e135      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a288:	4a9c      	ldr	r2, [pc, #624]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a28a:	68d3      	ldr	r3, [r2, #12]
1000a28c:	2180      	movs	r1, #128	; 0x80
1000a28e:	02c9      	lsls	r1, r1, #11
1000a290:	430b      	orrs	r3, r1
1000a292:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a294:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_1_GL_MEM_CLK_EN;
		break;
1000a296:	e12d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a298:	4a98      	ldr	r2, [pc, #608]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a29a:	68d3      	ldr	r3, [r2, #12]
1000a29c:	2180      	movs	r1, #128	; 0x80
1000a29e:	0309      	lsls	r1, r1, #12
1000a2a0:	430b      	orrs	r3, r1
1000a2a2:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a2a4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_2_GL_MEM_CLK_EN;
		break;
1000a2a6:	e125      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_ROM:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a2a8:	4a94      	ldr	r2, [pc, #592]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a2aa:	68d3      	ldr	r3, [r2, #12]
1000a2ac:	2180      	movs	r1, #128	; 0x80
1000a2ae:	0349      	lsls	r1, r1, #13
1000a2b0:	430b      	orrs	r3, r1
1000a2b2:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a2b4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ROM:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ROM_MEM_CLK_EN;
		break;
1000a2b6:	e11d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_LOW_POWER_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a2b8:	4a90      	ldr	r2, [pc, #576]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a2ba:	68d3      	ldr	r3, [r2, #12]
1000a2bc:	2180      	movs	r1, #128	; 0x80
1000a2be:	0389      	lsls	r1, r1, #14
1000a2c0:	430b      	orrs	r3, r1
1000a2c2:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a2c4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_LOW_POWER_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_XBAR_IF_CLK_EN;
		break;
1000a2c6:	e115      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_AON_WRAPPER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a2c8:	4a8c      	ldr	r2, [pc, #560]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a2ca:	68d3      	ldr	r3, [r2, #12]
1000a2cc:	2180      	movs	r1, #128	; 0x80
1000a2ce:	03c9      	lsls	r1, r1, #15
1000a2d0:	430b      	orrs	r3, r1
1000a2d2:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a2d4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_AON_WRAPPER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_AON_WRAPPER_CLK_EN;
		break;
1000a2d6:	e10d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_ARM_PCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a2d8:	4a88      	ldr	r2, [pc, #544]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a2da:	68d3      	ldr	r3, [r2, #12]
1000a2dc:	2180      	movs	r1, #128	; 0x80
1000a2de:	0409      	lsls	r1, r1, #16
1000a2e0:	430b      	orrs	r3, r1
1000a2e2:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a2e4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ARM_PCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLK_EN;
		break;
1000a2e6:	e105      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_ARM_GATED_PCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a2e8:	4a84      	ldr	r2, [pc, #528]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a2ea:	68d3      	ldr	r3, [r2, #12]
1000a2ec:	2180      	movs	r1, #128	; 0x80
1000a2ee:	0449      	lsls	r1, r1, #17
1000a2f0:	430b      	orrs	r3, r1
1000a2f2:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a2f4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ARM_GATED_PCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLKG_EN;
		break;
1000a2f6:	e0fd      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_ARM_BLE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a2f8:	4a80      	ldr	r2, [pc, #512]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a2fa:	68d3      	ldr	r3, [r2, #12]
1000a2fc:	2180      	movs	r1, #128	; 0x80
1000a2fe:	0489      	lsls	r1, r1, #18
1000a300:	430b      	orrs	r3, r1
1000a302:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a304:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ARM_BLE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_BLE_MEM_CLK_EN;
		break;
1000a306:	e0f5      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_QDEC0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a308:	4a7c      	ldr	r2, [pc, #496]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a30a:	68d3      	ldr	r3, [r2, #12]
1000a30c:	2180      	movs	r1, #128	; 0x80
1000a30e:	04c9      	lsls	r1, r1, #19
1000a310:	430b      	orrs	r3, r1
1000a312:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a314:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_QDEC0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC0_CLK_EN;
		break;
1000a316:	e0ed      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_QDEC1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a318:	4a78      	ldr	r2, [pc, #480]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a31a:	68d3      	ldr	r3, [r2, #12]
1000a31c:	2180      	movs	r1, #128	; 0x80
1000a31e:	0509      	lsls	r1, r1, #20
1000a320:	430b      	orrs	r3, r1
1000a322:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a324:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_QDEC1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC1_CLK_EN;
		break;
1000a326:	e0e5      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_QDEC2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a328:	4a74      	ldr	r2, [pc, #464]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a32a:	68d3      	ldr	r3, [r2, #12]
1000a32c:	2180      	movs	r1, #128	; 0x80
1000a32e:	0549      	lsls	r1, r1, #21
1000a330:	430b      	orrs	r3, r1
1000a332:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a334:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_QDEC2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC2_CLK_EN;
		break;
1000a336:	e0dd      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_I2C1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a338:	4a70      	ldr	r2, [pc, #448]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a33a:	68d3      	ldr	r3, [r2, #12]
1000a33c:	2180      	movs	r1, #128	; 0x80
1000a33e:	0589      	lsls	r1, r1, #22
1000a340:	430b      	orrs	r3, r1
1000a342:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a344:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_I2C1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C1_CORE_CLK_EN;
		break;
1000a346:	e0d5      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_LOW_POWER_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000a348:	4a6c      	ldr	r2, [pc, #432]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a34a:	68d3      	ldr	r3, [r2, #12]
1000a34c:	2180      	movs	r1, #128	; 0x80
1000a34e:	05c9      	lsls	r1, r1, #23
1000a350:	430b      	orrs	r3, r1
1000a352:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a354:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_LOW_POWER_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_CLK_EN;
		break;
1000a356:	e0cd      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_EFUSE1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a358:	4a68      	ldr	r2, [pc, #416]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a35a:	6911      	ldr	r1, [r2, #16]
1000a35c:	2301      	movs	r3, #1
1000a35e:	430b      	orrs	r3, r1
1000a360:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a362:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE0_CLK_EN;
		break;
1000a364:	e0c6      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_EFUSE2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a366:	4a65      	ldr	r2, [pc, #404]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a368:	6911      	ldr	r1, [r2, #16]
1000a36a:	2302      	movs	r3, #2
1000a36c:	430b      	orrs	r3, r1
1000a36e:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a370:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE1_CLK_EN;
		break;
1000a372:	e0bf      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_EFUSE3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a374:	4a61      	ldr	r2, [pc, #388]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a376:	6911      	ldr	r1, [r2, #16]
1000a378:	2304      	movs	r3, #4
1000a37a:	430b      	orrs	r3, r1
1000a37c:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a37e:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE2_CLK_EN;
		break;
1000a380:	e0b8      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_EFUSE4:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a382:	4a5e      	ldr	r2, [pc, #376]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a384:	6911      	ldr	r1, [r2, #16]
1000a386:	2308      	movs	r3, #8
1000a388:	430b      	orrs	r3, r1
1000a38a:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a38c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE4:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE3_CLK_EN;
		break;
1000a38e:	e0b1      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_EFUSE5:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a390:	4a5a      	ldr	r2, [pc, #360]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a392:	6911      	ldr	r1, [r2, #16]
1000a394:	2310      	movs	r3, #16
1000a396:	430b      	orrs	r3, r1
1000a398:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a39a:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE5:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE4_CLK_EN;
		break;
1000a39c:	e0aa      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_EFUSE6:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a39e:	4a57      	ldr	r2, [pc, #348]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a3a0:	6911      	ldr	r1, [r2, #16]
1000a3a2:	2320      	movs	r3, #32
1000a3a4:	430b      	orrs	r3, r1
1000a3a6:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a3a8:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE6:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE5_CLK_EN;
		break;
1000a3aa:	e0a3      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_PWM0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a3ac:	4a53      	ldr	r2, [pc, #332]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a3ae:	6911      	ldr	r1, [r2, #16]
1000a3b0:	2340      	movs	r3, #64	; 0x40
1000a3b2:	430b      	orrs	r3, r1
1000a3b4:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a3b6:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_PWM0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM0_CLK_EN;
		break;
1000a3b8:	e09c      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_PWM1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a3ba:	4a50      	ldr	r2, [pc, #320]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a3bc:	6911      	ldr	r1, [r2, #16]
1000a3be:	2380      	movs	r3, #128	; 0x80
1000a3c0:	430b      	orrs	r3, r1
1000a3c2:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a3c4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_PWM1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM1_CLK_EN;
		break;
1000a3c6:	e095      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_PWM2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a3c8:	4a4c      	ldr	r2, [pc, #304]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a3ca:	6913      	ldr	r3, [r2, #16]
1000a3cc:	2180      	movs	r1, #128	; 0x80
1000a3ce:	0049      	lsls	r1, r1, #1
1000a3d0:	430b      	orrs	r3, r1
1000a3d2:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a3d4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_PWM2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM2_CLK_EN;
		break;
1000a3d6:	e08d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_PWM3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a3d8:	4a48      	ldr	r2, [pc, #288]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a3da:	6913      	ldr	r3, [r2, #16]
1000a3dc:	2180      	movs	r1, #128	; 0x80
1000a3de:	0089      	lsls	r1, r1, #2
1000a3e0:	430b      	orrs	r3, r1
1000a3e2:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a3e4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_PWM3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM3_CLK_EN;
		break;
1000a3e6:	e085      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_ADC:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a3e8:	4a44      	ldr	r2, [pc, #272]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a3ea:	6913      	ldr	r3, [r2, #16]
1000a3ec:	2180      	movs	r1, #128	; 0x80
1000a3ee:	00c9      	lsls	r1, r1, #3
1000a3f0:	430b      	orrs	r3, r1
1000a3f2:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a3f4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ADC:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SENS_ADC_CLK_EN;
		break;
1000a3f6:	e07d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_SPI0_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a3f8:	4a40      	ldr	r2, [pc, #256]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a3fa:	6913      	ldr	r3, [r2, #16]
1000a3fc:	2180      	movs	r1, #128	; 0x80
1000a3fe:	0109      	lsls	r1, r1, #4
1000a400:	430b      	orrs	r3, r1
1000a402:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a404:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SPI0_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI0_SCK_PHASE_INT_CLK_EN;
		break;
1000a406:	e075      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_SPI1_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a408:	4a3c      	ldr	r2, [pc, #240]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a40a:	6913      	ldr	r3, [r2, #16]
1000a40c:	2180      	movs	r1, #128	; 0x80
1000a40e:	0149      	lsls	r1, r1, #5
1000a410:	430b      	orrs	r3, r1
1000a412:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a414:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SPI1_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI1_SCK_PHASE_INT_CLK_EN;
		break;
1000a416:	e06d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_GPIO_GCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a418:	4a38      	ldr	r2, [pc, #224]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a41a:	6913      	ldr	r3, [r2, #16]
1000a41c:	2180      	movs	r1, #128	; 0x80
1000a41e:	0189      	lsls	r1, r1, #6
1000a420:	430b      	orrs	r3, r1
1000a422:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a424:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_GPIO_GCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_GPIO_GCLK_EN;
		break;
1000a426:	e065      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_TIMER0_GATE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a428:	4a34      	ldr	r2, [pc, #208]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a42a:	6913      	ldr	r3, [r2, #16]
1000a42c:	2180      	movs	r1, #128	; 0x80
1000a42e:	01c9      	lsls	r1, r1, #7
1000a430:	430b      	orrs	r3, r1
1000a432:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a434:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_TIMER0_GATE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_TIMER0_PGCLK_EN;
		break;
1000a436:	e05d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_SHA_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a438:	4a30      	ldr	r2, [pc, #192]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a43a:	6913      	ldr	r3, [r2, #16]
1000a43c:	2180      	movs	r1, #128	; 0x80
1000a43e:	0209      	lsls	r1, r1, #8
1000a440:	430b      	orrs	r3, r1
1000a442:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a444:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SHA_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_CORE_CLK_EN;
		break;
1000a446:	e055      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_SHA_AHB:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a448:	4a2c      	ldr	r2, [pc, #176]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a44a:	6913      	ldr	r3, [r2, #16]
1000a44c:	2180      	movs	r1, #128	; 0x80
1000a44e:	0249      	lsls	r1, r1, #9
1000a450:	430b      	orrs	r3, r1
1000a452:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a454:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SHA_AHB:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_AHB_CLK_EN;
		break;
1000a456:	e04d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_AES_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a458:	4a28      	ldr	r2, [pc, #160]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a45a:	6913      	ldr	r3, [r2, #16]
1000a45c:	2180      	movs	r1, #128	; 0x80
1000a45e:	0289      	lsls	r1, r1, #10
1000a460:	430b      	orrs	r3, r1
1000a462:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a464:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_AES_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_CORE_CLK_EN;
		break;
1000a466:	e045      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_AES_AHB:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a468:	4a24      	ldr	r2, [pc, #144]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a46a:	6913      	ldr	r3, [r2, #16]
1000a46c:	2180      	movs	r1, #128	; 0x80
1000a46e:	02c9      	lsls	r1, r1, #11
1000a470:	430b      	orrs	r3, r1
1000a472:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a474:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_AES_AHB:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_AHB_CLK_EN;
		break;
1000a476:	e03d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM1_0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a478:	4a20      	ldr	r2, [pc, #128]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a47a:	6913      	ldr	r3, [r2, #16]
1000a47c:	2180      	movs	r1, #128	; 0x80
1000a47e:	0309      	lsls	r1, r1, #12
1000a480:	430b      	orrs	r3, r1
1000a482:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a484:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM1_0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_0_MEM_CLK_EN;
		break;
1000a486:	e035      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM1_1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a488:	4a1c      	ldr	r2, [pc, #112]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a48a:	6913      	ldr	r3, [r2, #16]
1000a48c:	2180      	movs	r1, #128	; 0x80
1000a48e:	0349      	lsls	r1, r1, #13
1000a490:	430b      	orrs	r3, r1
1000a492:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a494:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM1_1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_1_MEM_CLK_EN;
		break;
1000a496:	e02d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM1_2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a498:	4a18      	ldr	r2, [pc, #96]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a49a:	6913      	ldr	r3, [r2, #16]
1000a49c:	2180      	movs	r1, #128	; 0x80
1000a49e:	0389      	lsls	r1, r1, #14
1000a4a0:	430b      	orrs	r3, r1
1000a4a2:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a4a4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM1_2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_2_MEM_CLK_EN;
		break;
1000a4a6:	e025      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM2_0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a4a8:	4a14      	ldr	r2, [pc, #80]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a4aa:	6913      	ldr	r3, [r2, #16]
1000a4ac:	2180      	movs	r1, #128	; 0x80
1000a4ae:	03c9      	lsls	r1, r1, #15
1000a4b0:	430b      	orrs	r3, r1
1000a4b2:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a4b4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM2_0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_0_MEM_CLK_EN;
		break;
1000a4b6:	e01d      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM2_1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000a4b8:	4a10      	ldr	r2, [pc, #64]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a4ba:	6913      	ldr	r3, [r2, #16]
1000a4bc:	2180      	movs	r1, #128	; 0x80
1000a4be:	0409      	lsls	r1, r1, #16
1000a4c0:	430b      	orrs	r3, r1
1000a4c2:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a4c4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM2_1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_1_MEM_CLK_EN;
		break;
1000a4c6:	e015      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_BLE_RXTX:
			LPMCU_MISC_REGS0->BTMCU_CTRL.reg |= \
1000a4c8:	4a0c      	ldr	r2, [pc, #48]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a4ca:	7d11      	ldrb	r1, [r2, #20]
1000a4cc:	2301      	movs	r3, #1
1000a4ce:	430b      	orrs	r3, r1
1000a4d0:	7513      	strb	r3, [r2, #20]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a4d2:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_BLE_RXTX:
			LPMCU_MISC_REGS0->BTMCU_CTRL.reg |= \
				LPMCU_MISC_REGS_BTMCU_CTRL_RXTX_SEQ_CLK_EN;
		break;
1000a4d4:	e00e      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_BLE_AHB:
			LPMCU_MISC_REGS0->BTMCU_CTRL.reg |= \
1000a4d6:	4a09      	ldr	r2, [pc, #36]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a4d8:	7d11      	ldrb	r1, [r2, #20]
1000a4da:	2302      	movs	r3, #2
1000a4dc:	430b      	orrs	r3, r1
1000a4de:	7513      	strb	r3, [r2, #20]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a4e0:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_BLE_AHB:
			LPMCU_MISC_REGS0->BTMCU_CTRL.reg |= \
				LPMCU_MISC_REGS_BTMCU_CTRL_AHB_CLK_EN;
		break;
1000a4e2:	e007      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_BLE_PERIPH_REGS:
			LPMCU_MISC_REGS0->BTMCU_CTRL.reg |= \
1000a4e4:	4a05      	ldr	r2, [pc, #20]	; (1000a4fc <system_clock_peripheral_enable+0x358>)
1000a4e6:	7d11      	ldrb	r1, [r2, #20]
1000a4e8:	2304      	movs	r3, #4
1000a4ea:	430b      	orrs	r3, r1
1000a4ec:	7513      	strb	r3, [r2, #20]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a4ee:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_BLE_PERIPH_REGS:
			LPMCU_MISC_REGS0->BTMCU_CTRL.reg |= \
				LPMCU_MISC_REGS_BTMCU_CTRL_PERIPH_REGS_CLK_EN;
		break;
1000a4f0:	e000      	b.n	1000a4f4 <system_clock_peripheral_enable+0x350>

		default:
			return STATUS_ERR_INVALID_ARG;
1000a4f2:	2017      	movs	r0, #23
	}

	return STATUS_OK;
}
1000a4f4:	bd00      	pop	{pc}
1000a4f6:	46c0      	nop			; (mov r8, r8)
1000a4f8:	10014cd8 	.word	0x10014cd8
1000a4fc:	4000b000 	.word	0x4000b000

1000a500 <system_clock_peripheral_disable>:
 * \return Status of operation.
 * \retval STATUS_OK               Clock config correctly
 * \retval STATUS_ERR_INVALID_ARG  If data is invalid
 */
enum status_code system_clock_peripheral_disable(enum system_peripheral peripheral)
{
1000a500:	b500      	push	{lr}
	switch (peripheral) {
1000a502:	2835      	cmp	r0, #53	; 0x35
1000a504:	d900      	bls.n	1000a508 <system_clock_peripheral_disable+0x8>
1000a506:	e17d      	b.n	1000a804 <system_clock_peripheral_disable+0x304>
1000a508:	0080      	lsls	r0, r0, #2
1000a50a:	4bbf      	ldr	r3, [pc, #764]	; (1000a808 <system_clock_peripheral_disable+0x308>)
1000a50c:	581b      	ldr	r3, [r3, r0]
1000a50e:	469f      	mov	pc, r3
		case PERIPHERAL_SPI_FLASH:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a510:	4abe      	ldr	r2, [pc, #760]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a512:	68d3      	ldr	r3, [r2, #12]
1000a514:	2102      	movs	r1, #2
1000a516:	438b      	bics	r3, r1
1000a518:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a51a:	2000      	movs	r0, #0
{
	switch (peripheral) {
		case PERIPHERAL_SPI_FLASH:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI_FLASH0_CLK_EN;
		break;
1000a51c:	e173      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_SPI0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a51e:	4abb      	ldr	r2, [pc, #748]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a520:	68d3      	ldr	r3, [r2, #12]
1000a522:	2104      	movs	r1, #4
1000a524:	438b      	bics	r3, r1
1000a526:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a528:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SPI0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI0_CORE_CLK_EN;
		break;
1000a52a:	e16c      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_SPI1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a52c:	4ab7      	ldr	r2, [pc, #732]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a52e:	68d3      	ldr	r3, [r2, #12]
1000a530:	2108      	movs	r1, #8
1000a532:	438b      	bics	r3, r1
1000a534:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a536:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SPI1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPI1_CORE_CLK_EN;
		break;
1000a538:	e165      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_I2C0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a53a:	4ab4      	ldr	r2, [pc, #720]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a53c:	68d3      	ldr	r3, [r2, #12]
1000a53e:	2110      	movs	r1, #16
1000a540:	438b      	bics	r3, r1
1000a542:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a544:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_I2C0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C0_CORE_CLK_EN;
		break;
1000a546:	e15e      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_DUALT_TIMER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a548:	4ab0      	ldr	r2, [pc, #704]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a54a:	68d3      	ldr	r3, [r2, #12]
1000a54c:	2120      	movs	r1, #32
1000a54e:	438b      	bics	r3, r1
1000a550:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a552:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_DUALT_TIMER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_DUALTIMER0_CLK_EN;
		break;
1000a554:	e157      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_GPIO_CLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a556:	4aad      	ldr	r2, [pc, #692]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a558:	68d3      	ldr	r3, [r2, #12]
1000a55a:	2180      	movs	r1, #128	; 0x80
1000a55c:	438b      	bics	r3, r1
1000a55e:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a560:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_GPIO_CLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_GPIO_CLK_EN;
		break;
1000a562:	e150      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_TIMER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a564:	4aa9      	ldr	r2, [pc, #676]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a566:	68d1      	ldr	r1, [r2, #12]
1000a568:	4ba9      	ldr	r3, [pc, #676]	; (1000a810 <system_clock_peripheral_disable+0x310>)
1000a56a:	400b      	ands	r3, r1
1000a56c:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a56e:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_TIMER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_TIMER0_CLK_EN;
		break;
1000a570:	e149      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_WDT0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a572:	4aa6      	ldr	r2, [pc, #664]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a574:	68d1      	ldr	r1, [r2, #12]
1000a576:	4ba7      	ldr	r3, [pc, #668]	; (1000a814 <system_clock_peripheral_disable+0x314>)
1000a578:	400b      	ands	r3, r1
1000a57a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a57c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_WDT0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT0_CLK_EN;
		break;
1000a57e:	e142      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_WDT1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a580:	4aa2      	ldr	r2, [pc, #648]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a582:	68d1      	ldr	r1, [r2, #12]
1000a584:	4ba4      	ldr	r3, [pc, #656]	; (1000a818 <system_clock_peripheral_disable+0x318>)
1000a586:	400b      	ands	r3, r1
1000a588:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a58a:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_WDT1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WDT1_CLK_EN;
		break;
1000a58c:	e13b      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_UART0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a58e:	4a9f      	ldr	r2, [pc, #636]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a590:	68d1      	ldr	r1, [r2, #12]
1000a592:	4ba2      	ldr	r3, [pc, #648]	; (1000a81c <system_clock_peripheral_disable+0x31c>)
1000a594:	400b      	ands	r3, r1
1000a596:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a598:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_UART0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_CORE_CLK_EN;
		break;
1000a59a:	e134      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_UART0_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a59c:	4a9b      	ldr	r2, [pc, #620]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a59e:	68d1      	ldr	r1, [r2, #12]
1000a5a0:	4b9f      	ldr	r3, [pc, #636]	; (1000a820 <system_clock_peripheral_disable+0x320>)
1000a5a2:	400b      	ands	r3, r1
1000a5a4:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a5a6:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_UART0_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART0_IF_CLK_EN;
		break;
1000a5a8:	e12d      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_UART1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a5aa:	4a98      	ldr	r2, [pc, #608]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a5ac:	68d1      	ldr	r1, [r2, #12]
1000a5ae:	4b9d      	ldr	r3, [pc, #628]	; (1000a824 <system_clock_peripheral_disable+0x324>)
1000a5b0:	400b      	ands	r3, r1
1000a5b2:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a5b4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_UART1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_CORE_CLK_EN;
		break;
1000a5b6:	e126      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_UART1_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a5b8:	4a94      	ldr	r2, [pc, #592]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a5ba:	68d1      	ldr	r1, [r2, #12]
1000a5bc:	4b9a      	ldr	r3, [pc, #616]	; (1000a828 <system_clock_peripheral_disable+0x328>)
1000a5be:	400b      	ands	r3, r1
1000a5c0:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a5c2:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_UART1_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART1_IF_CLK_EN;
		break;
1000a5c4:	e11f      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_NVIC:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a5c6:	4a91      	ldr	r2, [pc, #580]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a5c8:	68d1      	ldr	r1, [r2, #12]
1000a5ca:	4b98      	ldr	r3, [pc, #608]	; (1000a82c <system_clock_peripheral_disable+0x32c>)
1000a5cc:	400b      	ands	r3, r1
1000a5ce:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a5d0:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_NVIC:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IRQ_CTRLR_CORE_CLK_EN;
		break;
1000a5d2:	e118      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_IDRAM1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a5d4:	4a8d      	ldr	r2, [pc, #564]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a5d6:	68d1      	ldr	r1, [r2, #12]
1000a5d8:	4b95      	ldr	r3, [pc, #596]	; (1000a830 <system_clock_peripheral_disable+0x330>)
1000a5da:	400b      	ands	r3, r1
1000a5dc:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a5de:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_1_GL_MEM_CLK_EN;
		break;
1000a5e0:	e111      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_IDRAM2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a5e2:	4a8a      	ldr	r2, [pc, #552]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a5e4:	68d1      	ldr	r1, [r2, #12]
1000a5e6:	4b93      	ldr	r3, [pc, #588]	; (1000a834 <system_clock_peripheral_disable+0x334>)
1000a5e8:	400b      	ands	r3, r1
1000a5ea:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a5ec:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_2_GL_MEM_CLK_EN;
		break;
1000a5ee:	e10a      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_ROM:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a5f0:	4a86      	ldr	r2, [pc, #536]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a5f2:	68d1      	ldr	r1, [r2, #12]
1000a5f4:	4b90      	ldr	r3, [pc, #576]	; (1000a838 <system_clock_peripheral_disable+0x338>)
1000a5f6:	400b      	ands	r3, r1
1000a5f8:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a5fa:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ROM:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ROM_MEM_CLK_EN;
		break;
1000a5fc:	e103      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_LOW_POWER_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a5fe:	4a83      	ldr	r2, [pc, #524]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a600:	68d1      	ldr	r1, [r2, #12]
1000a602:	4b8e      	ldr	r3, [pc, #568]	; (1000a83c <system_clock_peripheral_disable+0x33c>)
1000a604:	400b      	ands	r3, r1
1000a606:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a608:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_LOW_POWER_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_XBAR_IF_CLK_EN;
		break;
1000a60a:	e0fc      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_AON_WRAPPER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a60c:	4a7f      	ldr	r2, [pc, #508]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a60e:	68d1      	ldr	r1, [r2, #12]
1000a610:	4b8b      	ldr	r3, [pc, #556]	; (1000a840 <system_clock_peripheral_disable+0x340>)
1000a612:	400b      	ands	r3, r1
1000a614:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a616:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_AON_WRAPPER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_AON_WRAPPER_CLK_EN;
		break;
1000a618:	e0f5      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_ARM_PCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a61a:	4a7c      	ldr	r2, [pc, #496]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a61c:	68d1      	ldr	r1, [r2, #12]
1000a61e:	4b89      	ldr	r3, [pc, #548]	; (1000a844 <system_clock_peripheral_disable+0x344>)
1000a620:	400b      	ands	r3, r1
1000a622:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a624:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ARM_PCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLK_EN;
		break;
1000a626:	e0ee      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_ARM_GATED_PCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a628:	4a78      	ldr	r2, [pc, #480]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a62a:	68d1      	ldr	r1, [r2, #12]
1000a62c:	4b86      	ldr	r3, [pc, #536]	; (1000a848 <system_clock_peripheral_disable+0x348>)
1000a62e:	400b      	ands	r3, r1
1000a630:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a632:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ARM_GATED_PCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLKG_EN;
		break;
1000a634:	e0e7      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_ARM_BLE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a636:	4a75      	ldr	r2, [pc, #468]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a638:	68d1      	ldr	r1, [r2, #12]
1000a63a:	4b84      	ldr	r3, [pc, #528]	; (1000a84c <system_clock_peripheral_disable+0x34c>)
1000a63c:	400b      	ands	r3, r1
1000a63e:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a640:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ARM_BLE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_BLE_MEM_CLK_EN;
		break;
1000a642:	e0e0      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_QDEC0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a644:	4a71      	ldr	r2, [pc, #452]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a646:	68d1      	ldr	r1, [r2, #12]
1000a648:	4b81      	ldr	r3, [pc, #516]	; (1000a850 <system_clock_peripheral_disable+0x350>)
1000a64a:	400b      	ands	r3, r1
1000a64c:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a64e:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_QDEC0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC0_CLK_EN;
		break;
1000a650:	e0d9      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_QDEC1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a652:	4a6e      	ldr	r2, [pc, #440]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a654:	68d1      	ldr	r1, [r2, #12]
1000a656:	4b7f      	ldr	r3, [pc, #508]	; (1000a854 <system_clock_peripheral_disable+0x354>)
1000a658:	400b      	ands	r3, r1
1000a65a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a65c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_QDEC1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC1_CLK_EN;
		break;
1000a65e:	e0d2      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_QDEC2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a660:	4a6a      	ldr	r2, [pc, #424]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a662:	68d1      	ldr	r1, [r2, #12]
1000a664:	4b7c      	ldr	r3, [pc, #496]	; (1000a858 <system_clock_peripheral_disable+0x358>)
1000a666:	400b      	ands	r3, r1
1000a668:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a66a:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_QDEC2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC2_CLK_EN;
		break;
1000a66c:	e0cb      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_I2C1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a66e:	4a67      	ldr	r2, [pc, #412]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a670:	68d1      	ldr	r1, [r2, #12]
1000a672:	4b7a      	ldr	r3, [pc, #488]	; (1000a85c <system_clock_peripheral_disable+0x35c>)
1000a674:	400b      	ands	r3, r1
1000a676:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a678:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_I2C1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_I2C1_CORE_CLK_EN;
		break;
1000a67a:	e0c4      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_LOW_POWER_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
1000a67c:	4a63      	ldr	r2, [pc, #396]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a67e:	68d1      	ldr	r1, [r2, #12]
1000a680:	4b77      	ldr	r3, [pc, #476]	; (1000a860 <system_clock_peripheral_disable+0x360>)
1000a682:	400b      	ands	r3, r1
1000a684:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a686:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_LOW_POWER_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_CLK_EN;
		break;
1000a688:	e0bd      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_EFUSE1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a68a:	4a60      	ldr	r2, [pc, #384]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a68c:	6913      	ldr	r3, [r2, #16]
1000a68e:	2101      	movs	r1, #1
1000a690:	438b      	bics	r3, r1
1000a692:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a694:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE0_CLK_EN;
		break;
1000a696:	e0b6      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_EFUSE2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a698:	4a5c      	ldr	r2, [pc, #368]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a69a:	6913      	ldr	r3, [r2, #16]
1000a69c:	2102      	movs	r1, #2
1000a69e:	438b      	bics	r3, r1
1000a6a0:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a6a2:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE1_CLK_EN;
		break;
1000a6a4:	e0af      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_EFUSE3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a6a6:	4a59      	ldr	r2, [pc, #356]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a6a8:	6913      	ldr	r3, [r2, #16]
1000a6aa:	2104      	movs	r1, #4
1000a6ac:	438b      	bics	r3, r1
1000a6ae:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a6b0:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE2_CLK_EN;
		break;
1000a6b2:	e0a8      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_EFUSE4:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a6b4:	4a55      	ldr	r2, [pc, #340]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a6b6:	6913      	ldr	r3, [r2, #16]
1000a6b8:	2108      	movs	r1, #8
1000a6ba:	438b      	bics	r3, r1
1000a6bc:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a6be:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE4:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE3_CLK_EN;
		break;
1000a6c0:	e0a1      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_EFUSE5:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a6c2:	4a52      	ldr	r2, [pc, #328]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a6c4:	6913      	ldr	r3, [r2, #16]
1000a6c6:	2110      	movs	r1, #16
1000a6c8:	438b      	bics	r3, r1
1000a6ca:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a6cc:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE5:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE4_CLK_EN;
		break;
1000a6ce:	e09a      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_EFUSE6:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a6d0:	4a4e      	ldr	r2, [pc, #312]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a6d2:	6913      	ldr	r3, [r2, #16]
1000a6d4:	2120      	movs	r1, #32
1000a6d6:	438b      	bics	r3, r1
1000a6d8:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a6da:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE6:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE5_CLK_EN;
		break;
1000a6dc:	e093      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_PWM0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a6de:	4a4b      	ldr	r2, [pc, #300]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a6e0:	6913      	ldr	r3, [r2, #16]
1000a6e2:	2140      	movs	r1, #64	; 0x40
1000a6e4:	438b      	bics	r3, r1
1000a6e6:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a6e8:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_PWM0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM0_CLK_EN;
		break;
1000a6ea:	e08c      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_PWM1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a6ec:	4a47      	ldr	r2, [pc, #284]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a6ee:	6913      	ldr	r3, [r2, #16]
1000a6f0:	2180      	movs	r1, #128	; 0x80
1000a6f2:	438b      	bics	r3, r1
1000a6f4:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a6f6:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_PWM1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM1_CLK_EN;
		break;
1000a6f8:	e085      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_PWM2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a6fa:	4a44      	ldr	r2, [pc, #272]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a6fc:	6911      	ldr	r1, [r2, #16]
1000a6fe:	4b44      	ldr	r3, [pc, #272]	; (1000a810 <system_clock_peripheral_disable+0x310>)
1000a700:	400b      	ands	r3, r1
1000a702:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a704:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_PWM2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM2_CLK_EN;
		break;
1000a706:	e07e      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_PWM3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a708:	4a40      	ldr	r2, [pc, #256]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a70a:	6911      	ldr	r1, [r2, #16]
1000a70c:	4b55      	ldr	r3, [pc, #340]	; (1000a864 <system_clock_peripheral_disable+0x364>)
1000a70e:	400b      	ands	r3, r1
1000a710:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a712:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_PWM3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM3_CLK_EN;
		break;
1000a714:	e077      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_ADC:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a716:	4a3d      	ldr	r2, [pc, #244]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a718:	6911      	ldr	r1, [r2, #16]
1000a71a:	4b53      	ldr	r3, [pc, #332]	; (1000a868 <system_clock_peripheral_disable+0x368>)
1000a71c:	400b      	ands	r3, r1
1000a71e:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a720:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ADC:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SENS_ADC_CLK_EN;
		break;
1000a722:	e070      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_SPI0_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a724:	4a39      	ldr	r2, [pc, #228]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a726:	6911      	ldr	r1, [r2, #16]
1000a728:	4b3a      	ldr	r3, [pc, #232]	; (1000a814 <system_clock_peripheral_disable+0x314>)
1000a72a:	400b      	ands	r3, r1
1000a72c:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a72e:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SPI0_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI0_SCK_PHASE_INT_CLK_EN;
		break;
1000a730:	e069      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_SPI1_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a732:	4a36      	ldr	r2, [pc, #216]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a734:	6911      	ldr	r1, [r2, #16]
1000a736:	4b38      	ldr	r3, [pc, #224]	; (1000a818 <system_clock_peripheral_disable+0x318>)
1000a738:	400b      	ands	r3, r1
1000a73a:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a73c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SPI1_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI1_SCK_PHASE_INT_CLK_EN;
		break;
1000a73e:	e062      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_GPIO_GCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a740:	4a32      	ldr	r2, [pc, #200]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a742:	6911      	ldr	r1, [r2, #16]
1000a744:	4b35      	ldr	r3, [pc, #212]	; (1000a81c <system_clock_peripheral_disable+0x31c>)
1000a746:	400b      	ands	r3, r1
1000a748:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a74a:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_GPIO_GCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_GPIO_GCLK_EN;
		break;
1000a74c:	e05b      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_TIMER0_GATE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a74e:	4a2f      	ldr	r2, [pc, #188]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a750:	6911      	ldr	r1, [r2, #16]
1000a752:	4b33      	ldr	r3, [pc, #204]	; (1000a820 <system_clock_peripheral_disable+0x320>)
1000a754:	400b      	ands	r3, r1
1000a756:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a758:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_TIMER0_GATE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_TIMER0_PGCLK_EN;
		break;
1000a75a:	e054      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_SHA_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a75c:	4a2b      	ldr	r2, [pc, #172]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a75e:	6911      	ldr	r1, [r2, #16]
1000a760:	4b30      	ldr	r3, [pc, #192]	; (1000a824 <system_clock_peripheral_disable+0x324>)
1000a762:	400b      	ands	r3, r1
1000a764:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a766:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SHA_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_CORE_CLK_EN;
		break;
1000a768:	e04d      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_SHA_AHB:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a76a:	4a28      	ldr	r2, [pc, #160]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a76c:	6911      	ldr	r1, [r2, #16]
1000a76e:	4b2e      	ldr	r3, [pc, #184]	; (1000a828 <system_clock_peripheral_disable+0x328>)
1000a770:	400b      	ands	r3, r1
1000a772:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a774:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SHA_AHB:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_AHB_CLK_EN;
		break;
1000a776:	e046      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_AES_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a778:	4a24      	ldr	r2, [pc, #144]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a77a:	6911      	ldr	r1, [r2, #16]
1000a77c:	4b2b      	ldr	r3, [pc, #172]	; (1000a82c <system_clock_peripheral_disable+0x32c>)
1000a77e:	400b      	ands	r3, r1
1000a780:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a782:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_AES_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_CORE_CLK_EN;
		break;
1000a784:	e03f      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_AES_AHB:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a786:	4a21      	ldr	r2, [pc, #132]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a788:	6911      	ldr	r1, [r2, #16]
1000a78a:	4b29      	ldr	r3, [pc, #164]	; (1000a830 <system_clock_peripheral_disable+0x330>)
1000a78c:	400b      	ands	r3, r1
1000a78e:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a790:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_AES_AHB:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_AHB_CLK_EN;
		break;
1000a792:	e038      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_IDRAM1_0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a794:	4a1d      	ldr	r2, [pc, #116]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a796:	6911      	ldr	r1, [r2, #16]
1000a798:	4b26      	ldr	r3, [pc, #152]	; (1000a834 <system_clock_peripheral_disable+0x334>)
1000a79a:	400b      	ands	r3, r1
1000a79c:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a79e:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM1_0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_0_MEM_CLK_EN;
		break;
1000a7a0:	e031      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_IDRAM1_1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a7a2:	4a1a      	ldr	r2, [pc, #104]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a7a4:	6911      	ldr	r1, [r2, #16]
1000a7a6:	4b24      	ldr	r3, [pc, #144]	; (1000a838 <system_clock_peripheral_disable+0x338>)
1000a7a8:	400b      	ands	r3, r1
1000a7aa:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a7ac:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM1_1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_1_MEM_CLK_EN;
		break;
1000a7ae:	e02a      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_IDRAM1_2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a7b0:	4a16      	ldr	r2, [pc, #88]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a7b2:	6911      	ldr	r1, [r2, #16]
1000a7b4:	4b21      	ldr	r3, [pc, #132]	; (1000a83c <system_clock_peripheral_disable+0x33c>)
1000a7b6:	400b      	ands	r3, r1
1000a7b8:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a7ba:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM1_2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_2_MEM_CLK_EN;
		break;
1000a7bc:	e023      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_IDRAM2_0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a7be:	4a13      	ldr	r2, [pc, #76]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a7c0:	6911      	ldr	r1, [r2, #16]
1000a7c2:	4b1f      	ldr	r3, [pc, #124]	; (1000a840 <system_clock_peripheral_disable+0x340>)
1000a7c4:	400b      	ands	r3, r1
1000a7c6:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a7c8:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM2_0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_0_MEM_CLK_EN;
		break;
1000a7ca:	e01c      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_IDRAM2_1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
1000a7cc:	4a0f      	ldr	r2, [pc, #60]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a7ce:	6911      	ldr	r1, [r2, #16]
1000a7d0:	4b1c      	ldr	r3, [pc, #112]	; (1000a844 <system_clock_peripheral_disable+0x344>)
1000a7d2:	400b      	ands	r3, r1
1000a7d4:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a7d6:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM2_1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_1_MEM_CLK_EN;
		break;
1000a7d8:	e015      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_BLE_RXTX:
			LPMCU_MISC_REGS0->BTMCU_CTRL.reg &= \
1000a7da:	4a0c      	ldr	r2, [pc, #48]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a7dc:	7d13      	ldrb	r3, [r2, #20]
1000a7de:	2101      	movs	r1, #1
1000a7e0:	438b      	bics	r3, r1
1000a7e2:	7513      	strb	r3, [r2, #20]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a7e4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_BLE_RXTX:
			LPMCU_MISC_REGS0->BTMCU_CTRL.reg &= \
				~LPMCU_MISC_REGS_BTMCU_CTRL_RXTX_SEQ_CLK_EN;
		break;
1000a7e6:	e00e      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_BLE_AHB:
			LPMCU_MISC_REGS0->BTMCU_CTRL.reg &= \
1000a7e8:	4a08      	ldr	r2, [pc, #32]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a7ea:	7d13      	ldrb	r3, [r2, #20]
1000a7ec:	2102      	movs	r1, #2
1000a7ee:	438b      	bics	r3, r1
1000a7f0:	7513      	strb	r3, [r2, #20]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a7f2:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_BLE_AHB:
			LPMCU_MISC_REGS0->BTMCU_CTRL.reg &= \
				~LPMCU_MISC_REGS_BTMCU_CTRL_AHB_CLK_EN;
		break;
1000a7f4:	e007      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		case PERIPHERAL_BLE_PERIPH_REGS:
			LPMCU_MISC_REGS0->BTMCU_CTRL.reg &= \
1000a7f6:	4a05      	ldr	r2, [pc, #20]	; (1000a80c <system_clock_peripheral_disable+0x30c>)
1000a7f8:	7d13      	ldrb	r3, [r2, #20]
1000a7fa:	2104      	movs	r1, #4
1000a7fc:	438b      	bics	r3, r1
1000a7fe:	7513      	strb	r3, [r2, #20]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a800:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_BLE_PERIPH_REGS:
			LPMCU_MISC_REGS0->BTMCU_CTRL.reg &= \
				~LPMCU_MISC_REGS_BTMCU_CTRL_PERIPH_REGS_CLK_EN;
		break;
1000a802:	e000      	b.n	1000a806 <system_clock_peripheral_disable+0x306>

		default:
			return STATUS_ERR_INVALID_ARG;
1000a804:	2017      	movs	r0, #23
	}

	return STATUS_OK;
}
1000a806:	bd00      	pop	{pc}
1000a808:	10014db0 	.word	0x10014db0
1000a80c:	4000b000 	.word	0x4000b000
1000a810:	fffffeff 	.word	0xfffffeff
1000a814:	fffff7ff 	.word	0xfffff7ff
1000a818:	ffffefff 	.word	0xffffefff
1000a81c:	ffffdfff 	.word	0xffffdfff
1000a820:	ffffbfff 	.word	0xffffbfff
1000a824:	ffff7fff 	.word	0xffff7fff
1000a828:	fffeffff 	.word	0xfffeffff
1000a82c:	fffdffff 	.word	0xfffdffff
1000a830:	fffbffff 	.word	0xfffbffff
1000a834:	fff7ffff 	.word	0xfff7ffff
1000a838:	ffefffff 	.word	0xffefffff
1000a83c:	ffdfffff 	.word	0xffdfffff
1000a840:	ffbfffff 	.word	0xffbfffff
1000a844:	ff7fffff 	.word	0xff7fffff
1000a848:	feffffff 	.word	0xfeffffff
1000a84c:	fdffffff 	.word	0xfdffffff
1000a850:	fbffffff 	.word	0xfbffffff
1000a854:	f7ffffff 	.word	0xf7ffffff
1000a858:	efffffff 	.word	0xefffffff
1000a85c:	dfffffff 	.word	0xdfffffff
1000a860:	bfffffff 	.word	0xbfffffff
1000a864:	fffffdff 	.word	0xfffffdff
1000a868:	fffffbff 	.word	0xfffffbff

1000a86c <system_peripheral_reset>:
 * \return Status of operation.
 * \retval STATUS_OK               Clock config correctly
 * \retval STATUS_ERR_INVALID_ARG  If data is invalid
 */
enum status_code system_peripheral_reset(enum system_peripheral peripheral)
{
1000a86c:	b500      	push	{lr}
	switch (peripheral) {
1000a86e:	2843      	cmp	r0, #67	; 0x43
1000a870:	d900      	bls.n	1000a874 <system_peripheral_reset+0x8>
1000a872:	e223      	b.n	1000acbc <system_peripheral_reset+0x450>
1000a874:	0080      	lsls	r0, r0, #2
1000a876:	4be0      	ldr	r3, [pc, #896]	; (1000abf8 <system_peripheral_reset+0x38c>)
1000a878:	581b      	ldr	r3, [r3, r0]
1000a87a:	469f      	mov	pc, r3
		case PERIPHERAL_LPMCU_CPU:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a87c:	4bdf      	ldr	r3, [pc, #892]	; (1000abfc <system_peripheral_reset+0x390>)
1000a87e:	6859      	ldr	r1, [r3, #4]
1000a880:	2202      	movs	r2, #2
1000a882:	4391      	bics	r1, r2
1000a884:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CPU_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a886:	6859      	ldr	r1, [r3, #4]
1000a888:	430a      	orrs	r2, r1
1000a88a:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a88c:	2000      	movs	r0, #0
		case PERIPHERAL_LPMCU_CPU:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CPU_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CPU_RSTN;
		break;
1000a88e:	e216      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI_FLASH:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a890:	4bda      	ldr	r3, [pc, #872]	; (1000abfc <system_peripheral_reset+0x390>)
1000a892:	6859      	ldr	r1, [r3, #4]
1000a894:	2204      	movs	r2, #4
1000a896:	4391      	bics	r1, r2
1000a898:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_SYS_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a89a:	6859      	ldr	r1, [r3, #4]
1000a89c:	430a      	orrs	r2, r1
1000a89e:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a8a0:	2000      	movs	r0, #0
		case PERIPHERAL_SPI_FLASH:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_SYS_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_SYS_RSTN;
		break;
1000a8a2:	e20c      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI_FLASH_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a8a4:	4bd5      	ldr	r3, [pc, #852]	; (1000abfc <system_peripheral_reset+0x390>)
1000a8a6:	6859      	ldr	r1, [r3, #4]
1000a8a8:	2208      	movs	r2, #8
1000a8aa:	4391      	bics	r1, r2
1000a8ac:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a8ae:	6859      	ldr	r1, [r3, #4]
1000a8b0:	430a      	orrs	r2, r1
1000a8b2:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a8b4:	2000      	movs	r0, #0
		case PERIPHERAL_SPI_FLASH_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI_FLASH0_RSTN;
		break;
1000a8b6:	e202      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI0_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a8b8:	4bd0      	ldr	r3, [pc, #832]	; (1000abfc <system_peripheral_reset+0x390>)
1000a8ba:	6859      	ldr	r1, [r3, #4]
1000a8bc:	2210      	movs	r2, #16
1000a8be:	4391      	bics	r1, r2
1000a8c0:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a8c2:	6859      	ldr	r1, [r3, #4]
1000a8c4:	430a      	orrs	r2, r1
1000a8c6:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a8c8:	2000      	movs	r0, #0
		case PERIPHERAL_SPI0_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_CORE_RSTN;
		break;
1000a8ca:	e1f8      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI0_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a8cc:	4bcb      	ldr	r3, [pc, #812]	; (1000abfc <system_peripheral_reset+0x390>)
1000a8ce:	6859      	ldr	r1, [r3, #4]
1000a8d0:	2220      	movs	r2, #32
1000a8d2:	4391      	bics	r1, r2
1000a8d4:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a8d6:	6859      	ldr	r1, [r3, #4]
1000a8d8:	430a      	orrs	r2, r1
1000a8da:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a8dc:	2000      	movs	r0, #0
		case PERIPHERAL_SPI0_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI0_IF_RSTN;
		break;
1000a8de:	e1ee      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI1_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a8e0:	4bc6      	ldr	r3, [pc, #792]	; (1000abfc <system_peripheral_reset+0x390>)
1000a8e2:	6859      	ldr	r1, [r3, #4]
1000a8e4:	2240      	movs	r2, #64	; 0x40
1000a8e6:	4391      	bics	r1, r2
1000a8e8:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_CORE_RESETN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a8ea:	6859      	ldr	r1, [r3, #4]
1000a8ec:	430a      	orrs	r2, r1
1000a8ee:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a8f0:	2000      	movs	r0, #0
		case PERIPHERAL_SPI1_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_CORE_RESETN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_CORE_RESETN;
		break;
1000a8f2:	e1e4      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI1_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a8f4:	4bc1      	ldr	r3, [pc, #772]	; (1000abfc <system_peripheral_reset+0x390>)
1000a8f6:	6859      	ldr	r1, [r3, #4]
1000a8f8:	2280      	movs	r2, #128	; 0x80
1000a8fa:	4391      	bics	r1, r2
1000a8fc:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a8fe:	6859      	ldr	r1, [r3, #4]
1000a900:	430a      	orrs	r2, r1
1000a902:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a904:	2000      	movs	r0, #0
		case PERIPHERAL_SPI1_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPI1_IF_RSTN;
		break;
1000a906:	e1da      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_I2C0_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a908:	4bbc      	ldr	r3, [pc, #752]	; (1000abfc <system_peripheral_reset+0x390>)
1000a90a:	6859      	ldr	r1, [r3, #4]
1000a90c:	4abc      	ldr	r2, [pc, #752]	; (1000ac00 <system_peripheral_reset+0x394>)
1000a90e:	400a      	ands	r2, r1
1000a910:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a912:	685a      	ldr	r2, [r3, #4]
1000a914:	2180      	movs	r1, #128	; 0x80
1000a916:	0049      	lsls	r1, r1, #1
1000a918:	430a      	orrs	r2, r1
1000a91a:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a91c:	2000      	movs	r0, #0
		case PERIPHERAL_I2C0_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_CORE_RSTN;
		break;
1000a91e:	e1ce      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_I2C0_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a920:	4bb6      	ldr	r3, [pc, #728]	; (1000abfc <system_peripheral_reset+0x390>)
1000a922:	6859      	ldr	r1, [r3, #4]
1000a924:	4ab7      	ldr	r2, [pc, #732]	; (1000ac04 <system_peripheral_reset+0x398>)
1000a926:	400a      	ands	r2, r1
1000a928:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a92a:	685a      	ldr	r2, [r3, #4]
1000a92c:	2180      	movs	r1, #128	; 0x80
1000a92e:	0089      	lsls	r1, r1, #2
1000a930:	430a      	orrs	r2, r1
1000a932:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a934:	2000      	movs	r0, #0
		case PERIPHERAL_I2C0_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_I2C0_IF_RSTN;
		break;
1000a936:	e1c2      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_GPIO_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a938:	4bb0      	ldr	r3, [pc, #704]	; (1000abfc <system_peripheral_reset+0x390>)
1000a93a:	6859      	ldr	r1, [r3, #4]
1000a93c:	4ab2      	ldr	r2, [pc, #712]	; (1000ac08 <system_peripheral_reset+0x39c>)
1000a93e:	400a      	ands	r2, r1
1000a940:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GPIO_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a942:	685a      	ldr	r2, [r3, #4]
1000a944:	2180      	movs	r1, #128	; 0x80
1000a946:	00c9      	lsls	r1, r1, #3
1000a948:	430a      	orrs	r2, r1
1000a94a:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a94c:	2000      	movs	r0, #0
		case PERIPHERAL_GPIO_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GPIO_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GPIO_RSTN;
		break;
1000a94e:	e1b6      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_TIMER:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a950:	4baa      	ldr	r3, [pc, #680]	; (1000abfc <system_peripheral_reset+0x390>)
1000a952:	6859      	ldr	r1, [r3, #4]
1000a954:	4aad      	ldr	r2, [pc, #692]	; (1000ac0c <system_peripheral_reset+0x3a0>)
1000a956:	400a      	ands	r2, r1
1000a958:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_TIMER0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a95a:	685a      	ldr	r2, [r3, #4]
1000a95c:	2180      	movs	r1, #128	; 0x80
1000a95e:	0109      	lsls	r1, r1, #4
1000a960:	430a      	orrs	r2, r1
1000a962:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a964:	2000      	movs	r0, #0
		case PERIPHERAL_TIMER:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_TIMER0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_TIMER0_RSTN;
		break;
1000a966:	e1aa      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_UART0_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a968:	4ba4      	ldr	r3, [pc, #656]	; (1000abfc <system_peripheral_reset+0x390>)
1000a96a:	6859      	ldr	r1, [r3, #4]
1000a96c:	4aa8      	ldr	r2, [pc, #672]	; (1000ac10 <system_peripheral_reset+0x3a4>)
1000a96e:	400a      	ands	r2, r1
1000a970:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a972:	685a      	ldr	r2, [r3, #4]
1000a974:	2180      	movs	r1, #128	; 0x80
1000a976:	0149      	lsls	r1, r1, #5
1000a978:	430a      	orrs	r2, r1
1000a97a:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a97c:	2000      	movs	r0, #0
		case PERIPHERAL_UART0_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_CORE_RSTN;
		break;
1000a97e:	e19e      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_UART0_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a980:	4b9e      	ldr	r3, [pc, #632]	; (1000abfc <system_peripheral_reset+0x390>)
1000a982:	6859      	ldr	r1, [r3, #4]
1000a984:	4aa3      	ldr	r2, [pc, #652]	; (1000ac14 <system_peripheral_reset+0x3a8>)
1000a986:	400a      	ands	r2, r1
1000a988:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a98a:	685a      	ldr	r2, [r3, #4]
1000a98c:	2180      	movs	r1, #128	; 0x80
1000a98e:	0189      	lsls	r1, r1, #6
1000a990:	430a      	orrs	r2, r1
1000a992:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a994:	2000      	movs	r0, #0
		case PERIPHERAL_UART0_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART0_IF_RSTN;
		break;
1000a996:	e192      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_UART1_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a998:	4b98      	ldr	r3, [pc, #608]	; (1000abfc <system_peripheral_reset+0x390>)
1000a99a:	6859      	ldr	r1, [r3, #4]
1000a99c:	4a9e      	ldr	r2, [pc, #632]	; (1000ac18 <system_peripheral_reset+0x3ac>)
1000a99e:	400a      	ands	r2, r1
1000a9a0:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a9a2:	685a      	ldr	r2, [r3, #4]
1000a9a4:	2180      	movs	r1, #128	; 0x80
1000a9a6:	01c9      	lsls	r1, r1, #7
1000a9a8:	430a      	orrs	r2, r1
1000a9aa:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a9ac:	2000      	movs	r0, #0
		case PERIPHERAL_UART1_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_CORE_RSTN;
		break;
1000a9ae:	e186      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_UART1_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a9b0:	4b92      	ldr	r3, [pc, #584]	; (1000abfc <system_peripheral_reset+0x390>)
1000a9b2:	6859      	ldr	r1, [r3, #4]
1000a9b4:	4a99      	ldr	r2, [pc, #612]	; (1000ac1c <system_peripheral_reset+0x3b0>)
1000a9b6:	400a      	ands	r2, r1
1000a9b8:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a9ba:	685a      	ldr	r2, [r3, #4]
1000a9bc:	2180      	movs	r1, #128	; 0x80
1000a9be:	0209      	lsls	r1, r1, #8
1000a9c0:	430a      	orrs	r2, r1
1000a9c2:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a9c4:	2000      	movs	r0, #0
		case PERIPHERAL_UART1_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART1_IF_RSTN;
		break;
1000a9c6:	e17a      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_WDT0:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a9c8:	4b8c      	ldr	r3, [pc, #560]	; (1000abfc <system_peripheral_reset+0x390>)
1000a9ca:	6859      	ldr	r1, [r3, #4]
1000a9cc:	4a94      	ldr	r2, [pc, #592]	; (1000ac20 <system_peripheral_reset+0x3b4>)
1000a9ce:	400a      	ands	r2, r1
1000a9d0:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a9d2:	685a      	ldr	r2, [r3, #4]
1000a9d4:	2180      	movs	r1, #128	; 0x80
1000a9d6:	0249      	lsls	r1, r1, #9
1000a9d8:	430a      	orrs	r2, r1
1000a9da:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a9dc:	2000      	movs	r0, #0
		case PERIPHERAL_WDT0:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT0_RSTN;
		break;
1000a9de:	e16e      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_WDT1:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a9e0:	4b86      	ldr	r3, [pc, #536]	; (1000abfc <system_peripheral_reset+0x390>)
1000a9e2:	6859      	ldr	r1, [r3, #4]
1000a9e4:	4a8f      	ldr	r2, [pc, #572]	; (1000ac24 <system_peripheral_reset+0x3b8>)
1000a9e6:	400a      	ands	r2, r1
1000a9e8:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT1_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000a9ea:	685a      	ldr	r2, [r3, #4]
1000a9ec:	2180      	movs	r1, #128	; 0x80
1000a9ee:	0289      	lsls	r1, r1, #10
1000a9f0:	430a      	orrs	r2, r1
1000a9f2:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000a9f4:	2000      	movs	r0, #0
		case PERIPHERAL_WDT1:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT1_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WDT1_RSTN;
		break;
1000a9f6:	e162      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_NVIC:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000a9f8:	4b80      	ldr	r3, [pc, #512]	; (1000abfc <system_peripheral_reset+0x390>)
1000a9fa:	6859      	ldr	r1, [r3, #4]
1000a9fc:	4a8a      	ldr	r2, [pc, #552]	; (1000ac28 <system_peripheral_reset+0x3bc>)
1000a9fe:	400a      	ands	r2, r1
1000aa00:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_IRQ_CTRLR_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000aa02:	685a      	ldr	r2, [r3, #4]
1000aa04:	2180      	movs	r1, #128	; 0x80
1000aa06:	02c9      	lsls	r1, r1, #11
1000aa08:	430a      	orrs	r2, r1
1000aa0a:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000aa0c:	2000      	movs	r0, #0
		case PERIPHERAL_NVIC:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_IRQ_CTRLR_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_IRQ_CTRLR_CORE_RSTN;
		break;
1000aa0e:	e156      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_MBIST:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000aa10:	4b7a      	ldr	r3, [pc, #488]	; (1000abfc <system_peripheral_reset+0x390>)
1000aa12:	6859      	ldr	r1, [r3, #4]
1000aa14:	4a85      	ldr	r2, [pc, #532]	; (1000ac2c <system_peripheral_reset+0x3c0>)
1000aa16:	400a      	ands	r2, r1
1000aa18:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_MBIST_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000aa1a:	685a      	ldr	r2, [r3, #4]
1000aa1c:	2180      	movs	r1, #128	; 0x80
1000aa1e:	0309      	lsls	r1, r1, #12
1000aa20:	430a      	orrs	r2, r1
1000aa22:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000aa24:	2000      	movs	r0, #0
		case PERIPHERAL_MBIST:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_MBIST_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_MBIST_RSTN;
		break;
1000aa26:	e14a      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_LOW_POWER_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000aa28:	4b74      	ldr	r3, [pc, #464]	; (1000abfc <system_peripheral_reset+0x390>)
1000aa2a:	6859      	ldr	r1, [r3, #4]
1000aa2c:	4a80      	ldr	r2, [pc, #512]	; (1000ac30 <system_peripheral_reset+0x3c4>)
1000aa2e:	400a      	ands	r2, r1
1000aa30:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000aa32:	685a      	ldr	r2, [r3, #4]
1000aa34:	2180      	movs	r1, #128	; 0x80
1000aa36:	0349      	lsls	r1, r1, #13
1000aa38:	430a      	orrs	r2, r1
1000aa3a:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000aa3c:	2000      	movs	r0, #0
		case PERIPHERAL_LOW_POWER_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_RSTN;
		break;
1000aa3e:	e13e      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_LOW_POWER_APB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000aa40:	4b6e      	ldr	r3, [pc, #440]	; (1000abfc <system_peripheral_reset+0x390>)
1000aa42:	6859      	ldr	r1, [r3, #4]
1000aa44:	4a7b      	ldr	r2, [pc, #492]	; (1000ac34 <system_peripheral_reset+0x3c8>)
1000aa46:	400a      	ands	r2, r1
1000aa48:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_XBAR_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000aa4a:	685a      	ldr	r2, [r3, #4]
1000aa4c:	2180      	movs	r1, #128	; 0x80
1000aa4e:	0389      	lsls	r1, r1, #14
1000aa50:	430a      	orrs	r2, r1
1000aa52:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000aa54:	2000      	movs	r0, #0
		case PERIPHERAL_LOW_POWER_APB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_XBAR_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_XBAR_IF_RSTN;
		break;
1000aa56:	e132      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_LPMCU_DEBUG:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000aa58:	4b68      	ldr	r3, [pc, #416]	; (1000abfc <system_peripheral_reset+0x390>)
1000aa5a:	6859      	ldr	r1, [r3, #4]
1000aa5c:	4a76      	ldr	r2, [pc, #472]	; (1000ac38 <system_peripheral_reset+0x3cc>)
1000aa5e:	400a      	ands	r2, r1
1000aa60:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_DBUG_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000aa62:	685a      	ldr	r2, [r3, #4]
1000aa64:	2180      	movs	r1, #128	; 0x80
1000aa66:	03c9      	lsls	r1, r1, #15
1000aa68:	430a      	orrs	r2, r1
1000aa6a:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000aa6c:	2000      	movs	r0, #0
		case PERIPHERAL_LPMCU_DEBUG:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_DBUG_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_DBUG_RSTN;
		break;
1000aa6e:	e126      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_ARM_FREE_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000aa70:	4b62      	ldr	r3, [pc, #392]	; (1000abfc <system_peripheral_reset+0x390>)
1000aa72:	6859      	ldr	r1, [r3, #4]
1000aa74:	4a71      	ldr	r2, [pc, #452]	; (1000ac3c <system_peripheral_reset+0x3d0>)
1000aa76:	400a      	ands	r2, r1
1000aa78:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_FREE_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000aa7a:	685a      	ldr	r2, [r3, #4]
1000aa7c:	2180      	movs	r1, #128	; 0x80
1000aa7e:	0409      	lsls	r1, r1, #16
1000aa80:	430a      	orrs	r2, r1
1000aa82:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000aa84:	2000      	movs	r0, #0
		case PERIPHERAL_ARM_FREE_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_FREE_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_FREE_CLK_RSTN;
		break;
1000aa86:	e11a      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_ARM_APB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000aa88:	4b5c      	ldr	r3, [pc, #368]	; (1000abfc <system_peripheral_reset+0x390>)
1000aa8a:	6859      	ldr	r1, [r3, #4]
1000aa8c:	4a6c      	ldr	r2, [pc, #432]	; (1000ac40 <system_peripheral_reset+0x3d4>)
1000aa8e:	400a      	ands	r2, r1
1000aa90:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_PRESETN_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000aa92:	685a      	ldr	r2, [r3, #4]
1000aa94:	2180      	movs	r1, #128	; 0x80
1000aa96:	0449      	lsls	r1, r1, #17
1000aa98:	430a      	orrs	r2, r1
1000aa9a:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000aa9c:	2000      	movs	r0, #0
		case PERIPHERAL_ARM_APB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_PRESETN_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_PRESETN_RSTN;
		break;
1000aa9e:	e10e      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_QDEC0:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000aaa0:	4b56      	ldr	r3, [pc, #344]	; (1000abfc <system_peripheral_reset+0x390>)
1000aaa2:	6859      	ldr	r1, [r3, #4]
1000aaa4:	4a67      	ldr	r2, [pc, #412]	; (1000ac44 <system_peripheral_reset+0x3d8>)
1000aaa6:	400a      	ands	r2, r1
1000aaa8:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000aaaa:	685a      	ldr	r2, [r3, #4]
1000aaac:	2180      	movs	r1, #128	; 0x80
1000aaae:	0489      	lsls	r1, r1, #18
1000aab0:	430a      	orrs	r2, r1
1000aab2:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000aab4:	2000      	movs	r0, #0
		case PERIPHERAL_QDEC0:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC0_RSTN;
		break;
1000aab6:	e102      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_QDEC1:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000aab8:	4b50      	ldr	r3, [pc, #320]	; (1000abfc <system_peripheral_reset+0x390>)
1000aaba:	6859      	ldr	r1, [r3, #4]
1000aabc:	4a62      	ldr	r2, [pc, #392]	; (1000ac48 <system_peripheral_reset+0x3dc>)
1000aabe:	400a      	ands	r2, r1
1000aac0:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC1_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000aac2:	685a      	ldr	r2, [r3, #4]
1000aac4:	2180      	movs	r1, #128	; 0x80
1000aac6:	04c9      	lsls	r1, r1, #19
1000aac8:	430a      	orrs	r2, r1
1000aaca:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000aacc:	2000      	movs	r0, #0
		case PERIPHERAL_QDEC1:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC1_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC1_RSTN;
		break;
1000aace:	e0f6      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_QDEC2:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000aad0:	4b4a      	ldr	r3, [pc, #296]	; (1000abfc <system_peripheral_reset+0x390>)
1000aad2:	6859      	ldr	r1, [r3, #4]
1000aad4:	4a5d      	ldr	r2, [pc, #372]	; (1000ac4c <system_peripheral_reset+0x3e0>)
1000aad6:	400a      	ands	r2, r1
1000aad8:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC2_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000aada:	685a      	ldr	r2, [r3, #4]
1000aadc:	2180      	movs	r1, #128	; 0x80
1000aade:	0509      	lsls	r1, r1, #20
1000aae0:	430a      	orrs	r2, r1
1000aae2:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000aae4:	2000      	movs	r0, #0
		case PERIPHERAL_QDEC2:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC2_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC2_RSTN;
		break;
1000aae6:	e0ea      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_PWM0:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000aae8:	4b44      	ldr	r3, [pc, #272]	; (1000abfc <system_peripheral_reset+0x390>)
1000aaea:	6859      	ldr	r1, [r3, #4]
1000aaec:	4a58      	ldr	r2, [pc, #352]	; (1000ac50 <system_peripheral_reset+0x3e4>)
1000aaee:	400a      	ands	r2, r1
1000aaf0:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000aaf2:	685a      	ldr	r2, [r3, #4]
1000aaf4:	2180      	movs	r1, #128	; 0x80
1000aaf6:	0549      	lsls	r1, r1, #21
1000aaf8:	430a      	orrs	r2, r1
1000aafa:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000aafc:	2000      	movs	r0, #0
		case PERIPHERAL_PWM0:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM0_RSTN;
		break;
1000aafe:	e0de      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_PWM1:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000ab00:	4b3e      	ldr	r3, [pc, #248]	; (1000abfc <system_peripheral_reset+0x390>)
1000ab02:	6859      	ldr	r1, [r3, #4]
1000ab04:	4a53      	ldr	r2, [pc, #332]	; (1000ac54 <system_peripheral_reset+0x3e8>)
1000ab06:	400a      	ands	r2, r1
1000ab08:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM1_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000ab0a:	685a      	ldr	r2, [r3, #4]
1000ab0c:	2180      	movs	r1, #128	; 0x80
1000ab0e:	0589      	lsls	r1, r1, #22
1000ab10:	430a      	orrs	r2, r1
1000ab12:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000ab14:	2000      	movs	r0, #0
		case PERIPHERAL_PWM1:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM1_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM1_RSTN;
		break;
1000ab16:	e0d2      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_PWM2:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000ab18:	4b38      	ldr	r3, [pc, #224]	; (1000abfc <system_peripheral_reset+0x390>)
1000ab1a:	6859      	ldr	r1, [r3, #4]
1000ab1c:	4a4e      	ldr	r2, [pc, #312]	; (1000ac58 <system_peripheral_reset+0x3ec>)
1000ab1e:	400a      	ands	r2, r1
1000ab20:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM2_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000ab22:	685a      	ldr	r2, [r3, #4]
1000ab24:	2180      	movs	r1, #128	; 0x80
1000ab26:	05c9      	lsls	r1, r1, #23
1000ab28:	430a      	orrs	r2, r1
1000ab2a:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000ab2c:	2000      	movs	r0, #0
		case PERIPHERAL_PWM2:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM2_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM2_RSTN;
		break;
1000ab2e:	e0c6      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_PWM3:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000ab30:	4a32      	ldr	r2, [pc, #200]	; (1000abfc <system_peripheral_reset+0x390>)
1000ab32:	6853      	ldr	r3, [r2, #4]
1000ab34:	005b      	lsls	r3, r3, #1
1000ab36:	085b      	lsrs	r3, r3, #1
1000ab38:	6053      	str	r3, [r2, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM3_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000ab3a:	6853      	ldr	r3, [r2, #4]
1000ab3c:	2180      	movs	r1, #128	; 0x80
1000ab3e:	0609      	lsls	r1, r1, #24
1000ab40:	430b      	orrs	r3, r1
1000ab42:	6053      	str	r3, [r2, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000ab44:	2000      	movs	r0, #0
		case PERIPHERAL_PWM3:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM3_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM3_RSTN;
		break;
1000ab46:	e0ba      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_DUALT_TIMER:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000ab48:	4b2c      	ldr	r3, [pc, #176]	; (1000abfc <system_peripheral_reset+0x390>)
1000ab4a:	891a      	ldrh	r2, [r3, #8]
1000ab4c:	2101      	movs	r1, #1
1000ab4e:	438a      	bics	r2, r1
1000ab50:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DUALTIMER0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000ab52:	8919      	ldrh	r1, [r3, #8]
1000ab54:	2201      	movs	r2, #1
1000ab56:	430a      	orrs	r2, r1
1000ab58:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000ab5a:	2000      	movs	r0, #0
		case PERIPHERAL_DUALT_TIMER:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DUALTIMER0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DUALTIMER0_RSTN;
		break;
1000ab5c:	e0af      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_I2C1_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000ab5e:	4b27      	ldr	r3, [pc, #156]	; (1000abfc <system_peripheral_reset+0x390>)
1000ab60:	891a      	ldrh	r2, [r3, #8]
1000ab62:	2102      	movs	r1, #2
1000ab64:	438a      	bics	r2, r1
1000ab66:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000ab68:	8919      	ldrh	r1, [r3, #8]
1000ab6a:	2202      	movs	r2, #2
1000ab6c:	430a      	orrs	r2, r1
1000ab6e:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000ab70:	2000      	movs	r0, #0
		case PERIPHERAL_I2C1_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_CORE_RSTN;
		break;
1000ab72:	e0a4      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_I2C1_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000ab74:	4b21      	ldr	r3, [pc, #132]	; (1000abfc <system_peripheral_reset+0x390>)
1000ab76:	891a      	ldrh	r2, [r3, #8]
1000ab78:	2104      	movs	r1, #4
1000ab7a:	438a      	bics	r2, r1
1000ab7c:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000ab7e:	8919      	ldrh	r1, [r3, #8]
1000ab80:	2204      	movs	r2, #4
1000ab82:	430a      	orrs	r2, r1
1000ab84:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000ab86:	2000      	movs	r0, #0
		case PERIPHERAL_I2C1_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_I2C1_IF_RSTN;
		break;
1000ab88:	e099      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_SHA_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000ab8a:	4b1c      	ldr	r3, [pc, #112]	; (1000abfc <system_peripheral_reset+0x390>)
1000ab8c:	891a      	ldrh	r2, [r3, #8]
1000ab8e:	2108      	movs	r1, #8
1000ab90:	438a      	bics	r2, r1
1000ab92:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000ab94:	8919      	ldrh	r1, [r3, #8]
1000ab96:	2208      	movs	r2, #8
1000ab98:	430a      	orrs	r2, r1
1000ab9a:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000ab9c:	2000      	movs	r0, #0
		case PERIPHERAL_SHA_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_CORE_RSTN;
		break;
1000ab9e:	e08e      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_SHA_AHB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000aba0:	4b16      	ldr	r3, [pc, #88]	; (1000abfc <system_peripheral_reset+0x390>)
1000aba2:	891a      	ldrh	r2, [r3, #8]
1000aba4:	2110      	movs	r1, #16
1000aba6:	438a      	bics	r2, r1
1000aba8:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_AHB_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000abaa:	8919      	ldrh	r1, [r3, #8]
1000abac:	2210      	movs	r2, #16
1000abae:	430a      	orrs	r2, r1
1000abb0:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000abb2:	2000      	movs	r0, #0
		case PERIPHERAL_SHA_AHB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_AHB_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_AHB_RSTN;
		break;
1000abb4:	e083      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_AES_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000abb6:	4b11      	ldr	r3, [pc, #68]	; (1000abfc <system_peripheral_reset+0x390>)
1000abb8:	891a      	ldrh	r2, [r3, #8]
1000abba:	2120      	movs	r1, #32
1000abbc:	438a      	bics	r2, r1
1000abbe:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000abc0:	8919      	ldrh	r1, [r3, #8]
1000abc2:	2220      	movs	r2, #32
1000abc4:	430a      	orrs	r2, r1
1000abc6:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000abc8:	2000      	movs	r0, #0
		case PERIPHERAL_AES_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_CORE_RSTN;
		break;
1000abca:	e078      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_AES_AHB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000abcc:	4b0b      	ldr	r3, [pc, #44]	; (1000abfc <system_peripheral_reset+0x390>)
1000abce:	891a      	ldrh	r2, [r3, #8]
1000abd0:	2140      	movs	r1, #64	; 0x40
1000abd2:	438a      	bics	r2, r1
1000abd4:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_AHB_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000abd6:	8919      	ldrh	r1, [r3, #8]
1000abd8:	2240      	movs	r2, #64	; 0x40
1000abda:	430a      	orrs	r2, r1
1000abdc:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000abde:	2000      	movs	r0, #0
		case PERIPHERAL_AES_AHB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_AHB_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_AHB_RSTN;
		break;
1000abe0:	e06d      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI0_SCK_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000abe2:	4b06      	ldr	r3, [pc, #24]	; (1000abfc <system_peripheral_reset+0x390>)
1000abe4:	891a      	ldrh	r2, [r3, #8]
1000abe6:	2180      	movs	r1, #128	; 0x80
1000abe8:	438a      	bics	r2, r1
1000abea:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000abec:	8919      	ldrh	r1, [r3, #8]
1000abee:	2280      	movs	r2, #128	; 0x80
1000abf0:	430a      	orrs	r2, r1
1000abf2:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000abf4:	2000      	movs	r0, #0
		case PERIPHERAL_SPI0_SCK_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_CLK_RSTN;
		break;
1000abf6:	e062      	b.n	1000acbe <system_peripheral_reset+0x452>
1000abf8:	10014e88 	.word	0x10014e88
1000abfc:	4000b000 	.word	0x4000b000
1000ac00:	fffffeff 	.word	0xfffffeff
1000ac04:	fffffdff 	.word	0xfffffdff
1000ac08:	fffffbff 	.word	0xfffffbff
1000ac0c:	fffff7ff 	.word	0xfffff7ff
1000ac10:	ffffefff 	.word	0xffffefff
1000ac14:	ffffdfff 	.word	0xffffdfff
1000ac18:	ffffbfff 	.word	0xffffbfff
1000ac1c:	ffff7fff 	.word	0xffff7fff
1000ac20:	fffeffff 	.word	0xfffeffff
1000ac24:	fffdffff 	.word	0xfffdffff
1000ac28:	fffbffff 	.word	0xfffbffff
1000ac2c:	fff7ffff 	.word	0xfff7ffff
1000ac30:	ffefffff 	.word	0xffefffff
1000ac34:	ffdfffff 	.word	0xffdfffff
1000ac38:	ffbfffff 	.word	0xffbfffff
1000ac3c:	ff7fffff 	.word	0xff7fffff
1000ac40:	feffffff 	.word	0xfeffffff
1000ac44:	fdffffff 	.word	0xfdffffff
1000ac48:	fbffffff 	.word	0xfbffffff
1000ac4c:	f7ffffff 	.word	0xf7ffffff
1000ac50:	efffffff 	.word	0xefffffff
1000ac54:	dfffffff 	.word	0xdfffffff
1000ac58:	bfffffff 	.word	0xbfffffff

		case PERIPHERAL_SPI1_SCK_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000ac5c:	4b18      	ldr	r3, [pc, #96]	; (1000acc0 <system_peripheral_reset+0x454>)
1000ac5e:	8919      	ldrh	r1, [r3, #8]
1000ac60:	4a18      	ldr	r2, [pc, #96]	; (1000acc4 <system_peripheral_reset+0x458>)
1000ac62:	400a      	ands	r2, r1
1000ac64:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000ac66:	8919      	ldrh	r1, [r3, #8]
1000ac68:	2280      	movs	r2, #128	; 0x80
1000ac6a:	0052      	lsls	r2, r2, #1
1000ac6c:	430a      	orrs	r2, r1
1000ac6e:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000ac70:	2000      	movs	r0, #0
		case PERIPHERAL_SPI1_SCK_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_CLK_RSTN;
		break;
1000ac72:	e024      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI0_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000ac74:	4b12      	ldr	r3, [pc, #72]	; (1000acc0 <system_peripheral_reset+0x454>)
1000ac76:	8919      	ldrh	r1, [r3, #8]
1000ac78:	4a13      	ldr	r2, [pc, #76]	; (1000acc8 <system_peripheral_reset+0x45c>)
1000ac7a:	400a      	ands	r2, r1
1000ac7c:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_PHASE_INT_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000ac7e:	8919      	ldrh	r1, [r3, #8]
1000ac80:	2280      	movs	r2, #128	; 0x80
1000ac82:	0092      	lsls	r2, r2, #2
1000ac84:	430a      	orrs	r2, r1
1000ac86:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000ac88:	2000      	movs	r0, #0
		case PERIPHERAL_SPI0_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_PHASE_INT_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI0_SCK_PHASE_INT_CLK_RSTN;
		break;
1000ac8a:	e018      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI1_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000ac8c:	4b0c      	ldr	r3, [pc, #48]	; (1000acc0 <system_peripheral_reset+0x454>)
1000ac8e:	8919      	ldrh	r1, [r3, #8]
1000ac90:	4a0e      	ldr	r2, [pc, #56]	; (1000accc <system_peripheral_reset+0x460>)
1000ac92:	400a      	ands	r2, r1
1000ac94:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_PHASE_INT_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000ac96:	8919      	ldrh	r1, [r3, #8]
1000ac98:	2280      	movs	r2, #128	; 0x80
1000ac9a:	00d2      	lsls	r2, r2, #3
1000ac9c:	430a      	orrs	r2, r1
1000ac9e:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000aca0:	2000      	movs	r0, #0
		case PERIPHERAL_SPI1_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_PHASE_INT_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SPI1_SCK_PHASE_INT_CLK_RSTN;
		break;
1000aca2:	e00c      	b.n	1000acbe <system_peripheral_reset+0x452>

		case PERIPHERAL_DMA:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000aca4:	4b06      	ldr	r3, [pc, #24]	; (1000acc0 <system_peripheral_reset+0x454>)
1000aca6:	8919      	ldrh	r1, [r3, #8]
1000aca8:	4a09      	ldr	r2, [pc, #36]	; (1000acd0 <system_peripheral_reset+0x464>)
1000acaa:	400a      	ands	r2, r1
1000acac:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_PROV_DMA_CTRL0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000acae:	8919      	ldrh	r1, [r3, #8]
1000acb0:	2280      	movs	r2, #128	; 0x80
1000acb2:	0112      	lsls	r2, r2, #4
1000acb4:	430a      	orrs	r2, r1
1000acb6:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000acb8:	2000      	movs	r0, #0
		case PERIPHERAL_DMA:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_PROV_DMA_CTRL0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_PROV_DMA_CTRL0_RSTN;
		break;
1000acba:	e000      	b.n	1000acbe <system_peripheral_reset+0x452>

		default:
			return STATUS_ERR_INVALID_ARG;
1000acbc:	2017      	movs	r0, #23
	}

	return STATUS_OK;
}
1000acbe:	bd00      	pop	{pc}
1000acc0:	4000b000 	.word	0x4000b000
1000acc4:	fffffeff 	.word	0xfffffeff
1000acc8:	fffffdff 	.word	0xfffffdff
1000accc:	fffffbff 	.word	0xfffffbff
1000acd0:	fffff7ff 	.word	0xfffff7ff

1000acd4 <system_register_isr>:
void system_register_isr(enum ram_isr_table_index isr_index,
		uint32_t isr_address)
{
	uint32_t *temp;
	temp = (uint32_t *)(isr_index * 4 + ISR_RAM_MAP_START_ADDRESS);
	*temp = isr_address;
1000acd4:	2380      	movs	r3, #128	; 0x80
1000acd6:	04db      	lsls	r3, r3, #19
1000acd8:	469c      	mov	ip, r3
1000acda:	4460      	add	r0, ip
1000acdc:	0080      	lsls	r0, r0, #2
1000acde:	6001      	str	r1, [r0, #0]
}
1000ace0:	4770      	bx	lr
1000ace2:	46c0      	nop			; (mov r8, r8)

1000ace4 <uart_rx0_isr_handler>:
	/* Decrement length of the remaining buffer */
	module->remaining_rx_buffer_length--;
}

static void uart_rx0_isr_handler(void)
{
1000ace4:	b570      	push	{r4, r5, r6, lr}
	struct uart_module *module = _uart_instances[0];
1000ace6:	4b20      	ldr	r3, [pc, #128]	; (1000ad68 <uart_rx0_isr_handler+0x84>)
1000ace8:	681c      	ldr	r4, [r3, #0]
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->RECEIVE_STATUS.reg;
1000acea:	6823      	ldr	r3, [r4, #0]
1000acec:	7d1d      	ldrb	r5, [r3, #20]
1000acee:	b2ed      	uxtb	r5, r5
	if (flags & UART_RECEIVE_STATUS_FIFO_OVERRUN) {
1000acf0:	066a      	lsls	r2, r5, #25
1000acf2:	d513      	bpl.n	1000ad1c <uart_rx0_isr_handler+0x38>
		/* Store the error code */
		module->status = STATUS_ERR_OVERFLOW;
1000acf4:	211e      	movs	r1, #30
1000acf6:	2222      	movs	r2, #34	; 0x22
1000acf8:	54a1      	strb	r1, [r4, r2]
		/* Disable interrupt */
		module->hw->RX_INTERRUPT_MASK.reg &=
1000acfa:	7e1a      	ldrb	r2, [r3, #24]
1000acfc:	3123      	adds	r1, #35	; 0x23
1000acfe:	438a      	bics	r2, r1
1000ad00:	761a      	strb	r2, [r3, #24]
			~(UART_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
			SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
		if ((module->callback_enable_mask & (1 << UART_RX_FIFO_OVERRUN)) &&
1000ad02:	2321      	movs	r3, #33	; 0x21
1000ad04:	5ce3      	ldrb	r3, [r4, r3]
1000ad06:	071b      	lsls	r3, r3, #28
1000ad08:	d506      	bpl.n	1000ad18 <uart_rx0_isr_handler+0x34>
			(module->callback_reg_mask & (1 << UART_RX_FIFO_OVERRUN))) {
1000ad0a:	2320      	movs	r3, #32
		module->status = STATUS_ERR_OVERFLOW;
		/* Disable interrupt */
		module->hw->RX_INTERRUPT_MASK.reg &=
			~(UART_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
			SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
		if ((module->callback_enable_mask & (1 << UART_RX_FIFO_OVERRUN)) &&
1000ad0c:	5ce3      	ldrb	r3, [r4, r3]
1000ad0e:	071b      	lsls	r3, r3, #28
1000ad10:	d502      	bpl.n	1000ad18 <uart_rx0_isr_handler+0x34>
			(module->callback_reg_mask & (1 << UART_RX_FIFO_OVERRUN))) {
			(module->callback[UART_RX_FIFO_OVERRUN])(module);
1000ad12:	0020      	movs	r0, r4
1000ad14:	6923      	ldr	r3, [r4, #16]
1000ad16:	4798      	blx	r3
		}
		/* Flush */
		uint8_t flush = module->hw->RECEIVE_DATA.reg;
1000ad18:	6823      	ldr	r3, [r4, #0]
1000ad1a:	7c1b      	ldrb	r3, [r3, #16]
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
1000ad1c:	07eb      	lsls	r3, r5, #31
1000ad1e:	d522      	bpl.n	1000ad66 <uart_rx0_isr_handler+0x82>
		struct uart_module *const module)
{
	/* Pointer to the hardware module instance */
	Uart *const uart_hw = module->hw;

	uint16_t received_data = (uart_hw->RECEIVE_DATA.reg & UART_RECEIVE_DATA_MASK);
1000ad20:	6823      	ldr	r3, [r4, #0]
1000ad22:	7c1b      	ldrb	r3, [r3, #16]
1000ad24:	b2db      	uxtb	r3, r3

	/* Read value will be at least 8-bits long */
	*(module->rx_buffer_ptr) = received_data;
1000ad26:	6962      	ldr	r2, [r4, #20]
1000ad28:	7013      	strb	r3, [r2, #0]
	/* Increment 8-bit pointer */
	module->rx_buffer_ptr += 1;
1000ad2a:	6963      	ldr	r3, [r4, #20]
1000ad2c:	3301      	adds	r3, #1
1000ad2e:	6163      	str	r3, [r4, #20]

	/* Decrement length of the remaining buffer */
	module->remaining_rx_buffer_length--;
1000ad30:	8ba3      	ldrh	r3, [r4, #28]
1000ad32:	3b01      	subs	r3, #1
1000ad34:	b29b      	uxth	r3, r3
1000ad36:	83a3      	strh	r3, [r4, #28]
		uint8_t flush = module->hw->RECEIVE_DATA.reg;
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
		_uart_read(module);
		if (module->remaining_rx_buffer_length == 0) {
1000ad38:	8ba3      	ldrh	r3, [r4, #28]
1000ad3a:	b29b      	uxth	r3, r3
1000ad3c:	2b00      	cmp	r3, #0
1000ad3e:	d112      	bne.n	1000ad66 <uart_rx0_isr_handler+0x82>
			if ((module->callback_enable_mask & (1 << UART_RX_COMPLETE)) &&
1000ad40:	3321      	adds	r3, #33	; 0x21
1000ad42:	5ce3      	ldrb	r3, [r4, r3]
1000ad44:	075b      	lsls	r3, r3, #29
1000ad46:	d50e      	bpl.n	1000ad66 <uart_rx0_isr_handler+0x82>
				(module->callback_reg_mask & (1 << UART_RX_COMPLETE))) {
1000ad48:	2320      	movs	r3, #32
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
		_uart_read(module);
		if (module->remaining_rx_buffer_length == 0) {
			if ((module->callback_enable_mask & (1 << UART_RX_COMPLETE)) &&
1000ad4a:	5ce3      	ldrb	r3, [r4, r3]
1000ad4c:	075b      	lsls	r3, r3, #29
1000ad4e:	d50a      	bpl.n	1000ad66 <uart_rx0_isr_handler+0x82>
				(module->callback_reg_mask & (1 << UART_RX_COMPLETE))) {
				module->status = STATUS_OK;
1000ad50:	2200      	movs	r2, #0
1000ad52:	2322      	movs	r3, #34	; 0x22
1000ad54:	54e2      	strb	r2, [r4, r3]
				module->hw->RX_INTERRUPT_MASK.reg &=
1000ad56:	6822      	ldr	r2, [r4, #0]
1000ad58:	7e13      	ldrb	r3, [r2, #24]
1000ad5a:	2101      	movs	r1, #1
1000ad5c:	438b      	bics	r3, r1
1000ad5e:	7613      	strb	r3, [r2, #24]
					~(UART_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
				(module->callback[UART_RX_COMPLETE])(module);
1000ad60:	68e3      	ldr	r3, [r4, #12]
1000ad62:	0020      	movs	r0, r4
1000ad64:	4798      	blx	r3
			}
		}
	}
}
1000ad66:	bd70      	pop	{r4, r5, r6, pc}
1000ad68:	1001788c 	.word	0x1001788c

1000ad6c <uart_tx0_isr_handler>:

static void uart_tx0_isr_handler(void)
{
1000ad6c:	b570      	push	{r4, r5, r6, lr}
	struct uart_module *module = _uart_instances[0];
1000ad6e:	4b21      	ldr	r3, [pc, #132]	; (1000adf4 <uart_tx0_isr_handler+0x88>)
1000ad70:	681c      	ldr	r4, [r3, #0]
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
1000ad72:	6823      	ldr	r3, [r4, #0]
1000ad74:	791d      	ldrb	r5, [r3, #4]
1000ad76:	b2ed      	uxtb	r5, r5
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_NOT_FULL) {
1000ad78:	07ea      	lsls	r2, r5, #31
1000ad7a:	d517      	bpl.n	1000adac <uart_tx0_isr_handler+0x40>
{
	/* Pointer to the hardware module instance */
	Uart *const uart_hw = module->hw;

	/* Write value will be at least 8-bits long */
	uint8_t data_to_send = *(module->tx_buffer_ptr);
1000ad7c:	69a2      	ldr	r2, [r4, #24]
1000ad7e:	7811      	ldrb	r1, [r2, #0]
1000ad80:	b2c9      	uxtb	r1, r1
	/* Increment 8-bit pointer */
	(module->tx_buffer_ptr)++;
1000ad82:	3201      	adds	r2, #1
1000ad84:	61a2      	str	r2, [r4, #24]

	/* Write the data to send*/
	uart_hw->TRANSMIT_DATA.reg = data_to_send & UART_TRANSMIT_DATA_MASK;
1000ad86:	7019      	strb	r1, [r3, #0]

	/* Decrement remaining buffer length */
	(module->remaining_tx_buffer_length)--;
1000ad88:	8be3      	ldrh	r3, [r4, #30]
1000ad8a:	3b01      	subs	r3, #1
1000ad8c:	b29b      	uxth	r3, r3
1000ad8e:	83e3      	strh	r3, [r4, #30]
	struct uart_module *module = _uart_instances[0];
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_NOT_FULL) {
		_uart_write(module);
		if (module->remaining_tx_buffer_length == 0) {
1000ad90:	8be3      	ldrh	r3, [r4, #30]
1000ad92:	b29b      	uxth	r3, r3
1000ad94:	2b00      	cmp	r3, #0
1000ad96:	d109      	bne.n	1000adac <uart_tx0_isr_handler+0x40>
			module->hw->TX_INTERRUPT_MASK.reg &=
1000ad98:	6822      	ldr	r2, [r4, #0]
1000ad9a:	7a13      	ldrb	r3, [r2, #8]
1000ad9c:	2101      	movs	r1, #1
1000ad9e:	438b      	bics	r3, r1
1000ada0:	7213      	strb	r3, [r2, #8]
					~UART_TX_INTERRUPT_MASK_TX_FIFO_NOT_FULL_MASK;
			module->hw->TX_INTERRUPT_MASK.reg |=
1000ada2:	6822      	ldr	r2, [r4, #0]
1000ada4:	7a11      	ldrb	r1, [r2, #8]
1000ada6:	2310      	movs	r3, #16
1000ada8:	430b      	orrs	r3, r1
1000adaa:	7213      	strb	r3, [r2, #8]
					UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
		}
	}
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
1000adac:	06eb      	lsls	r3, r5, #27
1000adae:	d512      	bpl.n	1000add6 <uart_tx0_isr_handler+0x6a>
		if ((module->callback_enable_mask & (1 << UART_TX_COMPLETE)) &&
1000adb0:	2321      	movs	r3, #33	; 0x21
1000adb2:	5ce3      	ldrb	r3, [r4, r3]
1000adb4:	07db      	lsls	r3, r3, #31
1000adb6:	d50e      	bpl.n	1000add6 <uart_tx0_isr_handler+0x6a>
			(module->callback_reg_mask & (1 << UART_TX_COMPLETE))) {
1000adb8:	2320      	movs	r3, #32
			module->hw->TX_INTERRUPT_MASK.reg |=
					UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
		}
	}
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
		if ((module->callback_enable_mask & (1 << UART_TX_COMPLETE)) &&
1000adba:	5ce3      	ldrb	r3, [r4, r3]
1000adbc:	07db      	lsls	r3, r3, #31
1000adbe:	d50a      	bpl.n	1000add6 <uart_tx0_isr_handler+0x6a>
			(module->callback_reg_mask & (1 << UART_TX_COMPLETE))) {
			module->status = STATUS_OK;
1000adc0:	2200      	movs	r2, #0
1000adc2:	2322      	movs	r3, #34	; 0x22
1000adc4:	54e2      	strb	r2, [r4, r3]
			/* Disable interrupt */
			module->hw->TX_INTERRUPT_MASK.reg &=
1000adc6:	6822      	ldr	r2, [r4, #0]
1000adc8:	7a13      	ldrb	r3, [r2, #8]
1000adca:	2110      	movs	r1, #16
1000adcc:	438b      	bics	r3, r1
1000adce:	7213      	strb	r3, [r2, #8]
				~UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
			(module->callback[UART_TX_COMPLETE])(module);
1000add0:	0020      	movs	r0, r4
1000add2:	6863      	ldr	r3, [r4, #4]
1000add4:	4798      	blx	r3
		}

	}
	if (flags & UART_TRANSMIT_STATUS_CTS_ACTIVE) {
1000add6:	06ab      	lsls	r3, r5, #26
1000add8:	d50a      	bpl.n	1000adf0 <uart_tx0_isr_handler+0x84>
		if ((module->callback_enable_mask & (1 << UART_CTS_ACTIVE)) &&
1000adda:	2321      	movs	r3, #33	; 0x21
1000addc:	5ce3      	ldrb	r3, [r4, r3]
1000adde:	079b      	lsls	r3, r3, #30
1000ade0:	d506      	bpl.n	1000adf0 <uart_tx0_isr_handler+0x84>
			(module->callback_reg_mask & (1 << UART_CTS_ACTIVE))) {
1000ade2:	2320      	movs	r3, #32
			(module->callback[UART_TX_COMPLETE])(module);
		}

	}
	if (flags & UART_TRANSMIT_STATUS_CTS_ACTIVE) {
		if ((module->callback_enable_mask & (1 << UART_CTS_ACTIVE)) &&
1000ade4:	5ce3      	ldrb	r3, [r4, r3]
1000ade6:	079b      	lsls	r3, r3, #30
1000ade8:	d502      	bpl.n	1000adf0 <uart_tx0_isr_handler+0x84>
			(module->callback_reg_mask & (1 << UART_CTS_ACTIVE))) {
			(module->callback[UART_CTS_ACTIVE])(module);
1000adea:	68a3      	ldr	r3, [r4, #8]
1000adec:	0020      	movs	r0, r4
1000adee:	4798      	blx	r3
		}

	}
}
1000adf0:	bd70      	pop	{r4, r5, r6, pc}
1000adf2:	46c0      	nop			; (mov r8, r8)
1000adf4:	1001788c 	.word	0x1001788c

1000adf8 <uart_rx1_isr_handler>:

static void uart_rx1_isr_handler(void)
{
1000adf8:	b570      	push	{r4, r5, r6, lr}
	struct uart_module *module = _uart_instances[1];
1000adfa:	4b20      	ldr	r3, [pc, #128]	; (1000ae7c <uart_rx1_isr_handler+0x84>)
1000adfc:	685c      	ldr	r4, [r3, #4]
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->RECEIVE_STATUS.reg;
1000adfe:	6823      	ldr	r3, [r4, #0]
1000ae00:	7d1d      	ldrb	r5, [r3, #20]
1000ae02:	b2ed      	uxtb	r5, r5
	if (flags & UART_RECEIVE_STATUS_FIFO_OVERRUN) {
1000ae04:	066a      	lsls	r2, r5, #25
1000ae06:	d513      	bpl.n	1000ae30 <uart_rx1_isr_handler+0x38>
		/* Store the error code */
		module->status = STATUS_ERR_OVERFLOW;
1000ae08:	211e      	movs	r1, #30
1000ae0a:	2222      	movs	r2, #34	; 0x22
1000ae0c:	54a1      	strb	r1, [r4, r2]
		/* Disable interrupt */
		module->hw->RX_INTERRUPT_MASK.reg &=
1000ae0e:	7e1a      	ldrb	r2, [r3, #24]
1000ae10:	3123      	adds	r1, #35	; 0x23
1000ae12:	438a      	bics	r2, r1
1000ae14:	761a      	strb	r2, [r3, #24]
			~(UART_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
			SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
		if ((module->callback_enable_mask & (1 << UART_RX_FIFO_OVERRUN)) &&
1000ae16:	2321      	movs	r3, #33	; 0x21
1000ae18:	5ce3      	ldrb	r3, [r4, r3]
1000ae1a:	071b      	lsls	r3, r3, #28
1000ae1c:	d506      	bpl.n	1000ae2c <uart_rx1_isr_handler+0x34>
			(module->callback_reg_mask & (1 << UART_RX_FIFO_OVERRUN))) {
1000ae1e:	2320      	movs	r3, #32
		module->status = STATUS_ERR_OVERFLOW;
		/* Disable interrupt */
		module->hw->RX_INTERRUPT_MASK.reg &=
			~(UART_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
			SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
		if ((module->callback_enable_mask & (1 << UART_RX_FIFO_OVERRUN)) &&
1000ae20:	5ce3      	ldrb	r3, [r4, r3]
1000ae22:	071b      	lsls	r3, r3, #28
1000ae24:	d502      	bpl.n	1000ae2c <uart_rx1_isr_handler+0x34>
			(module->callback_reg_mask & (1 << UART_RX_FIFO_OVERRUN))) {
			(module->callback[UART_RX_FIFO_OVERRUN])(module);
1000ae26:	0020      	movs	r0, r4
1000ae28:	6923      	ldr	r3, [r4, #16]
1000ae2a:	4798      	blx	r3
		}
		/* Flush */
		uint8_t flush = module->hw->RECEIVE_DATA.reg;
1000ae2c:	6823      	ldr	r3, [r4, #0]
1000ae2e:	7c1b      	ldrb	r3, [r3, #16]
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
1000ae30:	07eb      	lsls	r3, r5, #31
1000ae32:	d522      	bpl.n	1000ae7a <uart_rx1_isr_handler+0x82>
		struct uart_module *const module)
{
	/* Pointer to the hardware module instance */
	Uart *const uart_hw = module->hw;

	uint16_t received_data = (uart_hw->RECEIVE_DATA.reg & UART_RECEIVE_DATA_MASK);
1000ae34:	6823      	ldr	r3, [r4, #0]
1000ae36:	7c1b      	ldrb	r3, [r3, #16]
1000ae38:	b2db      	uxtb	r3, r3

	/* Read value will be at least 8-bits long */
	*(module->rx_buffer_ptr) = received_data;
1000ae3a:	6962      	ldr	r2, [r4, #20]
1000ae3c:	7013      	strb	r3, [r2, #0]
	/* Increment 8-bit pointer */
	module->rx_buffer_ptr += 1;
1000ae3e:	6963      	ldr	r3, [r4, #20]
1000ae40:	3301      	adds	r3, #1
1000ae42:	6163      	str	r3, [r4, #20]

	/* Decrement length of the remaining buffer */
	module->remaining_rx_buffer_length--;
1000ae44:	8ba3      	ldrh	r3, [r4, #28]
1000ae46:	3b01      	subs	r3, #1
1000ae48:	b29b      	uxth	r3, r3
1000ae4a:	83a3      	strh	r3, [r4, #28]
		uint8_t flush = module->hw->RECEIVE_DATA.reg;
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
		_uart_read(module);
		if (module->remaining_rx_buffer_length == 0) {
1000ae4c:	8ba3      	ldrh	r3, [r4, #28]
1000ae4e:	b29b      	uxth	r3, r3
1000ae50:	2b00      	cmp	r3, #0
1000ae52:	d112      	bne.n	1000ae7a <uart_rx1_isr_handler+0x82>
			if ((module->callback_enable_mask & (1 << UART_RX_COMPLETE)) &&
1000ae54:	3321      	adds	r3, #33	; 0x21
1000ae56:	5ce3      	ldrb	r3, [r4, r3]
1000ae58:	075b      	lsls	r3, r3, #29
1000ae5a:	d50e      	bpl.n	1000ae7a <uart_rx1_isr_handler+0x82>
				(module->callback_reg_mask & (1 << UART_RX_COMPLETE))) {
1000ae5c:	2320      	movs	r3, #32
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
		_uart_read(module);
		if (module->remaining_rx_buffer_length == 0) {
			if ((module->callback_enable_mask & (1 << UART_RX_COMPLETE)) &&
1000ae5e:	5ce3      	ldrb	r3, [r4, r3]
1000ae60:	075b      	lsls	r3, r3, #29
1000ae62:	d50a      	bpl.n	1000ae7a <uart_rx1_isr_handler+0x82>
				(module->callback_reg_mask & (1 << UART_RX_COMPLETE))) {
				module->status = STATUS_OK;
1000ae64:	2200      	movs	r2, #0
1000ae66:	2322      	movs	r3, #34	; 0x22
1000ae68:	54e2      	strb	r2, [r4, r3]
				module->hw->RX_INTERRUPT_MASK.reg &=
1000ae6a:	6822      	ldr	r2, [r4, #0]
1000ae6c:	7e13      	ldrb	r3, [r2, #24]
1000ae6e:	2101      	movs	r1, #1
1000ae70:	438b      	bics	r3, r1
1000ae72:	7613      	strb	r3, [r2, #24]
					~(UART_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
				(module->callback[UART_RX_COMPLETE])(module);
1000ae74:	68e3      	ldr	r3, [r4, #12]
1000ae76:	0020      	movs	r0, r4
1000ae78:	4798      	blx	r3
			}
		}
	}
}
1000ae7a:	bd70      	pop	{r4, r5, r6, pc}
1000ae7c:	1001788c 	.word	0x1001788c

1000ae80 <uart_tx1_isr_handler>:

static void uart_tx1_isr_handler(void)
{
1000ae80:	b570      	push	{r4, r5, r6, lr}
	struct uart_module *module = _uart_instances[1];
1000ae82:	4b21      	ldr	r3, [pc, #132]	; (1000af08 <uart_tx1_isr_handler+0x88>)
1000ae84:	685c      	ldr	r4, [r3, #4]
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
1000ae86:	6823      	ldr	r3, [r4, #0]
1000ae88:	791d      	ldrb	r5, [r3, #4]
1000ae8a:	b2ed      	uxtb	r5, r5
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_NOT_FULL) {
1000ae8c:	07ea      	lsls	r2, r5, #31
1000ae8e:	d517      	bpl.n	1000aec0 <uart_tx1_isr_handler+0x40>
{
	/* Pointer to the hardware module instance */
	Uart *const uart_hw = module->hw;

	/* Write value will be at least 8-bits long */
	uint8_t data_to_send = *(module->tx_buffer_ptr);
1000ae90:	69a2      	ldr	r2, [r4, #24]
1000ae92:	7811      	ldrb	r1, [r2, #0]
1000ae94:	b2c9      	uxtb	r1, r1
	/* Increment 8-bit pointer */
	(module->tx_buffer_ptr)++;
1000ae96:	3201      	adds	r2, #1
1000ae98:	61a2      	str	r2, [r4, #24]

	/* Write the data to send*/
	uart_hw->TRANSMIT_DATA.reg = data_to_send & UART_TRANSMIT_DATA_MASK;
1000ae9a:	7019      	strb	r1, [r3, #0]

	/* Decrement remaining buffer length */
	(module->remaining_tx_buffer_length)--;
1000ae9c:	8be3      	ldrh	r3, [r4, #30]
1000ae9e:	3b01      	subs	r3, #1
1000aea0:	b29b      	uxth	r3, r3
1000aea2:	83e3      	strh	r3, [r4, #30]
	struct uart_module *module = _uart_instances[1];
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_NOT_FULL) {
		_uart_write(module);
		if (module->remaining_tx_buffer_length == 0) {
1000aea4:	8be3      	ldrh	r3, [r4, #30]
1000aea6:	b29b      	uxth	r3, r3
1000aea8:	2b00      	cmp	r3, #0
1000aeaa:	d109      	bne.n	1000aec0 <uart_tx1_isr_handler+0x40>
			module->hw->TX_INTERRUPT_MASK.reg &=
1000aeac:	6822      	ldr	r2, [r4, #0]
1000aeae:	7a13      	ldrb	r3, [r2, #8]
1000aeb0:	2101      	movs	r1, #1
1000aeb2:	438b      	bics	r3, r1
1000aeb4:	7213      	strb	r3, [r2, #8]
					~UART_TX_INTERRUPT_MASK_TX_FIFO_NOT_FULL_MASK;
			module->hw->TX_INTERRUPT_MASK.reg |=
1000aeb6:	6822      	ldr	r2, [r4, #0]
1000aeb8:	7a11      	ldrb	r1, [r2, #8]
1000aeba:	2310      	movs	r3, #16
1000aebc:	430b      	orrs	r3, r1
1000aebe:	7213      	strb	r3, [r2, #8]
					UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
		}
	}
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
1000aec0:	06eb      	lsls	r3, r5, #27
1000aec2:	d512      	bpl.n	1000aeea <uart_tx1_isr_handler+0x6a>
		if ((module->callback_enable_mask & (1 << UART_TX_COMPLETE)) &&
1000aec4:	2321      	movs	r3, #33	; 0x21
1000aec6:	5ce3      	ldrb	r3, [r4, r3]
1000aec8:	07db      	lsls	r3, r3, #31
1000aeca:	d50e      	bpl.n	1000aeea <uart_tx1_isr_handler+0x6a>
			(module->callback_reg_mask & (1 << UART_TX_COMPLETE))) {
1000aecc:	2320      	movs	r3, #32
			module->hw->TX_INTERRUPT_MASK.reg |=
					UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
		}
	}
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
		if ((module->callback_enable_mask & (1 << UART_TX_COMPLETE)) &&
1000aece:	5ce3      	ldrb	r3, [r4, r3]
1000aed0:	07db      	lsls	r3, r3, #31
1000aed2:	d50a      	bpl.n	1000aeea <uart_tx1_isr_handler+0x6a>
			(module->callback_reg_mask & (1 << UART_TX_COMPLETE))) {
			module->status = STATUS_OK;
1000aed4:	2200      	movs	r2, #0
1000aed6:	2322      	movs	r3, #34	; 0x22
1000aed8:	54e2      	strb	r2, [r4, r3]
			/* Disable interrupt */
			module->hw->TX_INTERRUPT_MASK.reg &=
1000aeda:	6822      	ldr	r2, [r4, #0]
1000aedc:	7a13      	ldrb	r3, [r2, #8]
1000aede:	2110      	movs	r1, #16
1000aee0:	438b      	bics	r3, r1
1000aee2:	7213      	strb	r3, [r2, #8]
				~UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
			(module->callback[UART_TX_COMPLETE])(module);
1000aee4:	0020      	movs	r0, r4
1000aee6:	6863      	ldr	r3, [r4, #4]
1000aee8:	4798      	blx	r3
		}

	}
	if (flags & UART_TRANSMIT_STATUS_CTS_ACTIVE) {
1000aeea:	06ab      	lsls	r3, r5, #26
1000aeec:	d50a      	bpl.n	1000af04 <uart_tx1_isr_handler+0x84>
		if ((module->callback_enable_mask & (1 << UART_CTS_ACTIVE)) &&
1000aeee:	2321      	movs	r3, #33	; 0x21
1000aef0:	5ce3      	ldrb	r3, [r4, r3]
1000aef2:	079b      	lsls	r3, r3, #30
1000aef4:	d506      	bpl.n	1000af04 <uart_tx1_isr_handler+0x84>
			(module->callback_reg_mask & (1 << UART_CTS_ACTIVE))) {
1000aef6:	2320      	movs	r3, #32
			(module->callback[UART_TX_COMPLETE])(module);
		}

	}
	if (flags & UART_TRANSMIT_STATUS_CTS_ACTIVE) {
		if ((module->callback_enable_mask & (1 << UART_CTS_ACTIVE)) &&
1000aef8:	5ce3      	ldrb	r3, [r4, r3]
1000aefa:	079b      	lsls	r3, r3, #30
1000aefc:	d502      	bpl.n	1000af04 <uart_tx1_isr_handler+0x84>
			(module->callback_reg_mask & (1 << UART_CTS_ACTIVE))) {
			(module->callback[UART_CTS_ACTIVE])(module);
1000aefe:	68a3      	ldr	r3, [r4, #8]
1000af00:	0020      	movs	r0, r4
1000af02:	4798      	blx	r3
		}

	}
}
1000af04:	bd70      	pop	{r4, r5, r6, pc}
1000af06:	46c0      	nop			; (mov r8, r8)
1000af08:	1001788c 	.word	0x1001788c

1000af0c <uart_get_config_defaults>:
 * \param[out] config  Pointer to configuration structure to be initiated
 */
void uart_get_config_defaults(
		struct uart_config *const config)
{
	config->baud_rate = 115200;
1000af0c:	23e1      	movs	r3, #225	; 0xe1
1000af0e:	025b      	lsls	r3, r3, #9
1000af10:	6003      	str	r3, [r0, #0]
	config->data_bits = UART_8_BITS;
1000af12:	2300      	movs	r3, #0
1000af14:	7103      	strb	r3, [r0, #4]
	config->stop_bits = UART_1_STOP_BIT;
1000af16:	7143      	strb	r3, [r0, #5]
	config->parity = UART_NO_PARITY;
1000af18:	7183      	strb	r3, [r0, #6]
	config->flow_control = false;
1000af1a:	71c3      	strb	r3, [r0, #7]

	config->pin_number_pad[0] = PIN_LP_GPIO_2;
1000af1c:	3302      	adds	r3, #2
1000af1e:	6083      	str	r3, [r0, #8]
	config->pin_number_pad[1] = PIN_LP_GPIO_3;
1000af20:	2203      	movs	r2, #3
1000af22:	60c2      	str	r2, [r0, #12]
	config->pin_number_pad[2] = PIN_LP_GPIO_4;
1000af24:	3201      	adds	r2, #1
1000af26:	6102      	str	r2, [r0, #16]
	config->pin_number_pad[3] = PIN_LP_GPIO_5;
1000af28:	3201      	adds	r2, #1
1000af2a:	6142      	str	r2, [r0, #20]

	config->pinmux_sel_pad[0] = MUX_LP_GPIO_2_UART0_RXD;
1000af2c:	6183      	str	r3, [r0, #24]
	config->pinmux_sel_pad[1] = MUX_LP_GPIO_3_UART0_TXD;
1000af2e:	61c3      	str	r3, [r0, #28]
	config->pinmux_sel_pad[2] = MUX_LP_GPIO_4_UART0_CTS;
1000af30:	6203      	str	r3, [r0, #32]
	config->pinmux_sel_pad[3] = MUX_LP_GPIO_5_UART0_RTS;
1000af32:	6243      	str	r3, [r0, #36]	; 0x24
}
1000af34:	4770      	bx	lr
1000af36:	46c0      	nop			; (mov r8, r8)

1000af38 <uart_init>:
 *
 * \retval STATUS_OK                       The initialization was successful
 */
enum status_code uart_init(struct uart_module *const module, Uart * const hw,
		const struct uart_config *const config)
{
1000af38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000af3a:	464f      	mov	r7, r9
1000af3c:	4646      	mov	r6, r8
1000af3e:	b4c0      	push	{r6, r7}
1000af40:	0005      	movs	r5, r0
1000af42:	0017      	movs	r7, r2

	uint8_t config_temp = 0;
	uint8_t i,index;

	/* Assign module pointer to software instance struct */
	module->hw = hw;
1000af44:	6001      	str	r1, [r0, #0]

	for (i = 0; i < UART_CALLBACK_N; i++) {
		module->callback[i] = NULL;
1000af46:	2300      	movs	r3, #0
1000af48:	6043      	str	r3, [r0, #4]
1000af4a:	6083      	str	r3, [r0, #8]
1000af4c:	60c3      	str	r3, [r0, #12]
1000af4e:	6103      	str	r3, [r0, #16]
	}
	module->rx_buffer_ptr = NULL;
1000af50:	6143      	str	r3, [r0, #20]
	module->tx_buffer_ptr = NULL;
1000af52:	6183      	str	r3, [r0, #24]
	module->remaining_rx_buffer_length = 0;
1000af54:	2200      	movs	r2, #0
1000af56:	8383      	strh	r3, [r0, #28]
	module->remaining_tx_buffer_length = 0;
1000af58:	83c3      	strh	r3, [r0, #30]
	module->callback_reg_mask = 0;
1000af5a:	3320      	adds	r3, #32
1000af5c:	54c2      	strb	r2, [r0, r3]
	module->callback_enable_mask = 0;
1000af5e:	3301      	adds	r3, #1
1000af60:	54c2      	strb	r2, [r0, r3]
	module->status = STATUS_OK;
1000af62:	3301      	adds	r3, #1
1000af64:	54c2      	strb	r2, [r0, r3]

	if (hw == UART0) {
1000af66:	4b55      	ldr	r3, [pc, #340]	; (1000b0bc <uart_init+0x184>)
1000af68:	4299      	cmp	r1, r3
1000af6a:	d118      	bne.n	1000af9e <uart_init+0x66>
		system_peripheral_reset(PERIPHERAL_UART0_CORE);
1000af6c:	2009      	movs	r0, #9
1000af6e:	4c54      	ldr	r4, [pc, #336]	; (1000b0c0 <uart_init+0x188>)
1000af70:	47a0      	blx	r4
		system_peripheral_reset(PERIPHERAL_UART0_IF);
1000af72:	200a      	movs	r0, #10
1000af74:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_UART0_CORE);
1000af76:	2009      	movs	r0, #9
1000af78:	4c52      	ldr	r4, [pc, #328]	; (1000b0c4 <uart_init+0x18c>)
1000af7a:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_UART0_IF);
1000af7c:	200a      	movs	r0, #10
1000af7e:	47a0      	blx	r4
		_uart_instances[0] = module;
1000af80:	4b51      	ldr	r3, [pc, #324]	; (1000b0c8 <uart_init+0x190>)
1000af82:	601d      	str	r5, [r3, #0]
		system_register_isr(RAM_ISR_TABLE_UARTRX0_INDEX, (uint32_t)uart_rx0_isr_handler);
1000af84:	4951      	ldr	r1, [pc, #324]	; (1000b0cc <uart_init+0x194>)
1000af86:	2010      	movs	r0, #16
1000af88:	4c51      	ldr	r4, [pc, #324]	; (1000b0d0 <uart_init+0x198>)
1000af8a:	47a0      	blx	r4
		system_register_isr(RAM_ISR_TABLE_UARTTX0_INDEX, (uint32_t)uart_tx0_isr_handler);
1000af8c:	4951      	ldr	r1, [pc, #324]	; (1000b0d4 <uart_init+0x19c>)
1000af8e:	2011      	movs	r0, #17
1000af90:	47a0      	blx	r4
1000af92:	4b51      	ldr	r3, [pc, #324]	; (1000b0d8 <uart_init+0x1a0>)
1000af94:	2201      	movs	r2, #1
1000af96:	601a      	str	r2, [r3, #0]
1000af98:	3201      	adds	r2, #1
1000af9a:	601a      	str	r2, [r3, #0]
1000af9c:	e01a      	b.n	1000afd4 <uart_init+0x9c>
		NVIC_EnableIRQ(UART0_RX_IRQn);
		NVIC_EnableIRQ(UART0_TX_IRQn);
	} else if (hw == UART1) {
1000af9e:	4b4f      	ldr	r3, [pc, #316]	; (1000b0dc <uart_init+0x1a4>)
1000afa0:	4299      	cmp	r1, r3
1000afa2:	d117      	bne.n	1000afd4 <uart_init+0x9c>
		system_peripheral_reset(PERIPHERAL_UART1_CORE);
1000afa4:	200b      	movs	r0, #11
1000afa6:	4c46      	ldr	r4, [pc, #280]	; (1000b0c0 <uart_init+0x188>)
1000afa8:	47a0      	blx	r4
		system_peripheral_reset(PERIPHERAL_UART1_IF);
1000afaa:	200c      	movs	r0, #12
1000afac:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_UART1_CORE);
1000afae:	200b      	movs	r0, #11
1000afb0:	4c44      	ldr	r4, [pc, #272]	; (1000b0c4 <uart_init+0x18c>)
1000afb2:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_UART1_IF);
1000afb4:	200c      	movs	r0, #12
1000afb6:	47a0      	blx	r4
		_uart_instances[1] = module;
1000afb8:	4b43      	ldr	r3, [pc, #268]	; (1000b0c8 <uart_init+0x190>)
1000afba:	605d      	str	r5, [r3, #4]
		system_register_isr(RAM_ISR_TABLE_UARTRX1_INDEX, (uint32_t)uart_rx1_isr_handler);
1000afbc:	4948      	ldr	r1, [pc, #288]	; (1000b0e0 <uart_init+0x1a8>)
1000afbe:	2012      	movs	r0, #18
1000afc0:	4c43      	ldr	r4, [pc, #268]	; (1000b0d0 <uart_init+0x198>)
1000afc2:	47a0      	blx	r4
		system_register_isr(RAM_ISR_TABLE_UARTTX1_INDEX, (uint32_t)uart_tx1_isr_handler);
1000afc4:	4947      	ldr	r1, [pc, #284]	; (1000b0e4 <uart_init+0x1ac>)
1000afc6:	2013      	movs	r0, #19
1000afc8:	47a0      	blx	r4
1000afca:	4b43      	ldr	r3, [pc, #268]	; (1000b0d8 <uart_init+0x1a0>)
1000afcc:	2204      	movs	r2, #4
1000afce:	601a      	str	r2, [r3, #0]
1000afd0:	3204      	adds	r2, #4
1000afd2:	601a      	str	r2, [r3, #0]
		NVIC_EnableIRQ(UART1_RX_IRQn);
		NVIC_EnableIRQ(UART1_TX_IRQn);
	}

	/* Set the pinmux for this UART module. */
	if(config->flow_control) {
1000afd4:	79fb      	ldrb	r3, [r7, #7]
		index = 4;
1000afd6:	2204      	movs	r2, #4
1000afd8:	4690      	mov	r8, r2
		NVIC_EnableIRQ(UART1_RX_IRQn);
		NVIC_EnableIRQ(UART1_TX_IRQn);
	}

	/* Set the pinmux for this UART module. */
	if(config->flow_control) {
1000afda:	2b00      	cmp	r3, #0
1000afdc:	d152      	bne.n	1000b084 <uart_init+0x14c>
		index = 4;
	} else {
		index = 2;
1000afde:	3302      	adds	r3, #2
1000afe0:	4698      	mov	r8, r3
1000afe2:	e04f      	b.n	1000b084 <uart_init+0x14c>
#if (BTLC1000)
    index = 2;  /* BTLC1000 has no flow control function. */
#endif

	for(i = 0; i < index; i++) {
		gpio_pinmux_cofiguration(config->pin_number_pad[i], \
1000afe4:	8a31      	ldrh	r1, [r6, #16]
1000afe6:	ce01      	ldmia	r6!, {r0}
1000afe8:	b2c0      	uxtb	r0, r0
1000afea:	47c8      	blx	r9

#if (BTLC1000)
    index = 2;  /* BTLC1000 has no flow control function. */
#endif

	for(i = 0; i < index; i++) {
1000afec:	3401      	adds	r4, #1
1000afee:	b2e4      	uxtb	r4, r4
1000aff0:	4544      	cmp	r4, r8
1000aff2:	d3f7      	bcc.n	1000afe4 <uart_init+0xac>
		gpio_pinmux_cofiguration(config->pin_number_pad[i], \
								(uint16_t)(config->pinmux_sel_pad[i]));
	}

	/* empty UART FIFO */
	while (module->hw->RECEIVE_STATUS.reg & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
1000aff4:	682b      	ldr	r3, [r5, #0]
1000aff6:	7d1a      	ldrb	r2, [r3, #20]
1000aff8:	07d2      	lsls	r2, r2, #31
1000affa:	d504      	bpl.n	1000b006 <uart_init+0xce>
1000affc:	2101      	movs	r1, #1
		i = module->hw->RECEIVE_DATA.reg;
1000affe:	7c1a      	ldrb	r2, [r3, #16]
		gpio_pinmux_cofiguration(config->pin_number_pad[i], \
								(uint16_t)(config->pinmux_sel_pad[i]));
	}

	/* empty UART FIFO */
	while (module->hw->RECEIVE_STATUS.reg & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
1000b000:	7d1a      	ldrb	r2, [r3, #20]
1000b002:	420a      	tst	r2, r1
1000b004:	d1fb      	bne.n	1000affe <uart_init+0xc6>
		i = module->hw->RECEIVE_DATA.reg;
	}
	
	/* reset configuration register */
	module->hw->UART_CONFIGURATION.reg = 0;
1000b006:	2100      	movs	r1, #0
1000b008:	2220      	movs	r2, #32
1000b00a:	5499      	strb	r1, [r3, r2]

	/* program the uart configuration. */
	if(config->flow_control) {
1000b00c:	79fb      	ldrb	r3, [r7, #7]
		config_temp |= UART_CONFIGURATION_CTS_ENABLE_1;
1000b00e:	1e59      	subs	r1, r3, #1
1000b010:	418b      	sbcs	r3, r1
1000b012:	0159      	lsls	r1, r3, #5
	}
	config_temp |= config->data_bits;
	config_temp |= config->stop_bits;
1000b014:	793b      	ldrb	r3, [r7, #4]
1000b016:	797a      	ldrb	r2, [r7, #5]
1000b018:	4313      	orrs	r3, r2
1000b01a:	430b      	orrs	r3, r1
	switch(config->parity) {
1000b01c:	79ba      	ldrb	r2, [r7, #6]
1000b01e:	2a02      	cmp	r2, #2
1000b020:	d00d      	beq.n	1000b03e <uart_init+0x106>
1000b022:	b2d1      	uxtb	r1, r2
1000b024:	2902      	cmp	r1, #2
1000b026:	d802      	bhi.n	1000b02e <uart_init+0xf6>
1000b028:	2a01      	cmp	r2, #1
1000b02a:	d005      	beq.n	1000b038 <uart_init+0x100>
1000b02c:	e00f      	b.n	1000b04e <uart_init+0x116>
1000b02e:	2a03      	cmp	r2, #3
1000b030:	d008      	beq.n	1000b044 <uart_init+0x10c>
1000b032:	2a04      	cmp	r2, #4
1000b034:	d009      	beq.n	1000b04a <uart_init+0x112>
1000b036:	e00a      	b.n	1000b04e <uart_init+0x116>
		case UART_NO_PARITY:
			config_temp |= UART_CONFIGURATION_PARITY_ENABLE_0;
			break;

		case UART_EVEN_PARITY:
			config_temp |= UART_CONFIGURATION_PARITY_ENABLE_1;
1000b038:	2202      	movs	r2, #2
1000b03a:	4313      	orrs	r3, r2
			config_temp |= UART_CONFIGURATION_PARITY_MODE_0;
			break;
1000b03c:	e007      	b.n	1000b04e <uart_init+0x116>

		case UART_ODD_PARITY:
			config_temp |= UART_CONFIGURATION_PARITY_ENABLE_1;
			config_temp |= UART_CONFIGURATION_PARITY_MODE_1;
1000b03e:	2206      	movs	r2, #6
1000b040:	4313      	orrs	r3, r2
			break;
1000b042:	e004      	b.n	1000b04e <uart_init+0x116>

		case UART_SPACE_PARITY:
			config_temp |= UART_CONFIGURATION_PARITY_ENABLE_1;
			config_temp |= UART_CONFIGURATION_PARITY_MODE_2;
1000b044:	220a      	movs	r2, #10
1000b046:	4313      	orrs	r3, r2
			break;
1000b048:	e001      	b.n	1000b04e <uart_init+0x116>

		case UART_MARK_PARITY:
			config_temp |= UART_CONFIGURATION_PARITY_ENABLE_1;
			config_temp |= UART_CONFIGURATION_PARITY_MODE_3;
1000b04a:	220e      	movs	r2, #14
1000b04c:	4313      	orrs	r3, r2
			break;

		default:
			break;
	}	
	module->hw->UART_CONFIGURATION.reg = config_temp;
1000b04e:	2220      	movs	r2, #32
1000b050:	6829      	ldr	r1, [r5, #0]
1000b052:	548b      	strb	r3, [r1, r2]

	/* Calculate the baud rate. */
	uart_set_baudrate(module, config->baud_rate);
1000b054:	683e      	ldr	r6, [r7, #0]
	uint16_t integerpart = 0;
	uint8_t fractionalpart = 0;
	uint32_t diff;
	uint8_t i = 0;

	clock = system_clock_get_value();
1000b056:	4b24      	ldr	r3, [pc, #144]	; (1000b0e8 <uart_init+0x1b0>)
1000b058:	4798      	blx	r3
1000b05a:	0004      	movs	r4, r0
	integerpart = clock / baud_rate;
1000b05c:	0031      	movs	r1, r6
1000b05e:	4b23      	ldr	r3, [pc, #140]	; (1000b0ec <uart_init+0x1b4>)
1000b060:	4798      	blx	r3
1000b062:	b282      	uxth	r2, r0
	diff = clock - (baud_rate * integerpart);
1000b064:	0400      	lsls	r0, r0, #16
1000b066:	0c00      	lsrs	r0, r0, #16
1000b068:	4370      	muls	r0, r6
1000b06a:	1a20      	subs	r0, r4, r0
	i = 0;
	while(diff > (baud_rate / 16)) {
1000b06c:	0931      	lsrs	r1, r6, #4
1000b06e:	4288      	cmp	r0, r1
1000b070:	d906      	bls.n	1000b080 <uart_init+0x148>
1000b072:	2300      	movs	r3, #0
		i++;
1000b074:	3301      	adds	r3, #1
1000b076:	b2db      	uxtb	r3, r3
		diff -= (baud_rate / 16);
1000b078:	1a40      	subs	r0, r0, r1

	clock = system_clock_get_value();
	integerpart = clock / baud_rate;
	diff = clock - (baud_rate * integerpart);
	i = 0;
	while(diff > (baud_rate / 16)) {
1000b07a:	4288      	cmp	r0, r1
1000b07c:	d8fa      	bhi.n	1000b074 <uart_init+0x13c>
1000b07e:	e007      	b.n	1000b090 <uart_init+0x158>
	uint8_t i = 0;

	clock = system_clock_get_value();
	integerpart = clock / baud_rate;
	diff = clock - (baud_rate * integerpart);
	i = 0;
1000b080:	2300      	movs	r3, #0
1000b082:	e005      	b.n	1000b090 <uart_init+0x158>
1000b084:	003e      	movs	r6, r7
1000b086:	3608      	adds	r6, #8
 *
 * \retval STATUS_OK                       The initialization was successful
 */
enum status_code uart_init(struct uart_module *const module, Uart * const hw,
		const struct uart_config *const config)
{
1000b088:	2400      	movs	r4, #0
#if (BTLC1000)
    index = 2;  /* BTLC1000 has no flow control function. */
#endif

	for(i = 0; i < index; i++) {
		gpio_pinmux_cofiguration(config->pin_number_pad[i], \
1000b08a:	4b19      	ldr	r3, [pc, #100]	; (1000b0f0 <uart_init+0x1b8>)
1000b08c:	4699      	mov	r9, r3
1000b08e:	e7a9      	b.n	1000afe4 <uart_init+0xac>
		i++;
		diff -= (baud_rate / 16);
	}
	fractionalpart = (i + 1) / 2;

	module->hw->UART_CLOCK_SOURCE.reg = UART_CLOCK_SOURCE_CLOCK_SELECT_0;
1000b090:	2100      	movs	r1, #0
1000b092:	2028      	movs	r0, #40	; 0x28
1000b094:	682c      	ldr	r4, [r5, #0]
1000b096:	5421      	strb	r1, [r4, r0]
	module->hw->UART_BAUD_RATE.reg =
1000b098:	3301      	adds	r3, #1
1000b09a:	071b      	lsls	r3, r3, #28
1000b09c:	0f5b      	lsrs	r3, r3, #29
1000b09e:	00d2      	lsls	r2, r2, #3
1000b0a0:	4313      	orrs	r3, r2
1000b0a2:	b29b      	uxth	r3, r3
1000b0a4:	682a      	ldr	r2, [r5, #0]
1000b0a6:	8493      	strh	r3, [r2, #36]	; 0x24
	module->hw->UART_CONFIGURATION.reg = config_temp;

	/* Calculate the baud rate. */
	uart_set_baudrate(module, config->baud_rate);

	module->hw->RX_INTERRUPT_MASK.reg = 0;	// disable int at initialization, enable it at read time
1000b0a8:	682b      	ldr	r3, [r5, #0]
1000b0aa:	7619      	strb	r1, [r3, #24]
	module->hw->TX_INTERRUPT_MASK.reg = 0;	// disable int at initialization, enable it at write time
1000b0ac:	682b      	ldr	r3, [r5, #0]
1000b0ae:	7219      	strb	r1, [r3, #8]
	
	return STATUS_OK;
}
1000b0b0:	2000      	movs	r0, #0
1000b0b2:	bc0c      	pop	{r2, r3}
1000b0b4:	4690      	mov	r8, r2
1000b0b6:	4699      	mov	r9, r3
1000b0b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000b0ba:	46c0      	nop			; (mov r8, r8)
1000b0bc:	40004000 	.word	0x40004000
1000b0c0:	1000a86d 	.word	0x1000a86d
1000b0c4:	1000a1a5 	.word	0x1000a1a5
1000b0c8:	1001788c 	.word	0x1001788c
1000b0cc:	1000ace5 	.word	0x1000ace5
1000b0d0:	1000acd5 	.word	0x1000acd5
1000b0d4:	1000ad6d 	.word	0x1000ad6d
1000b0d8:	e000e100 	.word	0xe000e100
1000b0dc:	40005000 	.word	0x40005000
1000b0e0:	1000adf9 	.word	0x1000adf9
1000b0e4:	1000ae81 	.word	0x1000ae81
1000b0e8:	1000a199 	.word	0x1000a199
1000b0ec:	100110e9 	.word	0x100110e9
1000b0f0:	10009e31 	.word	0x10009e31

1000b0f4 <uart_write_wait>:
* \retval STATUS_OK         If the operation was completed
*/
enum status_code uart_write_wait(struct uart_module *const module,
		const uint8_t tx_data)
{
	while (!(module->hw->TRANSMIT_STATUS.reg & UART_TRANSMIT_STATUS_TX_FIFO_NOT_FULL));
1000b0f4:	6802      	ldr	r2, [r0, #0]
1000b0f6:	2001      	movs	r0, #1
1000b0f8:	7913      	ldrb	r3, [r2, #4]
1000b0fa:	4203      	tst	r3, r0
1000b0fc:	d0fc      	beq.n	1000b0f8 <uart_write_wait+0x4>

	module->hw->TRANSMIT_DATA.reg = tx_data;
1000b0fe:	7011      	strb	r1, [r2, #0]
	
	return STATUS_OK;
}
1000b100:	2000      	movs	r0, #0
1000b102:	4770      	bx	lr

1000b104 <uart_read_wait>:
* \retval STATUS_OK                If the operation was completed
*/
enum status_code uart_read_wait(struct uart_module *const module,
		uint8_t *const rx_data)
{
	while (!(module->hw->RECEIVE_STATUS.reg & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY));
1000b104:	6802      	ldr	r2, [r0, #0]
1000b106:	2001      	movs	r0, #1
1000b108:	7d13      	ldrb	r3, [r2, #20]
1000b10a:	4203      	tst	r3, r0
1000b10c:	d0fc      	beq.n	1000b108 <uart_read_wait+0x4>

	*rx_data = module->hw->RECEIVE_DATA.reg;
1000b10e:	7c13      	ldrb	r3, [r2, #16]
1000b110:	700b      	strb	r3, [r1, #0]
	
	return STATUS_OK;
}
1000b112:	2000      	movs	r0, #0
1000b114:	4770      	bx	lr
1000b116:	46c0      	nop			; (mov r8, r8)

1000b118 <uart_read_buffer_job>:
	/* Sanity check arguments */
	Assert(module);
	Assert(rx_data);

	if (length == 0) {
		return STATUS_ERR_INVALID_ARG;
1000b118:	2317      	movs	r3, #23
{
	/* Sanity check arguments */
	Assert(module);
	Assert(rx_data);

	if (length == 0) {
1000b11a:	2a00      	cmp	r2, #0
1000b11c:	d00d      	beq.n	1000b13a <uart_read_buffer_job+0x22>
		return STATUS_ERR_INVALID_ARG;
	}

	/* Check if the UART is busy transmitting or slave waiting for TXC*/
	if (module->status == STATUS_BUSY) {
1000b11e:	330b      	adds	r3, #11
1000b120:	5cc3      	ldrb	r3, [r0, r3]
1000b122:	b2db      	uxtb	r3, r3
1000b124:	2b05      	cmp	r3, #5
1000b126:	d008      	beq.n	1000b13a <uart_read_buffer_job+0x22>
	Assert(module);
	Assert(rx_data);

	/* Set length for the buffer and the pointer, and let
	 * the interrupt handler do the rest */
	module->remaining_rx_buffer_length = length;
1000b128:	8382      	strh	r2, [r0, #28]
	module->rx_buffer_ptr = rx_data;
1000b12a:	6141      	str	r1, [r0, #20]
	module->status = STATUS_BUSY;
1000b12c:	2205      	movs	r2, #5
1000b12e:	2322      	movs	r3, #34	; 0x22
1000b130:	54c2      	strb	r2, [r0, r3]

	module->hw->RX_INTERRUPT_MASK.reg = UART_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK;
1000b132:	6803      	ldr	r3, [r0, #0]
1000b134:	3a04      	subs	r2, #4
1000b136:	761a      	strb	r2, [r3, #24]
		return STATUS_BUSY;
	}

	/* Issue internal read */
	_uart_read_buffer(module, rx_data, length);
	return STATUS_OK;
1000b138:	2300      	movs	r3, #0
}
1000b13a:	0018      	movs	r0, r3
1000b13c:	4770      	bx	lr
1000b13e:	46c0      	nop			; (mov r8, r8)

1000b140 <uart_register_callback>:
	/* Sanity check arguments */
	Assert(module);
	Assert(callback_func);

	/* Register callback function */
	module->callback[callback_type] = callback_func;
1000b140:	0093      	lsls	r3, r2, #2
1000b142:	18c3      	adds	r3, r0, r3
1000b144:	6059      	str	r1, [r3, #4]
	/* Set the bit corresponding to the callback_type */
	module->callback_reg_mask |= (1 << callback_type);
1000b146:	2120      	movs	r1, #32
1000b148:	2301      	movs	r3, #1
1000b14a:	4093      	lsls	r3, r2
1000b14c:	5c42      	ldrb	r2, [r0, r1]
1000b14e:	4313      	orrs	r3, r2
1000b150:	5443      	strb	r3, [r0, r1]
}
1000b152:	4770      	bx	lr

1000b154 <uart_enable_callback>:
 * \param[in]  module         Pointer to UART software instance struct
 * \param[in]  callback_type  Callback type given by an enum
 */
void uart_enable_callback(struct uart_module *const module,
		enum uart_callback callback_type)
{
1000b154:	b510      	push	{r4, lr}
	/* Sanity check arguments */
	Assert(module);

	/* Enable callback */
	module->callback_enable_mask |= (1 << callback_type);
1000b156:	2221      	movs	r2, #33	; 0x21
1000b158:	2301      	movs	r3, #1
1000b15a:	408b      	lsls	r3, r1
1000b15c:	5c84      	ldrb	r4, [r0, r2]
1000b15e:	4323      	orrs	r3, r4
1000b160:	5483      	strb	r3, [r0, r2]

	if (callback_type == UART_CTS_ACTIVE) {
1000b162:	2901      	cmp	r1, #1
1000b164:	d104      	bne.n	1000b170 <uart_enable_callback+0x1c>
		module->hw->TX_INTERRUPT_MASK.reg |= UART_TX_INTERRUPT_MASK_CTS_ACTIVE_MASK;
1000b166:	6802      	ldr	r2, [r0, #0]
1000b168:	7a11      	ldrb	r1, [r2, #8]
1000b16a:	2320      	movs	r3, #32
1000b16c:	430b      	orrs	r3, r1
1000b16e:	7213      	strb	r3, [r2, #8]
	}
}
1000b170:	bd10      	pop	{r4, pc}
1000b172:	46c0      	nop			; (mov r8, r8)

1000b174 <uart_disable_callback>:
 * \param[in]  module         Pointer to UART software instance struct
 * \param[in]  callback_type  Callback type given by an enum
 */
void uart_disable_callback(struct uart_module *const module,
		enum uart_callback callback_type)
{
1000b174:	b510      	push	{r4, lr}
	/* Sanity check arguments */
	Assert(module);

	/* Disable callback */
	module->callback_enable_mask &= ~(1 << callback_type);
1000b176:	2201      	movs	r2, #1
1000b178:	408a      	lsls	r2, r1
1000b17a:	2421      	movs	r4, #33	; 0x21
1000b17c:	5d03      	ldrb	r3, [r0, r4]
1000b17e:	4393      	bics	r3, r2
1000b180:	5503      	strb	r3, [r0, r4]

	if (callback_type == UART_CTS_ACTIVE) {
1000b182:	2901      	cmp	r1, #1
1000b184:	d104      	bne.n	1000b190 <uart_disable_callback+0x1c>
		module->hw->TX_INTERRUPT_MASK.reg &= ~UART_TX_INTERRUPT_MASK_CTS_ACTIVE_MASK;
1000b186:	6802      	ldr	r2, [r0, #0]
1000b188:	7a13      	ldrb	r3, [r2, #8]
1000b18a:	311f      	adds	r1, #31
1000b18c:	438b      	bics	r3, r1
1000b18e:	7213      	strb	r3, [r2, #8]
	}

}
1000b190:	bd10      	pop	{r4, pc}
1000b192:	46c0      	nop			; (mov r8, r8)

1000b194 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
1000b194:	b5f0      	push	{r4, r5, r6, r7, lr}
1000b196:	4647      	mov	r7, r8
1000b198:	b480      	push	{r7}
1000b19a:	000c      	movs	r4, r1
1000b19c:	4690      	mov	r8, r2
	int nChars = 0;

	if (file != 0) {
1000b19e:	2800      	cmp	r0, #0
1000b1a0:	d10d      	bne.n	1000b1be <_read+0x2a>
		return -1;
	}

	for (; len > 0; --len) {
1000b1a2:	2a00      	cmp	r2, #0
1000b1a4:	dd0e      	ble.n	1000b1c4 <_read+0x30>
1000b1a6:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
1000b1a8:	4e08      	ldr	r6, [pc, #32]	; (1000b1cc <_read+0x38>)
1000b1aa:	4d09      	ldr	r5, [pc, #36]	; (1000b1d0 <_read+0x3c>)
1000b1ac:	6830      	ldr	r0, [r6, #0]
1000b1ae:	0021      	movs	r1, r4
1000b1b0:	682b      	ldr	r3, [r5, #0]
1000b1b2:	4798      	blx	r3
		ptr++;
1000b1b4:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
1000b1b6:	42a7      	cmp	r7, r4
1000b1b8:	d1f8      	bne.n	1000b1ac <_read+0x18>
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
1000b1ba:	4640      	mov	r0, r8
1000b1bc:	e003      	b.n	1000b1c6 <_read+0x32>
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
1000b1be:	2001      	movs	r0, #1
1000b1c0:	4240      	negs	r0, r0
1000b1c2:	e000      	b.n	1000b1c6 <_read+0x32>
	}

	for (; len > 0; --len) {
1000b1c4:	2000      	movs	r0, #0
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
}
1000b1c6:	bc04      	pop	{r2}
1000b1c8:	4690      	mov	r8, r2
1000b1ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000b1cc:	1001789c 	.word	0x1001789c
1000b1d0:	10017894 	.word	0x10017894

1000b1d4 <_write>:
int __attribute__((weak))
_write (int file, char * ptr, int len);

int __attribute__((weak))
_write (int file, char * ptr, int len)
{
1000b1d4:	b5f0      	push	{r4, r5, r6, r7, lr}
1000b1d6:	4647      	mov	r7, r8
1000b1d8:	b480      	push	{r7}
1000b1da:	000e      	movs	r6, r1
1000b1dc:	0015      	movs	r5, r2
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
1000b1de:	3801      	subs	r0, #1
1000b1e0:	2802      	cmp	r0, #2
1000b1e2:	d811      	bhi.n	1000b208 <_write+0x34>
		return -1;
	}

	for (; len != 0; --len) {
1000b1e4:	2a00      	cmp	r2, #0
1000b1e6:	d012      	beq.n	1000b20e <_write+0x3a>
1000b1e8:	2400      	movs	r4, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
1000b1ea:	4b0c      	ldr	r3, [pc, #48]	; (1000b21c <_write+0x48>)
1000b1ec:	4698      	mov	r8, r3
1000b1ee:	4f0c      	ldr	r7, [pc, #48]	; (1000b220 <_write+0x4c>)
1000b1f0:	4643      	mov	r3, r8
1000b1f2:	6818      	ldr	r0, [r3, #0]
1000b1f4:	5d31      	ldrb	r1, [r6, r4]
1000b1f6:	683b      	ldr	r3, [r7, #0]
1000b1f8:	4798      	blx	r3
1000b1fa:	2800      	cmp	r0, #0
1000b1fc:	db09      	blt.n	1000b212 <_write+0x3e>
			return -1;
		}
		++nChars;
1000b1fe:	3401      	adds	r4, #1

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
1000b200:	42a5      	cmp	r5, r4
1000b202:	d1f5      	bne.n	1000b1f0 <_write+0x1c>
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
		}
		++nChars;
1000b204:	0020      	movs	r0, r4
1000b206:	e006      	b.n	1000b216 <_write+0x42>
_write (int file, char * ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
1000b208:	2001      	movs	r0, #1
1000b20a:	4240      	negs	r0, r0
1000b20c:	e003      	b.n	1000b216 <_write+0x42>
	}

	for (; len != 0; --len) {
1000b20e:	2000      	movs	r0, #0
1000b210:	e001      	b.n	1000b216 <_write+0x42>
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
1000b212:	2001      	movs	r0, #1
1000b214:	4240      	negs	r0, r0
		}
		++nChars;
	}
	return nChars;
}
1000b216:	bc04      	pop	{r2}
1000b218:	4690      	mov	r8, r2
1000b21a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000b21c:	1001789c 	.word	0x1001789c
1000b220:	10017898 	.word	0x10017898

1000b224 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
1000b224:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if (heap == NULL) {
1000b226:	4a06      	ldr	r2, [pc, #24]	; (1000b240 <_sbrk+0x1c>)
1000b228:	6812      	ldr	r2, [r2, #0]
1000b22a:	2a00      	cmp	r2, #0
1000b22c:	d102      	bne.n	1000b234 <_sbrk+0x10>
		heap = (unsigned char *)&_end;
1000b22e:	4905      	ldr	r1, [pc, #20]	; (1000b244 <_sbrk+0x20>)
1000b230:	4a03      	ldr	r2, [pc, #12]	; (1000b240 <_sbrk+0x1c>)
1000b232:	6011      	str	r1, [r2, #0]
	}
	prev_heap = heap;
1000b234:	4a02      	ldr	r2, [pc, #8]	; (1000b240 <_sbrk+0x1c>)
1000b236:	6810      	ldr	r0, [r2, #0]

	heap += incr;
1000b238:	18c3      	adds	r3, r0, r3
1000b23a:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
}
1000b23c:	4770      	bx	lr
1000b23e:	46c0      	nop			; (mov r8, r8)
1000b240:	10015d04 	.word	0x10015d04
1000b244:	1001af78 	.word	0x1001af78

1000b248 <_close>:
}

extern int _close(int file)
{
	return -1;
}
1000b248:	2001      	movs	r0, #1
1000b24a:	4240      	negs	r0, r0
1000b24c:	4770      	bx	lr
1000b24e:	46c0      	nop			; (mov r8, r8)

1000b250 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
1000b250:	2380      	movs	r3, #128	; 0x80
1000b252:	019b      	lsls	r3, r3, #6
1000b254:	604b      	str	r3, [r1, #4]

	return 0;
}
1000b256:	2000      	movs	r0, #0
1000b258:	4770      	bx	lr
1000b25a:	46c0      	nop			; (mov r8, r8)

1000b25c <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
1000b25c:	2001      	movs	r0, #1
1000b25e:	4770      	bx	lr

1000b260 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
1000b260:	2000      	movs	r0, #0
1000b262:	4770      	bx	lr

1000b264 <csc_prf_disconnect_event_handler>:
1000b264:	2200      	movs	r2, #0
1000b266:	4b02      	ldr	r3, [pc, #8]	; (1000b270 <csc_prf_disconnect_event_handler+0xc>)
1000b268:	719a      	strb	r2, [r3, #6]
1000b26a:	2000      	movs	r0, #0
1000b26c:	4770      	bx	lr
1000b26e:	46c0      	nop			; (mov r8, r8)
1000b270:	100178a0 	.word	0x100178a0

1000b274 <csc_notification_confirmation_handler>:
1000b274:	2000      	movs	r0, #0
1000b276:	4770      	bx	lr

1000b278 <csc_prf_service_found_handler>:
1000b278:	b510      	push	{r4, lr}
1000b27a:	0001      	movs	r1, r0
1000b27c:	2218      	movs	r2, #24
1000b27e:	4802      	ldr	r0, [pc, #8]	; (1000b288 <csc_prf_service_found_handler+0x10>)
1000b280:	4b02      	ldr	r3, [pc, #8]	; (1000b28c <csc_prf_service_found_handler+0x14>)
1000b282:	4798      	blx	r3
1000b284:	2000      	movs	r0, #0
1000b286:	bd10      	pop	{r4, pc}
1000b288:	100178ba 	.word	0x100178ba
1000b28c:	10012207 	.word	0x10012207

1000b290 <csc_prf_characteristic_found_handler>:
1000b290:	b510      	push	{r4, lr}
1000b292:	0001      	movs	r1, r0
1000b294:	2218      	movs	r2, #24
1000b296:	4802      	ldr	r0, [pc, #8]	; (1000b2a0 <csc_prf_characteristic_found_handler+0x10>)
1000b298:	4b02      	ldr	r3, [pc, #8]	; (1000b2a4 <csc_prf_characteristic_found_handler+0x14>)
1000b29a:	4798      	blx	r3
1000b29c:	2000      	movs	r0, #0
1000b29e:	bd10      	pop	{r4, pc}
1000b2a0:	100178d2 	.word	0x100178d2
1000b2a4:	10012207 	.word	0x10012207

1000b2a8 <csc_prf_descriptor_found_handler>:
1000b2a8:	b510      	push	{r4, lr}
1000b2aa:	0001      	movs	r1, r0
1000b2ac:	2216      	movs	r2, #22
1000b2ae:	4802      	ldr	r0, [pc, #8]	; (1000b2b8 <csc_prf_descriptor_found_handler+0x10>)
1000b2b0:	4b02      	ldr	r3, [pc, #8]	; (1000b2bc <csc_prf_descriptor_found_handler+0x14>)
1000b2b2:	4798      	blx	r3
1000b2b4:	2000      	movs	r0, #0
1000b2b6:	bd10      	pop	{r4, pc}
1000b2b8:	100178ea 	.word	0x100178ea
1000b2bc:	10012207 	.word	0x10012207

1000b2c0 <csc_prf_notification_handler>:
1000b2c0:	b580      	push	{r7, lr}
1000b2c2:	4f0c      	ldr	r7, [pc, #48]	; (1000b2f4 <csc_prf_notification_handler+0x34>)
1000b2c4:	44bd      	add	sp, r7
1000b2c6:	0001      	movs	r1, r0
1000b2c8:	4a0b      	ldr	r2, [pc, #44]	; (1000b2f8 <csc_prf_notification_handler+0x38>)
1000b2ca:	a802      	add	r0, sp, #8
1000b2cc:	4b0b      	ldr	r3, [pc, #44]	; (1000b2fc <csc_prf_notification_handler+0x3c>)
1000b2ce:	4798      	blx	r3
1000b2d0:	466b      	mov	r3, sp
1000b2d2:	891b      	ldrh	r3, [r3, #8]
1000b2d4:	466a      	mov	r2, sp
1000b2d6:	80d3      	strh	r3, [r2, #6]
1000b2d8:	7a93      	ldrb	r3, [r2, #10]
1000b2da:	7113      	strb	r3, [r2, #4]
1000b2dc:	230e      	movs	r3, #14
1000b2de:	446b      	add	r3, sp
1000b2e0:	9300      	str	r3, [sp, #0]
1000b2e2:	4b07      	ldr	r3, [pc, #28]	; (1000b300 <csc_prf_notification_handler+0x40>)
1000b2e4:	681b      	ldr	r3, [r3, #0]
1000b2e6:	4668      	mov	r0, sp
1000b2e8:	4798      	blx	r3
1000b2ea:	2000      	movs	r0, #0
1000b2ec:	2384      	movs	r3, #132	; 0x84
1000b2ee:	009b      	lsls	r3, r3, #2
1000b2f0:	449d      	add	sp, r3
1000b2f2:	bd80      	pop	{r7, pc}
1000b2f4:	fffffdf0 	.word	0xfffffdf0
1000b2f8:	00000206 	.word	0x00000206
1000b2fc:	10012207 	.word	0x10012207
1000b300:	10017900 	.word	0x10017900

1000b304 <csc_prf_char_changed_handler>:
1000b304:	2000      	movs	r0, #0
1000b306:	4770      	bx	lr

1000b308 <csc_prf_connected_state_handler>:
1000b308:	b510      	push	{r4, lr}
1000b30a:	0001      	movs	r1, r0
1000b30c:	4c13      	ldr	r4, [pc, #76]	; (1000b35c <csc_prf_connected_state_handler+0x54>)
1000b30e:	2212      	movs	r2, #18
1000b310:	0020      	movs	r0, r4
1000b312:	4b13      	ldr	r3, [pc, #76]	; (1000b360 <csc_prf_connected_state_handler+0x58>)
1000b314:	4798      	blx	r3
1000b316:	3c08      	subs	r4, #8
1000b318:	79a3      	ldrb	r3, [r4, #6]
1000b31a:	2b00      	cmp	r3, #0
1000b31c:	d11b      	bne.n	1000b356 <csc_prf_connected_state_handler+0x4e>
1000b31e:	4c11      	ldr	r4, [pc, #68]	; (1000b364 <csc_prf_connected_state_handler+0x5c>)
1000b320:	3301      	adds	r3, #1
1000b322:	71e3      	strb	r3, [r4, #7]
1000b324:	2202      	movs	r2, #2
1000b326:	331f      	adds	r3, #31
1000b328:	54e2      	strb	r2, [r4, r3]
1000b32a:	0020      	movs	r0, r4
1000b32c:	3021      	adds	r0, #33	; 0x21
1000b32e:	320e      	adds	r2, #14
1000b330:	490d      	ldr	r1, [pc, #52]	; (1000b368 <csc_prf_connected_state_handler+0x60>)
1000b332:	4b0b      	ldr	r3, [pc, #44]	; (1000b360 <csc_prf_connected_state_handler+0x58>)
1000b334:	4798      	blx	r3
1000b336:	0023      	movs	r3, r4
1000b338:	3320      	adds	r3, #32
1000b33a:	8a20      	ldrh	r0, [r4, #16]
1000b33c:	4a0b      	ldr	r2, [pc, #44]	; (1000b36c <csc_prf_connected_state_handler+0x64>)
1000b33e:	2101      	movs	r1, #1
1000b340:	4c0b      	ldr	r4, [pc, #44]	; (1000b370 <csc_prf_connected_state_handler+0x68>)
1000b342:	47a0      	blx	r4
1000b344:	1e04      	subs	r4, r0, #0
1000b346:	d006      	beq.n	1000b356 <csc_prf_connected_state_handler+0x4e>
1000b348:	480a      	ldr	r0, [pc, #40]	; (1000b374 <csc_prf_connected_state_handler+0x6c>)
1000b34a:	4b0b      	ldr	r3, [pc, #44]	; (1000b378 <csc_prf_connected_state_handler+0x70>)
1000b34c:	4798      	blx	r3
1000b34e:	0021      	movs	r1, r4
1000b350:	480a      	ldr	r0, [pc, #40]	; (1000b37c <csc_prf_connected_state_handler+0x74>)
1000b352:	4b0b      	ldr	r3, [pc, #44]	; (1000b380 <csc_prf_connected_state_handler+0x78>)
1000b354:	4798      	blx	r3
1000b356:	2000      	movs	r0, #0
1000b358:	bd10      	pop	{r4, pc}
1000b35a:	46c0      	nop			; (mov r8, r8)
1000b35c:	100178a8 	.word	0x100178a8
1000b360:	10012207 	.word	0x10012207
1000b364:	100178a0 	.word	0x100178a0
1000b368:	10014f98 	.word	0x10014f98
1000b36c:	0000ffff 	.word	0x0000ffff
1000b370:	1000e899 	.word	0x1000e899
1000b374:	10015020 	.word	0x10015020
1000b378:	10012481 	.word	0x10012481
1000b37c:	10015024 	.word	0x10015024
1000b380:	10012361 	.word	0x10012361

1000b384 <csc_prf_discovery_complete_handler>:
1000b384:	b510      	push	{r4, lr}
1000b386:	b082      	sub	sp, #8
1000b388:	0001      	movs	r1, r0
1000b38a:	ac01      	add	r4, sp, #4
1000b38c:	2204      	movs	r2, #4
1000b38e:	0020      	movs	r0, r4
1000b390:	4b19      	ldr	r3, [pc, #100]	; (1000b3f8 <csc_prf_discovery_complete_handler+0x74>)
1000b392:	4798      	blx	r3
1000b394:	78e3      	ldrb	r3, [r4, #3]
1000b396:	2b0a      	cmp	r3, #10
1000b398:	d12a      	bne.n	1000b3f0 <csc_prf_discovery_complete_handler+0x6c>
1000b39a:	ab01      	add	r3, sp, #4
1000b39c:	789b      	ldrb	r3, [r3, #2]
1000b39e:	2b03      	cmp	r3, #3
1000b3a0:	d10e      	bne.n	1000b3c0 <csc_prf_discovery_complete_handler+0x3c>
1000b3a2:	4b16      	ldr	r3, [pc, #88]	; (1000b3fc <csc_prf_discovery_complete_handler+0x78>)
1000b3a4:	8bda      	ldrh	r2, [r3, #30]
1000b3a6:	8b99      	ldrh	r1, [r3, #28]
1000b3a8:	8a18      	ldrh	r0, [r3, #16]
1000b3aa:	4b15      	ldr	r3, [pc, #84]	; (1000b400 <csc_prf_discovery_complete_handler+0x7c>)
1000b3ac:	4798      	blx	r3
1000b3ae:	2800      	cmp	r0, #0
1000b3b0:	d01e      	beq.n	1000b3f0 <csc_prf_discovery_complete_handler+0x6c>
1000b3b2:	4814      	ldr	r0, [pc, #80]	; (1000b404 <csc_prf_discovery_complete_handler+0x80>)
1000b3b4:	4b14      	ldr	r3, [pc, #80]	; (1000b408 <csc_prf_discovery_complete_handler+0x84>)
1000b3b6:	4798      	blx	r3
1000b3b8:	4814      	ldr	r0, [pc, #80]	; (1000b40c <csc_prf_discovery_complete_handler+0x88>)
1000b3ba:	4b15      	ldr	r3, [pc, #84]	; (1000b410 <csc_prf_discovery_complete_handler+0x8c>)
1000b3bc:	4798      	blx	r3
1000b3be:	e017      	b.n	1000b3f0 <csc_prf_discovery_complete_handler+0x6c>
1000b3c0:	2b05      	cmp	r3, #5
1000b3c2:	d110      	bne.n	1000b3e6 <csc_prf_discovery_complete_handler+0x62>
1000b3c4:	4b0d      	ldr	r3, [pc, #52]	; (1000b3fc <csc_prf_discovery_complete_handler+0x78>)
1000b3c6:	8bda      	ldrh	r2, [r3, #30]
1000b3c8:	8ed9      	ldrh	r1, [r3, #54]	; 0x36
1000b3ca:	3101      	adds	r1, #1
1000b3cc:	b289      	uxth	r1, r1
1000b3ce:	8e58      	ldrh	r0, [r3, #50]	; 0x32
1000b3d0:	4b10      	ldr	r3, [pc, #64]	; (1000b414 <csc_prf_discovery_complete_handler+0x90>)
1000b3d2:	4798      	blx	r3
1000b3d4:	2800      	cmp	r0, #0
1000b3d6:	d00b      	beq.n	1000b3f0 <csc_prf_discovery_complete_handler+0x6c>
1000b3d8:	480a      	ldr	r0, [pc, #40]	; (1000b404 <csc_prf_discovery_complete_handler+0x80>)
1000b3da:	4b0b      	ldr	r3, [pc, #44]	; (1000b408 <csc_prf_discovery_complete_handler+0x84>)
1000b3dc:	4798      	blx	r3
1000b3de:	480e      	ldr	r0, [pc, #56]	; (1000b418 <csc_prf_discovery_complete_handler+0x94>)
1000b3e0:	4b0b      	ldr	r3, [pc, #44]	; (1000b410 <csc_prf_discovery_complete_handler+0x8c>)
1000b3e2:	4798      	blx	r3
1000b3e4:	e004      	b.n	1000b3f0 <csc_prf_discovery_complete_handler+0x6c>
1000b3e6:	2b07      	cmp	r3, #7
1000b3e8:	d102      	bne.n	1000b3f0 <csc_prf_discovery_complete_handler+0x6c>
1000b3ea:	2201      	movs	r2, #1
1000b3ec:	4b03      	ldr	r3, [pc, #12]	; (1000b3fc <csc_prf_discovery_complete_handler+0x78>)
1000b3ee:	719a      	strb	r2, [r3, #6]
1000b3f0:	2000      	movs	r0, #0
1000b3f2:	b002      	add	sp, #8
1000b3f4:	bd10      	pop	{r4, pc}
1000b3f6:	46c0      	nop			; (mov r8, r8)
1000b3f8:	10012207 	.word	0x10012207
1000b3fc:	100178a0 	.word	0x100178a0
1000b400:	1000e8f1 	.word	0x1000e8f1
1000b404:	10015020 	.word	0x10015020
1000b408:	10012481 	.word	0x10012481
1000b40c:	10015054 	.word	0x10015054
1000b410:	10012361 	.word	0x10012361
1000b414:	1000e919 	.word	0x1000e919
1000b418:	1001507c 	.word	0x1001507c

1000b41c <csc_prf_write_notification_handler>:
1000b41c:	b5f0      	push	{r4, r5, r6, r7, lr}
1000b41e:	b087      	sub	sp, #28
1000b420:	ac05      	add	r4, sp, #20
1000b422:	2601      	movs	r6, #1
1000b424:	7026      	strb	r6, [r4, #0]
1000b426:	2500      	movs	r5, #0
1000b428:	7065      	strb	r5, [r4, #1]
1000b42a:	480e      	ldr	r0, [pc, #56]	; (1000b464 <csc_prf_write_notification_handler+0x48>)
1000b42c:	4f0e      	ldr	r7, [pc, #56]	; (1000b468 <csc_prf_write_notification_handler+0x4c>)
1000b42e:	47b8      	blx	r7
1000b430:	480c      	ldr	r0, [pc, #48]	; (1000b464 <csc_prf_write_notification_handler+0x48>)
1000b432:	47b8      	blx	r7
1000b434:	4b0d      	ldr	r3, [pc, #52]	; (1000b46c <csc_prf_write_notification_handler+0x50>)
1000b436:	224c      	movs	r2, #76	; 0x4c
1000b438:	5a99      	ldrh	r1, [r3, r2]
1000b43a:	3a02      	subs	r2, #2
1000b43c:	5a98      	ldrh	r0, [r3, r2]
1000b43e:	9602      	str	r6, [sp, #8]
1000b440:	9501      	str	r5, [sp, #4]
1000b442:	9400      	str	r4, [sp, #0]
1000b444:	2302      	movs	r3, #2
1000b446:	2200      	movs	r2, #0
1000b448:	4c09      	ldr	r4, [pc, #36]	; (1000b470 <csc_prf_write_notification_handler+0x54>)
1000b44a:	47a0      	blx	r4
1000b44c:	28e2      	cmp	r0, #226	; 0xe2
1000b44e:	d105      	bne.n	1000b45c <csc_prf_write_notification_handler+0x40>
1000b450:	4804      	ldr	r0, [pc, #16]	; (1000b464 <csc_prf_write_notification_handler+0x48>)
1000b452:	4b05      	ldr	r3, [pc, #20]	; (1000b468 <csc_prf_write_notification_handler+0x4c>)
1000b454:	4798      	blx	r3
1000b456:	4807      	ldr	r0, [pc, #28]	; (1000b474 <csc_prf_write_notification_handler+0x58>)
1000b458:	4b07      	ldr	r3, [pc, #28]	; (1000b478 <csc_prf_write_notification_handler+0x5c>)
1000b45a:	4798      	blx	r3
1000b45c:	2000      	movs	r0, #0
1000b45e:	b007      	add	sp, #28
1000b460:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000b462:	46c0      	nop			; (mov r8, r8)
1000b464:	10015020 	.word	0x10015020
1000b468:	10012481 	.word	0x10012481
1000b46c:	100178a0 	.word	0x100178a0
1000b470:	1000e941 	.word	0x1000e941
1000b474:	10015098 	.word	0x10015098
1000b478:	10012361 	.word	0x10012361

1000b47c <csc_prf_buf_init>:
1000b47c:	4b01      	ldr	r3, [pc, #4]	; (1000b484 <csc_prf_buf_init+0x8>)
1000b47e:	6018      	str	r0, [r3, #0]
1000b480:	8099      	strh	r1, [r3, #4]
1000b482:	4770      	bx	lr
1000b484:	100178a0 	.word	0x100178a0

1000b488 <csc_prf_init>:
1000b488:	b510      	push	{r4, lr}
1000b48a:	4b0f      	ldr	r3, [pc, #60]	; (1000b4c8 <csc_prf_init+0x40>)
1000b48c:	8899      	ldrh	r1, [r3, #4]
1000b48e:	6818      	ldr	r0, [r3, #0]
1000b490:	4b0e      	ldr	r3, [pc, #56]	; (1000b4cc <csc_prf_init+0x44>)
1000b492:	4798      	blx	r3
1000b494:	4a0e      	ldr	r2, [pc, #56]	; (1000b4d0 <csc_prf_init+0x48>)
1000b496:	2100      	movs	r1, #0
1000b498:	2000      	movs	r0, #0
1000b49a:	4c0e      	ldr	r4, [pc, #56]	; (1000b4d4 <csc_prf_init+0x4c>)
1000b49c:	47a0      	blx	r4
1000b49e:	4a0e      	ldr	r2, [pc, #56]	; (1000b4d8 <csc_prf_init+0x50>)
1000b4a0:	2101      	movs	r1, #1
1000b4a2:	2000      	movs	r0, #0
1000b4a4:	47a0      	blx	r4
1000b4a6:	4a0d      	ldr	r2, [pc, #52]	; (1000b4dc <csc_prf_init+0x54>)
1000b4a8:	2102      	movs	r1, #2
1000b4aa:	2000      	movs	r0, #0
1000b4ac:	47a0      	blx	r4
1000b4ae:	4b0c      	ldr	r3, [pc, #48]	; (1000b4e0 <csc_prf_init+0x58>)
1000b4b0:	4798      	blx	r3
1000b4b2:	1e04      	subs	r4, r0, #0
1000b4b4:	d006      	beq.n	1000b4c4 <csc_prf_init+0x3c>
1000b4b6:	480b      	ldr	r0, [pc, #44]	; (1000b4e4 <csc_prf_init+0x5c>)
1000b4b8:	4b0b      	ldr	r3, [pc, #44]	; (1000b4e8 <csc_prf_init+0x60>)
1000b4ba:	4798      	blx	r3
1000b4bc:	0021      	movs	r1, r4
1000b4be:	480b      	ldr	r0, [pc, #44]	; (1000b4ec <csc_prf_init+0x64>)
1000b4c0:	4b0b      	ldr	r3, [pc, #44]	; (1000b4f0 <csc_prf_init+0x68>)
1000b4c2:	4798      	blx	r3
1000b4c4:	bd10      	pop	{r4, pc}
1000b4c6:	46c0      	nop			; (mov r8, r8)
1000b4c8:	100178a0 	.word	0x100178a0
1000b4cc:	1000c789 	.word	0x1000c789
1000b4d0:	10014fd4 	.word	0x10014fd4
1000b4d4:	1000be71 	.word	0x1000be71
1000b4d8:	10014fac 	.word	0x10014fac
1000b4dc:	1001512c 	.word	0x1001512c
1000b4e0:	1000c6dd 	.word	0x1000c6dd
1000b4e4:	10015020 	.word	0x10015020
1000b4e8:	10012481 	.word	0x10012481
1000b4ec:	100150c8 	.word	0x100150c8
1000b4f0:	10012361 	.word	0x10012361

1000b4f4 <csc_prf_send_data>:
1000b4f4:	b510      	push	{r4, lr}
1000b4f6:	0003      	movs	r3, r0
1000b4f8:	4a08      	ldr	r2, [pc, #32]	; (1000b51c <csc_prf_send_data+0x28>)
1000b4fa:	8892      	ldrh	r2, [r2, #4]
1000b4fc:	428a      	cmp	r2, r1
1000b4fe:	d306      	bcc.n	1000b50e <csc_prf_send_data+0x1a>
1000b500:	4a06      	ldr	r2, [pc, #24]	; (1000b51c <csc_prf_send_data+0x28>)
1000b502:	8a10      	ldrh	r0, [r2, #16]
1000b504:	000a      	movs	r2, r1
1000b506:	0019      	movs	r1, r3
1000b508:	4b05      	ldr	r3, [pc, #20]	; (1000b520 <csc_prf_send_data+0x2c>)
1000b50a:	4798      	blx	r3
1000b50c:	e004      	b.n	1000b518 <csc_prf_send_data+0x24>
1000b50e:	4903      	ldr	r1, [pc, #12]	; (1000b51c <csc_prf_send_data+0x28>)
1000b510:	8a08      	ldrh	r0, [r1, #16]
1000b512:	0019      	movs	r1, r3
1000b514:	4b02      	ldr	r3, [pc, #8]	; (1000b520 <csc_prf_send_data+0x2c>)
1000b516:	4798      	blx	r3
1000b518:	bd10      	pop	{r4, pc}
1000b51a:	46c0      	nop			; (mov r8, r8)
1000b51c:	100178a0 	.word	0x100178a0
1000b520:	1000c805 	.word	0x1000c805

1000b524 <csc_prf_dev_adv>:
1000b524:	b510      	push	{r4, lr}
1000b526:	b084      	sub	sp, #16
1000b528:	2300      	movs	r3, #0
1000b52a:	9302      	str	r3, [sp, #8]
1000b52c:	4b0d      	ldr	r3, [pc, #52]	; (1000b564 <csc_prf_dev_adv+0x40>)
1000b52e:	9301      	str	r3, [sp, #4]
1000b530:	23c8      	movs	r3, #200	; 0xc8
1000b532:	00db      	lsls	r3, r3, #3
1000b534:	9300      	str	r3, [sp, #0]
1000b536:	2300      	movs	r3, #0
1000b538:	2200      	movs	r2, #0
1000b53a:	2101      	movs	r1, #1
1000b53c:	2000      	movs	r0, #0
1000b53e:	4c0a      	ldr	r4, [pc, #40]	; (1000b568 <csc_prf_dev_adv+0x44>)
1000b540:	47a0      	blx	r4
1000b542:	2800      	cmp	r0, #0
1000b544:	d106      	bne.n	1000b554 <csc_prf_dev_adv+0x30>
1000b546:	4809      	ldr	r0, [pc, #36]	; (1000b56c <csc_prf_dev_adv+0x48>)
1000b548:	4b09      	ldr	r3, [pc, #36]	; (1000b570 <csc_prf_dev_adv+0x4c>)
1000b54a:	4798      	blx	r3
1000b54c:	4809      	ldr	r0, [pc, #36]	; (1000b574 <csc_prf_dev_adv+0x50>)
1000b54e:	4b0a      	ldr	r3, [pc, #40]	; (1000b578 <csc_prf_dev_adv+0x54>)
1000b550:	4798      	blx	r3
1000b552:	e005      	b.n	1000b560 <csc_prf_dev_adv+0x3c>
1000b554:	4805      	ldr	r0, [pc, #20]	; (1000b56c <csc_prf_dev_adv+0x48>)
1000b556:	4b06      	ldr	r3, [pc, #24]	; (1000b570 <csc_prf_dev_adv+0x4c>)
1000b558:	4798      	blx	r3
1000b55a:	4808      	ldr	r0, [pc, #32]	; (1000b57c <csc_prf_dev_adv+0x58>)
1000b55c:	4b06      	ldr	r3, [pc, #24]	; (1000b578 <csc_prf_dev_adv+0x54>)
1000b55e:	4798      	blx	r3
1000b560:	b004      	add	sp, #16
1000b562:	bd10      	pop	{r4, pc}
1000b564:	0000028f 	.word	0x0000028f
1000b568:	1000e6b5 	.word	0x1000e6b5
1000b56c:	10015020 	.word	0x10015020
1000b570:	10012481 	.word	0x10012481
1000b574:	100150f0 	.word	0x100150f0
1000b578:	10012361 	.word	0x10012361
1000b57c:	10015110 	.word	0x10015110

1000b580 <notify_recv_ntf_handler>:
1000b580:	4b01      	ldr	r3, [pc, #4]	; (1000b588 <notify_recv_ntf_handler+0x8>)
1000b582:	6018      	str	r0, [r3, #0]
1000b584:	4770      	bx	lr
1000b586:	46c0      	nop			; (mov r8, r8)
1000b588:	10017900 	.word	0x10017900

1000b58c <ble_undefined_event_handler>:
1000b58c:	2000      	movs	r0, #0
1000b58e:	4770      	bx	lr

1000b590 <ble_mtu_changed_indication_handler>:
1000b590:	2000      	movs	r0, #0
1000b592:	4770      	bx	lr

1000b594 <ble_characteristic_write_cmd_complete_handler>:
1000b594:	78c0      	ldrb	r0, [r0, #3]
1000b596:	2800      	cmp	r0, #0
1000b598:	d000      	beq.n	1000b59c <ble_characteristic_write_cmd_complete_handler+0x8>
1000b59a:	20e2      	movs	r0, #226	; 0xe2
1000b59c:	4770      	bx	lr
1000b59e:	46c0      	nop			; (mov r8, r8)

1000b5a0 <ble_conn_param_update>:
1000b5a0:	2000      	movs	r0, #0
1000b5a2:	4770      	bx	lr

1000b5a4 <ble_scan_report_handler>:
1000b5a4:	b510      	push	{r4, lr}
1000b5a6:	7800      	ldrb	r0, [r0, #0]
1000b5a8:	2800      	cmp	r0, #0
1000b5aa:	d006      	beq.n	1000b5ba <ble_scan_report_handler+0x16>
1000b5ac:	4803      	ldr	r0, [pc, #12]	; (1000b5bc <ble_scan_report_handler+0x18>)
1000b5ae:	4b04      	ldr	r3, [pc, #16]	; (1000b5c0 <ble_scan_report_handler+0x1c>)
1000b5b0:	4798      	blx	r3
1000b5b2:	4804      	ldr	r0, [pc, #16]	; (1000b5c4 <ble_scan_report_handler+0x20>)
1000b5b4:	4b04      	ldr	r3, [pc, #16]	; (1000b5c8 <ble_scan_report_handler+0x24>)
1000b5b6:	4798      	blx	r3
1000b5b8:	20e2      	movs	r0, #226	; 0xe2
1000b5ba:	bd10      	pop	{r4, pc}
1000b5bc:	10015020 	.word	0x10015020
1000b5c0:	10012481 	.word	0x10012481
1000b5c4:	100152d8 	.word	0x100152d8
1000b5c8:	10012361 	.word	0x10012361

1000b5cc <ble_mtu_changed_cmd_complete_handler>:
1000b5cc:	b510      	push	{r4, lr}
1000b5ce:	0004      	movs	r4, r0
1000b5d0:	78c0      	ldrb	r0, [r0, #3]
1000b5d2:	2800      	cmp	r0, #0
1000b5d4:	d008      	beq.n	1000b5e8 <ble_mtu_changed_cmd_complete_handler+0x1c>
1000b5d6:	4805      	ldr	r0, [pc, #20]	; (1000b5ec <ble_mtu_changed_cmd_complete_handler+0x20>)
1000b5d8:	4b05      	ldr	r3, [pc, #20]	; (1000b5f0 <ble_mtu_changed_cmd_complete_handler+0x24>)
1000b5da:	4798      	blx	r3
1000b5dc:	78a2      	ldrb	r2, [r4, #2]
1000b5de:	8821      	ldrh	r1, [r4, #0]
1000b5e0:	4804      	ldr	r0, [pc, #16]	; (1000b5f4 <ble_mtu_changed_cmd_complete_handler+0x28>)
1000b5e2:	4b05      	ldr	r3, [pc, #20]	; (1000b5f8 <ble_mtu_changed_cmd_complete_handler+0x2c>)
1000b5e4:	4798      	blx	r3
1000b5e6:	20e2      	movs	r0, #226	; 0xe2
1000b5e8:	bd10      	pop	{r4, pc}
1000b5ea:	46c0      	nop			; (mov r8, r8)
1000b5ec:	10015020 	.word	0x10015020
1000b5f0:	10012481 	.word	0x10012481
1000b5f4:	100152ec 	.word	0x100152ec
1000b5f8:	10012361 	.word	0x10012361

1000b5fc <ble_disconnected_state_handler>:
1000b5fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000b5fe:	0004      	movs	r4, r0
1000b600:	4b19      	ldr	r3, [pc, #100]	; (1000b668 <ble_disconnected_state_handler+0x6c>)
1000b602:	229b      	movs	r2, #155	; 0x9b
1000b604:	0092      	lsls	r2, r2, #2
1000b606:	189d      	adds	r5, r3, r2
1000b608:	2701      	movs	r7, #1
1000b60a:	2600      	movs	r6, #0
1000b60c:	0018      	movs	r0, r3
1000b60e:	001a      	movs	r2, r3
1000b610:	3a56      	subs	r2, #86	; 0x56
1000b612:	8811      	ldrh	r1, [r2, #0]
1000b614:	8822      	ldrh	r2, [r4, #0]
1000b616:	4291      	cmp	r1, r2
1000b618:	d119      	bne.n	1000b64e <ble_disconnected_state_handler+0x52>
1000b61a:	781a      	ldrb	r2, [r3, #0]
1000b61c:	2a05      	cmp	r2, #5
1000b61e:	d001      	beq.n	1000b624 <ble_disconnected_state_handler+0x28>
1000b620:	2a08      	cmp	r2, #8
1000b622:	d101      	bne.n	1000b628 <ble_disconnected_state_handler+0x2c>
1000b624:	7007      	strb	r7, [r0, #0]
1000b626:	e012      	b.n	1000b64e <ble_disconnected_state_handler+0x52>
1000b628:	2a07      	cmp	r2, #7
1000b62a:	d80f      	bhi.n	1000b64c <ble_disconnected_state_handler+0x50>
1000b62c:	0092      	lsls	r2, r2, #2
1000b62e:	490f      	ldr	r1, [pc, #60]	; (1000b66c <ble_disconnected_state_handler+0x70>)
1000b630:	588a      	ldr	r2, [r1, r2]
1000b632:	4697      	mov	pc, r2
1000b634:	701e      	strb	r6, [r3, #0]
1000b636:	4a0e      	ldr	r2, [pc, #56]	; (1000b670 <ble_disconnected_state_handler+0x74>)
1000b638:	7812      	ldrb	r2, [r2, #0]
1000b63a:	2a00      	cmp	r2, #0
1000b63c:	d007      	beq.n	1000b64e <ble_disconnected_state_handler+0x52>
1000b63e:	4a0c      	ldr	r2, [pc, #48]	; (1000b670 <ble_disconnected_state_handler+0x74>)
1000b640:	7812      	ldrb	r2, [r2, #0]
1000b642:	3a01      	subs	r2, #1
1000b644:	b2d2      	uxtb	r2, r2
1000b646:	490a      	ldr	r1, [pc, #40]	; (1000b670 <ble_disconnected_state_handler+0x74>)
1000b648:	700a      	strb	r2, [r1, #0]
1000b64a:	e000      	b.n	1000b64e <ble_disconnected_state_handler+0x52>
1000b64c:	7006      	strb	r6, [r0, #0]
1000b64e:	337c      	adds	r3, #124	; 0x7c
1000b650:	42ab      	cmp	r3, r5
1000b652:	d1db      	bne.n	1000b60c <ble_disconnected_state_handler+0x10>
1000b654:	4807      	ldr	r0, [pc, #28]	; (1000b674 <ble_disconnected_state_handler+0x78>)
1000b656:	4b08      	ldr	r3, [pc, #32]	; (1000b678 <ble_disconnected_state_handler+0x7c>)
1000b658:	4798      	blx	r3
1000b65a:	8822      	ldrh	r2, [r4, #0]
1000b65c:	78a1      	ldrb	r1, [r4, #2]
1000b65e:	4807      	ldr	r0, [pc, #28]	; (1000b67c <ble_disconnected_state_handler+0x80>)
1000b660:	4b07      	ldr	r3, [pc, #28]	; (1000b680 <ble_disconnected_state_handler+0x84>)
1000b662:	4798      	blx	r3
1000b664:	2000      	movs	r0, #0
1000b666:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000b668:	1001797a 	.word	0x1001797a
1000b66c:	10015154 	.word	0x10015154
1000b670:	10017b88 	.word	0x10017b88
1000b674:	10015020 	.word	0x10015020
1000b678:	10012481 	.word	0x10012481
1000b67c:	10015324 	.word	0x10015324
1000b680:	10012361 	.word	0x10012361

1000b684 <ble_encryption_status_change_handler>:
1000b684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000b686:	0006      	movs	r6, r0
1000b688:	8801      	ldrh	r1, [r0, #0]
1000b68a:	4b28      	ldr	r3, [pc, #160]	; (1000b72c <ble_encryption_status_change_handler+0xa8>)
1000b68c:	2400      	movs	r4, #0
1000b68e:	891a      	ldrh	r2, [r3, #8]
1000b690:	428a      	cmp	r2, r1
1000b692:	d104      	bne.n	1000b69e <ble_encryption_status_change_handler+0x1a>
1000b694:	001a      	movs	r2, r3
1000b696:	325e      	adds	r2, #94	; 0x5e
1000b698:	7812      	ldrb	r2, [r2, #0]
1000b69a:	2a06      	cmp	r2, #6
1000b69c:	d02e      	beq.n	1000b6fc <ble_encryption_status_change_handler+0x78>
1000b69e:	3401      	adds	r4, #1
1000b6a0:	b2e4      	uxtb	r4, r4
1000b6a2:	337c      	adds	r3, #124	; 0x7c
1000b6a4:	2c05      	cmp	r4, #5
1000b6a6:	d1f2      	bne.n	1000b68e <ble_encryption_status_change_handler+0xa>
1000b6a8:	e039      	b.n	1000b71e <ble_encryption_status_change_handler+0x9a>
1000b6aa:	4920      	ldr	r1, [pc, #128]	; (1000b72c <ble_encryption_status_change_handler+0xa8>)
1000b6ac:	0163      	lsls	r3, r4, #5
1000b6ae:	1b1a      	subs	r2, r3, r4
1000b6b0:	0092      	lsls	r2, r2, #2
1000b6b2:	188a      	adds	r2, r1, r2
1000b6b4:	7615      	strb	r5, [r2, #24]
1000b6b6:	0014      	movs	r4, r2
1000b6b8:	345e      	adds	r4, #94	; 0x5e
1000b6ba:	2307      	movs	r3, #7
1000b6bc:	7023      	strb	r3, [r4, #0]
1000b6be:	481c      	ldr	r0, [pc, #112]	; (1000b730 <ble_encryption_status_change_handler+0xac>)
1000b6c0:	4b1c      	ldr	r3, [pc, #112]	; (1000b734 <ble_encryption_status_change_handler+0xb0>)
1000b6c2:	4798      	blx	r3
1000b6c4:	481c      	ldr	r0, [pc, #112]	; (1000b738 <ble_encryption_status_change_handler+0xb4>)
1000b6c6:	4b1d      	ldr	r3, [pc, #116]	; (1000b73c <ble_encryption_status_change_handler+0xb8>)
1000b6c8:	4798      	blx	r3
1000b6ca:	25e2      	movs	r5, #226	; 0xe2
1000b6cc:	e02b      	b.n	1000b726 <ble_encryption_status_change_handler+0xa2>
1000b6ce:	4818      	ldr	r0, [pc, #96]	; (1000b730 <ble_encryption_status_change_handler+0xac>)
1000b6d0:	4b18      	ldr	r3, [pc, #96]	; (1000b734 <ble_encryption_status_change_handler+0xb0>)
1000b6d2:	4798      	blx	r3
1000b6d4:	481a      	ldr	r0, [pc, #104]	; (1000b740 <ble_encryption_status_change_handler+0xbc>)
1000b6d6:	4b19      	ldr	r3, [pc, #100]	; (1000b73c <ble_encryption_status_change_handler+0xb8>)
1000b6d8:	4798      	blx	r3
1000b6da:	4914      	ldr	r1, [pc, #80]	; (1000b72c <ble_encryption_status_change_handler+0xa8>)
1000b6dc:	0163      	lsls	r3, r4, #5
1000b6de:	1b1a      	subs	r2, r3, r4
1000b6e0:	0092      	lsls	r2, r2, #2
1000b6e2:	188a      	adds	r2, r1, r2
1000b6e4:	0010      	movs	r0, r2
1000b6e6:	305e      	adds	r0, #94	; 0x5e
1000b6e8:	2708      	movs	r7, #8
1000b6ea:	7007      	strb	r7, [r0, #0]
1000b6ec:	78f0      	ldrb	r0, [r6, #3]
1000b6ee:	7510      	strb	r0, [r2, #20]
1000b6f0:	78b2      	ldrb	r2, [r6, #2]
1000b6f2:	1b1c      	subs	r4, r3, r4
1000b6f4:	00a4      	lsls	r4, r4, #2
1000b6f6:	190c      	adds	r4, r1, r4
1000b6f8:	7622      	strb	r2, [r4, #24]
1000b6fa:	e014      	b.n	1000b726 <ble_encryption_status_change_handler+0xa2>
1000b6fc:	78b5      	ldrb	r5, [r6, #2]
1000b6fe:	2d00      	cmp	r5, #0
1000b700:	d0e5      	beq.n	1000b6ce <ble_encryption_status_change_handler+0x4a>
1000b702:	e7d2      	b.n	1000b6aa <ble_encryption_status_change_handler+0x26>
1000b704:	4e0a      	ldr	r6, [pc, #40]	; (1000b730 <ble_encryption_status_change_handler+0xac>)
1000b706:	0030      	movs	r0, r6
1000b708:	4d0a      	ldr	r5, [pc, #40]	; (1000b734 <ble_encryption_status_change_handler+0xb0>)
1000b70a:	47a8      	blx	r5
1000b70c:	480c      	ldr	r0, [pc, #48]	; (1000b740 <ble_encryption_status_change_handler+0xbc>)
1000b70e:	4c0b      	ldr	r4, [pc, #44]	; (1000b73c <ble_encryption_status_change_handler+0xb8>)
1000b710:	47a0      	blx	r4
1000b712:	0030      	movs	r0, r6
1000b714:	47a8      	blx	r5
1000b716:	480b      	ldr	r0, [pc, #44]	; (1000b744 <ble_encryption_status_change_handler+0xc0>)
1000b718:	47a0      	blx	r4
1000b71a:	25e2      	movs	r5, #226	; 0xe2
1000b71c:	e003      	b.n	1000b726 <ble_encryption_status_change_handler+0xa2>
1000b71e:	78b5      	ldrb	r5, [r6, #2]
1000b720:	2d00      	cmp	r5, #0
1000b722:	d1c2      	bne.n	1000b6aa <ble_encryption_status_change_handler+0x26>
1000b724:	e7ee      	b.n	1000b704 <ble_encryption_status_change_handler+0x80>
1000b726:	0028      	movs	r0, r5
1000b728:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000b72a:	46c0      	nop			; (mov r8, r8)
1000b72c:	1001791c 	.word	0x1001791c
1000b730:	10015020 	.word	0x10015020
1000b734:	10012481 	.word	0x10012481
1000b738:	10015354 	.word	0x10015354
1000b73c:	10012361 	.word	0x10012361
1000b740:	10015368 	.word	0x10015368
1000b744:	1001538c 	.word	0x1001538c

1000b748 <ble_scan_info_handler>:
1000b748:	b510      	push	{r4, lr}
1000b74a:	0001      	movs	r1, r0
1000b74c:	4b15      	ldr	r3, [pc, #84]	; (1000b7a4 <ble_scan_info_handler+0x5c>)
1000b74e:	781b      	ldrb	r3, [r3, #0]
1000b750:	b2db      	uxtb	r3, r3
1000b752:	2b13      	cmp	r3, #19
1000b754:	d812      	bhi.n	1000b77c <ble_scan_info_handler+0x34>
1000b756:	4c13      	ldr	r4, [pc, #76]	; (1000b7a4 <ble_scan_info_handler+0x5c>)
1000b758:	7823      	ldrb	r3, [r4, #0]
1000b75a:	b2db      	uxtb	r3, r3
1000b75c:	0098      	lsls	r0, r3, #2
1000b75e:	18c0      	adds	r0, r0, r3
1000b760:	00c0      	lsls	r0, r0, #3
1000b762:	18c3      	adds	r3, r0, r3
1000b764:	4810      	ldr	r0, [pc, #64]	; (1000b7a8 <ble_scan_info_handler+0x60>)
1000b766:	1818      	adds	r0, r3, r0
1000b768:	2229      	movs	r2, #41	; 0x29
1000b76a:	4b10      	ldr	r3, [pc, #64]	; (1000b7ac <ble_scan_info_handler+0x64>)
1000b76c:	4798      	blx	r3
1000b76e:	7823      	ldrb	r3, [r4, #0]
1000b770:	7823      	ldrb	r3, [r4, #0]
1000b772:	3301      	adds	r3, #1
1000b774:	b2db      	uxtb	r3, r3
1000b776:	7023      	strb	r3, [r4, #0]
1000b778:	2300      	movs	r3, #0
1000b77a:	e011      	b.n	1000b7a0 <ble_scan_info_handler+0x58>
1000b77c:	480c      	ldr	r0, [pc, #48]	; (1000b7b0 <ble_scan_info_handler+0x68>)
1000b77e:	4b0d      	ldr	r3, [pc, #52]	; (1000b7b4 <ble_scan_info_handler+0x6c>)
1000b780:	4798      	blx	r3
1000b782:	480d      	ldr	r0, [pc, #52]	; (1000b7b8 <ble_scan_info_handler+0x70>)
1000b784:	4b0d      	ldr	r3, [pc, #52]	; (1000b7bc <ble_scan_info_handler+0x74>)
1000b786:	4798      	blx	r3
1000b788:	4b0d      	ldr	r3, [pc, #52]	; (1000b7c0 <ble_scan_info_handler+0x78>)
1000b78a:	4798      	blx	r3
1000b78c:	23e2      	movs	r3, #226	; 0xe2
1000b78e:	2800      	cmp	r0, #0
1000b790:	d006      	beq.n	1000b7a0 <ble_scan_info_handler+0x58>
1000b792:	4807      	ldr	r0, [pc, #28]	; (1000b7b0 <ble_scan_info_handler+0x68>)
1000b794:	4b07      	ldr	r3, [pc, #28]	; (1000b7b4 <ble_scan_info_handler+0x6c>)
1000b796:	4798      	blx	r3
1000b798:	480a      	ldr	r0, [pc, #40]	; (1000b7c4 <ble_scan_info_handler+0x7c>)
1000b79a:	4b08      	ldr	r3, [pc, #32]	; (1000b7bc <ble_scan_info_handler+0x74>)
1000b79c:	4798      	blx	r3
1000b79e:	23e2      	movs	r3, #226	; 0xe2
1000b7a0:	0018      	movs	r0, r3
1000b7a2:	bd10      	pop	{r4, pc}
1000b7a4:	100165ec 	.word	0x100165ec
1000b7a8:	10017c00 	.word	0x10017c00
1000b7ac:	10012207 	.word	0x10012207
1000b7b0:	10015020 	.word	0x10015020
1000b7b4:	10012481 	.word	0x10012481
1000b7b8:	100153b4 	.word	0x100153b4
1000b7bc:	10012361 	.word	0x10012361
1000b7c0:	1000e7f1 	.word	0x1000e7f1
1000b7c4:	100153ec 	.word	0x100153ec

1000b7c8 <ble_pair_done_handler>:
1000b7c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000b7ca:	464f      	mov	r7, r9
1000b7cc:	4646      	mov	r6, r8
1000b7ce:	b4c0      	push	{r6, r7}
1000b7d0:	0005      	movs	r5, r0
1000b7d2:	8841      	ldrh	r1, [r0, #2]
1000b7d4:	4b3a      	ldr	r3, [pc, #232]	; (1000b8c0 <ble_pair_done_handler+0xf8>)
1000b7d6:	2400      	movs	r4, #0
1000b7d8:	891a      	ldrh	r2, [r3, #8]
1000b7da:	428a      	cmp	r2, r1
1000b7dc:	d104      	bne.n	1000b7e8 <ble_pair_done_handler+0x20>
1000b7de:	001a      	movs	r2, r3
1000b7e0:	325e      	adds	r2, #94	; 0x5e
1000b7e2:	7812      	ldrb	r2, [r2, #0]
1000b7e4:	2a03      	cmp	r2, #3
1000b7e6:	d062      	beq.n	1000b8ae <ble_pair_done_handler+0xe6>
1000b7e8:	3401      	adds	r4, #1
1000b7ea:	b2e4      	uxtb	r4, r4
1000b7ec:	337c      	adds	r3, #124	; 0x7c
1000b7ee:	2c05      	cmp	r4, #5
1000b7f0:	d1f2      	bne.n	1000b7d8 <ble_pair_done_handler+0x10>
1000b7f2:	e02b      	b.n	1000b84c <ble_pair_done_handler+0x84>
1000b7f4:	0163      	lsls	r3, r4, #5
1000b7f6:	1b1c      	subs	r4, r3, r4
1000b7f8:	00a4      	lsls	r4, r4, #2
1000b7fa:	4b31      	ldr	r3, [pc, #196]	; (1000b8c0 <ble_pair_done_handler+0xf8>)
1000b7fc:	191c      	adds	r4, r3, r4
1000b7fe:	345e      	adds	r4, #94	; 0x5e
1000b800:	7823      	ldrb	r3, [r4, #0]
1000b802:	2b01      	cmp	r3, #1
1000b804:	d913      	bls.n	1000b82e <ble_pair_done_handler+0x66>
1000b806:	482f      	ldr	r0, [pc, #188]	; (1000b8c4 <ble_pair_done_handler+0xfc>)
1000b808:	4b2f      	ldr	r3, [pc, #188]	; (1000b8c8 <ble_pair_done_handler+0x100>)
1000b80a:	4798      	blx	r3
1000b80c:	482f      	ldr	r0, [pc, #188]	; (1000b8cc <ble_pair_done_handler+0x104>)
1000b80e:	4b30      	ldr	r3, [pc, #192]	; (1000b8d0 <ble_pair_done_handler+0x108>)
1000b810:	4798      	blx	r3
1000b812:	8868      	ldrh	r0, [r5, #2]
1000b814:	2113      	movs	r1, #19
1000b816:	4b2f      	ldr	r3, [pc, #188]	; (1000b8d4 <ble_pair_done_handler+0x10c>)
1000b818:	4798      	blx	r3
1000b81a:	1e06      	subs	r6, r0, #0
1000b81c:	d04b      	beq.n	1000b8b6 <ble_pair_done_handler+0xee>
1000b81e:	4829      	ldr	r0, [pc, #164]	; (1000b8c4 <ble_pair_done_handler+0xfc>)
1000b820:	4b29      	ldr	r3, [pc, #164]	; (1000b8c8 <ble_pair_done_handler+0x100>)
1000b822:	4798      	blx	r3
1000b824:	482c      	ldr	r0, [pc, #176]	; (1000b8d8 <ble_pair_done_handler+0x110>)
1000b826:	4b2a      	ldr	r3, [pc, #168]	; (1000b8d0 <ble_pair_done_handler+0x108>)
1000b828:	4798      	blx	r3
1000b82a:	26e2      	movs	r6, #226	; 0xe2
1000b82c:	e043      	b.n	1000b8b6 <ble_pair_done_handler+0xee>
1000b82e:	2600      	movs	r6, #0
1000b830:	e041      	b.n	1000b8b6 <ble_pair_done_handler+0xee>
1000b832:	4e24      	ldr	r6, [pc, #144]	; (1000b8c4 <ble_pair_done_handler+0xfc>)
1000b834:	0030      	movs	r0, r6
1000b836:	4d24      	ldr	r5, [pc, #144]	; (1000b8c8 <ble_pair_done_handler+0x100>)
1000b838:	47a8      	blx	r5
1000b83a:	4828      	ldr	r0, [pc, #160]	; (1000b8dc <ble_pair_done_handler+0x114>)
1000b83c:	4c24      	ldr	r4, [pc, #144]	; (1000b8d0 <ble_pair_done_handler+0x108>)
1000b83e:	47a0      	blx	r4
1000b840:	0030      	movs	r0, r6
1000b842:	47a8      	blx	r5
1000b844:	4826      	ldr	r0, [pc, #152]	; (1000b8e0 <ble_pair_done_handler+0x118>)
1000b846:	47a0      	blx	r4
1000b848:	26e2      	movs	r6, #226	; 0xe2
1000b84a:	e034      	b.n	1000b8b6 <ble_pair_done_handler+0xee>
1000b84c:	792b      	ldrb	r3, [r5, #4]
1000b84e:	2b00      	cmp	r3, #0
1000b850:	d1d0      	bne.n	1000b7f4 <ble_pair_done_handler+0x2c>
1000b852:	e7ee      	b.n	1000b832 <ble_pair_done_handler+0x6a>
1000b854:	481b      	ldr	r0, [pc, #108]	; (1000b8c4 <ble_pair_done_handler+0xfc>)
1000b856:	4b1c      	ldr	r3, [pc, #112]	; (1000b8c8 <ble_pair_done_handler+0x100>)
1000b858:	4798      	blx	r3
1000b85a:	4820      	ldr	r0, [pc, #128]	; (1000b8dc <ble_pair_done_handler+0x114>)
1000b85c:	4b1c      	ldr	r3, [pc, #112]	; (1000b8d0 <ble_pair_done_handler+0x108>)
1000b85e:	4798      	blx	r3
1000b860:	782a      	ldrb	r2, [r5, #0]
1000b862:	4b17      	ldr	r3, [pc, #92]	; (1000b8c0 <ble_pair_done_handler+0xf8>)
1000b864:	4699      	mov	r9, r3
1000b866:	0167      	lsls	r7, r4, #5
1000b868:	1b3b      	subs	r3, r7, r4
1000b86a:	009b      	lsls	r3, r3, #2
1000b86c:	444b      	add	r3, r9
1000b86e:	751a      	strb	r2, [r3, #20]
1000b870:	792a      	ldrb	r2, [r5, #4]
1000b872:	761a      	strb	r2, [r3, #24]
1000b874:	335e      	adds	r3, #94	; 0x5e
1000b876:	2205      	movs	r2, #5
1000b878:	701a      	strb	r2, [r3, #0]
1000b87a:	1b38      	subs	r0, r7, r4
1000b87c:	0080      	lsls	r0, r0, #2
1000b87e:	4448      	add	r0, r9
1000b880:	3036      	adds	r0, #54	; 0x36
1000b882:	0029      	movs	r1, r5
1000b884:	3122      	adds	r1, #34	; 0x22
1000b886:	320b      	adds	r2, #11
1000b888:	4b16      	ldr	r3, [pc, #88]	; (1000b8e4 <ble_pair_done_handler+0x11c>)
1000b88a:	4698      	mov	r8, r3
1000b88c:	4798      	blx	r3
1000b88e:	1b38      	subs	r0, r7, r4
1000b890:	0080      	lsls	r0, r0, #2
1000b892:	4448      	add	r0, r9
1000b894:	3046      	adds	r0, #70	; 0x46
1000b896:	0029      	movs	r1, r5
1000b898:	3132      	adds	r1, #50	; 0x32
1000b89a:	2217      	movs	r2, #23
1000b89c:	47c0      	blx	r8
1000b89e:	1b38      	subs	r0, r7, r4
1000b8a0:	0080      	lsls	r0, r0, #2
1000b8a2:	4448      	add	r0, r9
1000b8a4:	301a      	adds	r0, #26
1000b8a6:	1da9      	adds	r1, r5, #6
1000b8a8:	221c      	movs	r2, #28
1000b8aa:	47c0      	blx	r8
1000b8ac:	e003      	b.n	1000b8b6 <ble_pair_done_handler+0xee>
1000b8ae:	792e      	ldrb	r6, [r5, #4]
1000b8b0:	2e00      	cmp	r6, #0
1000b8b2:	d0cf      	beq.n	1000b854 <ble_pair_done_handler+0x8c>
1000b8b4:	e79e      	b.n	1000b7f4 <ble_pair_done_handler+0x2c>
1000b8b6:	0030      	movs	r0, r6
1000b8b8:	bc0c      	pop	{r2, r3}
1000b8ba:	4690      	mov	r8, r2
1000b8bc:	4699      	mov	r9, r3
1000b8be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000b8c0:	1001791c 	.word	0x1001791c
1000b8c4:	10015020 	.word	0x10015020
1000b8c8:	10012481 	.word	0x10012481
1000b8cc:	10015404 	.word	0x10015404
1000b8d0:	10012361 	.word	0x10012361
1000b8d4:	1000e811 	.word	0x1000e811
1000b8d8:	10015424 	.word	0x10015424
1000b8dc:	10015440 	.word	0x10015440
1000b8e0:	1001546c 	.word	0x1001546c
1000b8e4:	10012207 	.word	0x10012207

1000b8e8 <ble_conn_param_update_req>:
1000b8e8:	b510      	push	{r4, lr}
1000b8ea:	8800      	ldrh	r0, [r0, #0]
1000b8ec:	2378      	movs	r3, #120	; 0x78
1000b8ee:	2201      	movs	r2, #1
1000b8f0:	2101      	movs	r1, #1
1000b8f2:	4c02      	ldr	r4, [pc, #8]	; (1000b8fc <ble_conn_param_update_req+0x14>)
1000b8f4:	47a0      	blx	r4
1000b8f6:	2000      	movs	r0, #0
1000b8f8:	bd10      	pop	{r4, pc}
1000b8fa:	46c0      	nop			; (mov r8, r8)
1000b8fc:	1000e831 	.word	0x1000e831

1000b900 <ble_slave_security_request_handler>:
1000b900:	b5f0      	push	{r4, r5, r6, r7, lr}
1000b902:	4657      	mov	r7, sl
1000b904:	464e      	mov	r6, r9
1000b906:	4645      	mov	r5, r8
1000b908:	b4e0      	push	{r5, r6, r7}
1000b90a:	b084      	sub	sp, #16
1000b90c:	0004      	movs	r4, r0
1000b90e:	2209      	movs	r2, #9
1000b910:	2100      	movs	r1, #0
1000b912:	a801      	add	r0, sp, #4
1000b914:	4b6b      	ldr	r3, [pc, #428]	; (1000bac4 <ble_slave_security_request_handler+0x1c4>)
1000b916:	4798      	blx	r3
1000b918:	8825      	ldrh	r5, [r4, #0]
1000b91a:	496b      	ldr	r1, [pc, #428]	; (1000bac8 <ble_slave_security_request_handler+0x1c8>)
1000b91c:	000a      	movs	r2, r1
1000b91e:	2300      	movs	r3, #0
1000b920:	8910      	ldrh	r0, [r2, #8]
1000b922:	42a8      	cmp	r0, r5
1000b924:	d116      	bne.n	1000b954 <ble_slave_security_request_handler+0x54>
1000b926:	0010      	movs	r0, r2
1000b928:	305e      	adds	r0, #94	; 0x5e
1000b92a:	7800      	ldrb	r0, [r0, #0]
1000b92c:	2802      	cmp	r0, #2
1000b92e:	d111      	bne.n	1000b954 <ble_slave_security_request_handler+0x54>
1000b930:	4865      	ldr	r0, [pc, #404]	; (1000bac8 <ble_slave_security_request_handler+0x1c8>)
1000b932:	015a      	lsls	r2, r3, #5
1000b934:	1ad6      	subs	r6, r2, r3
1000b936:	00b6      	lsls	r6, r6, #2
1000b938:	1986      	adds	r6, r0, r6
1000b93a:	365e      	adds	r6, #94	; 0x5e
1000b93c:	2206      	movs	r2, #6
1000b93e:	7032      	strb	r2, [r6, #0]
1000b940:	32f9      	adds	r2, #249	; 0xf9
1000b942:	4013      	ands	r3, r2
1000b944:	015a      	lsls	r2, r3, #5
1000b946:	1ad2      	subs	r2, r2, r3
1000b948:	0092      	lsls	r2, r2, #2
1000b94a:	1882      	adds	r2, r0, r2
1000b94c:	7d12      	ldrb	r2, [r2, #20]
1000b94e:	07d0      	lsls	r0, r2, #31
1000b950:	d405      	bmi.n	1000b95e <ble_slave_security_request_handler+0x5e>
1000b952:	e01b      	b.n	1000b98c <ble_slave_security_request_handler+0x8c>
1000b954:	3301      	adds	r3, #1
1000b956:	327c      	adds	r2, #124	; 0x7c
1000b958:	2b05      	cmp	r3, #5
1000b95a:	d1e1      	bne.n	1000b920 <ble_slave_security_request_handler+0x20>
1000b95c:	e01e      	b.n	1000b99c <ble_slave_security_request_handler+0x9c>
1000b95e:	78e0      	ldrb	r0, [r4, #3]
1000b960:	2800      	cmp	r0, #0
1000b962:	d013      	beq.n	1000b98c <ble_slave_security_request_handler+0x8c>
1000b964:	0159      	lsls	r1, r3, #5
1000b966:	1ac9      	subs	r1, r1, r3
1000b968:	008b      	lsls	r3, r1, #2
1000b96a:	4957      	ldr	r1, [pc, #348]	; (1000bac8 <ble_slave_security_request_handler+0x1c8>)
1000b96c:	18c9      	adds	r1, r1, r3
1000b96e:	311a      	adds	r1, #26
1000b970:	8820      	ldrh	r0, [r4, #0]
1000b972:	4b56      	ldr	r3, [pc, #344]	; (1000bacc <ble_slave_security_request_handler+0x1cc>)
1000b974:	4798      	blx	r3
1000b976:	2800      	cmp	r0, #0
1000b978:	d100      	bne.n	1000b97c <ble_slave_security_request_handler+0x7c>
1000b97a:	e09d      	b.n	1000bab8 <ble_slave_security_request_handler+0x1b8>
1000b97c:	4854      	ldr	r0, [pc, #336]	; (1000bad0 <ble_slave_security_request_handler+0x1d0>)
1000b97e:	4b55      	ldr	r3, [pc, #340]	; (1000bad4 <ble_slave_security_request_handler+0x1d4>)
1000b980:	4798      	blx	r3
1000b982:	4855      	ldr	r0, [pc, #340]	; (1000bad8 <ble_slave_security_request_handler+0x1d8>)
1000b984:	4b55      	ldr	r3, [pc, #340]	; (1000badc <ble_slave_security_request_handler+0x1dc>)
1000b986:	4798      	blx	r3
1000b988:	20e2      	movs	r0, #226	; 0xe2
1000b98a:	e095      	b.n	1000bab8 <ble_slave_security_request_handler+0x1b8>
1000b98c:	015a      	lsls	r2, r3, #5
1000b98e:	1ad3      	subs	r3, r2, r3
1000b990:	009b      	lsls	r3, r3, #2
1000b992:	4a4d      	ldr	r2, [pc, #308]	; (1000bac8 <ble_slave_security_request_handler+0x1c8>)
1000b994:	18d3      	adds	r3, r2, r3
1000b996:	335e      	adds	r3, #94	; 0x5e
1000b998:	2202      	movs	r2, #2
1000b99a:	701a      	strb	r2, [r3, #0]
1000b99c:	8825      	ldrh	r5, [r4, #0]
1000b99e:	2200      	movs	r2, #0
1000b9a0:	2300      	movs	r3, #0
1000b9a2:	0016      	movs	r6, r2
1000b9a4:	8908      	ldrh	r0, [r1, #8]
1000b9a6:	42a8      	cmp	r0, r5
1000b9a8:	d10d      	bne.n	1000b9c6 <ble_slave_security_request_handler+0xc6>
1000b9aa:	0008      	movs	r0, r1
1000b9ac:	305e      	adds	r0, #94	; 0x5e
1000b9ae:	7800      	ldrb	r0, [r0, #0]
1000b9b0:	2802      	cmp	r0, #2
1000b9b2:	d108      	bne.n	1000b9c6 <ble_slave_security_request_handler+0xc6>
1000b9b4:	0152      	lsls	r2, r2, #5
1000b9b6:	1b92      	subs	r2, r2, r6
1000b9b8:	0096      	lsls	r6, r2, #2
1000b9ba:	4a43      	ldr	r2, [pc, #268]	; (1000bac8 <ble_slave_security_request_handler+0x1c8>)
1000b9bc:	1992      	adds	r2, r2, r6
1000b9be:	325e      	adds	r2, #94	; 0x5e
1000b9c0:	2103      	movs	r1, #3
1000b9c2:	7011      	strb	r1, [r2, #0]
1000b9c4:	e005      	b.n	1000b9d2 <ble_slave_security_request_handler+0xd2>
1000b9c6:	3301      	adds	r3, #1
1000b9c8:	b2db      	uxtb	r3, r3
1000b9ca:	3201      	adds	r2, #1
1000b9cc:	317c      	adds	r1, #124	; 0x7c
1000b9ce:	2b05      	cmp	r3, #5
1000b9d0:	d1e7      	bne.n	1000b9a2 <ble_slave_security_request_handler+0xa2>
1000b9d2:	aa01      	add	r2, sp, #4
1000b9d4:	2102      	movs	r1, #2
1000b9d6:	7211      	strb	r1, [r2, #8]
1000b9d8:	78e1      	ldrb	r1, [r4, #3]
1000b9da:	7091      	strb	r1, [r2, #2]
1000b9dc:	2101      	movs	r1, #1
1000b9de:	7051      	strb	r1, [r2, #1]
1000b9e0:	3103      	adds	r1, #3
1000b9e2:	7011      	strb	r1, [r2, #0]
1000b9e4:	001f      	movs	r7, r3
1000b9e6:	015a      	lsls	r2, r3, #5
1000b9e8:	1ad2      	subs	r2, r2, r3
1000b9ea:	0092      	lsls	r2, r2, #2
1000b9ec:	4936      	ldr	r1, [pc, #216]	; (1000bac8 <ble_slave_security_request_handler+0x1c8>)
1000b9ee:	5c52      	ldrb	r2, [r2, r1]
1000b9f0:	2a02      	cmp	r2, #2
1000b9f2:	d104      	bne.n	1000b9fe <ble_slave_security_request_handler+0xfe>
1000b9f4:	aa01      	add	r2, sp, #4
1000b9f6:	2103      	movs	r1, #3
1000b9f8:	7191      	strb	r1, [r2, #6]
1000b9fa:	71d1      	strb	r1, [r2, #7]
1000b9fc:	e003      	b.n	1000ba06 <ble_slave_security_request_handler+0x106>
1000b9fe:	aa01      	add	r2, sp, #4
1000ba00:	2101      	movs	r1, #1
1000ba02:	7191      	strb	r1, [r2, #6]
1000ba04:	71d1      	strb	r1, [r2, #7]
1000ba06:	aa01      	add	r2, sp, #4
1000ba08:	2110      	movs	r1, #16
1000ba0a:	7151      	strb	r1, [r2, #5]
1000ba0c:	7111      	strb	r1, [r2, #4]
1000ba0e:	017a      	lsls	r2, r7, #5
1000ba10:	1bd2      	subs	r2, r2, r7
1000ba12:	0092      	lsls	r2, r2, #2
1000ba14:	492c      	ldr	r1, [pc, #176]	; (1000bac8 <ble_slave_security_request_handler+0x1c8>)
1000ba16:	188a      	adds	r2, r1, r2
1000ba18:	7e12      	ldrb	r2, [r2, #24]
1000ba1a:	2a40      	cmp	r2, #64	; 0x40
1000ba1c:	d134      	bne.n	1000ba88 <ble_slave_security_request_handler+0x188>
1000ba1e:	015a      	lsls	r2, r3, #5
1000ba20:	1ad3      	subs	r3, r2, r3
1000ba22:	009b      	lsls	r3, r3, #2
1000ba24:	469a      	mov	sl, r3
1000ba26:	001e      	movs	r6, r3
1000ba28:	3660      	adds	r6, #96	; 0x60
1000ba2a:	1876      	adds	r6, r6, r1
1000ba2c:	4655      	mov	r5, sl
1000ba2e:	3568      	adds	r5, #104	; 0x68
1000ba30:	186d      	adds	r5, r5, r1
1000ba32:	4b2b      	ldr	r3, [pc, #172]	; (1000bae0 <ble_slave_security_request_handler+0x1e0>)
1000ba34:	4699      	mov	r9, r3
1000ba36:	230f      	movs	r3, #15
1000ba38:	4698      	mov	r8, r3
1000ba3a:	47c8      	blx	r9
1000ba3c:	4643      	mov	r3, r8
1000ba3e:	4018      	ands	r0, r3
1000ba40:	7030      	strb	r0, [r6, #0]
1000ba42:	47c8      	blx	r9
1000ba44:	4643      	mov	r3, r8
1000ba46:	4018      	ands	r0, r3
1000ba48:	74b0      	strb	r0, [r6, #18]
1000ba4a:	3601      	adds	r6, #1
1000ba4c:	42ae      	cmp	r6, r5
1000ba4e:	d1f4      	bne.n	1000ba3a <ble_slave_security_request_handler+0x13a>
1000ba50:	4656      	mov	r6, sl
1000ba52:	3670      	adds	r6, #112	; 0x70
1000ba54:	4a1c      	ldr	r2, [pc, #112]	; (1000bac8 <ble_slave_security_request_handler+0x1c8>)
1000ba56:	18b6      	adds	r6, r6, r2
1000ba58:	4b21      	ldr	r3, [pc, #132]	; (1000bae0 <ble_slave_security_request_handler+0x1e0>)
1000ba5a:	4699      	mov	r9, r3
1000ba5c:	230f      	movs	r3, #15
1000ba5e:	4698      	mov	r8, r3
1000ba60:	47c8      	blx	r9
1000ba62:	4643      	mov	r3, r8
1000ba64:	4018      	ands	r0, r3
1000ba66:	7028      	strb	r0, [r5, #0]
1000ba68:	3501      	adds	r5, #1
1000ba6a:	42b5      	cmp	r5, r6
1000ba6c:	d1f8      	bne.n	1000ba60 <ble_slave_security_request_handler+0x160>
1000ba6e:	4b1c      	ldr	r3, [pc, #112]	; (1000bae0 <ble_slave_security_request_handler+0x1e0>)
1000ba70:	4798      	blx	r3
1000ba72:	017b      	lsls	r3, r7, #5
1000ba74:	1bdb      	subs	r3, r3, r7
1000ba76:	009b      	lsls	r3, r3, #2
1000ba78:	4a13      	ldr	r2, [pc, #76]	; (1000bac8 <ble_slave_security_request_handler+0x1c8>)
1000ba7a:	18d3      	adds	r3, r2, r3
1000ba7c:	001a      	movs	r2, r3
1000ba7e:	3270      	adds	r2, #112	; 0x70
1000ba80:	8010      	strh	r0, [r2, #0]
1000ba82:	337a      	adds	r3, #122	; 0x7a
1000ba84:	2210      	movs	r2, #16
1000ba86:	701a      	strb	r2, [r3, #0]
1000ba88:	017a      	lsls	r2, r7, #5
1000ba8a:	1bd7      	subs	r7, r2, r7
1000ba8c:	00bf      	lsls	r7, r7, #2
1000ba8e:	3760      	adds	r7, #96	; 0x60
1000ba90:	4a0d      	ldr	r2, [pc, #52]	; (1000bac8 <ble_slave_security_request_handler+0x1c8>)
1000ba92:	18ba      	adds	r2, r7, r2
1000ba94:	8820      	ldrh	r0, [r4, #0]
1000ba96:	2300      	movs	r3, #0
1000ba98:	a901      	add	r1, sp, #4
1000ba9a:	4c12      	ldr	r4, [pc, #72]	; (1000bae4 <ble_slave_security_request_handler+0x1e4>)
1000ba9c:	47a0      	blx	r4
1000ba9e:	2800      	cmp	r0, #0
1000baa0:	d00a      	beq.n	1000bab8 <ble_slave_security_request_handler+0x1b8>
1000baa2:	ab01      	add	r3, sp, #4
1000baa4:	2200      	movs	r2, #0
1000baa6:	709a      	strb	r2, [r3, #2]
1000baa8:	705a      	strb	r2, [r3, #1]
1000baaa:	4809      	ldr	r0, [pc, #36]	; (1000bad0 <ble_slave_security_request_handler+0x1d0>)
1000baac:	4b09      	ldr	r3, [pc, #36]	; (1000bad4 <ble_slave_security_request_handler+0x1d4>)
1000baae:	4798      	blx	r3
1000bab0:	480d      	ldr	r0, [pc, #52]	; (1000bae8 <ble_slave_security_request_handler+0x1e8>)
1000bab2:	4b0a      	ldr	r3, [pc, #40]	; (1000badc <ble_slave_security_request_handler+0x1dc>)
1000bab4:	4798      	blx	r3
1000bab6:	20e2      	movs	r0, #226	; 0xe2
1000bab8:	b004      	add	sp, #16
1000baba:	bc1c      	pop	{r2, r3, r4}
1000babc:	4690      	mov	r8, r2
1000babe:	4699      	mov	r9, r3
1000bac0:	46a2      	mov	sl, r4
1000bac2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000bac4:	10012219 	.word	0x10012219
1000bac8:	1001791c 	.word	0x1001791c
1000bacc:	1000f4e9 	.word	0x1000f4e9
1000bad0:	10015020 	.word	0x10015020
1000bad4:	10012481 	.word	0x10012481
1000bad8:	1001549c 	.word	0x1001549c
1000badc:	10012361 	.word	0x10012361
1000bae0:	10012495 	.word	0x10012495
1000bae4:	1000f2fd 	.word	0x1000f2fd
1000bae8:	100154b4 	.word	0x100154b4

1000baec <ble_pair_request_handler>:
1000baec:	b5f0      	push	{r4, r5, r6, r7, lr}
1000baee:	465f      	mov	r7, fp
1000baf0:	4656      	mov	r6, sl
1000baf2:	464d      	mov	r5, r9
1000baf4:	4644      	mov	r4, r8
1000baf6:	b4f0      	push	{r4, r5, r6, r7}
1000baf8:	b085      	sub	sp, #20
1000bafa:	4683      	mov	fp, r0
1000bafc:	8804      	ldrh	r4, [r0, #0]
1000bafe:	4a49      	ldr	r2, [pc, #292]	; (1000bc24 <ble_pair_request_handler+0x138>)
1000bb00:	2100      	movs	r1, #0
1000bb02:	2300      	movs	r3, #0
1000bb04:	8910      	ldrh	r0, [r2, #8]
1000bb06:	42a0      	cmp	r0, r4
1000bb08:	d10d      	bne.n	1000bb26 <ble_pair_request_handler+0x3a>
1000bb0a:	0010      	movs	r0, r2
1000bb0c:	305e      	adds	r0, #94	; 0x5e
1000bb0e:	7800      	ldrb	r0, [r0, #0]
1000bb10:	2802      	cmp	r0, #2
1000bb12:	d108      	bne.n	1000bb26 <ble_pair_request_handler+0x3a>
1000bb14:	014a      	lsls	r2, r1, #5
1000bb16:	1a52      	subs	r2, r2, r1
1000bb18:	0095      	lsls	r5, r2, #2
1000bb1a:	4a42      	ldr	r2, [pc, #264]	; (1000bc24 <ble_pair_request_handler+0x138>)
1000bb1c:	1952      	adds	r2, r2, r5
1000bb1e:	325e      	adds	r2, #94	; 0x5e
1000bb20:	2103      	movs	r1, #3
1000bb22:	7011      	strb	r1, [r2, #0]
1000bb24:	e005      	b.n	1000bb32 <ble_pair_request_handler+0x46>
1000bb26:	3301      	adds	r3, #1
1000bb28:	b2db      	uxtb	r3, r3
1000bb2a:	3101      	adds	r1, #1
1000bb2c:	327c      	adds	r2, #124	; 0x7c
1000bb2e:	2b05      	cmp	r3, #5
1000bb30:	d1e8      	bne.n	1000bb04 <ble_pair_request_handler+0x18>
1000bb32:	aa01      	add	r2, sp, #4
1000bb34:	2102      	movs	r1, #2
1000bb36:	7211      	strb	r1, [r2, #8]
1000bb38:	3901      	subs	r1, #1
1000bb3a:	7091      	strb	r1, [r2, #2]
1000bb3c:	7051      	strb	r1, [r2, #1]
1000bb3e:	2100      	movs	r1, #0
1000bb40:	7011      	strb	r1, [r2, #0]
1000bb42:	70d1      	strb	r1, [r2, #3]
1000bb44:	001f      	movs	r7, r3
1000bb46:	015a      	lsls	r2, r3, #5
1000bb48:	1ad2      	subs	r2, r2, r3
1000bb4a:	0092      	lsls	r2, r2, #2
1000bb4c:	4935      	ldr	r1, [pc, #212]	; (1000bc24 <ble_pair_request_handler+0x138>)
1000bb4e:	5c52      	ldrb	r2, [r2, r1]
1000bb50:	2a02      	cmp	r2, #2
1000bb52:	d104      	bne.n	1000bb5e <ble_pair_request_handler+0x72>
1000bb54:	aa01      	add	r2, sp, #4
1000bb56:	2103      	movs	r1, #3
1000bb58:	7191      	strb	r1, [r2, #6]
1000bb5a:	71d1      	strb	r1, [r2, #7]
1000bb5c:	e003      	b.n	1000bb66 <ble_pair_request_handler+0x7a>
1000bb5e:	aa01      	add	r2, sp, #4
1000bb60:	2101      	movs	r1, #1
1000bb62:	7191      	strb	r1, [r2, #6]
1000bb64:	71d1      	strb	r1, [r2, #7]
1000bb66:	aa01      	add	r2, sp, #4
1000bb68:	2110      	movs	r1, #16
1000bb6a:	7151      	strb	r1, [r2, #5]
1000bb6c:	7111      	strb	r1, [r2, #4]
1000bb6e:	017a      	lsls	r2, r7, #5
1000bb70:	1bd2      	subs	r2, r2, r7
1000bb72:	0092      	lsls	r2, r2, #2
1000bb74:	492b      	ldr	r1, [pc, #172]	; (1000bc24 <ble_pair_request_handler+0x138>)
1000bb76:	188a      	adds	r2, r1, r2
1000bb78:	7e12      	ldrb	r2, [r2, #24]
1000bb7a:	2a40      	cmp	r2, #64	; 0x40
1000bb7c:	d131      	bne.n	1000bbe2 <ble_pair_request_handler+0xf6>
1000bb7e:	015a      	lsls	r2, r3, #5
1000bb80:	1ad3      	subs	r3, r2, r3
1000bb82:	009b      	lsls	r3, r3, #2
1000bb84:	469a      	mov	sl, r3
1000bb86:	001d      	movs	r5, r3
1000bb88:	3560      	adds	r5, #96	; 0x60
1000bb8a:	186d      	adds	r5, r5, r1
1000bb8c:	4654      	mov	r4, sl
1000bb8e:	3468      	adds	r4, #104	; 0x68
1000bb90:	1864      	adds	r4, r4, r1
1000bb92:	4b25      	ldr	r3, [pc, #148]	; (1000bc28 <ble_pair_request_handler+0x13c>)
1000bb94:	4699      	mov	r9, r3
1000bb96:	260f      	movs	r6, #15
1000bb98:	47c8      	blx	r9
1000bb9a:	4030      	ands	r0, r6
1000bb9c:	7028      	strb	r0, [r5, #0]
1000bb9e:	47c8      	blx	r9
1000bba0:	4030      	ands	r0, r6
1000bba2:	74a8      	strb	r0, [r5, #18]
1000bba4:	3501      	adds	r5, #1
1000bba6:	42a5      	cmp	r5, r4
1000bba8:	d1f6      	bne.n	1000bb98 <ble_pair_request_handler+0xac>
1000bbaa:	4655      	mov	r5, sl
1000bbac:	3570      	adds	r5, #112	; 0x70
1000bbae:	4a1d      	ldr	r2, [pc, #116]	; (1000bc24 <ble_pair_request_handler+0x138>)
1000bbb0:	18ad      	adds	r5, r5, r2
1000bbb2:	4b1d      	ldr	r3, [pc, #116]	; (1000bc28 <ble_pair_request_handler+0x13c>)
1000bbb4:	4699      	mov	r9, r3
1000bbb6:	230f      	movs	r3, #15
1000bbb8:	4698      	mov	r8, r3
1000bbba:	47c8      	blx	r9
1000bbbc:	4643      	mov	r3, r8
1000bbbe:	4018      	ands	r0, r3
1000bbc0:	7020      	strb	r0, [r4, #0]
1000bbc2:	3401      	adds	r4, #1
1000bbc4:	42ac      	cmp	r4, r5
1000bbc6:	d1f8      	bne.n	1000bbba <ble_pair_request_handler+0xce>
1000bbc8:	4b17      	ldr	r3, [pc, #92]	; (1000bc28 <ble_pair_request_handler+0x13c>)
1000bbca:	4798      	blx	r3
1000bbcc:	017b      	lsls	r3, r7, #5
1000bbce:	1bdb      	subs	r3, r3, r7
1000bbd0:	009b      	lsls	r3, r3, #2
1000bbd2:	4a14      	ldr	r2, [pc, #80]	; (1000bc24 <ble_pair_request_handler+0x138>)
1000bbd4:	18d3      	adds	r3, r2, r3
1000bbd6:	001a      	movs	r2, r3
1000bbd8:	3270      	adds	r2, #112	; 0x70
1000bbda:	8010      	strh	r0, [r2, #0]
1000bbdc:	337a      	adds	r3, #122	; 0x7a
1000bbde:	2210      	movs	r2, #16
1000bbe0:	701a      	strb	r2, [r3, #0]
1000bbe2:	017a      	lsls	r2, r7, #5
1000bbe4:	1bd7      	subs	r7, r2, r7
1000bbe6:	00bf      	lsls	r7, r7, #2
1000bbe8:	3760      	adds	r7, #96	; 0x60
1000bbea:	4a0e      	ldr	r2, [pc, #56]	; (1000bc24 <ble_pair_request_handler+0x138>)
1000bbec:	18ba      	adds	r2, r7, r2
1000bbee:	465b      	mov	r3, fp
1000bbf0:	8818      	ldrh	r0, [r3, #0]
1000bbf2:	2300      	movs	r3, #0
1000bbf4:	a901      	add	r1, sp, #4
1000bbf6:	4c0d      	ldr	r4, [pc, #52]	; (1000bc2c <ble_pair_request_handler+0x140>)
1000bbf8:	47a0      	blx	r4
1000bbfa:	2800      	cmp	r0, #0
1000bbfc:	d00a      	beq.n	1000bc14 <ble_pair_request_handler+0x128>
1000bbfe:	ab01      	add	r3, sp, #4
1000bc00:	2200      	movs	r2, #0
1000bc02:	709a      	strb	r2, [r3, #2]
1000bc04:	705a      	strb	r2, [r3, #1]
1000bc06:	480a      	ldr	r0, [pc, #40]	; (1000bc30 <ble_pair_request_handler+0x144>)
1000bc08:	4b0a      	ldr	r3, [pc, #40]	; (1000bc34 <ble_pair_request_handler+0x148>)
1000bc0a:	4798      	blx	r3
1000bc0c:	480a      	ldr	r0, [pc, #40]	; (1000bc38 <ble_pair_request_handler+0x14c>)
1000bc0e:	4b0b      	ldr	r3, [pc, #44]	; (1000bc3c <ble_pair_request_handler+0x150>)
1000bc10:	4798      	blx	r3
1000bc12:	20e2      	movs	r0, #226	; 0xe2
1000bc14:	b005      	add	sp, #20
1000bc16:	bc3c      	pop	{r2, r3, r4, r5}
1000bc18:	4690      	mov	r8, r2
1000bc1a:	4699      	mov	r9, r3
1000bc1c:	46a2      	mov	sl, r4
1000bc1e:	46ab      	mov	fp, r5
1000bc20:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000bc22:	46c0      	nop			; (mov r8, r8)
1000bc24:	1001791c 	.word	0x1001791c
1000bc28:	10012495 	.word	0x10012495
1000bc2c:	1000f2fd 	.word	0x1000f2fd
1000bc30:	10015020 	.word	0x10015020
1000bc34:	10012481 	.word	0x10012481
1000bc38:	100154e0 	.word	0x100154e0
1000bc3c:	10012361 	.word	0x10012361

1000bc40 <ble_pair_key_request_handler>:
1000bc40:	b5f0      	push	{r4, r5, r6, r7, lr}
1000bc42:	b085      	sub	sp, #20
1000bc44:	0005      	movs	r5, r0
1000bc46:	2206      	movs	r2, #6
1000bc48:	493d      	ldr	r1, [pc, #244]	; (1000bd40 <ble_pair_key_request_handler+0x100>)
1000bc4a:	a802      	add	r0, sp, #8
1000bc4c:	4e3d      	ldr	r6, [pc, #244]	; (1000bd44 <ble_pair_key_request_handler+0x104>)
1000bc4e:	47b0      	blx	r6
1000bc50:	ac01      	add	r4, sp, #4
1000bc52:	2204      	movs	r2, #4
1000bc54:	0029      	movs	r1, r5
1000bc56:	0020      	movs	r0, r4
1000bc58:	47b0      	blx	r6
1000bc5a:	78e3      	ldrb	r3, [r4, #3]
1000bc5c:	2b00      	cmp	r3, #0
1000bc5e:	d162      	bne.n	1000bd26 <ble_pair_key_request_handler+0xe6>
1000bc60:	4839      	ldr	r0, [pc, #228]	; (1000bd48 <ble_pair_key_request_handler+0x108>)
1000bc62:	4b3a      	ldr	r3, [pc, #232]	; (1000bd4c <ble_pair_key_request_handler+0x10c>)
1000bc64:	4798      	blx	r3
1000bc66:	483a      	ldr	r0, [pc, #232]	; (1000bd50 <ble_pair_key_request_handler+0x110>)
1000bc68:	4b3a      	ldr	r3, [pc, #232]	; (1000bd54 <ble_pair_key_request_handler+0x114>)
1000bc6a:	4798      	blx	r3
1000bc6c:	2600      	movs	r6, #0
1000bc6e:	4c3a      	ldr	r4, [pc, #232]	; (1000bd58 <ble_pair_key_request_handler+0x118>)
1000bc70:	27ff      	movs	r7, #255	; 0xff
1000bc72:	201e      	movs	r0, #30
1000bc74:	47a0      	blx	r4
1000bc76:	b2c3      	uxtb	r3, r0
1000bc78:	2b00      	cmp	r3, #0
1000bc7a:	d11a      	bne.n	1000bcb2 <ble_pair_key_request_handler+0x72>
1000bc7c:	4f32      	ldr	r7, [pc, #200]	; (1000bd48 <ble_pair_key_request_handler+0x108>)
1000bc7e:	0038      	movs	r0, r7
1000bc80:	4e32      	ldr	r6, [pc, #200]	; (1000bd4c <ble_pair_key_request_handler+0x10c>)
1000bc82:	47b0      	blx	r6
1000bc84:	4835      	ldr	r0, [pc, #212]	; (1000bd5c <ble_pair_key_request_handler+0x11c>)
1000bc86:	4c33      	ldr	r4, [pc, #204]	; (1000bd54 <ble_pair_key_request_handler+0x114>)
1000bc88:	47a0      	blx	r4
1000bc8a:	0038      	movs	r0, r7
1000bc8c:	47b0      	blx	r6
1000bc8e:	4834      	ldr	r0, [pc, #208]	; (1000bd60 <ble_pair_key_request_handler+0x120>)
1000bc90:	47a0      	blx	r4
1000bc92:	8828      	ldrh	r0, [r5, #0]
1000bc94:	2113      	movs	r1, #19
1000bc96:	4b33      	ldr	r3, [pc, #204]	; (1000bd64 <ble_pair_key_request_handler+0x124>)
1000bc98:	4798      	blx	r3
1000bc9a:	0003      	movs	r3, r0
1000bc9c:	20e2      	movs	r0, #226	; 0xe2
1000bc9e:	2b00      	cmp	r3, #0
1000bca0:	d04c      	beq.n	1000bd3c <ble_pair_key_request_handler+0xfc>
1000bca2:	4829      	ldr	r0, [pc, #164]	; (1000bd48 <ble_pair_key_request_handler+0x108>)
1000bca4:	4b29      	ldr	r3, [pc, #164]	; (1000bd4c <ble_pair_key_request_handler+0x10c>)
1000bca6:	4798      	blx	r3
1000bca8:	482f      	ldr	r0, [pc, #188]	; (1000bd68 <ble_pair_key_request_handler+0x128>)
1000bcaa:	4b2a      	ldr	r3, [pc, #168]	; (1000bd54 <ble_pair_key_request_handler+0x114>)
1000bcac:	4798      	blx	r3
1000bcae:	20e2      	movs	r0, #226	; 0xe2
1000bcb0:	e044      	b.n	1000bd3c <ble_pair_key_request_handler+0xfc>
1000bcb2:	001a      	movs	r2, r3
1000bcb4:	3a30      	subs	r2, #48	; 0x30
1000bcb6:	2a09      	cmp	r2, #9
1000bcb8:	d8db      	bhi.n	1000bc72 <ble_pair_key_request_handler+0x32>
1000bcba:	aa02      	add	r2, sp, #8
1000bcbc:	54b3      	strb	r3, [r6, r2]
1000bcbe:	4038      	ands	r0, r7
1000bcc0:	4b2a      	ldr	r3, [pc, #168]	; (1000bd6c <ble_pair_key_request_handler+0x12c>)
1000bcc2:	4798      	blx	r3
1000bcc4:	3601      	adds	r6, #1
1000bcc6:	2e06      	cmp	r6, #6
1000bcc8:	d026      	beq.n	1000bd18 <ble_pair_key_request_handler+0xd8>
1000bcca:	e7d2      	b.n	1000bc72 <ble_pair_key_request_handler+0x32>
1000bccc:	481e      	ldr	r0, [pc, #120]	; (1000bd48 <ble_pair_key_request_handler+0x108>)
1000bcce:	4b1f      	ldr	r3, [pc, #124]	; (1000bd4c <ble_pair_key_request_handler+0x10c>)
1000bcd0:	4798      	blx	r3
1000bcd2:	4827      	ldr	r0, [pc, #156]	; (1000bd70 <ble_pair_key_request_handler+0x130>)
1000bcd4:	4b1f      	ldr	r3, [pc, #124]	; (1000bd54 <ble_pair_key_request_handler+0x114>)
1000bcd6:	4798      	blx	r3
1000bcd8:	2400      	movs	r4, #0
1000bcda:	4e24      	ldr	r6, [pc, #144]	; (1000bd6c <ble_pair_key_request_handler+0x12c>)
1000bcdc:	ab02      	add	r3, sp, #8
1000bcde:	5ce0      	ldrb	r0, [r4, r3]
1000bce0:	47b0      	blx	r6
1000bce2:	3401      	adds	r4, #1
1000bce4:	2c06      	cmp	r4, #6
1000bce6:	d1f9      	bne.n	1000bcdc <ble_pair_key_request_handler+0x9c>
1000bce8:	ab01      	add	r3, sp, #4
1000bcea:	7899      	ldrb	r1, [r3, #2]
1000bcec:	8828      	ldrh	r0, [r5, #0]
1000bcee:	aa02      	add	r2, sp, #8
1000bcf0:	4b20      	ldr	r3, [pc, #128]	; (1000bd74 <ble_pair_key_request_handler+0x134>)
1000bcf2:	4798      	blx	r3
1000bcf4:	2800      	cmp	r0, #0
1000bcf6:	d021      	beq.n	1000bd3c <ble_pair_key_request_handler+0xfc>
1000bcf8:	4813      	ldr	r0, [pc, #76]	; (1000bd48 <ble_pair_key_request_handler+0x108>)
1000bcfa:	4b14      	ldr	r3, [pc, #80]	; (1000bd4c <ble_pair_key_request_handler+0x10c>)
1000bcfc:	4798      	blx	r3
1000bcfe:	481e      	ldr	r0, [pc, #120]	; (1000bd78 <ble_pair_key_request_handler+0x138>)
1000bd00:	4b14      	ldr	r3, [pc, #80]	; (1000bd54 <ble_pair_key_request_handler+0x114>)
1000bd02:	4798      	blx	r3
1000bd04:	2000      	movs	r0, #0
1000bd06:	e019      	b.n	1000bd3c <ble_pair_key_request_handler+0xfc>
1000bd08:	480f      	ldr	r0, [pc, #60]	; (1000bd48 <ble_pair_key_request_handler+0x108>)
1000bd0a:	4b10      	ldr	r3, [pc, #64]	; (1000bd4c <ble_pair_key_request_handler+0x10c>)
1000bd0c:	4798      	blx	r3
1000bd0e:	481b      	ldr	r0, [pc, #108]	; (1000bd7c <ble_pair_key_request_handler+0x13c>)
1000bd10:	4b10      	ldr	r3, [pc, #64]	; (1000bd54 <ble_pair_key_request_handler+0x114>)
1000bd12:	4798      	blx	r3
1000bd14:	2000      	movs	r0, #0
1000bd16:	e011      	b.n	1000bd3c <ble_pair_key_request_handler+0xfc>
1000bd18:	480b      	ldr	r0, [pc, #44]	; (1000bd48 <ble_pair_key_request_handler+0x108>)
1000bd1a:	4b0c      	ldr	r3, [pc, #48]	; (1000bd4c <ble_pair_key_request_handler+0x10c>)
1000bd1c:	4798      	blx	r3
1000bd1e:	4818      	ldr	r0, [pc, #96]	; (1000bd80 <ble_pair_key_request_handler+0x140>)
1000bd20:	4b0c      	ldr	r3, [pc, #48]	; (1000bd54 <ble_pair_key_request_handler+0x114>)
1000bd22:	4798      	blx	r3
1000bd24:	e7d8      	b.n	1000bcd8 <ble_pair_key_request_handler+0x98>
1000bd26:	ab01      	add	r3, sp, #4
1000bd28:	885a      	ldrh	r2, [r3, #2]
1000bd2a:	2380      	movs	r3, #128	; 0x80
1000bd2c:	005b      	lsls	r3, r3, #1
1000bd2e:	429a      	cmp	r2, r3
1000bd30:	d0cc      	beq.n	1000bccc <ble_pair_key_request_handler+0x8c>
1000bd32:	ab01      	add	r3, sp, #4
1000bd34:	789b      	ldrb	r3, [r3, #2]
1000bd36:	2b01      	cmp	r3, #1
1000bd38:	d0e6      	beq.n	1000bd08 <ble_pair_key_request_handler+0xc8>
1000bd3a:	2000      	movs	r0, #0
1000bd3c:	b005      	add	sp, #20
1000bd3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000bd40:	10015280 	.word	0x10015280
1000bd44:	10012207 	.word	0x10012207
1000bd48:	10015020 	.word	0x10015020
1000bd4c:	10012481 	.word	0x10012481
1000bd50:	10015508 	.word	0x10015508
1000bd54:	10012361 	.word	0x10012361
1000bd58:	1000ca45 	.word	0x1000ca45
1000bd5c:	10015530 	.word	0x10015530
1000bd60:	1001553c 	.word	0x1001553c
1000bd64:	1000e811 	.word	0x1000e811
1000bd68:	10015424 	.word	0x10015424
1000bd6c:	10012395 	.word	0x10012395
1000bd70:	10015550 	.word	0x10015550
1000bd74:	1000f42d 	.word	0x1000f42d
1000bd78:	10015588 	.word	0x10015588
1000bd7c:	100155a0 	.word	0x100155a0
1000bd80:	100155bc 	.word	0x100155bc

1000bd84 <ble_encryption_request_handler>:
1000bd84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000bd86:	0006      	movs	r6, r0
1000bd88:	8805      	ldrh	r5, [r0, #0]
1000bd8a:	4b2f      	ldr	r3, [pc, #188]	; (1000be48 <ble_encryption_request_handler+0xc4>)
1000bd8c:	2200      	movs	r2, #0
1000bd8e:	2400      	movs	r4, #0
1000bd90:	0010      	movs	r0, r2
1000bd92:	8919      	ldrh	r1, [r3, #8]
1000bd94:	42a9      	cmp	r1, r5
1000bd96:	d116      	bne.n	1000bdc6 <ble_encryption_request_handler+0x42>
1000bd98:	0019      	movs	r1, r3
1000bd9a:	315e      	adds	r1, #94	; 0x5e
1000bd9c:	7809      	ldrb	r1, [r1, #0]
1000bd9e:	2901      	cmp	r1, #1
1000bda0:	d911      	bls.n	1000bdc6 <ble_encryption_request_handler+0x42>
1000bda2:	4929      	ldr	r1, [pc, #164]	; (1000be48 <ble_encryption_request_handler+0xc4>)
1000bda4:	0152      	lsls	r2, r2, #5
1000bda6:	1a10      	subs	r0, r2, r0
1000bda8:	0080      	lsls	r0, r0, #2
1000bdaa:	1808      	adds	r0, r1, r0
1000bdac:	305e      	adds	r0, #94	; 0x5e
1000bdae:	2306      	movs	r3, #6
1000bdb0:	7003      	strb	r3, [r0, #0]
1000bdb2:	0162      	lsls	r2, r4, #5
1000bdb4:	1b13      	subs	r3, r2, r4
1000bdb6:	009b      	lsls	r3, r3, #2
1000bdb8:	18cb      	adds	r3, r1, r3
1000bdba:	3370      	adds	r3, #112	; 0x70
1000bdbc:	881a      	ldrh	r2, [r3, #0]
1000bdbe:	8873      	ldrh	r3, [r6, #2]
1000bdc0:	429a      	cmp	r2, r3
1000bdc2:	d113      	bne.n	1000bdec <ble_encryption_request_handler+0x68>
1000bdc4:	e006      	b.n	1000bdd4 <ble_encryption_request_handler+0x50>
1000bdc6:	3401      	adds	r4, #1
1000bdc8:	b2e4      	uxtb	r4, r4
1000bdca:	3201      	adds	r2, #1
1000bdcc:	337c      	adds	r3, #124	; 0x7c
1000bdce:	2c05      	cmp	r4, #5
1000bdd0:	d1de      	bne.n	1000bd90 <ble_encryption_request_handler+0xc>
1000bdd2:	e00b      	b.n	1000bdec <ble_encryption_request_handler+0x68>
1000bdd4:	0161      	lsls	r1, r4, #5
1000bdd6:	1b09      	subs	r1, r1, r4
1000bdd8:	0089      	lsls	r1, r1, #2
1000bdda:	4b1b      	ldr	r3, [pc, #108]	; (1000be48 <ble_encryption_request_handler+0xc4>)
1000bddc:	1859      	adds	r1, r3, r1
1000bdde:	3172      	adds	r1, #114	; 0x72
1000bde0:	1d30      	adds	r0, r6, #4
1000bde2:	2208      	movs	r2, #8
1000bde4:	4b19      	ldr	r3, [pc, #100]	; (1000be4c <ble_encryption_request_handler+0xc8>)
1000bde6:	4798      	blx	r3
1000bde8:	2800      	cmp	r0, #0
1000bdea:	d015      	beq.n	1000be18 <ble_encryption_request_handler+0x94>
1000bdec:	4f18      	ldr	r7, [pc, #96]	; (1000be50 <ble_encryption_request_handler+0xcc>)
1000bdee:	0038      	movs	r0, r7
1000bdf0:	4e18      	ldr	r6, [pc, #96]	; (1000be54 <ble_encryption_request_handler+0xd0>)
1000bdf2:	47b0      	blx	r6
1000bdf4:	4818      	ldr	r0, [pc, #96]	; (1000be58 <ble_encryption_request_handler+0xd4>)
1000bdf6:	4d19      	ldr	r5, [pc, #100]	; (1000be5c <ble_encryption_request_handler+0xd8>)
1000bdf8:	47a8      	blx	r5
1000bdfa:	0038      	movs	r0, r7
1000bdfc:	47b0      	blx	r6
1000bdfe:	4818      	ldr	r0, [pc, #96]	; (1000be60 <ble_encryption_request_handler+0xdc>)
1000be00:	47a8      	blx	r5
1000be02:	0163      	lsls	r3, r4, #5
1000be04:	1b1c      	subs	r4, r3, r4
1000be06:	00a4      	lsls	r4, r4, #2
1000be08:	4b0f      	ldr	r3, [pc, #60]	; (1000be48 <ble_encryption_request_handler+0xc4>)
1000be0a:	191c      	adds	r4, r3, r4
1000be0c:	8920      	ldrh	r0, [r4, #8]
1000be0e:	2105      	movs	r1, #5
1000be10:	4b14      	ldr	r3, [pc, #80]	; (1000be64 <ble_encryption_request_handler+0xe0>)
1000be12:	4798      	blx	r3
1000be14:	20e2      	movs	r0, #226	; 0xe2
1000be16:	e016      	b.n	1000be46 <ble_encryption_request_handler+0xc2>
1000be18:	0162      	lsls	r2, r4, #5
1000be1a:	1b13      	subs	r3, r2, r4
1000be1c:	009b      	lsls	r3, r3, #2
1000be1e:	3360      	adds	r3, #96	; 0x60
1000be20:	4909      	ldr	r1, [pc, #36]	; (1000be48 <ble_encryption_request_handler+0xc4>)
1000be22:	185b      	adds	r3, r3, r1
1000be24:	1b14      	subs	r4, r2, r4
1000be26:	00a4      	lsls	r4, r4, #2
1000be28:	190c      	adds	r4, r1, r4
1000be2a:	7d21      	ldrb	r1, [r4, #20]
1000be2c:	8830      	ldrh	r0, [r6, #0]
1000be2e:	2201      	movs	r2, #1
1000be30:	4c0d      	ldr	r4, [pc, #52]	; (1000be68 <ble_encryption_request_handler+0xe4>)
1000be32:	47a0      	blx	r4
1000be34:	2800      	cmp	r0, #0
1000be36:	d006      	beq.n	1000be46 <ble_encryption_request_handler+0xc2>
1000be38:	4805      	ldr	r0, [pc, #20]	; (1000be50 <ble_encryption_request_handler+0xcc>)
1000be3a:	4b06      	ldr	r3, [pc, #24]	; (1000be54 <ble_encryption_request_handler+0xd0>)
1000be3c:	4798      	blx	r3
1000be3e:	480b      	ldr	r0, [pc, #44]	; (1000be6c <ble_encryption_request_handler+0xe8>)
1000be40:	4b06      	ldr	r3, [pc, #24]	; (1000be5c <ble_encryption_request_handler+0xd8>)
1000be42:	4798      	blx	r3
1000be44:	2000      	movs	r0, #0
1000be46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000be48:	1001791c 	.word	0x1001791c
1000be4c:	100121e9 	.word	0x100121e9
1000be50:	10015020 	.word	0x10015020
1000be54:	10012481 	.word	0x10012481
1000be58:	100155d0 	.word	0x100155d0
1000be5c:	10012361 	.word	0x10012361
1000be60:	10015608 	.word	0x10015608
1000be64:	1000e811 	.word	0x1000e811
1000be68:	1000f561 	.word	0x1000f561
1000be6c:	10015660 	.word	0x10015660

1000be70 <ble_mgr_events_callback_handler>:
1000be70:	b530      	push	{r4, r5, lr}
1000be72:	2a00      	cmp	r2, #0
1000be74:	d047      	beq.n	1000bf06 <ble_mgr_events_callback_handler+0x96>
1000be76:	2906      	cmp	r1, #6
1000be78:	d847      	bhi.n	1000bf0a <ble_mgr_events_callback_handler+0x9a>
1000be7a:	0089      	lsls	r1, r1, #2
1000be7c:	4b28      	ldr	r3, [pc, #160]	; (1000bf20 <ble_mgr_events_callback_handler+0xb0>)
1000be7e:	585b      	ldr	r3, [r3, r1]
1000be80:	469f      	mov	pc, r3
1000be82:	4b28      	ldr	r3, [pc, #160]	; (1000bf24 <ble_mgr_events_callback_handler+0xb4>)
1000be84:	2405      	movs	r4, #5
1000be86:	e00a      	b.n	1000be9e <ble_mgr_events_callback_handler+0x2e>
1000be88:	4b27      	ldr	r3, [pc, #156]	; (1000bf28 <ble_mgr_events_callback_handler+0xb8>)
1000be8a:	2401      	movs	r4, #1
1000be8c:	e007      	b.n	1000be9e <ble_mgr_events_callback_handler+0x2e>
1000be8e:	4b27      	ldr	r3, [pc, #156]	; (1000bf2c <ble_mgr_events_callback_handler+0xbc>)
1000be90:	2405      	movs	r4, #5
1000be92:	e004      	b.n	1000be9e <ble_mgr_events_callback_handler+0x2e>
1000be94:	4b26      	ldr	r3, [pc, #152]	; (1000bf30 <ble_mgr_events_callback_handler+0xc0>)
1000be96:	2401      	movs	r4, #1
1000be98:	e001      	b.n	1000be9e <ble_mgr_events_callback_handler+0x2e>
1000be9a:	4b26      	ldr	r3, [pc, #152]	; (1000bf34 <ble_mgr_events_callback_handler+0xc4>)
1000be9c:	2405      	movs	r4, #5
1000be9e:	2800      	cmp	r0, #0
1000bea0:	d116      	bne.n	1000bed0 <ble_mgr_events_callback_handler+0x60>
1000bea2:	6819      	ldr	r1, [r3, #0]
1000bea4:	2900      	cmp	r1, #0
1000bea6:	d10b      	bne.n	1000bec0 <ble_mgr_events_callback_handler+0x50>
1000bea8:	e006      	b.n	1000beb8 <ble_mgr_events_callback_handler+0x48>
1000beaa:	001d      	movs	r5, r3
1000beac:	3304      	adds	r3, #4
1000beae:	1f18      	subs	r0, r3, #4
1000beb0:	6800      	ldr	r0, [r0, #0]
1000beb2:	2800      	cmp	r0, #0
1000beb4:	d106      	bne.n	1000bec4 <ble_mgr_events_callback_handler+0x54>
1000beb6:	e000      	b.n	1000beba <ble_mgr_events_callback_handler+0x4a>
1000beb8:	001d      	movs	r5, r3
1000beba:	602a      	str	r2, [r5, #0]
1000bebc:	2101      	movs	r1, #1
1000bebe:	e02c      	b.n	1000bf1a <ble_mgr_events_callback_handler+0xaa>
1000bec0:	3304      	adds	r3, #4
1000bec2:	2100      	movs	r1, #0
1000bec4:	3101      	adds	r1, #1
1000bec6:	b2c9      	uxtb	r1, r1
1000bec8:	42a1      	cmp	r1, r4
1000beca:	d3ee      	bcc.n	1000beaa <ble_mgr_events_callback_handler+0x3a>
1000becc:	2100      	movs	r1, #0
1000bece:	e024      	b.n	1000bf1a <ble_mgr_events_callback_handler+0xaa>
1000bed0:	2100      	movs	r1, #0
1000bed2:	2801      	cmp	r0, #1
1000bed4:	d121      	bne.n	1000bf1a <ble_mgr_events_callback_handler+0xaa>
1000bed6:	6819      	ldr	r1, [r3, #0]
1000bed8:	428a      	cmp	r2, r1
1000beda:	d10c      	bne.n	1000bef6 <ble_mgr_events_callback_handler+0x86>
1000bedc:	e006      	b.n	1000beec <ble_mgr_events_callback_handler+0x7c>
1000bede:	001d      	movs	r5, r3
1000bee0:	3304      	adds	r3, #4
1000bee2:	1f18      	subs	r0, r3, #4
1000bee4:	6800      	ldr	r0, [r0, #0]
1000bee6:	4282      	cmp	r2, r0
1000bee8:	d107      	bne.n	1000befa <ble_mgr_events_callback_handler+0x8a>
1000beea:	e000      	b.n	1000beee <ble_mgr_events_callback_handler+0x7e>
1000beec:	001d      	movs	r5, r3
1000beee:	2300      	movs	r3, #0
1000bef0:	602b      	str	r3, [r5, #0]
1000bef2:	2101      	movs	r1, #1
1000bef4:	e011      	b.n	1000bf1a <ble_mgr_events_callback_handler+0xaa>
1000bef6:	3304      	adds	r3, #4
1000bef8:	2100      	movs	r1, #0
1000befa:	3101      	adds	r1, #1
1000befc:	b2c9      	uxtb	r1, r1
1000befe:	42a1      	cmp	r1, r4
1000bf00:	d3ed      	bcc.n	1000bede <ble_mgr_events_callback_handler+0x6e>
1000bf02:	2100      	movs	r1, #0
1000bf04:	e009      	b.n	1000bf1a <ble_mgr_events_callback_handler+0xaa>
1000bf06:	2100      	movs	r1, #0
1000bf08:	e007      	b.n	1000bf1a <ble_mgr_events_callback_handler+0xaa>
1000bf0a:	2100      	movs	r1, #0
1000bf0c:	e005      	b.n	1000bf1a <ble_mgr_events_callback_handler+0xaa>
1000bf0e:	4b0a      	ldr	r3, [pc, #40]	; (1000bf38 <ble_mgr_events_callback_handler+0xc8>)
1000bf10:	2405      	movs	r4, #5
1000bf12:	e7c4      	b.n	1000be9e <ble_mgr_events_callback_handler+0x2e>
1000bf14:	4b09      	ldr	r3, [pc, #36]	; (1000bf3c <ble_mgr_events_callback_handler+0xcc>)
1000bf16:	2401      	movs	r4, #1
1000bf18:	e7c1      	b.n	1000be9e <ble_mgr_events_callback_handler+0x2e>
1000bf1a:	0008      	movs	r0, r1
1000bf1c:	bd30      	pop	{r4, r5, pc}
1000bf1e:	46c0      	nop			; (mov r8, r8)
1000bf20:	10015174 	.word	0x10015174
1000bf24:	10017908 	.word	0x10017908
1000bf28:	10017904 	.word	0x10017904
1000bf2c:	10017b8c 	.word	0x10017b8c
1000bf30:	10018140 	.word	0x10018140
1000bf34:	10017ba0 	.word	0x10017ba0
1000bf38:	10017bb4 	.word	0x10017bb4
1000bf3c:	10017bfc 	.word	0x10017bfc

1000bf40 <ble_device_init>:
1000bf40:	b5f0      	push	{r4, r5, r6, r7, lr}
1000bf42:	465f      	mov	r7, fp
1000bf44:	4656      	mov	r6, sl
1000bf46:	464d      	mov	r5, r9
1000bf48:	4644      	mov	r4, r8
1000bf4a:	b4f0      	push	{r4, r5, r6, r7}
1000bf4c:	b091      	sub	sp, #68	; 0x44
1000bf4e:	0005      	movs	r5, r0
1000bf50:	2400      	movs	r4, #0
1000bf52:	4b7e      	ldr	r3, [pc, #504]	; (1000c14c <ble_device_init+0x20c>)
1000bf54:	601c      	str	r4, [r3, #0]
1000bf56:	2207      	movs	r2, #7
1000bf58:	2100      	movs	r1, #0
1000bf5a:	487d      	ldr	r0, [pc, #500]	; (1000c150 <ble_device_init+0x210>)
1000bf5c:	4e7d      	ldr	r6, [pc, #500]	; (1000c154 <ble_device_init+0x214>)
1000bf5e:	47b0      	blx	r6
1000bf60:	2212      	movs	r2, #18
1000bf62:	2100      	movs	r1, #0
1000bf64:	487c      	ldr	r0, [pc, #496]	; (1000c158 <ble_device_init+0x218>)
1000bf66:	47b0      	blx	r6
1000bf68:	4a7c      	ldr	r2, [pc, #496]	; (1000c15c <ble_device_init+0x21c>)
1000bf6a:	2100      	movs	r1, #0
1000bf6c:	487c      	ldr	r0, [pc, #496]	; (1000c160 <ble_device_init+0x220>)
1000bf6e:	47b0      	blx	r6
1000bf70:	4b7c      	ldr	r3, [pc, #496]	; (1000c164 <ble_device_init+0x224>)
1000bf72:	701c      	strb	r4, [r3, #0]
1000bf74:	22cd      	movs	r2, #205	; 0xcd
1000bf76:	0092      	lsls	r2, r2, #2
1000bf78:	2100      	movs	r1, #0
1000bf7a:	487b      	ldr	r0, [pc, #492]	; (1000c168 <ble_device_init+0x228>)
1000bf7c:	47b0      	blx	r6
1000bf7e:	4b7b      	ldr	r3, [pc, #492]	; (1000c16c <ble_device_init+0x22c>)
1000bf80:	701c      	strb	r4, [r3, #0]
1000bf82:	2283      	movs	r2, #131	; 0x83
1000bf84:	0092      	lsls	r2, r2, #2
1000bf86:	2100      	movs	r1, #0
1000bf88:	4879      	ldr	r0, [pc, #484]	; (1000c170 <ble_device_init+0x230>)
1000bf8a:	47b0      	blx	r6
1000bf8c:	4b79      	ldr	r3, [pc, #484]	; (1000c174 <ble_device_init+0x234>)
1000bf8e:	469b      	mov	fp, r3
1000bf90:	2380      	movs	r3, #128	; 0x80
1000bf92:	00db      	lsls	r3, r3, #3
1000bf94:	469a      	mov	sl, r3
1000bf96:	001a      	movs	r2, r3
1000bf98:	2100      	movs	r1, #0
1000bf9a:	4658      	mov	r0, fp
1000bf9c:	47b0      	blx	r6
1000bf9e:	4b76      	ldr	r3, [pc, #472]	; (1000c178 <ble_device_init+0x238>)
1000bfa0:	4699      	mov	r9, r3
1000bfa2:	2380      	movs	r3, #128	; 0x80
1000bfa4:	015b      	lsls	r3, r3, #5
1000bfa6:	4698      	mov	r8, r3
1000bfa8:	001a      	movs	r2, r3
1000bfaa:	2100      	movs	r1, #0
1000bfac:	4648      	mov	r0, r9
1000bfae:	47b0      	blx	r6
1000bfb0:	4f72      	ldr	r7, [pc, #456]	; (1000c17c <ble_device_init+0x23c>)
1000bfb2:	221c      	movs	r2, #28
1000bfb4:	2100      	movs	r1, #0
1000bfb6:	0038      	movs	r0, r7
1000bfb8:	47b0      	blx	r6
1000bfba:	465b      	mov	r3, fp
1000bfbc:	60bb      	str	r3, [r7, #8]
1000bfbe:	4653      	mov	r3, sl
1000bfc0:	60fb      	str	r3, [r7, #12]
1000bfc2:	464b      	mov	r3, r9
1000bfc4:	613b      	str	r3, [r7, #16]
1000bfc6:	4643      	mov	r3, r8
1000bfc8:	617b      	str	r3, [r7, #20]
1000bfca:	4b6d      	ldr	r3, [pc, #436]	; (1000c180 <ble_device_init+0x240>)
1000bfcc:	601c      	str	r4, [r3, #0]
1000bfce:	605c      	str	r4, [r3, #4]
1000bfd0:	609c      	str	r4, [r3, #8]
1000bfd2:	60dc      	str	r4, [r3, #12]
1000bfd4:	611c      	str	r4, [r3, #16]
1000bfd6:	4b6b      	ldr	r3, [pc, #428]	; (1000c184 <ble_device_init+0x244>)
1000bfd8:	601c      	str	r4, [r3, #0]
1000bfda:	605c      	str	r4, [r3, #4]
1000bfdc:	609c      	str	r4, [r3, #8]
1000bfde:	60dc      	str	r4, [r3, #12]
1000bfe0:	611c      	str	r4, [r3, #16]
1000bfe2:	4b69      	ldr	r3, [pc, #420]	; (1000c188 <ble_device_init+0x248>)
1000bfe4:	601c      	str	r4, [r3, #0]
1000bfe6:	605c      	str	r4, [r3, #4]
1000bfe8:	609c      	str	r4, [r3, #8]
1000bfea:	60dc      	str	r4, [r3, #12]
1000bfec:	611c      	str	r4, [r3, #16]
1000bfee:	4b67      	ldr	r3, [pc, #412]	; (1000c18c <ble_device_init+0x24c>)
1000bff0:	601c      	str	r4, [r3, #0]
1000bff2:	4b67      	ldr	r3, [pc, #412]	; (1000c190 <ble_device_init+0x250>)
1000bff4:	601c      	str	r4, [r3, #0]
1000bff6:	4b67      	ldr	r3, [pc, #412]	; (1000c194 <ble_device_init+0x254>)
1000bff8:	601c      	str	r4, [r3, #0]
1000bffa:	605c      	str	r4, [r3, #4]
1000bffc:	609c      	str	r4, [r3, #8]
1000bffe:	60dc      	str	r4, [r3, #12]
1000c000:	611c      	str	r4, [r3, #16]
1000c002:	4b65      	ldr	r3, [pc, #404]	; (1000c198 <ble_device_init+0x258>)
1000c004:	601c      	str	r4, [r3, #0]
1000c006:	4c65      	ldr	r4, [pc, #404]	; (1000c19c <ble_device_init+0x25c>)
1000c008:	239b      	movs	r3, #155	; 0x9b
1000c00a:	009b      	lsls	r3, r3, #2
1000c00c:	4698      	mov	r8, r3
1000c00e:	44a0      	add	r8, r4
1000c010:	4f50      	ldr	r7, [pc, #320]	; (1000c154 <ble_device_init+0x214>)
1000c012:	2640      	movs	r6, #64	; 0x40
1000c014:	227c      	movs	r2, #124	; 0x7c
1000c016:	2100      	movs	r1, #0
1000c018:	0020      	movs	r0, r4
1000c01a:	47b8      	blx	r7
1000c01c:	0023      	movs	r3, r4
1000c01e:	335e      	adds	r3, #94	; 0x5e
1000c020:	2200      	movs	r2, #0
1000c022:	701a      	strb	r2, [r3, #0]
1000c024:	7626      	strb	r6, [r4, #24]
1000c026:	347c      	adds	r4, #124	; 0x7c
1000c028:	45a0      	cmp	r8, r4
1000c02a:	d1f3      	bne.n	1000c014 <ble_device_init+0xd4>
1000c02c:	4b5c      	ldr	r3, [pc, #368]	; (1000c1a0 <ble_device_init+0x260>)
1000c02e:	701a      	strb	r2, [r3, #0]
1000c030:	4c52      	ldr	r4, [pc, #328]	; (1000c17c <ble_device_init+0x23c>)
1000c032:	4b4a      	ldr	r3, [pc, #296]	; (1000c15c <ble_device_init+0x21c>)
1000c034:	6063      	str	r3, [r4, #4]
1000c036:	4b4a      	ldr	r3, [pc, #296]	; (1000c160 <ble_device_init+0x220>)
1000c038:	6023      	str	r3, [r4, #0]
1000c03a:	485a      	ldr	r0, [pc, #360]	; (1000c1a4 <ble_device_init+0x264>)
1000c03c:	4b5a      	ldr	r3, [pc, #360]	; (1000c1a8 <ble_device_init+0x268>)
1000c03e:	4798      	blx	r3
1000c040:	485a      	ldr	r0, [pc, #360]	; (1000c1ac <ble_device_init+0x26c>)
1000c042:	4b5b      	ldr	r3, [pc, #364]	; (1000c1b0 <ble_device_init+0x270>)
1000c044:	4798      	blx	r3
1000c046:	0020      	movs	r0, r4
1000c048:	4b5a      	ldr	r3, [pc, #360]	; (1000c1b4 <ble_device_init+0x274>)
1000c04a:	4798      	blx	r3
1000c04c:	2800      	cmp	r0, #0
1000c04e:	d00b      	beq.n	1000c068 <ble_device_init+0x128>
1000c050:	4e54      	ldr	r6, [pc, #336]	; (1000c1a4 <ble_device_init+0x264>)
1000c052:	0030      	movs	r0, r6
1000c054:	4d54      	ldr	r5, [pc, #336]	; (1000c1a8 <ble_device_init+0x268>)
1000c056:	47a8      	blx	r5
1000c058:	4857      	ldr	r0, [pc, #348]	; (1000c1b8 <ble_device_init+0x278>)
1000c05a:	4c55      	ldr	r4, [pc, #340]	; (1000c1b0 <ble_device_init+0x270>)
1000c05c:	47a0      	blx	r4
1000c05e:	0030      	movs	r0, r6
1000c060:	47a8      	blx	r5
1000c062:	4856      	ldr	r0, [pc, #344]	; (1000c1bc <ble_device_init+0x27c>)
1000c064:	47a0      	blx	r4
1000c066:	e7fe      	b.n	1000c066 <ble_device_init+0x126>
1000c068:	4a55      	ldr	r2, [pc, #340]	; (1000c1c0 <ble_device_init+0x280>)
1000c06a:	2100      	movs	r1, #0
1000c06c:	2000      	movs	r0, #0
1000c06e:	4c55      	ldr	r4, [pc, #340]	; (1000c1c4 <ble_device_init+0x284>)
1000c070:	47a0      	blx	r4
1000c072:	4a55      	ldr	r2, [pc, #340]	; (1000c1c8 <ble_device_init+0x288>)
1000c074:	2102      	movs	r1, #2
1000c076:	2000      	movs	r0, #0
1000c078:	47a0      	blx	r4
1000c07a:	2108      	movs	r1, #8
1000c07c:	4853      	ldr	r0, [pc, #332]	; (1000c1cc <ble_device_init+0x28c>)
1000c07e:	4b54      	ldr	r3, [pc, #336]	; (1000c1d0 <ble_device_init+0x290>)
1000c080:	4798      	blx	r3
1000c082:	2800      	cmp	r0, #0
1000c084:	d005      	beq.n	1000c092 <ble_device_init+0x152>
1000c086:	4847      	ldr	r0, [pc, #284]	; (1000c1a4 <ble_device_init+0x264>)
1000c088:	4b47      	ldr	r3, [pc, #284]	; (1000c1a8 <ble_device_init+0x268>)
1000c08a:	4798      	blx	r3
1000c08c:	4851      	ldr	r0, [pc, #324]	; (1000c1d4 <ble_device_init+0x294>)
1000c08e:	4b48      	ldr	r3, [pc, #288]	; (1000c1b0 <ble_device_init+0x270>)
1000c090:	4798      	blx	r3
1000c092:	2207      	movs	r2, #7
1000c094:	4950      	ldr	r1, [pc, #320]	; (1000c1d8 <ble_device_init+0x298>)
1000c096:	3108      	adds	r1, #8
1000c098:	a804      	add	r0, sp, #16
1000c09a:	4b50      	ldr	r3, [pc, #320]	; (1000c1dc <ble_device_init+0x29c>)
1000c09c:	4798      	blx	r3
1000c09e:	2226      	movs	r2, #38	; 0x26
1000c0a0:	2100      	movs	r1, #0
1000c0a2:	a806      	add	r0, sp, #24
1000c0a4:	4b2b      	ldr	r3, [pc, #172]	; (1000c154 <ble_device_init+0x214>)
1000c0a6:	4798      	blx	r3
1000c0a8:	2d00      	cmp	r5, #0
1000c0aa:	d10c      	bne.n	1000c0c6 <ble_device_init+0x186>
1000c0ac:	a804      	add	r0, sp, #16
1000c0ae:	4b4c      	ldr	r3, [pc, #304]	; (1000c1e0 <ble_device_init+0x2a0>)
1000c0b0:	4798      	blx	r3
1000c0b2:	ad04      	add	r5, sp, #16
1000c0b4:	2800      	cmp	r0, #0
1000c0b6:	d006      	beq.n	1000c0c6 <ble_device_init+0x186>
1000c0b8:	483a      	ldr	r0, [pc, #232]	; (1000c1a4 <ble_device_init+0x264>)
1000c0ba:	4b3b      	ldr	r3, [pc, #236]	; (1000c1a8 <ble_device_init+0x268>)
1000c0bc:	4798      	blx	r3
1000c0be:	4849      	ldr	r0, [pc, #292]	; (1000c1e4 <ble_device_init+0x2a4>)
1000c0c0:	4b3b      	ldr	r3, [pc, #236]	; (1000c1b0 <ble_device_init+0x270>)
1000c0c2:	4798      	blx	r3
1000c0c4:	ad04      	add	r5, sp, #16
1000c0c6:	4837      	ldr	r0, [pc, #220]	; (1000c1a4 <ble_device_init+0x264>)
1000c0c8:	4b37      	ldr	r3, [pc, #220]	; (1000c1a8 <ble_device_init+0x268>)
1000c0ca:	4798      	blx	r3
1000c0cc:	792b      	ldrb	r3, [r5, #4]
1000c0ce:	796a      	ldrb	r2, [r5, #5]
1000c0d0:	79a9      	ldrb	r1, [r5, #6]
1000c0d2:	7828      	ldrb	r0, [r5, #0]
1000c0d4:	9003      	str	r0, [sp, #12]
1000c0d6:	7868      	ldrb	r0, [r5, #1]
1000c0d8:	9002      	str	r0, [sp, #8]
1000c0da:	78a8      	ldrb	r0, [r5, #2]
1000c0dc:	9001      	str	r0, [sp, #4]
1000c0de:	78e8      	ldrb	r0, [r5, #3]
1000c0e0:	9000      	str	r0, [sp, #0]
1000c0e2:	4841      	ldr	r0, [pc, #260]	; (1000c1e8 <ble_device_init+0x2a8>)
1000c0e4:	4c32      	ldr	r4, [pc, #200]	; (1000c1b0 <ble_device_init+0x270>)
1000c0e6:	47a0      	blx	r4
1000c0e8:	ac06      	add	r4, sp, #24
1000c0ea:	230a      	movs	r3, #10
1000c0ec:	7023      	strb	r3, [r4, #0]
1000c0ee:	4b3f      	ldr	r3, [pc, #252]	; (1000c1ec <ble_device_init+0x2ac>)
1000c0f0:	8063      	strh	r3, [r4, #2]
1000c0f2:	2207      	movs	r2, #7
1000c0f4:	0029      	movs	r1, r5
1000c0f6:	a807      	add	r0, sp, #28
1000c0f8:	4b38      	ldr	r3, [pc, #224]	; (1000c1dc <ble_device_init+0x29c>)
1000c0fa:	4798      	blx	r3
1000c0fc:	2300      	movs	r3, #0
1000c0fe:	76e3      	strb	r3, [r4, #27]
1000c100:	7723      	strb	r3, [r4, #28]
1000c102:	7763      	strb	r3, [r4, #29]
1000c104:	77a3      	strb	r3, [r4, #30]
1000c106:	77e3      	strb	r3, [r4, #31]
1000c108:	8423      	strh	r3, [r4, #32]
1000c10a:	8463      	strh	r3, [r4, #34]	; 0x22
1000c10c:	2380      	movs	r3, #128	; 0x80
1000c10e:	009b      	lsls	r3, r3, #2
1000c110:	84a3      	strh	r3, [r4, #36]	; 0x24
1000c112:	0020      	movs	r0, r4
1000c114:	4b36      	ldr	r3, [pc, #216]	; (1000c1f0 <ble_device_init+0x2b0>)
1000c116:	4798      	blx	r3
1000c118:	2800      	cmp	r0, #0
1000c11a:	d005      	beq.n	1000c128 <ble_device_init+0x1e8>
1000c11c:	4821      	ldr	r0, [pc, #132]	; (1000c1a4 <ble_device_init+0x264>)
1000c11e:	4b22      	ldr	r3, [pc, #136]	; (1000c1a8 <ble_device_init+0x268>)
1000c120:	4798      	blx	r3
1000c122:	4834      	ldr	r0, [pc, #208]	; (1000c1f4 <ble_device_init+0x2b4>)
1000c124:	4b22      	ldr	r3, [pc, #136]	; (1000c1b0 <ble_device_init+0x270>)
1000c126:	4798      	blx	r3
1000c128:	0028      	movs	r0, r5
1000c12a:	4b33      	ldr	r3, [pc, #204]	; (1000c1f8 <ble_device_init+0x2b8>)
1000c12c:	4798      	blx	r3
1000c12e:	2800      	cmp	r0, #0
1000c130:	d005      	beq.n	1000c13e <ble_device_init+0x1fe>
1000c132:	481c      	ldr	r0, [pc, #112]	; (1000c1a4 <ble_device_init+0x264>)
1000c134:	4b1c      	ldr	r3, [pc, #112]	; (1000c1a8 <ble_device_init+0x268>)
1000c136:	4798      	blx	r3
1000c138:	4830      	ldr	r0, [pc, #192]	; (1000c1fc <ble_device_init+0x2bc>)
1000c13a:	4b1d      	ldr	r3, [pc, #116]	; (1000c1b0 <ble_device_init+0x270>)
1000c13c:	4798      	blx	r3
1000c13e:	b011      	add	sp, #68	; 0x44
1000c140:	bc3c      	pop	{r2, r3, r4, r5}
1000c142:	4690      	mov	r8, r2
1000c144:	4699      	mov	r9, r3
1000c146:	46a2      	mov	sl, r4
1000c148:	46ab      	mov	fp, r5
1000c14a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000c14c:	100165e8 	.word	0x100165e8
1000c150:	100165f0 	.word	0x100165f0
1000c154:	10012219 	.word	0x10012219
1000c158:	10017bc8 	.word	0x10017bc8
1000c15c:	000004e2 	.word	0x000004e2
1000c160:	10016108 	.word	0x10016108
1000c164:	100165ec 	.word	0x100165ec
1000c168:	10017c00 	.word	0x10017c00
1000c16c:	10017bf8 	.word	0x10017bf8
1000c170:	10017f34 	.word	0x10017f34
1000c174:	10015d08 	.word	0x10015d08
1000c178:	100165f8 	.word	0x100165f8
1000c17c:	10017bdc 	.word	0x10017bdc
1000c180:	10017ba0 	.word	0x10017ba0
1000c184:	10017bb4 	.word	0x10017bb4
1000c188:	10017908 	.word	0x10017908
1000c18c:	10017bfc 	.word	0x10017bfc
1000c190:	10017904 	.word	0x10017904
1000c194:	10017b8c 	.word	0x10017b8c
1000c198:	10018140 	.word	0x10018140
1000c19c:	1001791c 	.word	0x1001791c
1000c1a0:	10017b88 	.word	0x10017b88
1000c1a4:	10015020 	.word	0x10015020
1000c1a8:	10012481 	.word	0x10012481
1000c1ac:	10015680 	.word	0x10015680
1000c1b0:	10012361 	.word	0x10012361
1000c1b4:	1000e429 	.word	0x1000e429
1000c1b8:	10015694 	.word	0x10015694
1000c1bc:	100156b4 	.word	0x100156b4
1000c1c0:	100158ec 	.word	0x100158ec
1000c1c4:	1000be71 	.word	0x1000be71
1000c1c8:	100152b0 	.word	0x100152b0
1000c1cc:	100156f0 	.word	0x100156f0
1000c1d0:	1000e341 	.word	0x1000e341
1000c1d4:	100156fc 	.word	0x100156fc
1000c1d8:	10015280 	.word	0x10015280
1000c1dc:	10012207 	.word	0x10012207
1000c1e0:	1000e375 	.word	0x1000e375
1000c1e4:	10015714 	.word	0x10015714
1000c1e8:	1001572c 	.word	0x1001572c
1000c1ec:	00003a98 	.word	0x00003a98
1000c1f0:	1000e399 	.word	0x1000e399
1000c1f4:	10015764 	.word	0x10015764
1000c1f8:	1000e5dd 	.word	0x1000e5dd
1000c1fc:	10015788 	.word	0x10015788

1000c200 <ble_send_slave_sec_request>:
1000c200:	b510      	push	{r4, lr}
1000c202:	2201      	movs	r2, #1
1000c204:	2101      	movs	r1, #1
1000c206:	4b06      	ldr	r3, [pc, #24]	; (1000c220 <ble_send_slave_sec_request+0x20>)
1000c208:	4798      	blx	r3
1000c20a:	2800      	cmp	r0, #0
1000c20c:	d006      	beq.n	1000c21c <ble_send_slave_sec_request+0x1c>
1000c20e:	4805      	ldr	r0, [pc, #20]	; (1000c224 <ble_send_slave_sec_request+0x24>)
1000c210:	4b05      	ldr	r3, [pc, #20]	; (1000c228 <ble_send_slave_sec_request+0x28>)
1000c212:	4798      	blx	r3
1000c214:	4805      	ldr	r0, [pc, #20]	; (1000c22c <ble_send_slave_sec_request+0x2c>)
1000c216:	4b06      	ldr	r3, [pc, #24]	; (1000c230 <ble_send_slave_sec_request+0x30>)
1000c218:	4798      	blx	r3
1000c21a:	20e2      	movs	r0, #226	; 0xe2
1000c21c:	bd10      	pop	{r4, pc}
1000c21e:	46c0      	nop			; (mov r8, r8)
1000c220:	1000f4a9 	.word	0x1000f4a9
1000c224:	10015020 	.word	0x10015020
1000c228:	10012481 	.word	0x10012481
1000c22c:	100157c4 	.word	0x100157c4
1000c230:	10012361 	.word	0x10012361

1000c234 <ble_connected_state_handler>:
1000c234:	b5f0      	push	{r4, r5, r6, r7, lr}
1000c236:	465f      	mov	r7, fp
1000c238:	464e      	mov	r6, r9
1000c23a:	4645      	mov	r5, r8
1000c23c:	b4e0      	push	{r5, r6, r7}
1000c23e:	b09a      	sub	sp, #104	; 0x68
1000c240:	0005      	movs	r5, r0
1000c242:	7a86      	ldrb	r6, [r0, #10]
1000c244:	2e00      	cmp	r6, #0
1000c246:	d000      	beq.n	1000c24a <ble_connected_state_handler+0x16>
1000c248:	e0c6      	b.n	1000c3d8 <ble_connected_state_handler+0x1a4>
1000c24a:	4875      	ldr	r0, [pc, #468]	; (1000c420 <ble_connected_state_handler+0x1ec>)
1000c24c:	4f75      	ldr	r7, [pc, #468]	; (1000c424 <ble_connected_state_handler+0x1f0>)
1000c24e:	47b8      	blx	r7
1000c250:	792b      	ldrb	r3, [r5, #4]
1000c252:	796a      	ldrb	r2, [r5, #5]
1000c254:	79a9      	ldrb	r1, [r5, #6]
1000c256:	7868      	ldrb	r0, [r5, #1]
1000c258:	9002      	str	r0, [sp, #8]
1000c25a:	78a8      	ldrb	r0, [r5, #2]
1000c25c:	9001      	str	r0, [sp, #4]
1000c25e:	78e8      	ldrb	r0, [r5, #3]
1000c260:	9000      	str	r0, [sp, #0]
1000c262:	4871      	ldr	r0, [pc, #452]	; (1000c428 <ble_connected_state_handler+0x1f4>)
1000c264:	4c71      	ldr	r4, [pc, #452]	; (1000c42c <ble_connected_state_handler+0x1f8>)
1000c266:	47a0      	blx	r4
1000c268:	486d      	ldr	r0, [pc, #436]	; (1000c420 <ble_connected_state_handler+0x1ec>)
1000c26a:	47b8      	blx	r7
1000c26c:	8929      	ldrh	r1, [r5, #8]
1000c26e:	4870      	ldr	r0, [pc, #448]	; (1000c430 <ble_connected_state_handler+0x1fc>)
1000c270:	47a0      	blx	r4
1000c272:	2212      	movs	r2, #18
1000c274:	0029      	movs	r1, r5
1000c276:	486f      	ldr	r0, [pc, #444]	; (1000c434 <ble_connected_state_handler+0x200>)
1000c278:	4b6f      	ldr	r3, [pc, #444]	; (1000c438 <ble_connected_state_handler+0x204>)
1000c27a:	4798      	blx	r3
1000c27c:	9504      	str	r5, [sp, #16]
1000c27e:	2207      	movs	r2, #7
1000c280:	0029      	movs	r1, r5
1000c282:	486e      	ldr	r0, [pc, #440]	; (1000c43c <ble_connected_state_handler+0x208>)
1000c284:	4b6e      	ldr	r3, [pc, #440]	; (1000c440 <ble_connected_state_handler+0x20c>)
1000c286:	4798      	blx	r3
1000c288:	2800      	cmp	r0, #0
1000c28a:	d100      	bne.n	1000c28e <ble_connected_state_handler+0x5a>
1000c28c:	e0ad      	b.n	1000c3ea <ble_connected_state_handler+0x1b6>
1000c28e:	782b      	ldrb	r3, [r5, #0]
1000c290:	2b02      	cmp	r3, #2
1000c292:	d000      	beq.n	1000c296 <ble_connected_state_handler+0x62>
1000c294:	e0a9      	b.n	1000c3ea <ble_connected_state_handler+0x1b6>
1000c296:	2250      	movs	r2, #80	; 0x50
1000c298:	2100      	movs	r1, #0
1000c29a:	a806      	add	r0, sp, #24
1000c29c:	4b69      	ldr	r3, [pc, #420]	; (1000c444 <ble_connected_state_handler+0x210>)
1000c29e:	4798      	blx	r3
1000c2a0:	4f69      	ldr	r7, [pc, #420]	; (1000c448 <ble_connected_state_handler+0x214>)
1000c2a2:	2300      	movs	r3, #0
1000c2a4:	e00b      	b.n	1000c2be <ble_connected_state_handler+0x8a>
1000c2a6:	1c59      	adds	r1, r3, #1
1000c2a8:	7814      	ldrb	r4, [r2, #0]
1000c2aa:	a806      	add	r0, sp, #24
1000c2ac:	54c4      	strb	r4, [r0, r3]
1000c2ae:	3201      	adds	r2, #1
1000c2b0:	b28b      	uxth	r3, r1
1000c2b2:	42b3      	cmp	r3, r6
1000c2b4:	d1f7      	bne.n	1000c2a6 <ble_connected_state_handler+0x72>
1000c2b6:	377c      	adds	r7, #124	; 0x7c
1000c2b8:	1e33      	subs	r3, r6, #0
1000c2ba:	2b50      	cmp	r3, #80	; 0x50
1000c2bc:	d004      	beq.n	1000c2c8 <ble_connected_state_handler+0x94>
1000c2be:	001e      	movs	r6, r3
1000c2c0:	3610      	adds	r6, #16
1000c2c2:	b2b6      	uxth	r6, r6
1000c2c4:	003a      	movs	r2, r7
1000c2c6:	e7ee      	b.n	1000c2a6 <ble_connected_state_handler+0x72>
1000c2c8:	aa06      	add	r2, sp, #24
1000c2ca:	0029      	movs	r1, r5
1000c2cc:	2005      	movs	r0, #5
1000c2ce:	4b5f      	ldr	r3, [pc, #380]	; (1000c44c <ble_connected_state_handler+0x218>)
1000c2d0:	4798      	blx	r3
1000c2d2:	1e06      	subs	r6, r0, #0
1000c2d4:	d100      	bne.n	1000c2d8 <ble_connected_state_handler+0xa4>
1000c2d6:	e09c      	b.n	1000c412 <ble_connected_state_handler+0x1de>
1000c2d8:	4851      	ldr	r0, [pc, #324]	; (1000c420 <ble_connected_state_handler+0x1ec>)
1000c2da:	4b52      	ldr	r3, [pc, #328]	; (1000c424 <ble_connected_state_handler+0x1f0>)
1000c2dc:	4798      	blx	r3
1000c2de:	485c      	ldr	r0, [pc, #368]	; (1000c450 <ble_connected_state_handler+0x21c>)
1000c2e0:	4b52      	ldr	r3, [pc, #328]	; (1000c42c <ble_connected_state_handler+0x1f8>)
1000c2e2:	4798      	blx	r3
1000c2e4:	26e2      	movs	r6, #226	; 0xe2
1000c2e6:	e094      	b.n	1000c412 <ble_connected_state_handler+0x1de>
1000c2e8:	b2e7      	uxtb	r7, r4
1000c2ea:	9405      	str	r4, [sp, #20]
1000c2ec:	2207      	movs	r2, #7
1000c2ee:	9904      	ldr	r1, [sp, #16]
1000c2f0:	4648      	mov	r0, r9
1000c2f2:	47d8      	blx	fp
1000c2f4:	2800      	cmp	r0, #0
1000c2f6:	d109      	bne.n	1000c30c <ble_connected_state_handler+0xd8>
1000c2f8:	9a05      	ldr	r2, [sp, #20]
1000c2fa:	0153      	lsls	r3, r2, #5
1000c2fc:	1a9b      	subs	r3, r3, r2
1000c2fe:	009a      	lsls	r2, r3, #2
1000c300:	4b54      	ldr	r3, [pc, #336]	; (1000c454 <ble_connected_state_handler+0x220>)
1000c302:	189b      	adds	r3, r3, r2
1000c304:	335e      	adds	r3, #94	; 0x5e
1000c306:	2202      	movs	r2, #2
1000c308:	701a      	strb	r2, [r3, #0]
1000c30a:	e02b      	b.n	1000c364 <ble_connected_state_handler+0x130>
1000c30c:	3401      	adds	r4, #1
1000c30e:	237c      	movs	r3, #124	; 0x7c
1000c310:	469c      	mov	ip, r3
1000c312:	44e1      	add	r9, ip
1000c314:	2c05      	cmp	r4, #5
1000c316:	d1e7      	bne.n	1000c2e8 <ble_connected_state_handler+0xb4>
1000c318:	e072      	b.n	1000c400 <ble_connected_state_handler+0x1cc>
1000c31a:	001c      	movs	r4, r3
1000c31c:	7811      	ldrb	r1, [r2, #0]
1000c31e:	2900      	cmp	r1, #0
1000c320:	d11a      	bne.n	1000c358 <ble_connected_state_handler+0x124>
1000c322:	e001      	b.n	1000c328 <ble_connected_state_handler+0xf4>
1000c324:	2400      	movs	r4, #0
1000c326:	2700      	movs	r7, #0
1000c328:	0163      	lsls	r3, r4, #5
1000c32a:	4699      	mov	r9, r3
1000c32c:	1b18      	subs	r0, r3, r4
1000c32e:	0080      	lsls	r0, r0, #2
1000c330:	4b48      	ldr	r3, [pc, #288]	; (1000c454 <ble_connected_state_handler+0x220>)
1000c332:	4698      	mov	r8, r3
1000c334:	4440      	add	r0, r8
1000c336:	2212      	movs	r2, #18
1000c338:	0029      	movs	r1, r5
1000c33a:	4b3f      	ldr	r3, [pc, #252]	; (1000c438 <ble_connected_state_handler+0x204>)
1000c33c:	4798      	blx	r3
1000c33e:	4a46      	ldr	r2, [pc, #280]	; (1000c458 <ble_connected_state_handler+0x224>)
1000c340:	7813      	ldrb	r3, [r2, #0]
1000c342:	3301      	adds	r3, #1
1000c344:	b2db      	uxtb	r3, r3
1000c346:	7013      	strb	r3, [r2, #0]
1000c348:	464b      	mov	r3, r9
1000c34a:	1b1b      	subs	r3, r3, r4
1000c34c:	009b      	lsls	r3, r3, #2
1000c34e:	4443      	add	r3, r8
1000c350:	335e      	adds	r3, #94	; 0x5e
1000c352:	2202      	movs	r2, #2
1000c354:	701a      	strb	r2, [r3, #0]
1000c356:	e005      	b.n	1000c364 <ble_connected_state_handler+0x130>
1000c358:	1c79      	adds	r1, r7, #1
1000c35a:	b2cf      	uxtb	r7, r1
1000c35c:	3301      	adds	r3, #1
1000c35e:	327c      	adds	r2, #124	; 0x7c
1000c360:	2f05      	cmp	r7, #5
1000c362:	d1da      	bne.n	1000c31a <ble_connected_state_handler+0xe6>
1000c364:	2207      	movs	r2, #7
1000c366:	0029      	movs	r1, r5
1000c368:	4834      	ldr	r0, [pc, #208]	; (1000c43c <ble_connected_state_handler+0x208>)
1000c36a:	4b35      	ldr	r3, [pc, #212]	; (1000c440 <ble_connected_state_handler+0x20c>)
1000c36c:	4798      	blx	r3
1000c36e:	2800      	cmp	r0, #0
1000c370:	d10c      	bne.n	1000c38c <ble_connected_state_handler+0x158>
1000c372:	017b      	lsls	r3, r7, #5
1000c374:	1bdb      	subs	r3, r3, r7
1000c376:	009b      	lsls	r3, r3, #2
1000c378:	4a36      	ldr	r2, [pc, #216]	; (1000c454 <ble_connected_state_handler+0x220>)
1000c37a:	18d3      	adds	r3, r2, r3
1000c37c:	2205      	movs	r2, #5
1000c37e:	749a      	strb	r2, [r3, #18]
1000c380:	3202      	adds	r2, #2
1000c382:	2100      	movs	r1, #0
1000c384:	482d      	ldr	r0, [pc, #180]	; (1000c43c <ble_connected_state_handler+0x208>)
1000c386:	4b2f      	ldr	r3, [pc, #188]	; (1000c444 <ble_connected_state_handler+0x210>)
1000c388:	4798      	blx	r3
1000c38a:	e042      	b.n	1000c412 <ble_connected_state_handler+0x1de>
1000c38c:	4b31      	ldr	r3, [pc, #196]	; (1000c454 <ble_connected_state_handler+0x220>)
1000c38e:	4698      	mov	r8, r3
1000c390:	017c      	lsls	r4, r7, #5
1000c392:	1be3      	subs	r3, r4, r7
1000c394:	009b      	lsls	r3, r3, #2
1000c396:	4443      	add	r3, r8
1000c398:	220a      	movs	r2, #10
1000c39a:	749a      	strb	r2, [r3, #18]
1000c39c:	3a03      	subs	r2, #3
1000c39e:	2100      	movs	r1, #0
1000c3a0:	4826      	ldr	r0, [pc, #152]	; (1000c43c <ble_connected_state_handler+0x208>)
1000c3a2:	4b28      	ldr	r3, [pc, #160]	; (1000c444 <ble_connected_state_handler+0x210>)
1000c3a4:	4798      	blx	r3
1000c3a6:	1be4      	subs	r4, r4, r7
1000c3a8:	00a4      	lsls	r4, r4, #2
1000c3aa:	4444      	add	r4, r8
1000c3ac:	7ca3      	ldrb	r3, [r4, #18]
1000c3ae:	2b0a      	cmp	r3, #10
1000c3b0:	d12f      	bne.n	1000c412 <ble_connected_state_handler+0x1de>
1000c3b2:	e00d      	b.n	1000c3d0 <ble_connected_state_handler+0x19c>
1000c3b4:	481a      	ldr	r0, [pc, #104]	; (1000c420 <ble_connected_state_handler+0x1ec>)
1000c3b6:	4b1b      	ldr	r3, [pc, #108]	; (1000c424 <ble_connected_state_handler+0x1f0>)
1000c3b8:	4798      	blx	r3
1000c3ba:	4b27      	ldr	r3, [pc, #156]	; (1000c458 <ble_connected_state_handler+0x224>)
1000c3bc:	7819      	ldrb	r1, [r3, #0]
1000c3be:	b2c9      	uxtb	r1, r1
1000c3c0:	4826      	ldr	r0, [pc, #152]	; (1000c45c <ble_connected_state_handler+0x228>)
1000c3c2:	4b1a      	ldr	r3, [pc, #104]	; (1000c42c <ble_connected_state_handler+0x1f8>)
1000c3c4:	4798      	blx	r3
1000c3c6:	8928      	ldrh	r0, [r5, #8]
1000c3c8:	2113      	movs	r1, #19
1000c3ca:	4b25      	ldr	r3, [pc, #148]	; (1000c460 <ble_connected_state_handler+0x22c>)
1000c3cc:	4798      	blx	r3
1000c3ce:	e020      	b.n	1000c412 <ble_connected_state_handler+0x1de>
1000c3d0:	8928      	ldrh	r0, [r5, #8]
1000c3d2:	4b24      	ldr	r3, [pc, #144]	; (1000c464 <ble_connected_state_handler+0x230>)
1000c3d4:	4798      	blx	r3
1000c3d6:	e01c      	b.n	1000c412 <ble_connected_state_handler+0x1de>
1000c3d8:	4811      	ldr	r0, [pc, #68]	; (1000c420 <ble_connected_state_handler+0x1ec>)
1000c3da:	4b12      	ldr	r3, [pc, #72]	; (1000c424 <ble_connected_state_handler+0x1f0>)
1000c3dc:	4798      	blx	r3
1000c3de:	7aa9      	ldrb	r1, [r5, #10]
1000c3e0:	4821      	ldr	r0, [pc, #132]	; (1000c468 <ble_connected_state_handler+0x234>)
1000c3e2:	4b12      	ldr	r3, [pc, #72]	; (1000c42c <ble_connected_state_handler+0x1f8>)
1000c3e4:	4798      	blx	r3
1000c3e6:	2600      	movs	r6, #0
1000c3e8:	e013      	b.n	1000c412 <ble_connected_state_handler+0x1de>
1000c3ea:	4b1b      	ldr	r3, [pc, #108]	; (1000c458 <ble_connected_state_handler+0x224>)
1000c3ec:	781b      	ldrb	r3, [r3, #0]
1000c3ee:	b2db      	uxtb	r3, r3
1000c3f0:	2b04      	cmp	r3, #4
1000c3f2:	d8df      	bhi.n	1000c3b4 <ble_connected_state_handler+0x180>
1000c3f4:	4b17      	ldr	r3, [pc, #92]	; (1000c454 <ble_connected_state_handler+0x220>)
1000c3f6:	4699      	mov	r9, r3
1000c3f8:	2400      	movs	r4, #0
1000c3fa:	4b11      	ldr	r3, [pc, #68]	; (1000c440 <ble_connected_state_handler+0x20c>)
1000c3fc:	469b      	mov	fp, r3
1000c3fe:	e773      	b.n	1000c2e8 <ble_connected_state_handler+0xb4>
1000c400:	235e      	movs	r3, #94	; 0x5e
1000c402:	4a14      	ldr	r2, [pc, #80]	; (1000c454 <ble_connected_state_handler+0x220>)
1000c404:	5cd3      	ldrb	r3, [r2, r3]
1000c406:	2b00      	cmp	r3, #0
1000c408:	d08c      	beq.n	1000c324 <ble_connected_state_handler+0xf0>
1000c40a:	4a18      	ldr	r2, [pc, #96]	; (1000c46c <ble_connected_state_handler+0x238>)
1000c40c:	2301      	movs	r3, #1
1000c40e:	2701      	movs	r7, #1
1000c410:	e783      	b.n	1000c31a <ble_connected_state_handler+0xe6>
1000c412:	0030      	movs	r0, r6
1000c414:	b01a      	add	sp, #104	; 0x68
1000c416:	bc1c      	pop	{r2, r3, r4}
1000c418:	4690      	mov	r8, r2
1000c41a:	4699      	mov	r9, r3
1000c41c:	46a3      	mov	fp, r4
1000c41e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000c420:	10015020 	.word	0x10015020
1000c424:	10012481 	.word	0x10012481
1000c428:	100157e4 	.word	0x100157e4
1000c42c:	10012361 	.word	0x10012361
1000c430:	10015828 	.word	0x10015828
1000c434:	10017bc8 	.word	0x10017bc8
1000c438:	10012207 	.word	0x10012207
1000c43c:	100165f0 	.word	0x100165f0
1000c440:	100121e9 	.word	0x100121e9
1000c444:	10012219 	.word	0x10012219
1000c448:	10017962 	.word	0x10017962
1000c44c:	1000e83d 	.word	0x1000e83d
1000c450:	10015840 	.word	0x10015840
1000c454:	1001791c 	.word	0x1001791c
1000c458:	10017b88 	.word	0x10017b88
1000c45c:	10015864 	.word	0x10015864
1000c460:	1000e811 	.word	0x1000e811
1000c464:	1000c201 	.word	0x1000c201
1000c468:	100158a0 	.word	0x100158a0
1000c46c:	100179f6 	.word	0x100179f6

1000c470 <ble_resolv_rand_addr_handler>:
1000c470:	b5f0      	push	{r4, r5, r6, r7, lr}
1000c472:	4647      	mov	r7, r8
1000c474:	b480      	push	{r7}
1000c476:	7803      	ldrb	r3, [r0, #0]
1000c478:	2b00      	cmp	r3, #0
1000c47a:	d141      	bne.n	1000c500 <ble_resolv_rand_addr_handler+0x90>
1000c47c:	4d2f      	ldr	r5, [pc, #188]	; (1000c53c <ble_resolv_rand_addr_handler+0xcc>)
1000c47e:	2400      	movs	r4, #0
1000c480:	1c46      	adds	r6, r0, #1
1000c482:	4f2f      	ldr	r7, [pc, #188]	; (1000c540 <ble_resolv_rand_addr_handler+0xd0>)
1000c484:	2210      	movs	r2, #16
1000c486:	0029      	movs	r1, r5
1000c488:	0030      	movs	r0, r6
1000c48a:	47b8      	blx	r7
1000c48c:	2800      	cmp	r0, #0
1000c48e:	d03f      	beq.n	1000c510 <ble_resolv_rand_addr_handler+0xa0>
1000c490:	3401      	adds	r4, #1
1000c492:	b2e4      	uxtb	r4, r4
1000c494:	357c      	adds	r5, #124	; 0x7c
1000c496:	2c05      	cmp	r4, #5
1000c498:	d1f4      	bne.n	1000c484 <ble_resolv_rand_addr_handler+0x14>
1000c49a:	e031      	b.n	1000c500 <ble_resolv_rand_addr_handler+0x90>
1000c49c:	b2dd      	uxtb	r5, r3
1000c49e:	001c      	movs	r4, r3
1000c4a0:	7811      	ldrb	r1, [r2, #0]
1000c4a2:	2900      	cmp	r1, #0
1000c4a4:	d122      	bne.n	1000c4ec <ble_resolv_rand_addr_handler+0x7c>
1000c4a6:	e001      	b.n	1000c4ac <ble_resolv_rand_addr_handler+0x3c>
1000c4a8:	2400      	movs	r4, #0
1000c4aa:	2500      	movs	r5, #0
1000c4ac:	4b25      	ldr	r3, [pc, #148]	; (1000c544 <ble_resolv_rand_addr_handler+0xd4>)
1000c4ae:	4698      	mov	r8, r3
1000c4b0:	0166      	lsls	r6, r4, #5
1000c4b2:	1b37      	subs	r7, r6, r4
1000c4b4:	00bf      	lsls	r7, r7, #2
1000c4b6:	4447      	add	r7, r8
1000c4b8:	2212      	movs	r2, #18
1000c4ba:	4923      	ldr	r1, [pc, #140]	; (1000c548 <ble_resolv_rand_addr_handler+0xd8>)
1000c4bc:	0038      	movs	r0, r7
1000c4be:	4b23      	ldr	r3, [pc, #140]	; (1000c54c <ble_resolv_rand_addr_handler+0xdc>)
1000c4c0:	4798      	blx	r3
1000c4c2:	4a23      	ldr	r2, [pc, #140]	; (1000c550 <ble_resolv_rand_addr_handler+0xe0>)
1000c4c4:	7813      	ldrb	r3, [r2, #0]
1000c4c6:	3301      	adds	r3, #1
1000c4c8:	b2db      	uxtb	r3, r3
1000c4ca:	7013      	strb	r3, [r2, #0]
1000c4cc:	375e      	adds	r7, #94	; 0x5e
1000c4ce:	2302      	movs	r3, #2
1000c4d0:	703b      	strb	r3, [r7, #0]
1000c4d2:	1b34      	subs	r4, r6, r4
1000c4d4:	00a4      	lsls	r4, r4, #2
1000c4d6:	4444      	add	r4, r8
1000c4d8:	3308      	adds	r3, #8
1000c4da:	74a3      	strb	r3, [r4, #18]
1000c4dc:	016b      	lsls	r3, r5, #5
1000c4de:	1b5d      	subs	r5, r3, r5
1000c4e0:	00ad      	lsls	r5, r5, #2
1000c4e2:	4445      	add	r5, r8
1000c4e4:	7cab      	ldrb	r3, [r5, #18]
1000c4e6:	2b0a      	cmp	r3, #10
1000c4e8:	d123      	bne.n	1000c532 <ble_resolv_rand_addr_handler+0xc2>
1000c4ea:	e004      	b.n	1000c4f6 <ble_resolv_rand_addr_handler+0x86>
1000c4ec:	3301      	adds	r3, #1
1000c4ee:	327c      	adds	r2, #124	; 0x7c
1000c4f0:	2b05      	cmp	r3, #5
1000c4f2:	d1d3      	bne.n	1000c49c <ble_resolv_rand_addr_handler+0x2c>
1000c4f4:	e01d      	b.n	1000c532 <ble_resolv_rand_addr_handler+0xc2>
1000c4f6:	4b14      	ldr	r3, [pc, #80]	; (1000c548 <ble_resolv_rand_addr_handler+0xd8>)
1000c4f8:	8918      	ldrh	r0, [r3, #8]
1000c4fa:	4b16      	ldr	r3, [pc, #88]	; (1000c554 <ble_resolv_rand_addr_handler+0xe4>)
1000c4fc:	4798      	blx	r3
1000c4fe:	e018      	b.n	1000c532 <ble_resolv_rand_addr_handler+0xc2>
1000c500:	235e      	movs	r3, #94	; 0x5e
1000c502:	4a10      	ldr	r2, [pc, #64]	; (1000c544 <ble_resolv_rand_addr_handler+0xd4>)
1000c504:	5cd3      	ldrb	r3, [r2, r3]
1000c506:	2b00      	cmp	r3, #0
1000c508:	d0ce      	beq.n	1000c4a8 <ble_resolv_rand_addr_handler+0x38>
1000c50a:	4a13      	ldr	r2, [pc, #76]	; (1000c558 <ble_resolv_rand_addr_handler+0xe8>)
1000c50c:	2301      	movs	r3, #1
1000c50e:	e7c5      	b.n	1000c49c <ble_resolv_rand_addr_handler+0x2c>
1000c510:	480c      	ldr	r0, [pc, #48]	; (1000c544 <ble_resolv_rand_addr_handler+0xd4>)
1000c512:	0163      	lsls	r3, r4, #5
1000c514:	1b1a      	subs	r2, r3, r4
1000c516:	0092      	lsls	r2, r2, #2
1000c518:	1882      	adds	r2, r0, r2
1000c51a:	0011      	movs	r1, r2
1000c51c:	315e      	adds	r1, #94	; 0x5e
1000c51e:	2502      	movs	r5, #2
1000c520:	700d      	strb	r5, [r1, #0]
1000c522:	210a      	movs	r1, #10
1000c524:	7491      	strb	r1, [r2, #18]
1000c526:	0010      	movs	r0, r2
1000c528:	2212      	movs	r2, #18
1000c52a:	4907      	ldr	r1, [pc, #28]	; (1000c548 <ble_resolv_rand_addr_handler+0xd8>)
1000c52c:	4b07      	ldr	r3, [pc, #28]	; (1000c54c <ble_resolv_rand_addr_handler+0xdc>)
1000c52e:	4798      	blx	r3
1000c530:	e7e1      	b.n	1000c4f6 <ble_resolv_rand_addr_handler+0x86>
1000c532:	2000      	movs	r0, #0
1000c534:	bc04      	pop	{r2}
1000c536:	4690      	mov	r8, r2
1000c538:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000c53a:	46c0      	nop			; (mov r8, r8)
1000c53c:	10017962 	.word	0x10017962
1000c540:	100121e9 	.word	0x100121e9
1000c544:	1001791c 	.word	0x1001791c
1000c548:	10017bc8 	.word	0x10017bc8
1000c54c:	10012207 	.word	0x10012207
1000c550:	10017b88 	.word	0x10017b88
1000c554:	1000c201 	.word	0x1000c201
1000c558:	100179f6 	.word	0x100179f6

1000c55c <ble_event_manager>:
1000c55c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000c55e:	000d      	movs	r5, r1
1000c560:	283b      	cmp	r0, #59	; 0x3b
1000c562:	d872      	bhi.n	1000c64a <ble_event_manager+0xee>
1000c564:	0083      	lsls	r3, r0, #2
1000c566:	4a3c      	ldr	r2, [pc, #240]	; (1000c658 <ble_event_manager+0xfc>)
1000c568:	58d3      	ldr	r3, [r2, r3]
1000c56a:	469f      	mov	pc, r3
1000c56c:	0084      	lsls	r4, r0, #2
1000c56e:	2600      	movs	r6, #0
1000c570:	4f3a      	ldr	r7, [pc, #232]	; (1000c65c <ble_event_manager+0x100>)
1000c572:	59bb      	ldr	r3, [r7, r6]
1000c574:	2b00      	cmp	r3, #0
1000c576:	d004      	beq.n	1000c582 <ble_event_manager+0x26>
1000c578:	591b      	ldr	r3, [r3, r4]
1000c57a:	2b00      	cmp	r3, #0
1000c57c:	d001      	beq.n	1000c582 <ble_event_manager+0x26>
1000c57e:	0028      	movs	r0, r5
1000c580:	4798      	blx	r3
1000c582:	3604      	adds	r6, #4
1000c584:	2e14      	cmp	r6, #20
1000c586:	d1f4      	bne.n	1000c572 <ble_event_manager+0x16>
1000c588:	e065      	b.n	1000c656 <ble_event_manager+0xfa>
1000c58a:	3813      	subs	r0, #19
1000c58c:	b2c4      	uxtb	r4, r0
1000c58e:	00a4      	lsls	r4, r4, #2
1000c590:	2600      	movs	r6, #0
1000c592:	4f33      	ldr	r7, [pc, #204]	; (1000c660 <ble_event_manager+0x104>)
1000c594:	59bb      	ldr	r3, [r7, r6]
1000c596:	2b00      	cmp	r3, #0
1000c598:	d004      	beq.n	1000c5a4 <ble_event_manager+0x48>
1000c59a:	591b      	ldr	r3, [r3, r4]
1000c59c:	2b00      	cmp	r3, #0
1000c59e:	d001      	beq.n	1000c5a4 <ble_event_manager+0x48>
1000c5a0:	0028      	movs	r0, r5
1000c5a2:	4798      	blx	r3
1000c5a4:	3604      	adds	r6, #4
1000c5a6:	2e14      	cmp	r6, #20
1000c5a8:	d1f4      	bne.n	1000c594 <ble_event_manager+0x38>
1000c5aa:	e054      	b.n	1000c656 <ble_event_manager+0xfa>
1000c5ac:	381d      	subs	r0, #29
1000c5ae:	b2c4      	uxtb	r4, r0
1000c5b0:	00a4      	lsls	r4, r4, #2
1000c5b2:	2600      	movs	r6, #0
1000c5b4:	4f2b      	ldr	r7, [pc, #172]	; (1000c664 <ble_event_manager+0x108>)
1000c5b6:	59bb      	ldr	r3, [r7, r6]
1000c5b8:	2b00      	cmp	r3, #0
1000c5ba:	d004      	beq.n	1000c5c6 <ble_event_manager+0x6a>
1000c5bc:	591b      	ldr	r3, [r3, r4]
1000c5be:	2b00      	cmp	r3, #0
1000c5c0:	d001      	beq.n	1000c5c6 <ble_event_manager+0x6a>
1000c5c2:	0028      	movs	r0, r5
1000c5c4:	4798      	blx	r3
1000c5c6:	3604      	adds	r6, #4
1000c5c8:	2e14      	cmp	r6, #20
1000c5ca:	d1f4      	bne.n	1000c5b6 <ble_event_manager+0x5a>
1000c5cc:	e043      	b.n	1000c656 <ble_event_manager+0xfa>
1000c5ce:	3827      	subs	r0, #39	; 0x27
1000c5d0:	b2c0      	uxtb	r0, r0
1000c5d2:	4b25      	ldr	r3, [pc, #148]	; (1000c668 <ble_event_manager+0x10c>)
1000c5d4:	681b      	ldr	r3, [r3, #0]
1000c5d6:	2b00      	cmp	r3, #0
1000c5d8:	d03d      	beq.n	1000c656 <ble_event_manager+0xfa>
1000c5da:	0080      	lsls	r0, r0, #2
1000c5dc:	58c3      	ldr	r3, [r0, r3]
1000c5de:	2b00      	cmp	r3, #0
1000c5e0:	d039      	beq.n	1000c656 <ble_event_manager+0xfa>
1000c5e2:	0008      	movs	r0, r1
1000c5e4:	4798      	blx	r3
1000c5e6:	e036      	b.n	1000c656 <ble_event_manager+0xfa>
1000c5e8:	382d      	subs	r0, #45	; 0x2d
1000c5ea:	b2c0      	uxtb	r0, r0
1000c5ec:	4b1f      	ldr	r3, [pc, #124]	; (1000c66c <ble_event_manager+0x110>)
1000c5ee:	681b      	ldr	r3, [r3, #0]
1000c5f0:	2b00      	cmp	r3, #0
1000c5f2:	d030      	beq.n	1000c656 <ble_event_manager+0xfa>
1000c5f4:	0080      	lsls	r0, r0, #2
1000c5f6:	58c3      	ldr	r3, [r0, r3]
1000c5f8:	2b00      	cmp	r3, #0
1000c5fa:	d02c      	beq.n	1000c656 <ble_event_manager+0xfa>
1000c5fc:	0008      	movs	r0, r1
1000c5fe:	4798      	blx	r3
1000c600:	e029      	b.n	1000c656 <ble_event_manager+0xfa>
1000c602:	3836      	subs	r0, #54	; 0x36
1000c604:	b2c4      	uxtb	r4, r0
1000c606:	00a4      	lsls	r4, r4, #2
1000c608:	2600      	movs	r6, #0
1000c60a:	4f19      	ldr	r7, [pc, #100]	; (1000c670 <ble_event_manager+0x114>)
1000c60c:	59bb      	ldr	r3, [r7, r6]
1000c60e:	2b00      	cmp	r3, #0
1000c610:	d004      	beq.n	1000c61c <ble_event_manager+0xc0>
1000c612:	591b      	ldr	r3, [r3, r4]
1000c614:	2b00      	cmp	r3, #0
1000c616:	d001      	beq.n	1000c61c <ble_event_manager+0xc0>
1000c618:	0028      	movs	r0, r5
1000c61a:	4798      	blx	r3
1000c61c:	3604      	adds	r6, #4
1000c61e:	2e14      	cmp	r6, #20
1000c620:	d1f4      	bne.n	1000c60c <ble_event_manager+0xb0>
1000c622:	e018      	b.n	1000c656 <ble_event_manager+0xfa>
1000c624:	3838      	subs	r0, #56	; 0x38
1000c626:	b2c0      	uxtb	r0, r0
1000c628:	4b12      	ldr	r3, [pc, #72]	; (1000c674 <ble_event_manager+0x118>)
1000c62a:	681b      	ldr	r3, [r3, #0]
1000c62c:	2b00      	cmp	r3, #0
1000c62e:	d012      	beq.n	1000c656 <ble_event_manager+0xfa>
1000c630:	0080      	lsls	r0, r0, #2
1000c632:	58c3      	ldr	r3, [r0, r3]
1000c634:	2b00      	cmp	r3, #0
1000c636:	d00e      	beq.n	1000c656 <ble_event_manager+0xfa>
1000c638:	0008      	movs	r0, r1
1000c63a:	4798      	blx	r3
1000c63c:	e00b      	b.n	1000c656 <ble_event_manager+0xfa>
1000c63e:	4b0e      	ldr	r3, [pc, #56]	; (1000c678 <ble_event_manager+0x11c>)
1000c640:	681b      	ldr	r3, [r3, #0]
1000c642:	2b00      	cmp	r3, #0
1000c644:	d007      	beq.n	1000c656 <ble_event_manager+0xfa>
1000c646:	4798      	blx	r3
1000c648:	e005      	b.n	1000c656 <ble_event_manager+0xfa>
1000c64a:	4d0c      	ldr	r5, [pc, #48]	; (1000c67c <ble_event_manager+0x120>)
1000c64c:	0028      	movs	r0, r5
1000c64e:	4c0c      	ldr	r4, [pc, #48]	; (1000c680 <ble_event_manager+0x124>)
1000c650:	47a0      	blx	r4
1000c652:	0028      	movs	r0, r5
1000c654:	47a0      	blx	r4
1000c656:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000c658:	10015190 	.word	0x10015190
1000c65c:	10017ba0 	.word	0x10017ba0
1000c660:	10017bb4 	.word	0x10017bb4
1000c664:	10017908 	.word	0x10017908
1000c668:	10017bfc 	.word	0x10017bfc
1000c66c:	10017904 	.word	0x10017904
1000c670:	10017b8c 	.word	0x10017b8c
1000c674:	10018140 	.word	0x10018140
1000c678:	100165e8 	.word	0x100165e8
1000c67c:	10015020 	.word	0x10015020
1000c680:	10012481 	.word	0x10012481

1000c684 <ble_event_task>:
1000c684:	b570      	push	{r4, r5, r6, lr}
1000c686:	0004      	movs	r4, r0
1000c688:	4b0d      	ldr	r3, [pc, #52]	; (1000c6c0 <ble_event_task+0x3c>)
1000c68a:	781b      	ldrb	r3, [r3, #0]
1000c68c:	2b01      	cmp	r3, #1
1000c68e:	d101      	bne.n	1000c694 <ble_event_task+0x10>
1000c690:	4b0c      	ldr	r3, [pc, #48]	; (1000c6c4 <ble_event_task+0x40>)
1000c692:	4798      	blx	r3
1000c694:	0022      	movs	r2, r4
1000c696:	490c      	ldr	r1, [pc, #48]	; (1000c6c8 <ble_event_task+0x44>)
1000c698:	480c      	ldr	r0, [pc, #48]	; (1000c6cc <ble_event_task+0x48>)
1000c69a:	4b0d      	ldr	r3, [pc, #52]	; (1000c6d0 <ble_event_task+0x4c>)
1000c69c:	4798      	blx	r3
1000c69e:	0004      	movs	r4, r0
1000c6a0:	0005      	movs	r5, r0
1000c6a2:	4b07      	ldr	r3, [pc, #28]	; (1000c6c0 <ble_event_task+0x3c>)
1000c6a4:	781b      	ldrb	r3, [r3, #0]
1000c6a6:	2b01      	cmp	r3, #1
1000c6a8:	d101      	bne.n	1000c6ae <ble_event_task+0x2a>
1000c6aa:	4b0a      	ldr	r3, [pc, #40]	; (1000c6d4 <ble_event_task+0x50>)
1000c6ac:	4798      	blx	r3
1000c6ae:	2d00      	cmp	r5, #0
1000c6b0:	d104      	bne.n	1000c6bc <ble_event_task+0x38>
1000c6b2:	4b06      	ldr	r3, [pc, #24]	; (1000c6cc <ble_event_task+0x48>)
1000c6b4:	7818      	ldrb	r0, [r3, #0]
1000c6b6:	4904      	ldr	r1, [pc, #16]	; (1000c6c8 <ble_event_task+0x44>)
1000c6b8:	4b07      	ldr	r3, [pc, #28]	; (1000c6d8 <ble_event_task+0x54>)
1000c6ba:	4798      	blx	r3
1000c6bc:	0020      	movs	r0, r4
1000c6be:	bd70      	pop	{r4, r5, r6, pc}
1000c6c0:	100165f7 	.word	0x100165f7
1000c6c4:	1000d261 	.word	0x1000d261
1000c6c8:	10017f34 	.word	0x10017f34
1000c6cc:	10017bf8 	.word	0x10017bf8
1000c6d0:	1000dbd1 	.word	0x1000dbd1
1000c6d4:	1000d239 	.word	0x1000d239
1000c6d8:	1000c55d 	.word	0x1000c55d

1000c6dc <ble_advertisement_data_set>:
1000c6dc:	b5f0      	push	{r4, r5, r6, r7, lr}
1000c6de:	464f      	mov	r7, r9
1000c6e0:	b480      	push	{r7}
1000c6e2:	b090      	sub	sp, #64	; 0x40
1000c6e4:	ad08      	add	r5, sp, #32
1000c6e6:	2307      	movs	r3, #7
1000c6e8:	706b      	strb	r3, [r5, #1]
1000c6ea:	4c1b      	ldr	r4, [pc, #108]	; (1000c758 <ble_advertisement_data_set+0x7c>)
1000c6ec:	2210      	movs	r2, #16
1000c6ee:	491b      	ldr	r1, [pc, #108]	; (1000c75c <ble_advertisement_data_set+0x80>)
1000c6f0:	2022      	movs	r0, #34	; 0x22
1000c6f2:	4468      	add	r0, sp
1000c6f4:	4b1a      	ldr	r3, [pc, #104]	; (1000c760 <ble_advertisement_data_set+0x84>)
1000c6f6:	4699      	mov	r9, r3
1000c6f8:	4798      	blx	r3
1000c6fa:	2611      	movs	r6, #17
1000c6fc:	702e      	strb	r6, [r5, #0]
1000c6fe:	2709      	movs	r7, #9
1000c700:	74af      	strb	r7, [r5, #18]
1000c702:	74ef      	strb	r7, [r5, #19]
1000c704:	aa0d      	add	r2, sp, #52	; 0x34
1000c706:	4b17      	ldr	r3, [pc, #92]	; (1000c764 <ble_advertisement_data_set+0x88>)
1000c708:	cb03      	ldmia	r3!, {r0, r1}
1000c70a:	c203      	stmia	r2!, {r0, r1}
1000c70c:	2315      	movs	r3, #21
1000c70e:	466a      	mov	r2, sp
1000c710:	7053      	strb	r3, [r2, #1]
1000c712:	2210      	movs	r2, #16
1000c714:	4911      	ldr	r1, [pc, #68]	; (1000c75c <ble_advertisement_data_set+0x80>)
1000c716:	466b      	mov	r3, sp
1000c718:	1c98      	adds	r0, r3, #2
1000c71a:	47c8      	blx	r9
1000c71c:	466b      	mov	r3, sp
1000c71e:	701e      	strb	r6, [r3, #0]
1000c720:	749f      	strb	r7, [r3, #18]
1000c722:	23ff      	movs	r3, #255	; 0xff
1000c724:	466a      	mov	r2, sp
1000c726:	74d3      	strb	r3, [r2, #19]
1000c728:	aa05      	add	r2, sp, #20
1000c72a:	0023      	movs	r3, r4
1000c72c:	3324      	adds	r3, #36	; 0x24
1000c72e:	cb03      	ldmia	r3!, {r0, r1}
1000c730:	c203      	stmia	r2!, {r0, r1}
1000c732:	231c      	movs	r3, #28
1000c734:	466a      	mov	r2, sp
1000c736:	211c      	movs	r1, #28
1000c738:	0028      	movs	r0, r5
1000c73a:	4c0b      	ldr	r4, [pc, #44]	; (1000c768 <ble_advertisement_data_set+0x8c>)
1000c73c:	47a0      	blx	r4
1000c73e:	2800      	cmp	r0, #0
1000c740:	d005      	beq.n	1000c74e <ble_advertisement_data_set+0x72>
1000c742:	480a      	ldr	r0, [pc, #40]	; (1000c76c <ble_advertisement_data_set+0x90>)
1000c744:	4b0a      	ldr	r3, [pc, #40]	; (1000c770 <ble_advertisement_data_set+0x94>)
1000c746:	4798      	blx	r3
1000c748:	480a      	ldr	r0, [pc, #40]	; (1000c774 <ble_advertisement_data_set+0x98>)
1000c74a:	4b0b      	ldr	r3, [pc, #44]	; (1000c778 <ble_advertisement_data_set+0x9c>)
1000c74c:	4798      	blx	r3
1000c74e:	2000      	movs	r0, #0
1000c750:	b010      	add	sp, #64	; 0x40
1000c752:	bc04      	pop	{r2}
1000c754:	4691      	mov	r9, r2
1000c756:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000c758:	10015280 	.word	0x10015280
1000c75c:	10015290 	.word	0x10015290
1000c760:	10012207 	.word	0x10012207
1000c764:	100156f0 	.word	0x100156f0
1000c768:	1000e631 	.word	0x1000e631
1000c76c:	10015020 	.word	0x10015020
1000c770:	10012481 	.word	0x10012481
1000c774:	100158c8 	.word	0x100158c8
1000c778:	10012361 	.word	0x10012361

1000c77c <register_ble_user_event_cb>:
1000c77c:	4b01      	ldr	r3, [pc, #4]	; (1000c784 <register_ble_user_event_cb+0x8>)
1000c77e:	6018      	str	r0, [r3, #0]
1000c780:	4770      	bx	lr
1000c782:	46c0      	nop			; (mov r8, r8)
1000c784:	100165e8 	.word	0x100165e8

1000c788 <csc_serv_init>:
1000c788:	b5f0      	push	{r4, r5, r6, r7, lr}
1000c78a:	464f      	mov	r7, r9
1000c78c:	4646      	mov	r6, r8
1000c78e:	b4c0      	push	{r6, r7}
1000c790:	b083      	sub	sp, #12
1000c792:	4681      	mov	r9, r0
1000c794:	000e      	movs	r6, r1
1000c796:	4c17      	ldr	r4, [pc, #92]	; (1000c7f4 <csc_serv_init+0x6c>)
1000c798:	2302      	movs	r3, #2
1000c79a:	4698      	mov	r8, r3
1000c79c:	7023      	strb	r3, [r4, #0]
1000c79e:	1c60      	adds	r0, r4, #1
1000c7a0:	4d15      	ldr	r5, [pc, #84]	; (1000c7f8 <csc_serv_init+0x70>)
1000c7a2:	2210      	movs	r2, #16
1000c7a4:	0029      	movs	r1, r5
1000c7a6:	4f15      	ldr	r7, [pc, #84]	; (1000c7fc <csc_serv_init+0x74>)
1000c7a8:	47b8      	blx	r7
1000c7aa:	2300      	movs	r3, #0
1000c7ac:	8263      	strh	r3, [r4, #18]
1000c7ae:	4643      	mov	r3, r8
1000c7b0:	75a3      	strb	r3, [r4, #22]
1000c7b2:	0020      	movs	r0, r4
1000c7b4:	3017      	adds	r0, #23
1000c7b6:	0029      	movs	r1, r5
1000c7b8:	3114      	adds	r1, #20
1000c7ba:	2210      	movs	r2, #16
1000c7bc:	47b8      	blx	r7
1000c7be:	2310      	movs	r3, #16
1000c7c0:	8523      	strh	r3, [r4, #40]	; 0x28
1000c7c2:	464b      	mov	r3, r9
1000c7c4:	62e3      	str	r3, [r4, #44]	; 0x2c
1000c7c6:	8626      	strh	r6, [r4, #48]	; 0x30
1000c7c8:	8666      	strh	r6, [r4, #50]	; 0x32
1000c7ca:	2222      	movs	r2, #34	; 0x22
1000c7cc:	2334      	movs	r3, #52	; 0x34
1000c7ce:	54e2      	strb	r2, [r4, r3]
1000c7d0:	0021      	movs	r1, r4
1000c7d2:	3112      	adds	r1, #18
1000c7d4:	3b33      	subs	r3, #51	; 0x33
1000c7d6:	9301      	str	r3, [sp, #4]
1000c7d8:	0023      	movs	r3, r4
1000c7da:	3314      	adds	r3, #20
1000c7dc:	9300      	str	r3, [sp, #0]
1000c7de:	2300      	movs	r3, #0
1000c7e0:	2200      	movs	r2, #0
1000c7e2:	0020      	movs	r0, r4
1000c7e4:	4c06      	ldr	r4, [pc, #24]	; (1000c800 <csc_serv_init+0x78>)
1000c7e6:	47a0      	blx	r4
1000c7e8:	b003      	add	sp, #12
1000c7ea:	bc0c      	pop	{r2, r3}
1000c7ec:	4690      	mov	r8, r2
1000c7ee:	4699      	mov	r9, r3
1000c7f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000c7f2:	46c0      	nop			; (mov r8, r8)
1000c7f4:	10018144 	.word	0x10018144
1000c7f8:	10015938 	.word	0x10015938
1000c7fc:	10012207 	.word	0x10012207
1000c800:	1000f061 	.word	0x1000f061

1000c804 <csc_serv_send_data>:
1000c804:	b5f0      	push	{r4, r5, r6, r7, lr}
1000c806:	b083      	sub	sp, #12
1000c808:	0007      	movs	r7, r0
1000c80a:	000d      	movs	r5, r1
1000c80c:	0016      	movs	r6, r2
1000c80e:	466b      	mov	r3, sp
1000c810:	1d99      	adds	r1, r3, #6
1000c812:	2300      	movs	r3, #0
1000c814:	800b      	strh	r3, [r1, #0]
1000c816:	aa01      	add	r2, sp, #4
1000c818:	3302      	adds	r3, #2
1000c81a:	8013      	strh	r3, [r2, #0]
1000c81c:	3348      	adds	r3, #72	; 0x48
1000c81e:	481a      	ldr	r0, [pc, #104]	; (1000c888 <csc_serv_send_data+0x84>)
1000c820:	5ac0      	ldrh	r0, [r0, r3]
1000c822:	4b1a      	ldr	r3, [pc, #104]	; (1000c88c <csc_serv_send_data+0x88>)
1000c824:	4798      	blx	r3
1000c826:	1e04      	subs	r4, r0, #0
1000c828:	d007      	beq.n	1000c83a <csc_serv_send_data+0x36>
1000c82a:	4819      	ldr	r0, [pc, #100]	; (1000c890 <csc_serv_send_data+0x8c>)
1000c82c:	4b19      	ldr	r3, [pc, #100]	; (1000c894 <csc_serv_send_data+0x90>)
1000c82e:	4798      	blx	r3
1000c830:	4819      	ldr	r0, [pc, #100]	; (1000c898 <csc_serv_send_data+0x94>)
1000c832:	4b1a      	ldr	r3, [pc, #104]	; (1000c89c <csc_serv_send_data+0x98>)
1000c834:	4798      	blx	r3
1000c836:	0020      	movs	r0, r4
1000c838:	e023      	b.n	1000c882 <csc_serv_send_data+0x7e>
1000c83a:	466b      	mov	r3, sp
1000c83c:	3306      	adds	r3, #6
1000c83e:	881b      	ldrh	r3, [r3, #0]
1000c840:	2000      	movs	r0, #0
1000c842:	2b01      	cmp	r3, #1
1000c844:	d11d      	bne.n	1000c882 <csc_serv_send_data+0x7e>
1000c846:	4b10      	ldr	r3, [pc, #64]	; (1000c888 <csc_serv_send_data+0x84>)
1000c848:	8a98      	ldrh	r0, [r3, #20]
1000c84a:	0032      	movs	r2, r6
1000c84c:	0029      	movs	r1, r5
1000c84e:	4b14      	ldr	r3, [pc, #80]	; (1000c8a0 <csc_serv_send_data+0x9c>)
1000c850:	4798      	blx	r3
1000c852:	1e04      	subs	r4, r0, #0
1000c854:	d007      	beq.n	1000c866 <csc_serv_send_data+0x62>
1000c856:	480e      	ldr	r0, [pc, #56]	; (1000c890 <csc_serv_send_data+0x8c>)
1000c858:	4b0e      	ldr	r3, [pc, #56]	; (1000c894 <csc_serv_send_data+0x90>)
1000c85a:	4798      	blx	r3
1000c85c:	4811      	ldr	r0, [pc, #68]	; (1000c8a4 <csc_serv_send_data+0xa0>)
1000c85e:	4b0f      	ldr	r3, [pc, #60]	; (1000c89c <csc_serv_send_data+0x98>)
1000c860:	4798      	blx	r3
1000c862:	0020      	movs	r0, r4
1000c864:	e00d      	b.n	1000c882 <csc_serv_send_data+0x7e>
1000c866:	4b08      	ldr	r3, [pc, #32]	; (1000c888 <csc_serv_send_data+0x84>)
1000c868:	8a99      	ldrh	r1, [r3, #20]
1000c86a:	0038      	movs	r0, r7
1000c86c:	4b0e      	ldr	r3, [pc, #56]	; (1000c8a8 <csc_serv_send_data+0xa4>)
1000c86e:	4798      	blx	r3
1000c870:	1e04      	subs	r4, r0, #0
1000c872:	d006      	beq.n	1000c882 <csc_serv_send_data+0x7e>
1000c874:	4806      	ldr	r0, [pc, #24]	; (1000c890 <csc_serv_send_data+0x8c>)
1000c876:	4b07      	ldr	r3, [pc, #28]	; (1000c894 <csc_serv_send_data+0x90>)
1000c878:	4798      	blx	r3
1000c87a:	480c      	ldr	r0, [pc, #48]	; (1000c8ac <csc_serv_send_data+0xa8>)
1000c87c:	4b07      	ldr	r3, [pc, #28]	; (1000c89c <csc_serv_send_data+0x98>)
1000c87e:	4798      	blx	r3
1000c880:	0020      	movs	r0, r4
1000c882:	b003      	add	sp, #12
1000c884:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000c886:	46c0      	nop			; (mov r8, r8)
1000c888:	10018144 	.word	0x10018144
1000c88c:	1000f0bd 	.word	0x1000f0bd
1000c890:	10015020 	.word	0x10015020
1000c894:	10012481 	.word	0x10012481
1000c898:	10015960 	.word	0x10015960
1000c89c:	10012361 	.word	0x10012361
1000c8a0:	1000f081 	.word	0x1000f081
1000c8a4:	10015994 	.word	0x10015994
1000c8a8:	1000f221 	.word	0x1000f221
1000c8ac:	100159c8 	.word	0x100159c8

1000c8b0 <uart_read_complete_callback>:
1000c8b0:	b510      	push	{r4, lr}
1000c8b2:	4b0e      	ldr	r3, [pc, #56]	; (1000c8ec <uart_read_complete_callback+0x3c>)
1000c8b4:	781b      	ldrb	r3, [r3, #0]
1000c8b6:	2b01      	cmp	r3, #1
1000c8b8:	d10b      	bne.n	1000c8d2 <uart_read_complete_callback+0x22>
1000c8ba:	2202      	movs	r2, #2
1000c8bc:	4b0b      	ldr	r3, [pc, #44]	; (1000c8ec <uart_read_complete_callback+0x3c>)
1000c8be:	701a      	strb	r2, [r3, #0]
1000c8c0:	4b0b      	ldr	r3, [pc, #44]	; (1000c8f0 <uart_read_complete_callback+0x40>)
1000c8c2:	681b      	ldr	r3, [r3, #0]
1000c8c4:	2b00      	cmp	r3, #0
1000c8c6:	d110      	bne.n	1000c8ea <uart_read_complete_callback+0x3a>
1000c8c8:	2102      	movs	r1, #2
1000c8ca:	480a      	ldr	r0, [pc, #40]	; (1000c8f4 <uart_read_complete_callback+0x44>)
1000c8cc:	4b0a      	ldr	r3, [pc, #40]	; (1000c8f8 <uart_read_complete_callback+0x48>)
1000c8ce:	4798      	blx	r3
1000c8d0:	e00b      	b.n	1000c8ea <uart_read_complete_callback+0x3a>
1000c8d2:	4b07      	ldr	r3, [pc, #28]	; (1000c8f0 <uart_read_complete_callback+0x40>)
1000c8d4:	681b      	ldr	r3, [r3, #0]
1000c8d6:	2b00      	cmp	r3, #0
1000c8d8:	d007      	beq.n	1000c8ea <uart_read_complete_callback+0x3a>
1000c8da:	4c08      	ldr	r4, [pc, #32]	; (1000c8fc <uart_read_complete_callback+0x4c>)
1000c8dc:	7820      	ldrb	r0, [r4, #0]
1000c8de:	4798      	blx	r3
1000c8e0:	2201      	movs	r2, #1
1000c8e2:	0021      	movs	r1, r4
1000c8e4:	4803      	ldr	r0, [pc, #12]	; (1000c8f4 <uart_read_complete_callback+0x44>)
1000c8e6:	4b06      	ldr	r3, [pc, #24]	; (1000c900 <uart_read_complete_callback+0x50>)
1000c8e8:	4798      	blx	r3
1000c8ea:	bd10      	pop	{r4, pc}
1000c8ec:	100175fc 	.word	0x100175fc
1000c8f0:	10017604 	.word	0x10017604
1000c8f4:	10018194 	.word	0x10018194
1000c8f8:	1000b175 	.word	0x1000b175
1000c8fc:	10017600 	.word	0x10017600
1000c900:	1000b119 	.word	0x1000b119

1000c904 <usart_serial_getchar>:
1000c904:	b570      	push	{r4, r5, r6, lr}
1000c906:	0006      	movs	r6, r0
1000c908:	000d      	movs	r5, r1
1000c90a:	4c03      	ldr	r4, [pc, #12]	; (1000c918 <usart_serial_getchar+0x14>)
1000c90c:	0029      	movs	r1, r5
1000c90e:	0030      	movs	r0, r6
1000c910:	47a0      	blx	r4
1000c912:	2800      	cmp	r0, #0
1000c914:	d1fa      	bne.n	1000c90c <usart_serial_getchar+0x8>
1000c916:	bd70      	pop	{r4, r5, r6, pc}
1000c918:	1000b105 	.word	0x1000b105

1000c91c <usart_serial_putchar>:
1000c91c:	b570      	push	{r4, r5, r6, lr}
1000c91e:	0006      	movs	r6, r0
1000c920:	000d      	movs	r5, r1
1000c922:	4c03      	ldr	r4, [pc, #12]	; (1000c930 <usart_serial_putchar+0x14>)
1000c924:	0029      	movs	r1, r5
1000c926:	0030      	movs	r0, r6
1000c928:	47a0      	blx	r4
1000c92a:	2800      	cmp	r0, #0
1000c92c:	d1fa      	bne.n	1000c924 <usart_serial_putchar+0x8>
1000c92e:	bd70      	pop	{r4, r5, r6, pc}
1000c930:	1000b0f5 	.word	0x1000b0f5

1000c934 <serial_console_init>:
1000c934:	b570      	push	{r4, r5, r6, lr}
1000c936:	2100      	movs	r1, #0
1000c938:	2000      	movs	r0, #0
1000c93a:	4b19      	ldr	r3, [pc, #100]	; (1000c9a0 <serial_console_init+0x6c>)
1000c93c:	4798      	blx	r3
1000c93e:	4c19      	ldr	r4, [pc, #100]	; (1000c9a4 <serial_console_init+0x70>)
1000c940:	0020      	movs	r0, r4
1000c942:	4b19      	ldr	r3, [pc, #100]	; (1000c9a8 <serial_console_init+0x74>)
1000c944:	4798      	blx	r3
1000c946:	23e1      	movs	r3, #225	; 0xe1
1000c948:	025b      	lsls	r3, r3, #9
1000c94a:	6023      	str	r3, [r4, #0]
1000c94c:	2302      	movs	r3, #2
1000c94e:	60a3      	str	r3, [r4, #8]
1000c950:	2203      	movs	r2, #3
1000c952:	60e2      	str	r2, [r4, #12]
1000c954:	3201      	adds	r2, #1
1000c956:	6122      	str	r2, [r4, #16]
1000c958:	3201      	adds	r2, #1
1000c95a:	6162      	str	r2, [r4, #20]
1000c95c:	61a3      	str	r3, [r4, #24]
1000c95e:	61e3      	str	r3, [r4, #28]
1000c960:	6223      	str	r3, [r4, #32]
1000c962:	6263      	str	r3, [r4, #36]	; 0x24
1000c964:	4d11      	ldr	r5, [pc, #68]	; (1000c9ac <serial_console_init+0x78>)
1000c966:	4b12      	ldr	r3, [pc, #72]	; (1000c9b0 <serial_console_init+0x7c>)
1000c968:	601d      	str	r5, [r3, #0]
1000c96a:	4a12      	ldr	r2, [pc, #72]	; (1000c9b4 <serial_console_init+0x80>)
1000c96c:	4b12      	ldr	r3, [pc, #72]	; (1000c9b8 <serial_console_init+0x84>)
1000c96e:	601a      	str	r2, [r3, #0]
1000c970:	4a12      	ldr	r2, [pc, #72]	; (1000c9bc <serial_console_init+0x88>)
1000c972:	4b13      	ldr	r3, [pc, #76]	; (1000c9c0 <serial_console_init+0x8c>)
1000c974:	601a      	str	r2, [r3, #0]
1000c976:	0022      	movs	r2, r4
1000c978:	4912      	ldr	r1, [pc, #72]	; (1000c9c4 <serial_console_init+0x90>)
1000c97a:	0028      	movs	r0, r5
1000c97c:	4b12      	ldr	r3, [pc, #72]	; (1000c9c8 <serial_console_init+0x94>)
1000c97e:	4798      	blx	r3
1000c980:	4e12      	ldr	r6, [pc, #72]	; (1000c9cc <serial_console_init+0x98>)
1000c982:	6833      	ldr	r3, [r6, #0]
1000c984:	6898      	ldr	r0, [r3, #8]
1000c986:	2100      	movs	r1, #0
1000c988:	4c11      	ldr	r4, [pc, #68]	; (1000c9d0 <serial_console_init+0x9c>)
1000c98a:	47a0      	blx	r4
1000c98c:	6833      	ldr	r3, [r6, #0]
1000c98e:	6858      	ldr	r0, [r3, #4]
1000c990:	2100      	movs	r1, #0
1000c992:	47a0      	blx	r4
1000c994:	2202      	movs	r2, #2
1000c996:	490f      	ldr	r1, [pc, #60]	; (1000c9d4 <serial_console_init+0xa0>)
1000c998:	0028      	movs	r0, r5
1000c99a:	4b0f      	ldr	r3, [pc, #60]	; (1000c9d8 <serial_console_init+0xa4>)
1000c99c:	4798      	blx	r3
1000c99e:	bd70      	pop	{r4, r5, r6, pc}
1000c9a0:	1000a115 	.word	0x1000a115
1000c9a4:	100181b8 	.word	0x100181b8
1000c9a8:	1000af0d 	.word	0x1000af0d
1000c9ac:	10018194 	.word	0x10018194
1000c9b0:	1001789c 	.word	0x1001789c
1000c9b4:	1000c91d 	.word	0x1000c91d
1000c9b8:	10017898 	.word	0x10017898
1000c9bc:	1000c905 	.word	0x1000c905
1000c9c0:	10017894 	.word	0x10017894
1000c9c4:	40004000 	.word	0x40004000
1000c9c8:	1000af39 	.word	0x1000af39
1000c9cc:	10015cd4 	.word	0x10015cd4
1000c9d0:	10012531 	.word	0x10012531
1000c9d4:	1000c8b1 	.word	0x1000c8b1
1000c9d8:	1000b141 	.word	0x1000b141

1000c9dc <_time_start>:
1000c9dc:	b5f0      	push	{r4, r5, r6, r7, lr}
1000c9de:	b083      	sub	sp, #12
1000c9e0:	0005      	movs	r5, r0
1000c9e2:	4c0d      	ldr	r4, [pc, #52]	; (1000ca18 <_time_start+0x3c>)
1000c9e4:	47a0      	blx	r4
1000c9e6:	47a0      	blx	r4
1000c9e8:	4f0c      	ldr	r7, [pc, #48]	; (1000ca1c <_time_start+0x40>)
1000c9ea:	47b8      	blx	r7
1000c9ec:	4e0c      	ldr	r6, [pc, #48]	; (1000ca20 <_time_start+0x44>)
1000c9ee:	4a0d      	ldr	r2, [pc, #52]	; (1000ca24 <_time_start+0x48>)
1000c9f0:	4b0d      	ldr	r3, [pc, #52]	; (1000ca28 <_time_start+0x4c>)
1000c9f2:	47b0      	blx	r6
1000c9f4:	9000      	str	r0, [sp, #0]
1000c9f6:	9101      	str	r1, [sp, #4]
1000c9f8:	20fa      	movs	r0, #250	; 0xfa
1000c9fa:	0080      	lsls	r0, r0, #2
1000c9fc:	4368      	muls	r0, r5
1000c9fe:	47b8      	blx	r7
1000ca00:	0002      	movs	r2, r0
1000ca02:	000b      	movs	r3, r1
1000ca04:	9800      	ldr	r0, [sp, #0]
1000ca06:	9901      	ldr	r1, [sp, #4]
1000ca08:	47b0      	blx	r6
1000ca0a:	4b08      	ldr	r3, [pc, #32]	; (1000ca2c <_time_start+0x50>)
1000ca0c:	4798      	blx	r3
1000ca0e:	4b08      	ldr	r3, [pc, #32]	; (1000ca30 <_time_start+0x54>)
1000ca10:	6018      	str	r0, [r3, #0]
1000ca12:	b003      	add	sp, #12
1000ca14:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000ca16:	46c0      	nop			; (mov r8, r8)
1000ca18:	1000a199 	.word	0x1000a199
1000ca1c:	10011e45 	.word	0x10011e45
1000ca20:	1001123d 	.word	0x1001123d
1000ca24:	19feaec7 	.word	0x19feaec7
1000ca28:	3f09d8ef 	.word	0x3f09d8ef
1000ca2c:	10011201 	.word	0x10011201
1000ca30:	100175f8 	.word	0x100175f8

1000ca34 <_time_done>:
1000ca34:	4b02      	ldr	r3, [pc, #8]	; (1000ca40 <_time_done+0xc>)
1000ca36:	681a      	ldr	r2, [r3, #0]
1000ca38:	1e50      	subs	r0, r2, #1
1000ca3a:	6018      	str	r0, [r3, #0]
1000ca3c:	4770      	bx	lr
1000ca3e:	46c0      	nop			; (mov r8, r8)
1000ca40:	100175f8 	.word	0x100175f8

1000ca44 <getchar_b11_timeout>:
1000ca44:	b570      	push	{r4, r5, r6, lr}
1000ca46:	0004      	movs	r4, r0
1000ca48:	2201      	movs	r2, #1
1000ca4a:	4b11      	ldr	r3, [pc, #68]	; (1000ca90 <getchar_b11_timeout+0x4c>)
1000ca4c:	701a      	strb	r2, [r3, #0]
1000ca4e:	4b11      	ldr	r3, [pc, #68]	; (1000ca94 <getchar_b11_timeout+0x50>)
1000ca50:	681b      	ldr	r3, [r3, #0]
1000ca52:	2b00      	cmp	r3, #0
1000ca54:	d103      	bne.n	1000ca5e <getchar_b11_timeout+0x1a>
1000ca56:	2102      	movs	r1, #2
1000ca58:	480f      	ldr	r0, [pc, #60]	; (1000ca98 <getchar_b11_timeout+0x54>)
1000ca5a:	4b10      	ldr	r3, [pc, #64]	; (1000ca9c <getchar_b11_timeout+0x58>)
1000ca5c:	4798      	blx	r3
1000ca5e:	0020      	movs	r0, r4
1000ca60:	4b0f      	ldr	r3, [pc, #60]	; (1000caa0 <getchar_b11_timeout+0x5c>)
1000ca62:	4798      	blx	r3
1000ca64:	490f      	ldr	r1, [pc, #60]	; (1000caa4 <getchar_b11_timeout+0x60>)
1000ca66:	2300      	movs	r3, #0
1000ca68:	700b      	strb	r3, [r1, #0]
1000ca6a:	2201      	movs	r2, #1
1000ca6c:	480a      	ldr	r0, [pc, #40]	; (1000ca98 <getchar_b11_timeout+0x54>)
1000ca6e:	4b0e      	ldr	r3, [pc, #56]	; (1000caa8 <getchar_b11_timeout+0x64>)
1000ca70:	4798      	blx	r3
1000ca72:	4c07      	ldr	r4, [pc, #28]	; (1000ca90 <getchar_b11_timeout+0x4c>)
1000ca74:	4d0d      	ldr	r5, [pc, #52]	; (1000caac <getchar_b11_timeout+0x68>)
1000ca76:	7823      	ldrb	r3, [r4, #0]
1000ca78:	2b02      	cmp	r3, #2
1000ca7a:	d002      	beq.n	1000ca82 <getchar_b11_timeout+0x3e>
1000ca7c:	47a8      	blx	r5
1000ca7e:	2800      	cmp	r0, #0
1000ca80:	d1f9      	bne.n	1000ca76 <getchar_b11_timeout+0x32>
1000ca82:	2200      	movs	r2, #0
1000ca84:	4b02      	ldr	r3, [pc, #8]	; (1000ca90 <getchar_b11_timeout+0x4c>)
1000ca86:	701a      	strb	r2, [r3, #0]
1000ca88:	4b06      	ldr	r3, [pc, #24]	; (1000caa4 <getchar_b11_timeout+0x60>)
1000ca8a:	7818      	ldrb	r0, [r3, #0]
1000ca8c:	bd70      	pop	{r4, r5, r6, pc}
1000ca8e:	46c0      	nop			; (mov r8, r8)
1000ca90:	100175fc 	.word	0x100175fc
1000ca94:	10017604 	.word	0x10017604
1000ca98:	10018194 	.word	0x10018194
1000ca9c:	1000b155 	.word	0x1000b155
1000caa0:	1000c9dd 	.word	0x1000c9dd
1000caa4:	10017600 	.word	0x10017600
1000caa8:	1000b119 	.word	0x1000b119
1000caac:	1000ca35 	.word	0x1000ca35

1000cab0 <register_uart_callback>:
1000cab0:	b510      	push	{r4, lr}
1000cab2:	4b06      	ldr	r3, [pc, #24]	; (1000cacc <register_uart_callback+0x1c>)
1000cab4:	6018      	str	r0, [r3, #0]
1000cab6:	4c06      	ldr	r4, [pc, #24]	; (1000cad0 <register_uart_callback+0x20>)
1000cab8:	2102      	movs	r1, #2
1000caba:	0020      	movs	r0, r4
1000cabc:	4b05      	ldr	r3, [pc, #20]	; (1000cad4 <register_uart_callback+0x24>)
1000cabe:	4798      	blx	r3
1000cac0:	2201      	movs	r2, #1
1000cac2:	4905      	ldr	r1, [pc, #20]	; (1000cad8 <register_uart_callback+0x28>)
1000cac4:	0020      	movs	r0, r4
1000cac6:	4b05      	ldr	r3, [pc, #20]	; (1000cadc <register_uart_callback+0x2c>)
1000cac8:	4798      	blx	r3
1000caca:	bd10      	pop	{r4, pc}
1000cacc:	10017604 	.word	0x10017604
1000cad0:	10018194 	.word	0x10018194
1000cad4:	1000b155 	.word	0x1000b155
1000cad8:	10017600 	.word	0x10017600
1000cadc:	1000b119 	.word	0x1000b119

1000cae0 <platform_event_free>:
1000cae0:	4b02      	ldr	r3, [pc, #8]	; (1000caec <platform_event_free+0xc>)
1000cae2:	681a      	ldr	r2, [r3, #0]
1000cae4:	6002      	str	r2, [r0, #0]
1000cae6:	6018      	str	r0, [r3, #0]
1000cae8:	4770      	bx	lr
1000caea:	46c0      	nop			; (mov r8, r8)
1000caec:	1001760c 	.word	0x1001760c

1000caf0 <platform_event_post>:
1000caf0:	b530      	push	{r4, r5, lr}
1000caf2:	4b0b      	ldr	r3, [pc, #44]	; (1000cb20 <platform_event_post+0x30>)
1000caf4:	681c      	ldr	r4, [r3, #0]
1000caf6:	2c00      	cmp	r4, #0
1000caf8:	d011      	beq.n	1000cb1e <platform_event_post+0x2e>
1000cafa:	6825      	ldr	r5, [r4, #0]
1000cafc:	601d      	str	r5, [r3, #0]
1000cafe:	2300      	movs	r3, #0
1000cb00:	6023      	str	r3, [r4, #0]
1000cb02:	60a1      	str	r1, [r4, #8]
1000cb04:	80e2      	strh	r2, [r4, #6]
1000cb06:	80a0      	strh	r0, [r4, #4]
1000cb08:	4b06      	ldr	r3, [pc, #24]	; (1000cb24 <platform_event_post+0x34>)
1000cb0a:	681a      	ldr	r2, [r3, #0]
1000cb0c:	2a00      	cmp	r2, #0
1000cb0e:	d102      	bne.n	1000cb16 <platform_event_post+0x26>
1000cb10:	601c      	str	r4, [r3, #0]
1000cb12:	e004      	b.n	1000cb1e <platform_event_post+0x2e>
1000cb14:	001a      	movs	r2, r3
1000cb16:	6813      	ldr	r3, [r2, #0]
1000cb18:	2b00      	cmp	r3, #0
1000cb1a:	d1fb      	bne.n	1000cb14 <platform_event_post+0x24>
1000cb1c:	6014      	str	r4, [r2, #0]
1000cb1e:	bd30      	pop	{r4, r5, pc}
1000cb20:	1001760c 	.word	0x1001760c
1000cb24:	10017608 	.word	0x10017608

1000cb28 <platform_event_get>:
1000cb28:	b5f0      	push	{r4, r5, r6, r7, lr}
1000cb2a:	4657      	mov	r7, sl
1000cb2c:	b480      	push	{r7}
1000cb2e:	b082      	sub	sp, #8
1000cb30:	4682      	mov	sl, r0
1000cb32:	9101      	str	r1, [sp, #4]
1000cb34:	0016      	movs	r6, r2
1000cb36:	4b15      	ldr	r3, [pc, #84]	; (1000cb8c <platform_event_get+0x64>)
1000cb38:	681c      	ldr	r4, [r3, #0]
1000cb3a:	2c00      	cmp	r4, #0
1000cb3c:	d108      	bne.n	1000cb50 <platform_event_get+0x28>
1000cb3e:	4d14      	ldr	r5, [pc, #80]	; (1000cb90 <platform_event_get+0x68>)
1000cb40:	001f      	movs	r7, r3
1000cb42:	2000      	movs	r0, #0
1000cb44:	47a8      	blx	r5
1000cb46:	9000      	str	r0, [sp, #0]
1000cb48:	683c      	ldr	r4, [r7, #0]
1000cb4a:	2c00      	cmp	r4, #0
1000cb4c:	d0f9      	beq.n	1000cb42 <platform_event_get+0x1a>
1000cb4e:	e001      	b.n	1000cb54 <platform_event_get+0x2c>
1000cb50:	2300      	movs	r3, #0
1000cb52:	9300      	str	r3, [sp, #0]
1000cb54:	4b0d      	ldr	r3, [pc, #52]	; (1000cb8c <platform_event_get+0x64>)
1000cb56:	6822      	ldr	r2, [r4, #0]
1000cb58:	601a      	str	r2, [r3, #0]
1000cb5a:	88a3      	ldrh	r3, [r4, #4]
1000cb5c:	4652      	mov	r2, sl
1000cb5e:	8013      	strh	r3, [r2, #0]
1000cb60:	8832      	ldrh	r2, [r6, #0]
1000cb62:	88e3      	ldrh	r3, [r4, #6]
1000cb64:	1c19      	adds	r1, r3, #0
1000cb66:	b29b      	uxth	r3, r3
1000cb68:	4293      	cmp	r3, r2
1000cb6a:	d900      	bls.n	1000cb6e <platform_event_get+0x46>
1000cb6c:	1c11      	adds	r1, r2, #0
1000cb6e:	b28a      	uxth	r2, r1
1000cb70:	8031      	strh	r1, [r6, #0]
1000cb72:	68a1      	ldr	r1, [r4, #8]
1000cb74:	9801      	ldr	r0, [sp, #4]
1000cb76:	4b07      	ldr	r3, [pc, #28]	; (1000cb94 <platform_event_get+0x6c>)
1000cb78:	4798      	blx	r3
1000cb7a:	0020      	movs	r0, r4
1000cb7c:	4b06      	ldr	r3, [pc, #24]	; (1000cb98 <platform_event_get+0x70>)
1000cb7e:	4798      	blx	r3
1000cb80:	9800      	ldr	r0, [sp, #0]
1000cb82:	b002      	add	sp, #8
1000cb84:	bc04      	pop	{r2}
1000cb86:	4692      	mov	sl, r2
1000cb88:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000cb8a:	46c0      	nop			; (mov r8, r8)
1000cb8c:	10017608 	.word	0x10017608
1000cb90:	1000cfd5 	.word	0x1000cfd5
1000cb94:	10012207 	.word	0x10012207
1000cb98:	1000cae1 	.word	0x1000cae1

1000cb9c <platform_event_init>:
1000cb9c:	b570      	push	{r4, r5, r6, lr}
1000cb9e:	2300      	movs	r3, #0
1000cba0:	4a06      	ldr	r2, [pc, #24]	; (1000cbbc <platform_event_init+0x20>)
1000cba2:	6013      	str	r3, [r2, #0]
1000cba4:	4a06      	ldr	r2, [pc, #24]	; (1000cbc0 <platform_event_init+0x24>)
1000cba6:	6013      	str	r3, [r2, #0]
1000cba8:	4c06      	ldr	r4, [pc, #24]	; (1000cbc4 <platform_event_init+0x28>)
1000cbaa:	0026      	movs	r6, r4
1000cbac:	3678      	adds	r6, #120	; 0x78
1000cbae:	4d06      	ldr	r5, [pc, #24]	; (1000cbc8 <platform_event_init+0x2c>)
1000cbb0:	0020      	movs	r0, r4
1000cbb2:	47a8      	blx	r5
1000cbb4:	340c      	adds	r4, #12
1000cbb6:	42b4      	cmp	r4, r6
1000cbb8:	d1fa      	bne.n	1000cbb0 <platform_event_init+0x14>
1000cbba:	bd70      	pop	{r4, r5, r6, pc}
1000cbbc:	1001760c 	.word	0x1001760c
1000cbc0:	10017608 	.word	0x10017608
1000cbc4:	10017610 	.word	0x10017610
1000cbc8:	1000cae1 	.word	0x1000cae1

1000cbcc <at_ke_msg_send>:
1000cbcc:	b570      	push	{r4, r5, r6, lr}
1000cbce:	0004      	movs	r4, r0
1000cbd0:	4b13      	ldr	r3, [pc, #76]	; (1000cc20 <at_ke_msg_send+0x54>)
1000cbd2:	681d      	ldr	r5, [r3, #0]
1000cbd4:	4b13      	ldr	r3, [pc, #76]	; (1000cc24 <at_ke_msg_send+0x58>)
1000cbd6:	681b      	ldr	r3, [r3, #0]
1000cbd8:	4798      	blx	r3
1000cbda:	2c0c      	cmp	r4, #12
1000cbdc:	d01f      	beq.n	1000cc1e <at_ke_msg_send+0x52>
1000cbde:	3c0c      	subs	r4, #12
1000cbe0:	88e3      	ldrh	r3, [r4, #6]
1000cbe2:	2b05      	cmp	r3, #5
1000cbe4:	d01b      	beq.n	1000cc1e <at_ke_msg_send+0x52>
1000cbe6:	07eb      	lsls	r3, r5, #31
1000cbe8:	d414      	bmi.n	1000cc14 <at_ke_msg_send+0x48>
1000cbea:	4b0f      	ldr	r3, [pc, #60]	; (1000cc28 <at_ke_msg_send+0x5c>)
1000cbec:	681b      	ldr	r3, [r3, #0]
1000cbee:	2002      	movs	r0, #2
1000cbf0:	4798      	blx	r3
1000cbf2:	4b0e      	ldr	r3, [pc, #56]	; (1000cc2c <at_ke_msg_send+0x60>)
1000cbf4:	681b      	ldr	r3, [r3, #0]
1000cbf6:	4798      	blx	r3
1000cbf8:	4c0d      	ldr	r4, [pc, #52]	; (1000cc30 <at_ke_msg_send+0x64>)
1000cbfa:	2003      	movs	r0, #3
1000cbfc:	6823      	ldr	r3, [r4, #0]
1000cbfe:	4798      	blx	r3
1000cc00:	2800      	cmp	r0, #0
1000cc02:	d1fa      	bne.n	1000cbfa <at_ke_msg_send+0x2e>
1000cc04:	4b0b      	ldr	r3, [pc, #44]	; (1000cc34 <at_ke_msg_send+0x68>)
1000cc06:	681b      	ldr	r3, [r3, #0]
1000cc08:	3002      	adds	r0, #2
1000cc0a:	4798      	blx	r3
1000cc0c:	2201      	movs	r2, #1
1000cc0e:	4b0a      	ldr	r3, [pc, #40]	; (1000cc38 <at_ke_msg_send+0x6c>)
1000cc10:	601a      	str	r2, [r3, #0]
1000cc12:	e004      	b.n	1000cc1e <at_ke_msg_send+0x52>
1000cc14:	4b09      	ldr	r3, [pc, #36]	; (1000cc3c <at_ke_msg_send+0x70>)
1000cc16:	6818      	ldr	r0, [r3, #0]
1000cc18:	4b09      	ldr	r3, [pc, #36]	; (1000cc40 <at_ke_msg_send+0x74>)
1000cc1a:	681b      	ldr	r3, [r3, #0]
1000cc1c:	4798      	blx	r3
1000cc1e:	bd70      	pop	{r4, r5, r6, pc}
1000cc20:	4000b1ec 	.word	0x4000b1ec
1000cc24:	100176b8 	.word	0x100176b8
1000cc28:	100176b0 	.word	0x100176b0
1000cc2c:	100176c0 	.word	0x100176c0
1000cc30:	1001769c 	.word	0x1001769c
1000cc34:	100176a4 	.word	0x100176a4
1000cc38:	4000b020 	.word	0x4000b020
1000cc3c:	100176a8 	.word	0x100176a8
1000cc40:	10017698 	.word	0x10017698

1000cc44 <samb11_plf_resume_callback>:
1000cc44:	b510      	push	{r4, lr}
1000cc46:	4b06      	ldr	r3, [pc, #24]	; (1000cc60 <samb11_plf_resume_callback+0x1c>)
1000cc48:	4a06      	ldr	r2, [pc, #24]	; (1000cc64 <samb11_plf_resume_callback+0x20>)
1000cc4a:	6819      	ldr	r1, [r3, #0]
1000cc4c:	6011      	str	r1, [r2, #0]
1000cc4e:	685a      	ldr	r2, [r3, #4]
1000cc50:	4b05      	ldr	r3, [pc, #20]	; (1000cc68 <samb11_plf_resume_callback+0x24>)
1000cc52:	601a      	str	r2, [r3, #0]
1000cc54:	4b05      	ldr	r3, [pc, #20]	; (1000cc6c <samb11_plf_resume_callback+0x28>)
1000cc56:	681b      	ldr	r3, [r3, #0]
1000cc58:	2b00      	cmp	r3, #0
1000cc5a:	d000      	beq.n	1000cc5e <samb11_plf_resume_callback+0x1a>
1000cc5c:	4798      	blx	r3
1000cc5e:	bd10      	pop	{r4, pc}
1000cc60:	100181e0 	.word	0x100181e0
1000cc64:	4000b00c 	.word	0x4000b00c
1000cc68:	4000b010 	.word	0x4000b010
1000cc6c:	100184bc 	.word	0x100184bc

1000cc70 <init_port_list>:
1000cc70:	b570      	push	{r4, r5, r6, lr}
1000cc72:	2232      	movs	r2, #50	; 0x32
1000cc74:	2100      	movs	r1, #0
1000cc76:	480d      	ldr	r0, [pc, #52]	; (1000ccac <init_port_list+0x3c>)
1000cc78:	4b0d      	ldr	r3, [pc, #52]	; (1000ccb0 <init_port_list+0x40>)
1000cc7a:	4798      	blx	r3
1000cc7c:	2100      	movs	r1, #0
1000cc7e:	480b      	ldr	r0, [pc, #44]	; (1000ccac <init_port_list+0x3c>)
1000cc80:	2501      	movs	r5, #1
1000cc82:	2402      	movs	r4, #2
1000cc84:	004a      	lsls	r2, r1, #1
1000cc86:	5411      	strb	r1, [r2, r0]
1000cc88:	1882      	adds	r2, r0, r2
1000cc8a:	7853      	ldrb	r3, [r2, #1]
1000cc8c:	432b      	orrs	r3, r5
1000cc8e:	b2db      	uxtb	r3, r3
1000cc90:	43a3      	bics	r3, r4
1000cc92:	7053      	strb	r3, [r2, #1]
1000cc94:	3101      	adds	r1, #1
1000cc96:	2919      	cmp	r1, #25
1000cc98:	d1f4      	bne.n	1000cc84 <init_port_list+0x14>
1000cc9a:	4b04      	ldr	r3, [pc, #16]	; (1000ccac <init_port_list+0x3c>)
1000cc9c:	785a      	ldrb	r2, [r3, #1]
1000cc9e:	3918      	subs	r1, #24
1000cca0:	438a      	bics	r2, r1
1000cca2:	705a      	strb	r2, [r3, #1]
1000cca4:	78da      	ldrb	r2, [r3, #3]
1000cca6:	438a      	bics	r2, r1
1000cca8:	70da      	strb	r2, [r3, #3]
1000ccaa:	bd70      	pop	{r4, r5, r6, pc}
1000ccac:	100181fc 	.word	0x100181fc
1000ccb0:	10012219 	.word	0x10012219

1000ccb4 <init_clock>:
1000ccb4:	4a06      	ldr	r2, [pc, #24]	; (1000ccd0 <init_clock+0x1c>)
1000ccb6:	6811      	ldr	r1, [r2, #0]
1000ccb8:	4b06      	ldr	r3, [pc, #24]	; (1000ccd4 <init_clock+0x20>)
1000ccba:	400b      	ands	r3, r1
1000ccbc:	6013      	str	r3, [r2, #0]
1000ccbe:	4a06      	ldr	r2, [pc, #24]	; (1000ccd8 <init_clock+0x24>)
1000ccc0:	6013      	str	r3, [r2, #0]
1000ccc2:	4906      	ldr	r1, [pc, #24]	; (1000ccdc <init_clock+0x28>)
1000ccc4:	6808      	ldr	r0, [r1, #0]
1000ccc6:	4b06      	ldr	r3, [pc, #24]	; (1000cce0 <init_clock+0x2c>)
1000ccc8:	4003      	ands	r3, r0
1000ccca:	600b      	str	r3, [r1, #0]
1000cccc:	6053      	str	r3, [r2, #4]
1000ccce:	4770      	bx	lr
1000ccd0:	4000b00c 	.word	0x4000b00c
1000ccd4:	fffe0fd3 	.word	0xfffe0fd3
1000ccd8:	100181e0 	.word	0x100181e0
1000ccdc:	4000b010 	.word	0x4000b010
1000cce0:	ffffe7c0 	.word	0xffffe7c0

1000cce4 <platform_driver_init>:
1000cce4:	b5f0      	push	{r4, r5, r6, r7, lr}
1000cce6:	4657      	mov	r7, sl
1000cce8:	464e      	mov	r6, r9
1000ccea:	4645      	mov	r5, r8
1000ccec:	b4e0      	push	{r5, r6, r7}
1000ccee:	4b4f      	ldr	r3, [pc, #316]	; (1000ce2c <platform_driver_init+0x148>)
1000ccf0:	781b      	ldrb	r3, [r3, #0]
1000ccf2:	2b00      	cmp	r3, #0
1000ccf4:	d004      	beq.n	1000cd00 <platform_driver_init+0x1c>
1000ccf6:	4b4d      	ldr	r3, [pc, #308]	; (1000ce2c <platform_driver_init+0x148>)
1000ccf8:	781b      	ldrb	r3, [r3, #0]
1000ccfa:	2b01      	cmp	r3, #1
1000ccfc:	d100      	bne.n	1000cd00 <platform_driver_init+0x1c>
1000ccfe:	e08c      	b.n	1000ce1a <platform_driver_init+0x136>
1000cd00:	4b4b      	ldr	r3, [pc, #300]	; (1000ce30 <platform_driver_init+0x14c>)
1000cd02:	4798      	blx	r3
1000cd04:	4b4b      	ldr	r3, [pc, #300]	; (1000ce34 <platform_driver_init+0x150>)
1000cd06:	4798      	blx	r3
1000cd08:	2300      	movs	r3, #0
1000cd0a:	4698      	mov	r8, r3
1000cd0c:	4b4a      	ldr	r3, [pc, #296]	; (1000ce38 <platform_driver_init+0x154>)
1000cd0e:	4642      	mov	r2, r8
1000cd10:	601a      	str	r2, [r3, #0]
1000cd12:	4c4a      	ldr	r4, [pc, #296]	; (1000ce3c <platform_driver_init+0x158>)
1000cd14:	2380      	movs	r3, #128	; 0x80
1000cd16:	2280      	movs	r2, #128	; 0x80
1000cd18:	0412      	lsls	r2, r2, #16
1000cd1a:	4692      	mov	sl, r2
1000cd1c:	50e2      	str	r2, [r4, r3]
1000cd1e:	2280      	movs	r2, #128	; 0x80
1000cd20:	0452      	lsls	r2, r2, #17
1000cd22:	4691      	mov	r9, r2
1000cd24:	50e2      	str	r2, [r4, r3]
1000cd26:	4d46      	ldr	r5, [pc, #280]	; (1000ce40 <platform_driver_init+0x15c>)
1000cd28:	4b46      	ldr	r3, [pc, #280]	; (1000ce44 <platform_driver_init+0x160>)
1000cd2a:	602b      	str	r3, [r5, #0]
1000cd2c:	4b46      	ldr	r3, [pc, #280]	; (1000ce48 <platform_driver_init+0x164>)
1000cd2e:	4a47      	ldr	r2, [pc, #284]	; (1000ce4c <platform_driver_init+0x168>)
1000cd30:	6013      	str	r3, [r2, #0]
1000cd32:	4947      	ldr	r1, [pc, #284]	; (1000ce50 <platform_driver_init+0x16c>)
1000cd34:	4a47      	ldr	r2, [pc, #284]	; (1000ce54 <platform_driver_init+0x170>)
1000cd36:	6011      	str	r1, [r2, #0]
1000cd38:	4a47      	ldr	r2, [pc, #284]	; (1000ce58 <platform_driver_init+0x174>)
1000cd3a:	6811      	ldr	r1, [r2, #0]
1000cd3c:	4a47      	ldr	r2, [pc, #284]	; (1000ce5c <platform_driver_init+0x178>)
1000cd3e:	6011      	str	r1, [r2, #0]
1000cd40:	4a47      	ldr	r2, [pc, #284]	; (1000ce60 <platform_driver_init+0x17c>)
1000cd42:	6811      	ldr	r1, [r2, #0]
1000cd44:	4a47      	ldr	r2, [pc, #284]	; (1000ce64 <platform_driver_init+0x180>)
1000cd46:	6011      	str	r1, [r2, #0]
1000cd48:	4947      	ldr	r1, [pc, #284]	; (1000ce68 <platform_driver_init+0x184>)
1000cd4a:	4a48      	ldr	r2, [pc, #288]	; (1000ce6c <platform_driver_init+0x188>)
1000cd4c:	6011      	str	r1, [r2, #0]
1000cd4e:	4948      	ldr	r1, [pc, #288]	; (1000ce70 <platform_driver_init+0x18c>)
1000cd50:	4a48      	ldr	r2, [pc, #288]	; (1000ce74 <platform_driver_init+0x190>)
1000cd52:	6011      	str	r1, [r2, #0]
1000cd54:	4f48      	ldr	r7, [pc, #288]	; (1000ce78 <platform_driver_init+0x194>)
1000cd56:	4a49      	ldr	r2, [pc, #292]	; (1000ce7c <platform_driver_init+0x198>)
1000cd58:	603a      	str	r2, [r7, #0]
1000cd5a:	4949      	ldr	r1, [pc, #292]	; (1000ce80 <platform_driver_init+0x19c>)
1000cd5c:	4a49      	ldr	r2, [pc, #292]	; (1000ce84 <platform_driver_init+0x1a0>)
1000cd5e:	6011      	str	r1, [r2, #0]
1000cd60:	4949      	ldr	r1, [pc, #292]	; (1000ce88 <platform_driver_init+0x1a4>)
1000cd62:	4a4a      	ldr	r2, [pc, #296]	; (1000ce8c <platform_driver_init+0x1a8>)
1000cd64:	6011      	str	r1, [r2, #0]
1000cd66:	4e4a      	ldr	r6, [pc, #296]	; (1000ce90 <platform_driver_init+0x1ac>)
1000cd68:	4a4a      	ldr	r2, [pc, #296]	; (1000ce94 <platform_driver_init+0x1b0>)
1000cd6a:	6032      	str	r2, [r6, #0]
1000cd6c:	494a      	ldr	r1, [pc, #296]	; (1000ce98 <platform_driver_init+0x1b4>)
1000cd6e:	4a4b      	ldr	r2, [pc, #300]	; (1000ce9c <platform_driver_init+0x1b8>)
1000cd70:	6011      	str	r1, [r2, #0]
1000cd72:	494b      	ldr	r1, [pc, #300]	; (1000cea0 <platform_driver_init+0x1bc>)
1000cd74:	4a4b      	ldr	r2, [pc, #300]	; (1000cea4 <platform_driver_init+0x1c0>)
1000cd76:	6011      	str	r1, [r2, #0]
1000cd78:	494b      	ldr	r1, [pc, #300]	; (1000cea8 <platform_driver_init+0x1c4>)
1000cd7a:	4a4c      	ldr	r2, [pc, #304]	; (1000ceac <platform_driver_init+0x1c8>)
1000cd7c:	6011      	str	r1, [r2, #0]
1000cd7e:	494c      	ldr	r1, [pc, #304]	; (1000ceb0 <platform_driver_init+0x1cc>)
1000cd80:	4a4c      	ldr	r2, [pc, #304]	; (1000ceb4 <platform_driver_init+0x1d0>)
1000cd82:	6011      	str	r1, [r2, #0]
1000cd84:	494c      	ldr	r1, [pc, #304]	; (1000ceb8 <platform_driver_init+0x1d4>)
1000cd86:	4a4d      	ldr	r2, [pc, #308]	; (1000cebc <platform_driver_init+0x1d8>)
1000cd88:	6011      	str	r1, [r2, #0]
1000cd8a:	2028      	movs	r0, #40	; 0x28
1000cd8c:	4798      	blx	r3
1000cd8e:	494c      	ldr	r1, [pc, #304]	; (1000cec0 <platform_driver_init+0x1dc>)
1000cd90:	2028      	movs	r0, #40	; 0x28
1000cd92:	682b      	ldr	r3, [r5, #0]
1000cd94:	4798      	blx	r3
1000cd96:	682b      	ldr	r3, [r5, #0]
1000cd98:	494a      	ldr	r1, [pc, #296]	; (1000cec4 <platform_driver_init+0x1e0>)
1000cd9a:	2027      	movs	r0, #39	; 0x27
1000cd9c:	4798      	blx	r3
1000cd9e:	4b4a      	ldr	r3, [pc, #296]	; (1000cec8 <platform_driver_init+0x1e4>)
1000cda0:	681a      	ldr	r2, [r3, #0]
1000cda2:	4b4a      	ldr	r3, [pc, #296]	; (1000cecc <platform_driver_init+0x1e8>)
1000cda4:	601a      	str	r2, [r3, #0]
1000cda6:	4a4a      	ldr	r2, [pc, #296]	; (1000ced0 <platform_driver_init+0x1ec>)
1000cda8:	4b4a      	ldr	r3, [pc, #296]	; (1000ced4 <platform_driver_init+0x1f0>)
1000cdaa:	601a      	str	r2, [r3, #0]
1000cdac:	4a4a      	ldr	r2, [pc, #296]	; (1000ced8 <platform_driver_init+0x1f4>)
1000cdae:	4b4b      	ldr	r3, [pc, #300]	; (1000cedc <platform_driver_init+0x1f8>)
1000cdb0:	601a      	str	r2, [r3, #0]
1000cdb2:	4a4b      	ldr	r2, [pc, #300]	; (1000cee0 <platform_driver_init+0x1fc>)
1000cdb4:	4b4b      	ldr	r3, [pc, #300]	; (1000cee4 <platform_driver_init+0x200>)
1000cdb6:	601a      	str	r2, [r3, #0]
1000cdb8:	4a4b      	ldr	r2, [pc, #300]	; (1000cee8 <platform_driver_init+0x204>)
1000cdba:	4b4c      	ldr	r3, [pc, #304]	; (1000ceec <platform_driver_init+0x208>)
1000cdbc:	601a      	str	r2, [r3, #0]
1000cdbe:	4a4c      	ldr	r2, [pc, #304]	; (1000cef0 <platform_driver_init+0x20c>)
1000cdc0:	4b4c      	ldr	r3, [pc, #304]	; (1000cef4 <platform_driver_init+0x210>)
1000cdc2:	601a      	str	r2, [r3, #0]
1000cdc4:	4a4c      	ldr	r2, [pc, #304]	; (1000cef8 <platform_driver_init+0x214>)
1000cdc6:	4b4d      	ldr	r3, [pc, #308]	; (1000cefc <platform_driver_init+0x218>)
1000cdc8:	601a      	str	r2, [r3, #0]
1000cdca:	4a4d      	ldr	r2, [pc, #308]	; (1000cf00 <platform_driver_init+0x21c>)
1000cdcc:	4b4d      	ldr	r3, [pc, #308]	; (1000cf04 <platform_driver_init+0x220>)
1000cdce:	601a      	str	r2, [r3, #0]
1000cdd0:	22a0      	movs	r2, #160	; 0xa0
1000cdd2:	0092      	lsls	r2, r2, #2
1000cdd4:	2100      	movs	r1, #0
1000cdd6:	484c      	ldr	r0, [pc, #304]	; (1000cf08 <platform_driver_init+0x224>)
1000cdd8:	4b4c      	ldr	r3, [pc, #304]	; (1000cf0c <platform_driver_init+0x228>)
1000cdda:	4798      	blx	r3
1000cddc:	2280      	movs	r2, #128	; 0x80
1000cdde:	0092      	lsls	r2, r2, #2
1000cde0:	4b4b      	ldr	r3, [pc, #300]	; (1000cf10 <platform_driver_init+0x22c>)
1000cde2:	801a      	strh	r2, [r3, #0]
1000cde4:	4b4b      	ldr	r3, [pc, #300]	; (1000cf14 <platform_driver_init+0x230>)
1000cde6:	4798      	blx	r3
1000cde8:	4653      	mov	r3, sl
1000cdea:	6023      	str	r3, [r4, #0]
1000cdec:	464b      	mov	r3, r9
1000cdee:	6023      	str	r3, [r4, #0]
1000cdf0:	4b49      	ldr	r3, [pc, #292]	; (1000cf18 <platform_driver_init+0x234>)
1000cdf2:	4642      	mov	r2, r8
1000cdf4:	601a      	str	r2, [r3, #0]
1000cdf6:	683b      	ldr	r3, [r7, #0]
1000cdf8:	4a48      	ldr	r2, [pc, #288]	; (1000cf1c <platform_driver_init+0x238>)
1000cdfa:	601a      	str	r2, [r3, #0]
1000cdfc:	6833      	ldr	r3, [r6, #0]
1000cdfe:	4a48      	ldr	r2, [pc, #288]	; (1000cf20 <platform_driver_init+0x23c>)
1000ce00:	601a      	str	r2, [r3, #0]
1000ce02:	2000      	movs	r0, #0
1000ce04:	4c47      	ldr	r4, [pc, #284]	; (1000cf24 <platform_driver_init+0x240>)
1000ce06:	47a0      	blx	r4
1000ce08:	2001      	movs	r0, #1
1000ce0a:	47a0      	blx	r4
1000ce0c:	2002      	movs	r0, #2
1000ce0e:	47a0      	blx	r4
1000ce10:	2201      	movs	r2, #1
1000ce12:	4b06      	ldr	r3, [pc, #24]	; (1000ce2c <platform_driver_init+0x148>)
1000ce14:	701a      	strb	r2, [r3, #0]
1000ce16:	2000      	movs	r0, #0
1000ce18:	e003      	b.n	1000ce22 <platform_driver_init+0x13e>
1000ce1a:	2201      	movs	r2, #1
1000ce1c:	4b03      	ldr	r3, [pc, #12]	; (1000ce2c <platform_driver_init+0x148>)
1000ce1e:	701a      	strb	r2, [r3, #0]
1000ce20:	2001      	movs	r0, #1
1000ce22:	bc1c      	pop	{r2, r3, r4}
1000ce24:	4690      	mov	r8, r2
1000ce26:	4699      	mov	r9, r3
1000ce28:	46a2      	mov	sl, r4
1000ce2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000ce2c:	100176a0 	.word	0x100176a0
1000ce30:	1000cc71 	.word	0x1000cc71
1000ce34:	1000ccb5 	.word	0x1000ccb5
1000ce38:	100176bc 	.word	0x100176bc
1000ce3c:	e000e100 	.word	0xe000e100
1000ce40:	100184b0 	.word	0x100184b0
1000ce44:	000007d7 	.word	0x000007d7
1000ce48:	000007bd 	.word	0x000007bd
1000ce4c:	100181ec 	.word	0x100181ec
1000ce50:	0001bc51 	.word	0x0001bc51
1000ce54:	100184b4 	.word	0x100184b4
1000ce58:	100400bc 	.word	0x100400bc
1000ce5c:	10017694 	.word	0x10017694
1000ce60:	100400b8 	.word	0x100400b8
1000ce64:	10017690 	.word	0x10017690
1000ce68:	0001b99f 	.word	0x0001b99f
1000ce6c:	100181e8 	.word	0x100181e8
1000ce70:	0001b9db 	.word	0x0001b9db
1000ce74:	100181f4 	.word	0x100181f4
1000ce78:	100184c4 	.word	0x100184c4
1000ce7c:	1004003c 	.word	0x1004003c
1000ce80:	10041fc0 	.word	0x10041fc0
1000ce84:	100181f8 	.word	0x100181f8
1000ce88:	10041fc4 	.word	0x10041fc4
1000ce8c:	100184c0 	.word	0x100184c0
1000ce90:	100184b8 	.word	0x100184b8
1000ce94:	10041fd4 	.word	0x10041fd4
1000ce98:	10041fd8 	.word	0x10041fd8
1000ce9c:	100181f0 	.word	0x100181f0
1000cea0:	0001cbe9 	.word	0x0001cbe9
1000cea4:	100176b0 	.word	0x100176b0
1000cea8:	0001cd8f 	.word	0x0001cd8f
1000ceac:	100176a4 	.word	0x100176a4
1000ceb0:	0001cea3 	.word	0x0001cea3
1000ceb4:	100176c0 	.word	0x100176c0
1000ceb8:	0001cbcf 	.word	0x0001cbcf
1000cebc:	1001769c 	.word	0x1001769c
1000cec0:	1000d359 	.word	0x1000d359
1000cec4:	1000d2ed 	.word	0x1000d2ed
1000cec8:	100400e4 	.word	0x100400e4
1000cecc:	100176b8 	.word	0x100176b8
1000ced0:	00019fe9 	.word	0x00019fe9
1000ced4:	100176c8 	.word	0x100176c8
1000ced8:	0001dbdd 	.word	0x0001dbdd
1000cedc:	10017698 	.word	0x10017698
1000cee0:	0001dc5b 	.word	0x0001dc5b
1000cee4:	100176ac 	.word	0x100176ac
1000cee8:	100405ec 	.word	0x100405ec
1000ceec:	100176a8 	.word	0x100176a8
1000cef0:	0001d5e3 	.word	0x0001d5e3
1000cef4:	100176b4 	.word	0x100176b4
1000cef8:	10040c20 	.word	0x10040c20
1000cefc:	100176cc 	.word	0x100176cc
1000cf00:	00019f09 	.word	0x00019f09
1000cf04:	1001768c 	.word	0x1001768c
1000cf08:	10018230 	.word	0x10018230
1000cf0c:	10012219 	.word	0x10012219
1000cf10:	100184c8 	.word	0x100184c8
1000cf14:	1000cb9d 	.word	0x1000cb9d
1000cf18:	100184bc 	.word	0x100184bc
1000cf1c:	1000cc45 	.word	0x1000cc45
1000cf20:	1000d3b5 	.word	0x1000d3b5
1000cf24:	1000d39d 	.word	0x1000d39d

1000cf28 <platform_register_ble_msg_handler>:
1000cf28:	4b04      	ldr	r3, [pc, #16]	; (1000cf3c <platform_register_ble_msg_handler+0x14>)
1000cf2a:	781a      	ldrb	r2, [r3, #0]
1000cf2c:	2305      	movs	r3, #5
1000cf2e:	2a01      	cmp	r2, #1
1000cf30:	d102      	bne.n	1000cf38 <platform_register_ble_msg_handler+0x10>
1000cf32:	4b03      	ldr	r3, [pc, #12]	; (1000cf40 <platform_register_ble_msg_handler+0x18>)
1000cf34:	6018      	str	r0, [r3, #0]
1000cf36:	2300      	movs	r3, #0
1000cf38:	0018      	movs	r0, r3
1000cf3a:	4770      	bx	lr
1000cf3c:	100176a0 	.word	0x100176a0
1000cf40:	100176bc 	.word	0x100176bc

1000cf44 <platform_interface_send>:
1000cf44:	b570      	push	{r4, r5, r6, lr}
1000cf46:	0004      	movs	r4, r0
1000cf48:	4b0e      	ldr	r3, [pc, #56]	; (1000cf84 <platform_interface_send+0x40>)
1000cf4a:	681b      	ldr	r3, [r3, #0]
1000cf4c:	2b00      	cmp	r3, #0
1000cf4e:	d002      	beq.n	1000cf56 <platform_interface_send+0x12>
1000cf50:	8840      	ldrh	r0, [r0, #2]
1000cf52:	4798      	blx	r3
1000cf54:	8060      	strh	r0, [r4, #2]
1000cf56:	88e3      	ldrh	r3, [r4, #6]
1000cf58:	88a2      	ldrh	r2, [r4, #4]
1000cf5a:	8861      	ldrh	r1, [r4, #2]
1000cf5c:	8820      	ldrh	r0, [r4, #0]
1000cf5e:	4d0a      	ldr	r5, [pc, #40]	; (1000cf88 <platform_interface_send+0x44>)
1000cf60:	682d      	ldr	r5, [r5, #0]
1000cf62:	47a8      	blx	r5
1000cf64:	0005      	movs	r5, r0
1000cf66:	88e2      	ldrh	r2, [r4, #6]
1000cf68:	2a00      	cmp	r2, #0
1000cf6a:	d102      	bne.n	1000cf72 <platform_interface_send+0x2e>
1000cf6c:	4b07      	ldr	r3, [pc, #28]	; (1000cf8c <platform_interface_send+0x48>)
1000cf6e:	4798      	blx	r3
1000cf70:	e006      	b.n	1000cf80 <platform_interface_send+0x3c>
1000cf72:	0021      	movs	r1, r4
1000cf74:	3108      	adds	r1, #8
1000cf76:	4b06      	ldr	r3, [pc, #24]	; (1000cf90 <platform_interface_send+0x4c>)
1000cf78:	4798      	blx	r3
1000cf7a:	0028      	movs	r0, r5
1000cf7c:	4b03      	ldr	r3, [pc, #12]	; (1000cf8c <platform_interface_send+0x48>)
1000cf7e:	4798      	blx	r3
1000cf80:	bd70      	pop	{r4, r5, r6, pc}
1000cf82:	46c0      	nop			; (mov r8, r8)
1000cf84:	10017694 	.word	0x10017694
1000cf88:	100176c8 	.word	0x100176c8
1000cf8c:	1000cbcd 	.word	0x1000cbcd
1000cf90:	10012207 	.word	0x10012207

1000cf94 <send_plf_int_msg_ind>:
1000cf94:	b570      	push	{r4, r5, r6, lr}
1000cf96:	0015      	movs	r5, r2
1000cf98:	001c      	movs	r4, r3
1000cf9a:	020a      	lsls	r2, r1, #8
1000cf9c:	4302      	orrs	r2, r0
1000cf9e:	4b0a      	ldr	r3, [pc, #40]	; (1000cfc8 <send_plf_int_msg_ind+0x34>)
1000cfa0:	681e      	ldr	r6, [r3, #0]
1000cfa2:	0023      	movs	r3, r4
1000cfa4:	2105      	movs	r1, #5
1000cfa6:	20a0      	movs	r0, #160	; 0xa0
1000cfa8:	00c0      	lsls	r0, r0, #3
1000cfaa:	47b0      	blx	r6
1000cfac:	1e06      	subs	r6, r0, #0
1000cfae:	d00a      	beq.n	1000cfc6 <send_plf_int_msg_ind+0x32>
1000cfb0:	2c00      	cmp	r4, #0
1000cfb2:	d005      	beq.n	1000cfc0 <send_plf_int_msg_ind+0x2c>
1000cfb4:	2d00      	cmp	r5, #0
1000cfb6:	d003      	beq.n	1000cfc0 <send_plf_int_msg_ind+0x2c>
1000cfb8:	0022      	movs	r2, r4
1000cfba:	0029      	movs	r1, r5
1000cfbc:	4b03      	ldr	r3, [pc, #12]	; (1000cfcc <send_plf_int_msg_ind+0x38>)
1000cfbe:	4798      	blx	r3
1000cfc0:	0030      	movs	r0, r6
1000cfc2:	4b03      	ldr	r3, [pc, #12]	; (1000cfd0 <send_plf_int_msg_ind+0x3c>)
1000cfc4:	4798      	blx	r3
1000cfc6:	bd70      	pop	{r4, r5, r6, pc}
1000cfc8:	100176c8 	.word	0x100176c8
1000cfcc:	10012207 	.word	0x10012207
1000cfd0:	1000cbcd 	.word	0x1000cbcd

1000cfd4 <platform_event_wait>:
1000cfd4:	b5f0      	push	{r4, r5, r6, r7, lr}
1000cfd6:	465f      	mov	r7, fp
1000cfd8:	4656      	mov	r6, sl
1000cfda:	464d      	mov	r5, r9
1000cfdc:	4644      	mov	r4, r8
1000cfde:	b4f0      	push	{r4, r5, r6, r7}
1000cfe0:	b087      	sub	sp, #28
1000cfe2:	1e44      	subs	r4, r0, #1
1000cfe4:	2300      	movs	r3, #0
1000cfe6:	4699      	mov	r9, r3
1000cfe8:	1ce3      	adds	r3, r4, #3
1000cfea:	d81c      	bhi.n	1000d026 <platform_event_wait+0x52>
1000cfec:	220d      	movs	r2, #13
1000cfee:	2100      	movs	r1, #0
1000cff0:	a802      	add	r0, sp, #8
1000cff2:	4b82      	ldr	r3, [pc, #520]	; (1000d1fc <platform_event_wait+0x228>)
1000cff4:	4798      	blx	r3
1000cff6:	2333      	movs	r3, #51	; 0x33
1000cff8:	aa02      	add	r2, sp, #8
1000cffa:	7013      	strb	r3, [r2, #0]
1000cffc:	3b30      	subs	r3, #48	; 0x30
1000cffe:	7053      	strb	r3, [r2, #1]
1000d000:	7093      	strb	r3, [r2, #2]
1000d002:	3302      	adds	r3, #2
1000d004:	7113      	strb	r3, [r2, #4]
1000d006:	7193      	strb	r3, [r2, #6]
1000d008:	7214      	strb	r4, [r2, #8]
1000d00a:	0a23      	lsrs	r3, r4, #8
1000d00c:	7253      	strb	r3, [r2, #9]
1000d00e:	0c23      	lsrs	r3, r4, #16
1000d010:	7293      	strb	r3, [r2, #10]
1000d012:	0e24      	lsrs	r4, r4, #24
1000d014:	72d4      	strb	r4, [r2, #11]
1000d016:	2301      	movs	r3, #1
1000d018:	7313      	strb	r3, [r2, #12]
1000d01a:	210d      	movs	r1, #13
1000d01c:	0010      	movs	r0, r2
1000d01e:	4b78      	ldr	r3, [pc, #480]	; (1000d200 <platform_event_wait+0x22c>)
1000d020:	4798      	blx	r3
1000d022:	2301      	movs	r3, #1
1000d024:	4699      	mov	r9, r3
1000d026:	2400      	movs	r4, #0
1000d028:	2500      	movs	r5, #0
1000d02a:	4f76      	ldr	r7, [pc, #472]	; (1000d204 <platform_event_wait+0x230>)
1000d02c:	4e76      	ldr	r6, [pc, #472]	; (1000d208 <platform_event_wait+0x234>)
1000d02e:	4977      	ldr	r1, [pc, #476]	; (1000d20c <platform_event_wait+0x238>)
1000d030:	6838      	ldr	r0, [r7, #0]
1000d032:	6833      	ldr	r3, [r6, #0]
1000d034:	4798      	blx	r3
1000d036:	2800      	cmp	r0, #0
1000d038:	d000      	beq.n	1000d03c <platform_event_wait+0x68>
1000d03a:	e088      	b.n	1000d14e <platform_event_wait+0x17a>
1000d03c:	4b73      	ldr	r3, [pc, #460]	; (1000d20c <platform_event_wait+0x238>)
1000d03e:	681c      	ldr	r4, [r3, #0]
1000d040:	88a3      	ldrh	r3, [r4, #4]
1000d042:	469a      	mov	sl, r3
1000d044:	23cd      	movs	r3, #205	; 0xcd
1000d046:	009b      	lsls	r3, r3, #2
1000d048:	459a      	cmp	sl, r3
1000d04a:	d100      	bne.n	1000d04e <platform_event_wait+0x7a>
1000d04c:	e0c7      	b.n	1000d1de <platform_event_wait+0x20a>
1000d04e:	8923      	ldrh	r3, [r4, #8]
1000d050:	469b      	mov	fp, r3
1000d052:	8963      	ldrh	r3, [r4, #10]
1000d054:	4698      	mov	r8, r3
1000d056:	464b      	mov	r3, r9
1000d058:	2b00      	cmp	r3, #0
1000d05a:	d011      	beq.n	1000d080 <platform_event_wait+0xac>
1000d05c:	220d      	movs	r2, #13
1000d05e:	2100      	movs	r1, #0
1000d060:	a802      	add	r0, sp, #8
1000d062:	4b66      	ldr	r3, [pc, #408]	; (1000d1fc <platform_event_wait+0x228>)
1000d064:	4798      	blx	r3
1000d066:	2333      	movs	r3, #51	; 0x33
1000d068:	aa02      	add	r2, sp, #8
1000d06a:	7013      	strb	r3, [r2, #0]
1000d06c:	3b30      	subs	r3, #48	; 0x30
1000d06e:	7053      	strb	r3, [r2, #1]
1000d070:	7093      	strb	r3, [r2, #2]
1000d072:	3302      	adds	r3, #2
1000d074:	7113      	strb	r3, [r2, #4]
1000d076:	7193      	strb	r3, [r2, #6]
1000d078:	210d      	movs	r1, #13
1000d07a:	0010      	movs	r0, r2
1000d07c:	4b60      	ldr	r3, [pc, #384]	; (1000d200 <platform_event_wait+0x22c>)
1000d07e:	4798      	blx	r3
1000d080:	23a0      	movs	r3, #160	; 0xa0
1000d082:	00db      	lsls	r3, r3, #3
1000d084:	459a      	cmp	sl, r3
1000d086:	d121      	bne.n	1000d0cc <platform_event_wait+0xf8>
1000d088:	4b61      	ldr	r3, [pc, #388]	; (1000d210 <platform_event_wait+0x23c>)
1000d08a:	881b      	ldrh	r3, [r3, #0]
1000d08c:	4443      	add	r3, r8
1000d08e:	22a0      	movs	r2, #160	; 0xa0
1000d090:	0092      	lsls	r2, r2, #2
1000d092:	4293      	cmp	r3, r2
1000d094:	dd02      	ble.n	1000d09c <platform_event_wait+0xc8>
1000d096:	3a80      	subs	r2, #128	; 0x80
1000d098:	4b5d      	ldr	r3, [pc, #372]	; (1000d210 <platform_event_wait+0x23c>)
1000d09a:	801a      	strh	r2, [r3, #0]
1000d09c:	4b5c      	ldr	r3, [pc, #368]	; (1000d210 <platform_event_wait+0x23c>)
1000d09e:	469a      	mov	sl, r3
1000d0a0:	881d      	ldrh	r5, [r3, #0]
1000d0a2:	4b5c      	ldr	r3, [pc, #368]	; (1000d214 <platform_event_wait+0x240>)
1000d0a4:	18ed      	adds	r5, r5, r3
1000d0a6:	0021      	movs	r1, r4
1000d0a8:	310c      	adds	r1, #12
1000d0aa:	4642      	mov	r2, r8
1000d0ac:	0028      	movs	r0, r5
1000d0ae:	4b5a      	ldr	r3, [pc, #360]	; (1000d218 <platform_event_wait+0x244>)
1000d0b0:	4798      	blx	r3
1000d0b2:	4642      	mov	r2, r8
1000d0b4:	0029      	movs	r1, r5
1000d0b6:	4658      	mov	r0, fp
1000d0b8:	4b58      	ldr	r3, [pc, #352]	; (1000d21c <platform_event_wait+0x248>)
1000d0ba:	4798      	blx	r3
1000d0bc:	4653      	mov	r3, sl
1000d0be:	881b      	ldrh	r3, [r3, #0]
1000d0c0:	4443      	add	r3, r8
1000d0c2:	4652      	mov	r2, sl
1000d0c4:	8013      	strh	r3, [r2, #0]
1000d0c6:	2400      	movs	r4, #0
1000d0c8:	2502      	movs	r5, #2
1000d0ca:	e03a      	b.n	1000d142 <platform_event_wait+0x16e>
1000d0cc:	4b54      	ldr	r3, [pc, #336]	; (1000d220 <platform_event_wait+0x24c>)
1000d0ce:	681b      	ldr	r3, [r3, #0]
1000d0d0:	2b00      	cmp	r3, #0
1000d0d2:	d032      	beq.n	1000d13a <platform_event_wait+0x166>
1000d0d4:	4b4d      	ldr	r3, [pc, #308]	; (1000d20c <platform_event_wait+0x238>)
1000d0d6:	681a      	ldr	r2, [r3, #0]
1000d0d8:	8893      	ldrh	r3, [r2, #4]
1000d0da:	21cd      	movs	r1, #205	; 0xcd
1000d0dc:	0089      	lsls	r1, r1, #2
1000d0de:	428b      	cmp	r3, r1
1000d0e0:	d104      	bne.n	1000d0ec <platform_event_wait+0x118>
1000d0e2:	464b      	mov	r3, r9
1000d0e4:	2401      	movs	r4, #1
1000d0e6:	2b00      	cmp	r3, #0
1000d0e8:	d02b      	beq.n	1000d142 <platform_event_wait+0x16e>
1000d0ea:	e028      	b.n	1000d13e <platform_event_wait+0x16a>
1000d0ec:	4c4d      	ldr	r4, [pc, #308]	; (1000d224 <platform_event_wait+0x250>)
1000d0ee:	4d49      	ldr	r5, [pc, #292]	; (1000d214 <platform_event_wait+0x240>)
1000d0f0:	6025      	str	r5, [r4, #0]
1000d0f2:	702b      	strb	r3, [r5, #0]
1000d0f4:	0a1b      	lsrs	r3, r3, #8
1000d0f6:	706b      	strb	r3, [r5, #1]
1000d0f8:	8910      	ldrh	r0, [r2, #8]
1000d0fa:	4b4b      	ldr	r3, [pc, #300]	; (1000d228 <platform_event_wait+0x254>)
1000d0fc:	681b      	ldr	r3, [r3, #0]
1000d0fe:	4798      	blx	r3
1000d100:	7128      	strb	r0, [r5, #4]
1000d102:	0a00      	lsrs	r0, r0, #8
1000d104:	7168      	strb	r0, [r5, #5]
1000d106:	6820      	ldr	r0, [r4, #0]
1000d108:	4b40      	ldr	r3, [pc, #256]	; (1000d20c <platform_event_wait+0x238>)
1000d10a:	681a      	ldr	r2, [r3, #0]
1000d10c:	88d2      	ldrh	r2, [r2, #6]
1000d10e:	8042      	strh	r2, [r0, #2]
1000d110:	681d      	ldr	r5, [r3, #0]
1000d112:	896b      	ldrh	r3, [r5, #10]
1000d114:	80c3      	strh	r3, [r0, #6]
1000d116:	3008      	adds	r0, #8
1000d118:	6020      	str	r0, [r4, #0]
1000d11a:	896a      	ldrh	r2, [r5, #10]
1000d11c:	2a00      	cmp	r2, #0
1000d11e:	d003      	beq.n	1000d128 <platform_event_wait+0x154>
1000d120:	0029      	movs	r1, r5
1000d122:	310c      	adds	r1, #12
1000d124:	4b3c      	ldr	r3, [pc, #240]	; (1000d218 <platform_event_wait+0x244>)
1000d126:	4798      	blx	r3
1000d128:	8969      	ldrh	r1, [r5, #10]
1000d12a:	3108      	adds	r1, #8
1000d12c:	4b3c      	ldr	r3, [pc, #240]	; (1000d220 <platform_event_wait+0x24c>)
1000d12e:	681b      	ldr	r3, [r3, #0]
1000d130:	4838      	ldr	r0, [pc, #224]	; (1000d214 <platform_event_wait+0x240>)
1000d132:	4798      	blx	r3
1000d134:	2400      	movs	r4, #0
1000d136:	2503      	movs	r5, #3
1000d138:	e003      	b.n	1000d142 <platform_event_wait+0x16e>
1000d13a:	2400      	movs	r4, #0
1000d13c:	e001      	b.n	1000d142 <platform_event_wait+0x16e>
1000d13e:	2400      	movs	r4, #0
1000d140:	25d0      	movs	r5, #208	; 0xd0
1000d142:	4b32      	ldr	r3, [pc, #200]	; (1000d20c <platform_event_wait+0x238>)
1000d144:	6818      	ldr	r0, [r3, #0]
1000d146:	4b39      	ldr	r3, [pc, #228]	; (1000d22c <platform_event_wait+0x258>)
1000d148:	681b      	ldr	r3, [r3, #0]
1000d14a:	4798      	blx	r3
1000d14c:	e000      	b.n	1000d150 <platform_event_wait+0x17c>
1000d14e:	2507      	movs	r5, #7
1000d150:	2c00      	cmp	r4, #0
1000d152:	d000      	beq.n	1000d156 <platform_event_wait+0x182>
1000d154:	e76b      	b.n	1000d02e <platform_event_wait+0x5a>
1000d156:	464b      	mov	r3, r9
1000d158:	2b00      	cmp	r3, #0
1000d15a:	d046      	beq.n	1000d1ea <platform_event_wait+0x216>
1000d15c:	4b29      	ldr	r3, [pc, #164]	; (1000d204 <platform_event_wait+0x230>)
1000d15e:	681e      	ldr	r6, [r3, #0]
1000d160:	2e00      	cmp	r6, #0
1000d162:	d104      	bne.n	1000d16e <platform_event_wait+0x19a>
1000d164:	2300      	movs	r3, #0
1000d166:	6a1c      	ldr	r4, [r3, #32]
1000d168:	2c00      	cmp	r4, #0
1000d16a:	d131      	bne.n	1000d1d0 <platform_event_wait+0x1fc>
1000d16c:	e03d      	b.n	1000d1ea <platform_event_wait+0x216>
1000d16e:	6a34      	ldr	r4, [r6, #32]
1000d170:	2314      	movs	r3, #20
1000d172:	469c      	mov	ip, r3
1000d174:	44b4      	add	ip, r6
1000d176:	4663      	mov	r3, ip
1000d178:	4660      	mov	r0, ip
1000d17a:	9300      	str	r3, [sp, #0]
1000d17c:	4b2c      	ldr	r3, [pc, #176]	; (1000d230 <platform_event_wait+0x25c>)
1000d17e:	681b      	ldr	r3, [r3, #0]
1000d180:	4798      	blx	r3
1000d182:	2c00      	cmp	r4, #0
1000d184:	d01f      	beq.n	1000d1c6 <platform_event_wait+0x1f2>
1000d186:	2700      	movs	r7, #0
1000d188:	23cd      	movs	r3, #205	; 0xcd
1000d18a:	009b      	lsls	r3, r3, #2
1000d18c:	4698      	mov	r8, r3
1000d18e:	4b27      	ldr	r3, [pc, #156]	; (1000d22c <platform_event_wait+0x258>)
1000d190:	469a      	mov	sl, r3
1000d192:	0020      	movs	r0, r4
1000d194:	6803      	ldr	r3, [r0, #0]
1000d196:	889b      	ldrh	r3, [r3, #4]
1000d198:	4543      	cmp	r3, r8
1000d19a:	d110      	bne.n	1000d1be <platform_event_wait+0x1ea>
1000d19c:	2f00      	cmp	r7, #0
1000d19e:	d006      	beq.n	1000d1ae <platform_event_wait+0x1da>
1000d1a0:	6883      	ldr	r3, [r0, #8]
1000d1a2:	60bb      	str	r3, [r7, #8]
1000d1a4:	4653      	mov	r3, sl
1000d1a6:	681b      	ldr	r3, [r3, #0]
1000d1a8:	4798      	blx	r3
1000d1aa:	68b8      	ldr	r0, [r7, #8]
1000d1ac:	e009      	b.n	1000d1c2 <platform_event_wait+0x1ee>
1000d1ae:	6883      	ldr	r3, [r0, #8]
1000d1b0:	6233      	str	r3, [r6, #32]
1000d1b2:	4b1e      	ldr	r3, [pc, #120]	; (1000d22c <platform_event_wait+0x258>)
1000d1b4:	681b      	ldr	r3, [r3, #0]
1000d1b6:	9301      	str	r3, [sp, #4]
1000d1b8:	4798      	blx	r3
1000d1ba:	6a30      	ldr	r0, [r6, #32]
1000d1bc:	e001      	b.n	1000d1c2 <platform_event_wait+0x1ee>
1000d1be:	0007      	movs	r7, r0
1000d1c0:	6880      	ldr	r0, [r0, #8]
1000d1c2:	2800      	cmp	r0, #0
1000d1c4:	d1e6      	bne.n	1000d194 <platform_event_wait+0x1c0>
1000d1c6:	4b1b      	ldr	r3, [pc, #108]	; (1000d234 <platform_event_wait+0x260>)
1000d1c8:	681b      	ldr	r3, [r3, #0]
1000d1ca:	9800      	ldr	r0, [sp, #0]
1000d1cc:	4798      	blx	r3
1000d1ce:	e00c      	b.n	1000d1ea <platform_event_wait+0x216>
1000d1d0:	2314      	movs	r3, #20
1000d1d2:	9300      	str	r3, [sp, #0]
1000d1d4:	4b16      	ldr	r3, [pc, #88]	; (1000d230 <platform_event_wait+0x25c>)
1000d1d6:	681b      	ldr	r3, [r3, #0]
1000d1d8:	2014      	movs	r0, #20
1000d1da:	4798      	blx	r3
1000d1dc:	e7d3      	b.n	1000d186 <platform_event_wait+0x1b2>
1000d1de:	4b10      	ldr	r3, [pc, #64]	; (1000d220 <platform_event_wait+0x24c>)
1000d1e0:	681b      	ldr	r3, [r3, #0]
1000d1e2:	2400      	movs	r4, #0
1000d1e4:	2b00      	cmp	r3, #0
1000d1e6:	d0ac      	beq.n	1000d142 <platform_event_wait+0x16e>
1000d1e8:	e77b      	b.n	1000d0e2 <platform_event_wait+0x10e>
1000d1ea:	0028      	movs	r0, r5
1000d1ec:	b007      	add	sp, #28
1000d1ee:	bc3c      	pop	{r2, r3, r4, r5}
1000d1f0:	4690      	mov	r8, r2
1000d1f2:	4699      	mov	r9, r3
1000d1f4:	46a2      	mov	sl, r4
1000d1f6:	46ab      	mov	fp, r5
1000d1f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000d1fa:	46c0      	nop			; (mov r8, r8)
1000d1fc:	10012219 	.word	0x10012219
1000d200:	1000cf45 	.word	0x1000cf45
1000d204:	100176cc 	.word	0x100176cc
1000d208:	100176b4 	.word	0x100176b4
1000d20c:	10017688 	.word	0x10017688
1000d210:	100184c8 	.word	0x100184c8
1000d214:	10018230 	.word	0x10018230
1000d218:	10012207 	.word	0x10012207
1000d21c:	1000caf1 	.word	0x1000caf1
1000d220:	100176bc 	.word	0x100176bc
1000d224:	100176c4 	.word	0x100176c4
1000d228:	10017690 	.word	0x10017690
1000d22c:	1001768c 	.word	0x1001768c
1000d230:	100176ac 	.word	0x100176ac
1000d234:	10017698 	.word	0x10017698

1000d238 <acquire_sleep_lock>:
1000d238:	b510      	push	{r4, lr}
1000d23a:	4b03      	ldr	r3, [pc, #12]	; (1000d248 <acquire_sleep_lock+0x10>)
1000d23c:	681b      	ldr	r3, [r3, #0]
1000d23e:	2080      	movs	r0, #128	; 0x80
1000d240:	0200      	lsls	r0, r0, #8
1000d242:	4798      	blx	r3
1000d244:	2008      	movs	r0, #8
1000d246:	bd10      	pop	{r4, pc}
1000d248:	100181e8 	.word	0x100181e8

1000d24c <release_message_lock>:
1000d24c:	b510      	push	{r4, lr}
1000d24e:	4b03      	ldr	r3, [pc, #12]	; (1000d25c <release_message_lock+0x10>)
1000d250:	681b      	ldr	r3, [r3, #0]
1000d252:	2080      	movs	r0, #128	; 0x80
1000d254:	01c0      	lsls	r0, r0, #7
1000d256:	4798      	blx	r3
1000d258:	2000      	movs	r0, #0
1000d25a:	bd10      	pop	{r4, pc}
1000d25c:	100181f4 	.word	0x100181f4

1000d260 <release_sleep_lock>:
1000d260:	b510      	push	{r4, lr}
1000d262:	4c05      	ldr	r4, [pc, #20]	; (1000d278 <release_sleep_lock+0x18>)
1000d264:	2080      	movs	r0, #128	; 0x80
1000d266:	01c0      	lsls	r0, r0, #7
1000d268:	6823      	ldr	r3, [r4, #0]
1000d26a:	4798      	blx	r3
1000d26c:	6823      	ldr	r3, [r4, #0]
1000d26e:	2080      	movs	r0, #128	; 0x80
1000d270:	0200      	lsls	r0, r0, #8
1000d272:	4798      	blx	r3
1000d274:	2000      	movs	r0, #0
1000d276:	bd10      	pop	{r4, pc}
1000d278:	100181f4 	.word	0x100181f4

1000d27c <gpio1_combined_isr_handler>:
1000d27c:	b530      	push	{r4, r5, lr}
1000d27e:	4a18      	ldr	r2, [pc, #96]	; (1000d2e0 <gpio1_combined_isr_handler+0x64>)
1000d280:	8f13      	ldrh	r3, [r2, #56]	; 0x38
1000d282:	b29b      	uxth	r3, r3
1000d284:	8d10      	ldrh	r0, [r2, #40]	; 0x28
1000d286:	2180      	movs	r1, #128	; 0x80
1000d288:	0209      	lsls	r1, r1, #8
1000d28a:	4301      	orrs	r1, r0
1000d28c:	8511      	strh	r1, [r2, #40]	; 0x28
1000d28e:	0010      	movs	r0, r2
1000d290:	4d14      	ldr	r5, [pc, #80]	; (1000d2e4 <gpio1_combined_isr_handler+0x68>)
1000d292:	2401      	movs	r4, #1
1000d294:	2200      	movs	r2, #0
1000d296:	05db      	lsls	r3, r3, #23
1000d298:	0ddb      	lsrs	r3, r3, #23
1000d29a:	d011      	beq.n	1000d2c0 <gpio1_combined_isr_handler+0x44>
1000d29c:	b2db      	uxtb	r3, r3
1000d29e:	4259      	negs	r1, r3
1000d2a0:	400b      	ands	r3, r1
1000d2a2:	2b01      	cmp	r3, #1
1000d2a4:	d006      	beq.n	1000d2b4 <gpio1_combined_isr_handler+0x38>
1000d2a6:	0011      	movs	r1, r2
1000d2a8:	085b      	lsrs	r3, r3, #1
1000d2aa:	3101      	adds	r1, #1
1000d2ac:	b2c9      	uxtb	r1, r1
1000d2ae:	2b01      	cmp	r3, #1
1000d2b0:	d1fa      	bne.n	1000d2a8 <gpio1_combined_isr_handler+0x2c>
1000d2b2:	e000      	b.n	1000d2b6 <gpio1_combined_isr_handler+0x3a>
1000d2b4:	0011      	movs	r1, r2
1000d2b6:	0023      	movs	r3, r4
1000d2b8:	408b      	lsls	r3, r1
1000d2ba:	b29b      	uxth	r3, r3
1000d2bc:	8703      	strh	r3, [r0, #56]	; 0x38
1000d2be:	e003      	b.n	1000d2c8 <gpio1_combined_isr_handler+0x4c>
1000d2c0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
1000d2c2:	432b      	orrs	r3, r5
1000d2c4:	b29b      	uxth	r3, r3
1000d2c6:	8703      	strh	r3, [r0, #56]	; 0x38
1000d2c8:	8f03      	ldrh	r3, [r0, #56]	; 0x38
1000d2ca:	05db      	lsls	r3, r3, #23
1000d2cc:	0ddb      	lsrs	r3, r3, #23
1000d2ce:	d1e2      	bne.n	1000d296 <gpio1_combined_isr_handler+0x1a>
1000d2d0:	2180      	movs	r1, #128	; 0x80
1000d2d2:	0049      	lsls	r1, r1, #1
1000d2d4:	3381      	adds	r3, #129	; 0x81
1000d2d6:	33ff      	adds	r3, #255	; 0xff
1000d2d8:	4a03      	ldr	r2, [pc, #12]	; (1000d2e8 <gpio1_combined_isr_handler+0x6c>)
1000d2da:	50d1      	str	r1, [r2, r3]
1000d2dc:	bd30      	pop	{r4, r5, pc}
1000d2de:	46c0      	nop			; (mov r8, r8)
1000d2e0:	40011000 	.word	0x40011000
1000d2e4:	ffff8000 	.word	0xffff8000
1000d2e8:	e000e100 	.word	0xe000e100

1000d2ec <gpio0_combined_isr_handler>:
1000d2ec:	b530      	push	{r4, r5, lr}
1000d2ee:	4a17      	ldr	r2, [pc, #92]	; (1000d34c <gpio0_combined_isr_handler+0x60>)
1000d2f0:	8f13      	ldrh	r3, [r2, #56]	; 0x38
1000d2f2:	b29b      	uxth	r3, r3
1000d2f4:	8d10      	ldrh	r0, [r2, #40]	; 0x28
1000d2f6:	2180      	movs	r1, #128	; 0x80
1000d2f8:	0209      	lsls	r1, r1, #8
1000d2fa:	4301      	orrs	r1, r0
1000d2fc:	8511      	strh	r1, [r2, #40]	; 0x28
1000d2fe:	0010      	movs	r0, r2
1000d300:	4d13      	ldr	r5, [pc, #76]	; (1000d350 <gpio0_combined_isr_handler+0x64>)
1000d302:	2401      	movs	r4, #1
1000d304:	2200      	movs	r2, #0
1000d306:	05db      	lsls	r3, r3, #23
1000d308:	0ddb      	lsrs	r3, r3, #23
1000d30a:	d011      	beq.n	1000d330 <gpio0_combined_isr_handler+0x44>
1000d30c:	b2db      	uxtb	r3, r3
1000d30e:	4259      	negs	r1, r3
1000d310:	400b      	ands	r3, r1
1000d312:	2b01      	cmp	r3, #1
1000d314:	d006      	beq.n	1000d324 <gpio0_combined_isr_handler+0x38>
1000d316:	0011      	movs	r1, r2
1000d318:	085b      	lsrs	r3, r3, #1
1000d31a:	3101      	adds	r1, #1
1000d31c:	b2c9      	uxtb	r1, r1
1000d31e:	2b01      	cmp	r3, #1
1000d320:	d1fa      	bne.n	1000d318 <gpio0_combined_isr_handler+0x2c>
1000d322:	e000      	b.n	1000d326 <gpio0_combined_isr_handler+0x3a>
1000d324:	0011      	movs	r1, r2
1000d326:	0023      	movs	r3, r4
1000d328:	408b      	lsls	r3, r1
1000d32a:	b29b      	uxth	r3, r3
1000d32c:	8703      	strh	r3, [r0, #56]	; 0x38
1000d32e:	e003      	b.n	1000d338 <gpio0_combined_isr_handler+0x4c>
1000d330:	8f03      	ldrh	r3, [r0, #56]	; 0x38
1000d332:	432b      	orrs	r3, r5
1000d334:	b29b      	uxth	r3, r3
1000d336:	8703      	strh	r3, [r0, #56]	; 0x38
1000d338:	8f03      	ldrh	r3, [r0, #56]	; 0x38
1000d33a:	05db      	lsls	r3, r3, #23
1000d33c:	0ddb      	lsrs	r3, r3, #23
1000d33e:	d1e2      	bne.n	1000d306 <gpio0_combined_isr_handler+0x1a>
1000d340:	2180      	movs	r1, #128	; 0x80
1000d342:	3381      	adds	r3, #129	; 0x81
1000d344:	33ff      	adds	r3, #255	; 0xff
1000d346:	4a03      	ldr	r2, [pc, #12]	; (1000d354 <gpio0_combined_isr_handler+0x68>)
1000d348:	50d1      	str	r1, [r2, r3]
1000d34a:	bd30      	pop	{r4, r5, pc}
1000d34c:	40010000 	.word	0x40010000
1000d350:	ffff8000 	.word	0xffff8000
1000d354:	e000e100 	.word	0xe000e100

1000d358 <PORT1_COMB_Handler>:
1000d358:	b510      	push	{r4, lr}
1000d35a:	4b0c      	ldr	r3, [pc, #48]	; (1000d38c <PORT1_COMB_Handler+0x34>)
1000d35c:	8f1b      	ldrh	r3, [r3, #56]	; 0x38
1000d35e:	0b5b      	lsrs	r3, r3, #13
1000d360:	d010      	beq.n	1000d384 <PORT1_COMB_Handler+0x2c>
1000d362:	4b0b      	ldr	r3, [pc, #44]	; (1000d390 <PORT1_COMB_Handler+0x38>)
1000d364:	681b      	ldr	r3, [r3, #0]
1000d366:	4798      	blx	r3
1000d368:	4a08      	ldr	r2, [pc, #32]	; (1000d38c <PORT1_COMB_Handler+0x34>)
1000d36a:	8f13      	ldrh	r3, [r2, #56]	; 0x38
1000d36c:	8f11      	ldrh	r1, [r2, #56]	; 0x38
1000d36e:	0b5b      	lsrs	r3, r3, #13
1000d370:	035b      	lsls	r3, r3, #13
1000d372:	430b      	orrs	r3, r1
1000d374:	8713      	strh	r3, [r2, #56]	; 0x38
1000d376:	2180      	movs	r1, #128	; 0x80
1000d378:	0049      	lsls	r1, r1, #1
1000d37a:	23c0      	movs	r3, #192	; 0xc0
1000d37c:	005b      	lsls	r3, r3, #1
1000d37e:	4a05      	ldr	r2, [pc, #20]	; (1000d394 <PORT1_COMB_Handler+0x3c>)
1000d380:	50d1      	str	r1, [r2, r3]
1000d382:	e001      	b.n	1000d388 <PORT1_COMB_Handler+0x30>
1000d384:	4b04      	ldr	r3, [pc, #16]	; (1000d398 <PORT1_COMB_Handler+0x40>)
1000d386:	4798      	blx	r3
1000d388:	bd10      	pop	{r4, pc}
1000d38a:	46c0      	nop			; (mov r8, r8)
1000d38c:	40011000 	.word	0x40011000
1000d390:	100184b4 	.word	0x100184b4
1000d394:	e000e100 	.word	0xe000e100
1000d398:	1000d27d 	.word	0x1000d27d

1000d39c <wakeup_int_unregister_callback>:
1000d39c:	2303      	movs	r3, #3
1000d39e:	2802      	cmp	r0, #2
1000d3a0:	d804      	bhi.n	1000d3ac <wakeup_int_unregister_callback+0x10>
1000d3a2:	0080      	lsls	r0, r0, #2
1000d3a4:	2200      	movs	r2, #0
1000d3a6:	4b02      	ldr	r3, [pc, #8]	; (1000d3b0 <wakeup_int_unregister_callback+0x14>)
1000d3a8:	50c2      	str	r2, [r0, r3]
1000d3aa:	2300      	movs	r3, #0
1000d3ac:	0018      	movs	r0, r3
1000d3ae:	4770      	bx	lr
1000d3b0:	100184cc 	.word	0x100184cc

1000d3b4 <wakeup_active_event_callback>:
1000d3b4:	b510      	push	{r4, lr}
1000d3b6:	0004      	movs	r4, r0
1000d3b8:	7803      	ldrb	r3, [r0, #0]
1000d3ba:	2b01      	cmp	r3, #1
1000d3bc:	d108      	bne.n	1000d3d0 <wakeup_active_event_callback+0x1c>
1000d3be:	4b11      	ldr	r3, [pc, #68]	; (1000d404 <wakeup_active_event_callback+0x50>)
1000d3c0:	681b      	ldr	r3, [r3, #0]
1000d3c2:	2b00      	cmp	r3, #0
1000d3c4:	d000      	beq.n	1000d3c8 <wakeup_active_event_callback+0x14>
1000d3c6:	4798      	blx	r3
1000d3c8:	23ff      	movs	r3, #255	; 0xff
1000d3ca:	6822      	ldr	r2, [r4, #0]
1000d3cc:	439a      	bics	r2, r3
1000d3ce:	6022      	str	r2, [r4, #0]
1000d3d0:	7863      	ldrb	r3, [r4, #1]
1000d3d2:	2b01      	cmp	r3, #1
1000d3d4:	d108      	bne.n	1000d3e8 <wakeup_active_event_callback+0x34>
1000d3d6:	4b0b      	ldr	r3, [pc, #44]	; (1000d404 <wakeup_active_event_callback+0x50>)
1000d3d8:	685b      	ldr	r3, [r3, #4]
1000d3da:	2b00      	cmp	r3, #0
1000d3dc:	d000      	beq.n	1000d3e0 <wakeup_active_event_callback+0x2c>
1000d3de:	4798      	blx	r3
1000d3e0:	4b09      	ldr	r3, [pc, #36]	; (1000d408 <wakeup_active_event_callback+0x54>)
1000d3e2:	6822      	ldr	r2, [r4, #0]
1000d3e4:	4013      	ands	r3, r2
1000d3e6:	6023      	str	r3, [r4, #0]
1000d3e8:	78a3      	ldrb	r3, [r4, #2]
1000d3ea:	2b01      	cmp	r3, #1
1000d3ec:	d108      	bne.n	1000d400 <wakeup_active_event_callback+0x4c>
1000d3ee:	4b05      	ldr	r3, [pc, #20]	; (1000d404 <wakeup_active_event_callback+0x50>)
1000d3f0:	689b      	ldr	r3, [r3, #8]
1000d3f2:	2b00      	cmp	r3, #0
1000d3f4:	d000      	beq.n	1000d3f8 <wakeup_active_event_callback+0x44>
1000d3f6:	4798      	blx	r3
1000d3f8:	4b04      	ldr	r3, [pc, #16]	; (1000d40c <wakeup_active_event_callback+0x58>)
1000d3fa:	6822      	ldr	r2, [r4, #0]
1000d3fc:	4013      	ands	r3, r2
1000d3fe:	6023      	str	r3, [r4, #0]
1000d400:	bd10      	pop	{r4, pc}
1000d402:	46c0      	nop			; (mov r8, r8)
1000d404:	100184cc 	.word	0x100184cc
1000d408:	ffff00ff 	.word	0xffff00ff
1000d40c:	ff00ffff 	.word	0xff00ffff

1000d410 <app_connected_event_handler>:
* @param[in] at_ble_connected_t
*/
static at_ble_status_t app_connected_event_handler(void *params)
{
	return AT_BLE_SUCCESS;
}
1000d410:	2000      	movs	r0, #0
1000d412:	4770      	bx	lr

1000d414 <get_center_align_x>:
	
	register_uart_callback(uart_rx_callback);
}

static uint8_t get_center_align_x(char* str, uint8_t len, const FONT_INFO *font)
{
1000d414:	b570      	push	{r4, r5, r6, lr}
	uint8_t x = 0;
	for(uint8_t i = 0; i < len; i++)
1000d416:	2900      	cmp	r1, #0
1000d418:	d012      	beq.n	1000d440 <get_center_align_x+0x2c>
	{
		x += font->charInfo[str[i] - font->startChar].widthBits;
1000d41a:	6856      	ldr	r6, [r2, #4]
1000d41c:	7855      	ldrb	r5, [r2, #1]
1000d41e:	0004      	movs	r4, r0
1000d420:	3901      	subs	r1, #1
1000d422:	b2c9      	uxtb	r1, r1
1000d424:	3101      	adds	r1, #1
1000d426:	1840      	adds	r0, r0, r1
1000d428:	2200      	movs	r2, #0
1000d42a:	7823      	ldrb	r3, [r4, #0]
1000d42c:	1b5b      	subs	r3, r3, r5
1000d42e:	009b      	lsls	r3, r3, #2
		x += 1;
1000d430:	5d9b      	ldrb	r3, [r3, r6]
1000d432:	3301      	adds	r3, #1
1000d434:	18d2      	adds	r2, r2, r3
1000d436:	b2d2      	uxtb	r2, r2
1000d438:	3401      	adds	r4, #1
}

static uint8_t get_center_align_x(char* str, uint8_t len, const FONT_INFO *font)
{
	uint8_t x = 0;
	for(uint8_t i = 0; i < len; i++)
1000d43a:	4284      	cmp	r4, r0
1000d43c:	d1f5      	bne.n	1000d42a <get_center_align_x+0x16>
1000d43e:	e000      	b.n	1000d442 <get_center_align_x+0x2e>
	register_uart_callback(uart_rx_callback);
}

static uint8_t get_center_align_x(char* str, uint8_t len, const FONT_INFO *font)
{
	uint8_t x = 0;
1000d440:	2200      	movs	r2, #0
	for(uint8_t i = 0; i < len; i++)
	{
		x += font->charInfo[str[i] - font->startChar].widthBits;
		x += 1;
	}
	x = 64 - (x >> 1);
1000d442:	0852      	lsrs	r2, r2, #1
	return x;
1000d444:	2040      	movs	r0, #64	; 0x40
1000d446:	1a82      	subs	r2, r0, r2
1000d448:	b2d0      	uxtb	r0, r2
}
1000d44a:	bd70      	pop	{r4, r5, r6, pc}

1000d44c <app_disconnected_event_handler>:
/**
 * @brief app_connected_state ble manager notifies the application about state
 * @param[in] connected
 */
static at_ble_status_t app_disconnected_event_handler(void *params)
{
1000d44c:	b510      	push	{r4, lr}
		/* Started advertisement */
		csc_prf_dev_adv();		
1000d44e:	4b02      	ldr	r3, [pc, #8]	; (1000d458 <app_disconnected_event_handler+0xc>)
1000d450:	4798      	blx	r3

		return AT_BLE_SUCCESS;
}
1000d452:	2000      	movs	r0, #0
1000d454:	bd10      	pop	{r4, pc}
1000d456:	46c0      	nop			; (mov r8, r8)
1000d458:	1000b525 	.word	0x1000b525

1000d45c <uart_rx_callback>:
	NULL,
	NULL
};

static void uart_rx_callback(uint8_t input)
{
1000d45c:	b570      	push	{r4, r5, r6, lr}
	if(input == '\r') {
1000d45e:	280d      	cmp	r0, #13
1000d460:	d118      	bne.n	1000d494 <uart_rx_callback+0x38>
		if(send_length) {
1000d462:	4b19      	ldr	r3, [pc, #100]	; (1000d4c8 <uart_rx_callback+0x6c>)
1000d464:	881b      	ldrh	r3, [r3, #0]
1000d466:	2b00      	cmp	r3, #0
1000d468:	d02d      	beq.n	1000d4c6 <uart_rx_callback+0x6a>
			send_plf_int_msg_ind(UART_RX_COMPLETE, UART_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK, send_data, send_length);
1000d46a:	4c18      	ldr	r4, [pc, #96]	; (1000d4cc <uart_rx_callback+0x70>)
1000d46c:	0022      	movs	r2, r4
1000d46e:	2101      	movs	r1, #1
1000d470:	380b      	subs	r0, #11
1000d472:	4d17      	ldr	r5, [pc, #92]	; (1000d4d0 <uart_rx_callback+0x74>)
1000d474:	47a8      	blx	r5
			memset(send_data, 0, APP_TX_BUF_SIZE);
1000d476:	2296      	movs	r2, #150	; 0x96
1000d478:	2100      	movs	r1, #0
1000d47a:	0020      	movs	r0, r4
1000d47c:	4b15      	ldr	r3, [pc, #84]	; (1000d4d4 <uart_rx_callback+0x78>)
1000d47e:	4798      	blx	r3
			send_length = 0;
1000d480:	2200      	movs	r2, #0
1000d482:	4b11      	ldr	r3, [pc, #68]	; (1000d4c8 <uart_rx_callback+0x6c>)
1000d484:	801a      	strh	r2, [r3, #0]
			DBG_LOG(" ");
1000d486:	4814      	ldr	r0, [pc, #80]	; (1000d4d8 <uart_rx_callback+0x7c>)
1000d488:	4b14      	ldr	r3, [pc, #80]	; (1000d4dc <uart_rx_callback+0x80>)
1000d48a:	4798      	blx	r3
1000d48c:	2020      	movs	r0, #32
1000d48e:	4b14      	ldr	r3, [pc, #80]	; (1000d4e0 <uart_rx_callback+0x84>)
1000d490:	4798      	blx	r3
1000d492:	e018      	b.n	1000d4c6 <uart_rx_callback+0x6a>
		}
	}
	else {
		send_data[send_length++] = input;
1000d494:	4c0c      	ldr	r4, [pc, #48]	; (1000d4c8 <uart_rx_callback+0x6c>)
1000d496:	8823      	ldrh	r3, [r4, #0]
1000d498:	1c5a      	adds	r2, r3, #1
1000d49a:	8022      	strh	r2, [r4, #0]
1000d49c:	4a0b      	ldr	r2, [pc, #44]	; (1000d4cc <uart_rx_callback+0x70>)
1000d49e:	54d0      	strb	r0, [r2, r3]
		DBG_LOG_CONT("%c", input);
1000d4a0:	4b0f      	ldr	r3, [pc, #60]	; (1000d4e0 <uart_rx_callback+0x84>)
1000d4a2:	4798      	blx	r3
		
		if(send_length >= APP_TX_BUF_SIZE) {
1000d4a4:	8823      	ldrh	r3, [r4, #0]
1000d4a6:	2b95      	cmp	r3, #149	; 0x95
1000d4a8:	d90d      	bls.n	1000d4c6 <uart_rx_callback+0x6a>
			send_plf_int_msg_ind(UART_RX_COMPLETE, UART_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK, send_data, send_length);
1000d4aa:	4c08      	ldr	r4, [pc, #32]	; (1000d4cc <uart_rx_callback+0x70>)
1000d4ac:	0022      	movs	r2, r4
1000d4ae:	2101      	movs	r1, #1
1000d4b0:	2002      	movs	r0, #2
1000d4b2:	4d07      	ldr	r5, [pc, #28]	; (1000d4d0 <uart_rx_callback+0x74>)
1000d4b4:	47a8      	blx	r5
			memset(send_data, 0, APP_TX_BUF_SIZE);
1000d4b6:	2296      	movs	r2, #150	; 0x96
1000d4b8:	2100      	movs	r1, #0
1000d4ba:	0020      	movs	r0, r4
1000d4bc:	4b05      	ldr	r3, [pc, #20]	; (1000d4d4 <uart_rx_callback+0x78>)
1000d4be:	4798      	blx	r3
			send_length = 0;
1000d4c0:	2200      	movs	r2, #0
1000d4c2:	4b01      	ldr	r3, [pc, #4]	; (1000d4c8 <uart_rx_callback+0x6c>)
1000d4c4:	801a      	strh	r2, [r3, #0]
		}
	}
}
1000d4c6:	bd70      	pop	{r4, r5, r6, pc}
1000d4c8:	100176d4 	.word	0x100176d4
1000d4cc:	10019d60 	.word	0x10019d60
1000d4d0:	1000cf95 	.word	0x1000cf95
1000d4d4:	10012219 	.word	0x10012219
1000d4d8:	10015020 	.word	0x10015020
1000d4dc:	10012481 	.word	0x10012481
1000d4e0:	10012395 	.word	0x10012395

1000d4e4 <csc_app_send_buf>:
	csc_app_recv_buf(report_info->recv_buff, report_info->recv_buff_len);
}

/* Function used for send data */
static void csc_app_send_buf(void)
{
1000d4e4:	b510      	push	{r4, lr}
1000d4e6:	b0a8      	sub	sp, #160	; 0xa0
	uint16_t plf_event_type;
	uint16_t plf_event_data_len;
	uint8_t plf_event_data[APP_TX_BUF_SIZE] = {0, };
1000d4e8:	2296      	movs	r2, #150	; 0x96
1000d4ea:	2100      	movs	r1, #0
1000d4ec:	a801      	add	r0, sp, #4
1000d4ee:	4b0a      	ldr	r3, [pc, #40]	; (1000d518 <csc_app_send_buf+0x34>)
1000d4f0:	4798      	blx	r3

	platform_event_get(&plf_event_type, plf_event_data, &plf_event_data_len);
1000d4f2:	249e      	movs	r4, #158	; 0x9e
1000d4f4:	446c      	add	r4, sp
1000d4f6:	aa27      	add	r2, sp, #156	; 0x9c
1000d4f8:	a901      	add	r1, sp, #4
1000d4fa:	0020      	movs	r0, r4
1000d4fc:	4b07      	ldr	r3, [pc, #28]	; (1000d51c <csc_app_send_buf+0x38>)
1000d4fe:	4798      	blx	r3
	
	if(plf_event_type == ((UART_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK << 8) | UART_RX_COMPLETE)) {
1000d500:	8822      	ldrh	r2, [r4, #0]
1000d502:	2381      	movs	r3, #129	; 0x81
1000d504:	005b      	lsls	r3, r3, #1
1000d506:	429a      	cmp	r2, r3
1000d508:	d104      	bne.n	1000d514 <csc_app_send_buf+0x30>
		csc_prf_send_data(plf_event_data, plf_event_data_len);
1000d50a:	ab27      	add	r3, sp, #156	; 0x9c
1000d50c:	8819      	ldrh	r1, [r3, #0]
1000d50e:	a801      	add	r0, sp, #4
1000d510:	4b03      	ldr	r3, [pc, #12]	; (1000d520 <csc_app_send_buf+0x3c>)
1000d512:	4798      	blx	r3
	}

}
1000d514:	b028      	add	sp, #160	; 0xa0
1000d516:	bd10      	pop	{r4, pc}
1000d518:	10012219 	.word	0x10012219
1000d51c:	1000cb29 	.word	0x1000cb29
1000d520:	1000b4f5 	.word	0x1000b4f5

1000d524 <csc_prf_report_ntf_cb>:
	}
}

/* Callback called for new data from remote device */
static void csc_prf_report_ntf_cb(csc_report_ntf_t *report_info)
{
1000d524:	b5f0      	push	{r4, r5, r6, r7, lr}
1000d526:	464f      	mov	r7, r9
1000d528:	4646      	mov	r6, r8
1000d52a:	b4c0      	push	{r6, r7}
1000d52c:	b087      	sub	sp, #28
1000d52e:	0004      	movs	r4, r0
	DBG_LOG("\r\n");
1000d530:	4e3a      	ldr	r6, [pc, #232]	; (1000d61c <csc_prf_report_ntf_cb+0xf8>)
1000d532:	0030      	movs	r0, r6
1000d534:	4d3a      	ldr	r5, [pc, #232]	; (1000d620 <csc_prf_report_ntf_cb+0xfc>)
1000d536:	47a8      	blx	r5
1000d538:	0030      	movs	r0, r6
1000d53a:	47a8      	blx	r5
	csc_app_recv_buf(report_info->recv_buff, report_info->recv_buff_len);
1000d53c:	6826      	ldr	r6, [r4, #0]
1000d53e:	7923      	ldrb	r3, [r4, #4]
1000d540:	4698      	mov	r8, r3

/* Function used for receive data */
static void csc_app_recv_buf(uint8_t *recv_data, uint8_t recv_len)
{
	uint16_t ind = 0;
	if (recv_len){
1000d542:	2b00      	cmp	r3, #0
1000d544:	d015      	beq.n	1000d572 <csc_prf_report_ntf_cb+0x4e>
		for (ind = 0; ind < recv_len; ind++){
1000d546:	466a      	mov	r2, sp
1000d548:	82d3      	strh	r3, [r2, #22]
1000d54a:	8ad5      	ldrh	r5, [r2, #22]
1000d54c:	2d00      	cmp	r5, #0
1000d54e:	d00a      	beq.n	1000d566 <csc_prf_report_ntf_cb+0x42>
1000d550:	0034      	movs	r4, r6
1000d552:	3d01      	subs	r5, #1
1000d554:	b2ad      	uxth	r5, r5
1000d556:	3501      	adds	r5, #1
1000d558:	1975      	adds	r5, r6, r5
			DBG_LOG_CONT("%c", recv_data[ind]);
1000d55a:	4f32      	ldr	r7, [pc, #200]	; (1000d624 <csc_prf_report_ntf_cb+0x100>)
1000d55c:	7820      	ldrb	r0, [r4, #0]
1000d55e:	47b8      	blx	r7
1000d560:	3401      	adds	r4, #1
/* Function used for receive data */
static void csc_app_recv_buf(uint8_t *recv_data, uint8_t recv_len)
{
	uint16_t ind = 0;
	if (recv_len){
		for (ind = 0; ind < recv_len; ind++){
1000d562:	42ac      	cmp	r4, r5
1000d564:	d1fa      	bne.n	1000d55c <csc_prf_report_ntf_cb+0x38>
			DBG_LOG_CONT("%c", recv_data[ind]);
		}
		DBG_LOG("\r\n");
1000d566:	4d2d      	ldr	r5, [pc, #180]	; (1000d61c <csc_prf_report_ntf_cb+0xf8>)
1000d568:	0028      	movs	r0, r5
1000d56a:	4c2d      	ldr	r4, [pc, #180]	; (1000d620 <csc_prf_report_ntf_cb+0xfc>)
1000d56c:	47a0      	blx	r4
1000d56e:	0028      	movs	r0, r5
1000d570:	47a0      	blx	r4
	}
	draw_string((char*)recv_data, recv_len, frameBuffer, 1, 1, BLACK, WHITE, msSans8pt);
1000d572:	4b2d      	ldr	r3, [pc, #180]	; (1000d628 <csc_prf_report_ntf_cb+0x104>)
1000d574:	681b      	ldr	r3, [r3, #0]
1000d576:	9303      	str	r3, [sp, #12]
1000d578:	4b2c      	ldr	r3, [pc, #176]	; (1000d62c <csc_prf_report_ntf_cb+0x108>)
1000d57a:	781b      	ldrb	r3, [r3, #0]
1000d57c:	9302      	str	r3, [sp, #8]
1000d57e:	4b2c      	ldr	r3, [pc, #176]	; (1000d630 <csc_prf_report_ntf_cb+0x10c>)
1000d580:	781b      	ldrb	r3, [r3, #0]
1000d582:	9301      	str	r3, [sp, #4]
1000d584:	2401      	movs	r4, #1
1000d586:	9400      	str	r4, [sp, #0]
1000d588:	2301      	movs	r3, #1
1000d58a:	4a2a      	ldr	r2, [pc, #168]	; (1000d634 <csc_prf_report_ntf_cb+0x110>)
1000d58c:	4641      	mov	r1, r8
1000d58e:	0030      	movs	r0, r6
1000d590:	4d29      	ldr	r5, [pc, #164]	; (1000d638 <csc_prf_report_ntf_cb+0x114>)
1000d592:	47a8      	blx	r5
	draw_flag = true;
1000d594:	4b29      	ldr	r3, [pc, #164]	; (1000d63c <csc_prf_report_ntf_cb+0x118>)
1000d596:	701c      	strb	r4, [r3, #0]
	
	Notification *notif;
	
	switch(recv_data[0])
1000d598:	7833      	ldrb	r3, [r6, #0]
1000d59a:	2b6e      	cmp	r3, #110	; 0x6e
1000d59c:	d015      	beq.n	1000d5ca <csc_prf_report_ntf_cb+0xa6>
1000d59e:	2b74      	cmp	r3, #116	; 0x74
1000d5a0:	d002      	beq.n	1000d5a8 <csc_prf_report_ntf_cb+0x84>
1000d5a2:	2b64      	cmp	r3, #100	; 0x64
1000d5a4:	d134      	bne.n	1000d610 <csc_prf_report_ntf_cb+0xec>
1000d5a6:	e006      	b.n	1000d5b6 <csc_prf_report_ntf_cb+0x92>
	{
		case 't' :
		hour = recv_data[1];
1000d5a8:	7872      	ldrb	r2, [r6, #1]
1000d5aa:	4b25      	ldr	r3, [pc, #148]	; (1000d640 <csc_prf_report_ntf_cb+0x11c>)
1000d5ac:	701a      	strb	r2, [r3, #0]
		minute = recv_data[2];
1000d5ae:	78b2      	ldrb	r2, [r6, #2]
1000d5b0:	4b24      	ldr	r3, [pc, #144]	; (1000d644 <csc_prf_report_ntf_cb+0x120>)
1000d5b2:	701a      	strb	r2, [r3, #0]
1000d5b4:	e02c      	b.n	1000d610 <csc_prf_report_ntf_cb+0xec>
		break;
		
		case 'd' :
		date = recv_data[1];
1000d5b6:	7872      	ldrb	r2, [r6, #1]
1000d5b8:	4b23      	ldr	r3, [pc, #140]	; (1000d648 <csc_prf_report_ntf_cb+0x124>)
1000d5ba:	701a      	strb	r2, [r3, #0]
		month = recv_data[2];
1000d5bc:	78b2      	ldrb	r2, [r6, #2]
1000d5be:	4b23      	ldr	r3, [pc, #140]	; (1000d64c <csc_prf_report_ntf_cb+0x128>)
1000d5c0:	701a      	strb	r2, [r3, #0]
		day = recv_data[3];
1000d5c2:	78f2      	ldrb	r2, [r6, #3]
1000d5c4:	4b22      	ldr	r3, [pc, #136]	; (1000d650 <csc_prf_report_ntf_cb+0x12c>)
1000d5c6:	701a      	strb	r2, [r3, #0]
1000d5c8:	e022      	b.n	1000d610 <csc_prf_report_ntf_cb+0xec>
		break;
		
		case 'n' :
		notif = (Notification*)malloc(sizeof(Notification));
1000d5ca:	2014      	movs	r0, #20
1000d5cc:	4b21      	ldr	r3, [pc, #132]	; (1000d654 <csc_prf_report_ntf_cb+0x130>)
1000d5ce:	4699      	mov	r9, r3
1000d5d0:	4798      	blx	r3
1000d5d2:	0004      	movs	r4, r0
		notif->notif_id = recv_data[1];
1000d5d4:	7873      	ldrb	r3, [r6, #1]
1000d5d6:	7003      	strb	r3, [r0, #0]
		notif->app_id = recv_data[2];
1000d5d8:	78b3      	ldrb	r3, [r6, #2]
1000d5da:	7043      	strb	r3, [r0, #1]
		notif->title_length = recv_data[3];
1000d5dc:	78f5      	ldrb	r5, [r6, #3]
1000d5de:	7205      	strb	r5, [r0, #8]
		notif->text_length = recv_data[4];
1000d5e0:	7937      	ldrb	r7, [r6, #4]
1000d5e2:	7407      	strb	r7, [r0, #16]
		notif->hour = recv_data[5];
1000d5e4:	7973      	ldrb	r3, [r6, #5]
1000d5e6:	7443      	strb	r3, [r0, #17]
		notif->title = strncpy((char*)malloc(recv_data[3]), (char*)&recv_data[6], recv_data[3]);
1000d5e8:	0028      	movs	r0, r5
1000d5ea:	47c8      	blx	r9
1000d5ec:	1db1      	adds	r1, r6, #6
1000d5ee:	002a      	movs	r2, r5
1000d5f0:	4b19      	ldr	r3, [pc, #100]	; (1000d658 <csc_prf_report_ntf_cb+0x134>)
1000d5f2:	4698      	mov	r8, r3
1000d5f4:	4798      	blx	r3
1000d5f6:	6060      	str	r0, [r4, #4]
		notif->text = strncpy((char*)malloc(recv_data[4]), (char*)&recv_data[6+recv_data[3]], recv_data[4]);
1000d5f8:	0038      	movs	r0, r7
1000d5fa:	47c8      	blx	r9
1000d5fc:	1da9      	adds	r1, r5, #6
1000d5fe:	1871      	adds	r1, r6, r1
1000d600:	003a      	movs	r2, r7
1000d602:	47c0      	blx	r8
1000d604:	60e0      	str	r0, [r4, #12]
		notification_stack[notif_sp] = notif;
1000d606:	4b15      	ldr	r3, [pc, #84]	; (1000d65c <csc_prf_report_ntf_cb+0x138>)
1000d608:	781b      	ldrb	r3, [r3, #0]
1000d60a:	009b      	lsls	r3, r3, #2
1000d60c:	4a14      	ldr	r2, [pc, #80]	; (1000d660 <csc_prf_report_ntf_cb+0x13c>)
1000d60e:	509c      	str	r4, [r3, r2]
/* Callback called for new data from remote device */
static void csc_prf_report_ntf_cb(csc_report_ntf_t *report_info)
{
	DBG_LOG("\r\n");
	csc_app_recv_buf(report_info->recv_buff, report_info->recv_buff_len);
}
1000d610:	b007      	add	sp, #28
1000d612:	bc0c      	pop	{r2, r3}
1000d614:	4690      	mov	r8, r2
1000d616:	4699      	mov	r9, r3
1000d618:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000d61a:	46c0      	nop			; (mov r8, r8)
1000d61c:	10015020 	.word	0x10015020
1000d620:	10012481 	.word	0x10012481
1000d624:	10012395 	.word	0x10012395
1000d628:	10015c5c 	.word	0x10015c5c
1000d62c:	100146bd 	.word	0x100146bd
1000d630:	100146bc 	.word	0x100146bc
1000d634:	10018560 	.word	0x10018560
1000d638:	10008a8d 	.word	0x10008a8d
1000d63c:	100176d1 	.word	0x100176d1
1000d640:	10015c6c 	.word	0x10015c6c
1000d644:	10015c68 	.word	0x10015c68
1000d648:	10015c6a 	.word	0x10015c6a
1000d64c:	10015c6d 	.word	0x10015c6d
1000d650:	10015c6b 	.word	0x10015c6b
1000d654:	100121d5 	.word	0x100121d5
1000d658:	100126f7 	.word	0x100126f7
1000d65c:	100176d0 	.word	0x100176d0
1000d660:	10018508 	.word	0x10018508

1000d664 <ao_gpio_callback>:
	}

}

static void ao_gpio_callback(void)
{
1000d664:	b510      	push	{r4, lr}
	gpio_pin_toggle_output_level(LED_0_PIN);
1000d666:	2016      	movs	r0, #22
1000d668:	4b01      	ldr	r3, [pc, #4]	; (1000d670 <ao_gpio_callback+0xc>)
1000d66a:	4798      	blx	r3
}
1000d66c:	bd10      	pop	{r4, pc}
1000d66e:	46c0      	nop			; (mov r8, r8)
1000d670:	10009de5 	.word	0x10009de5

1000d674 <dualtimer_callback2>:
	//NVIC_EnableIRQ(GPIO1_IRQn);
	
}

static void dualtimer_callback2(void)
{
1000d674:	b510      	push	{r4, lr}
	gpio_pin_toggle_output_level(PIN_LP_GPIO_20);
1000d676:	2014      	movs	r0, #20
1000d678:	4b01      	ldr	r3, [pc, #4]	; (1000d680 <dualtimer_callback2+0xc>)
1000d67a:	4798      	blx	r3
}
1000d67c:	bd10      	pop	{r4, pc}
1000d67e:	46c0      	nop			; (mov r8, r8)
1000d680:	10009de5 	.word	0x10009de5

1000d684 <update_watchface>:
	x = 64 - (x >> 1);
	return x;
}

static void update_watchface( void)
{
1000d684:	b5f0      	push	{r4, r5, r6, r7, lr}
1000d686:	465f      	mov	r7, fp
1000d688:	4656      	mov	r6, sl
1000d68a:	464d      	mov	r5, r9
1000d68c:	b4e0      	push	{r5, r6, r7}
1000d68e:	b08c      	sub	sp, #48	; 0x30
	ClearBuffer(frameBuffer);
1000d690:	4846      	ldr	r0, [pc, #280]	; (1000d7ac <update_watchface+0x128>)
1000d692:	4b47      	ldr	r3, [pc, #284]	; (1000d7b0 <update_watchface+0x12c>)
1000d694:	4798      	blx	r3
	char str_time[7];
	if(minute > 10) sprintf(str_time, "%d : %d", hour, minute);
1000d696:	4b47      	ldr	r3, [pc, #284]	; (1000d7b4 <update_watchface+0x130>)
1000d698:	781b      	ldrb	r3, [r3, #0]
1000d69a:	2b0a      	cmp	r3, #10
1000d69c:	d906      	bls.n	1000d6ac <update_watchface+0x28>
1000d69e:	4a46      	ldr	r2, [pc, #280]	; (1000d7b8 <update_watchface+0x134>)
1000d6a0:	7812      	ldrb	r2, [r2, #0]
1000d6a2:	4946      	ldr	r1, [pc, #280]	; (1000d7bc <update_watchface+0x138>)
1000d6a4:	a80a      	add	r0, sp, #40	; 0x28
1000d6a6:	4c46      	ldr	r4, [pc, #280]	; (1000d7c0 <update_watchface+0x13c>)
1000d6a8:	47a0      	blx	r4
1000d6aa:	e005      	b.n	1000d6b8 <update_watchface+0x34>
	else sprintf(str_time, "%d : 0%d", hour, minute);
1000d6ac:	4a42      	ldr	r2, [pc, #264]	; (1000d7b8 <update_watchface+0x134>)
1000d6ae:	7812      	ldrb	r2, [r2, #0]
1000d6b0:	4944      	ldr	r1, [pc, #272]	; (1000d7c4 <update_watchface+0x140>)
1000d6b2:	a80a      	add	r0, sp, #40	; 0x28
1000d6b4:	4c42      	ldr	r4, [pc, #264]	; (1000d7c0 <update_watchface+0x13c>)
1000d6b6:	47a0      	blx	r4
	draw_string(str_time, strlen(str_time), frameBuffer, get_center_align_x(str_time, strlen(str_time), josefinSans48pt), 28, BLACK, WHITE, josefinSans48pt);
1000d6b8:	a80a      	add	r0, sp, #40	; 0x28
1000d6ba:	4b43      	ldr	r3, [pc, #268]	; (1000d7c8 <update_watchface+0x144>)
1000d6bc:	469a      	mov	sl, r3
1000d6be:	4798      	blx	r3
1000d6c0:	b2c7      	uxtb	r7, r0
1000d6c2:	4b42      	ldr	r3, [pc, #264]	; (1000d7cc <update_watchface+0x148>)
1000d6c4:	681c      	ldr	r4, [r3, #0]
1000d6c6:	0022      	movs	r2, r4
1000d6c8:	0039      	movs	r1, r7
1000d6ca:	a80a      	add	r0, sp, #40	; 0x28
1000d6cc:	4b40      	ldr	r3, [pc, #256]	; (1000d7d0 <update_watchface+0x14c>)
1000d6ce:	4699      	mov	r9, r3
1000d6d0:	4798      	blx	r3
1000d6d2:	0003      	movs	r3, r0
1000d6d4:	4a3f      	ldr	r2, [pc, #252]	; (1000d7d4 <update_watchface+0x150>)
1000d6d6:	7815      	ldrb	r5, [r2, #0]
1000d6d8:	4a3f      	ldr	r2, [pc, #252]	; (1000d7d8 <update_watchface+0x154>)
1000d6da:	7816      	ldrb	r6, [r2, #0]
1000d6dc:	9403      	str	r4, [sp, #12]
1000d6de:	9602      	str	r6, [sp, #8]
1000d6e0:	9501      	str	r5, [sp, #4]
1000d6e2:	221c      	movs	r2, #28
1000d6e4:	9200      	str	r2, [sp, #0]
1000d6e6:	4a31      	ldr	r2, [pc, #196]	; (1000d7ac <update_watchface+0x128>)
1000d6e8:	0039      	movs	r1, r7
1000d6ea:	a80a      	add	r0, sp, #40	; 0x28
1000d6ec:	4c3b      	ldr	r4, [pc, #236]	; (1000d7dc <update_watchface+0x158>)
1000d6ee:	47a0      	blx	r4
	char str_date[11];
	sprintf(str_date, "%s, %d %s", str_day[day], date, str_month[month]);
1000d6f0:	4b3b      	ldr	r3, [pc, #236]	; (1000d7e0 <update_watchface+0x15c>)
1000d6f2:	781b      	ldrb	r3, [r3, #0]
1000d6f4:	4a3b      	ldr	r2, [pc, #236]	; (1000d7e4 <update_watchface+0x160>)
1000d6f6:	7812      	ldrb	r2, [r2, #0]
1000d6f8:	0092      	lsls	r2, r2, #2
1000d6fa:	493b      	ldr	r1, [pc, #236]	; (1000d7e8 <update_watchface+0x164>)
1000d6fc:	5852      	ldr	r2, [r2, r1]
1000d6fe:	493b      	ldr	r1, [pc, #236]	; (1000d7ec <update_watchface+0x168>)
1000d700:	7809      	ldrb	r1, [r1, #0]
1000d702:	0089      	lsls	r1, r1, #2
1000d704:	483a      	ldr	r0, [pc, #232]	; (1000d7f0 <update_watchface+0x16c>)
1000d706:	5809      	ldr	r1, [r1, r0]
1000d708:	9100      	str	r1, [sp, #0]
1000d70a:	493a      	ldr	r1, [pc, #232]	; (1000d7f4 <update_watchface+0x170>)
1000d70c:	a807      	add	r0, sp, #28
1000d70e:	4f2c      	ldr	r7, [pc, #176]	; (1000d7c0 <update_watchface+0x13c>)
1000d710:	47b8      	blx	r7
	draw_string(str_date, strlen(str_date), frameBuffer, get_center_align_x(str_date, strlen(str_date),josefinSans16pt), 1, BLACK, WHITE, josefinSans16pt);
1000d712:	a807      	add	r0, sp, #28
1000d714:	47d0      	blx	sl
1000d716:	b2c3      	uxtb	r3, r0
1000d718:	0019      	movs	r1, r3
1000d71a:	4b37      	ldr	r3, [pc, #220]	; (1000d7f8 <update_watchface+0x174>)
1000d71c:	681f      	ldr	r7, [r3, #0]
1000d71e:	003a      	movs	r2, r7
1000d720:	9105      	str	r1, [sp, #20]
1000d722:	a807      	add	r0, sp, #28
1000d724:	47c8      	blx	r9
1000d726:	0003      	movs	r3, r0
1000d728:	9703      	str	r7, [sp, #12]
1000d72a:	9602      	str	r6, [sp, #8]
1000d72c:	9501      	str	r5, [sp, #4]
1000d72e:	2201      	movs	r2, #1
1000d730:	9200      	str	r2, [sp, #0]
1000d732:	4a1e      	ldr	r2, [pc, #120]	; (1000d7ac <update_watchface+0x128>)
1000d734:	9905      	ldr	r1, [sp, #20]
1000d736:	a807      	add	r0, sp, #28
1000d738:	47a0      	blx	r4
	char *song_name = "Overtime - Cash Cash";
	draw_horizontal_line(frameBuffer, 8, 120, 75, BLACK);
1000d73a:	9500      	str	r5, [sp, #0]
1000d73c:	234b      	movs	r3, #75	; 0x4b
1000d73e:	2278      	movs	r2, #120	; 0x78
1000d740:	2108      	movs	r1, #8
1000d742:	481a      	ldr	r0, [pc, #104]	; (1000d7ac <update_watchface+0x128>)
1000d744:	4f2d      	ldr	r7, [pc, #180]	; (1000d7fc <update_watchface+0x178>)
1000d746:	47b8      	blx	r7
	draw_string(song_name, strlen(song_name), frameBuffer, get_center_align_x(song_name, strlen(song_name),msSans8pt), 78, BLACK, WHITE, msSans8pt);
1000d748:	4b2d      	ldr	r3, [pc, #180]	; (1000d800 <update_watchface+0x17c>)
1000d74a:	681b      	ldr	r3, [r3, #0]
1000d74c:	469b      	mov	fp, r3
1000d74e:	001a      	movs	r2, r3
1000d750:	2114      	movs	r1, #20
1000d752:	482c      	ldr	r0, [pc, #176]	; (1000d804 <update_watchface+0x180>)
1000d754:	47c8      	blx	r9
1000d756:	0003      	movs	r3, r0
1000d758:	465a      	mov	r2, fp
1000d75a:	9203      	str	r2, [sp, #12]
1000d75c:	9602      	str	r6, [sp, #8]
1000d75e:	9501      	str	r5, [sp, #4]
1000d760:	224e      	movs	r2, #78	; 0x4e
1000d762:	9200      	str	r2, [sp, #0]
1000d764:	4a11      	ldr	r2, [pc, #68]	; (1000d7ac <update_watchface+0x128>)
1000d766:	2114      	movs	r1, #20
1000d768:	4826      	ldr	r0, [pc, #152]	; (1000d804 <update_watchface+0x180>)
1000d76a:	47a0      	blx	r4
	draw_horizontal_line(frameBuffer, 8, 120, 94, BLACK);
1000d76c:	9500      	str	r5, [sp, #0]
1000d76e:	235e      	movs	r3, #94	; 0x5e
1000d770:	2278      	movs	r2, #120	; 0x78
1000d772:	2108      	movs	r1, #8
1000d774:	480d      	ldr	r0, [pc, #52]	; (1000d7ac <update_watchface+0x128>)
1000d776:	47b8      	blx	r7
	draw_sprite(frameBuffer, 12, 96, BLACK, WHITE, missed_call);
1000d778:	4b23      	ldr	r3, [pc, #140]	; (1000d808 <update_watchface+0x184>)
1000d77a:	aa01      	add	r2, sp, #4
1000d77c:	cb03      	ldmia	r3!, {r0, r1}
1000d77e:	c203      	stmia	r2!, {r0, r1}
1000d780:	9600      	str	r6, [sp, #0]
1000d782:	002b      	movs	r3, r5
1000d784:	2260      	movs	r2, #96	; 0x60
1000d786:	210c      	movs	r1, #12
1000d788:	4808      	ldr	r0, [pc, #32]	; (1000d7ac <update_watchface+0x128>)
1000d78a:	4d20      	ldr	r5, [pc, #128]	; (1000d80c <update_watchface+0x188>)
1000d78c:	47a8      	blx	r5
	//InvertBuffer(frameBuffer);

	Transfer(frameBuffer,1,128,&module);
1000d78e:	4b20      	ldr	r3, [pc, #128]	; (1000d810 <update_watchface+0x18c>)
1000d790:	2280      	movs	r2, #128	; 0x80
1000d792:	2101      	movs	r1, #1
1000d794:	4805      	ldr	r0, [pc, #20]	; (1000d7ac <update_watchface+0x128>)
1000d796:	4c1f      	ldr	r4, [pc, #124]	; (1000d814 <update_watchface+0x190>)
1000d798:	47a0      	blx	r4
	update_watchface_flag = false;
1000d79a:	2200      	movs	r2, #0
1000d79c:	4b1e      	ldr	r3, [pc, #120]	; (1000d818 <update_watchface+0x194>)
1000d79e:	701a      	strb	r2, [r3, #0]
}
1000d7a0:	b00c      	add	sp, #48	; 0x30
1000d7a2:	bc1c      	pop	{r2, r3, r4}
1000d7a4:	4691      	mov	r9, r2
1000d7a6:	469a      	mov	sl, r3
1000d7a8:	46a3      	mov	fp, r4
1000d7aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000d7ac:	10018560 	.word	0x10018560
1000d7b0:	1000983d 	.word	0x1000983d
1000d7b4:	10015c68 	.word	0x10015c68
1000d7b8:	10015c6c 	.word	0x10015c6c
1000d7bc:	100159ec 	.word	0x100159ec
1000d7c0:	100126a5 	.word	0x100126a5
1000d7c4:	100159f4 	.word	0x100159f4
1000d7c8:	100126e9 	.word	0x100126e9
1000d7cc:	10015c64 	.word	0x10015c64
1000d7d0:	1000d415 	.word	0x1000d415
1000d7d4:	100146bc 	.word	0x100146bc
1000d7d8:	100146bd 	.word	0x100146bd
1000d7dc:	10008a8d 	.word	0x10008a8d
1000d7e0:	10015c6a 	.word	0x10015c6a
1000d7e4:	10015c6b 	.word	0x10015c6b
1000d7e8:	10015a9c 	.word	0x10015a9c
1000d7ec:	10015c6d 	.word	0x10015c6d
1000d7f0:	10015b04 	.word	0x10015b04
1000d7f4:	10015a00 	.word	0x10015a00
1000d7f8:	10015c60 	.word	0x10015c60
1000d7fc:	10009511 	.word	0x10009511
1000d800:	10015c5c 	.word	0x10015c5c
1000d804:	10015a0c 	.word	0x10015a0c
1000d808:	100137dc 	.word	0x100137dc
1000d80c:	10009541 	.word	0x10009541
1000d810:	100184d8 	.word	0x100184d8
1000d814:	1000972d 	.word	0x1000972d
1000d818:	100176d2 	.word	0x100176d2

1000d81c <aon_sleep_timer_callback>:
static void aon_sleep_timer_callback(void)
{
1000d81c:	b510      	push	{r4, lr}
	//gpio_pin_toggle_output_level(LED_0_PIN);
	update_watchface_flag = true;
1000d81e:	2201      	movs	r2, #1
1000d820:	4b0d      	ldr	r3, [pc, #52]	; (1000d858 <aon_sleep_timer_callback+0x3c>)
1000d822:	701a      	strb	r2, [r3, #0]
	if(minute<59) minute++;
1000d824:	4b0d      	ldr	r3, [pc, #52]	; (1000d85c <aon_sleep_timer_callback+0x40>)
1000d826:	781b      	ldrb	r3, [r3, #0]
1000d828:	2b3a      	cmp	r3, #58	; 0x3a
1000d82a:	d803      	bhi.n	1000d834 <aon_sleep_timer_callback+0x18>
1000d82c:	3301      	adds	r3, #1
1000d82e:	4a0b      	ldr	r2, [pc, #44]	; (1000d85c <aon_sleep_timer_callback+0x40>)
1000d830:	7013      	strb	r3, [r2, #0]
1000d832:	e00d      	b.n	1000d850 <aon_sleep_timer_callback+0x34>
	else
	{
		minute = 0;
1000d834:	2200      	movs	r2, #0
1000d836:	4b09      	ldr	r3, [pc, #36]	; (1000d85c <aon_sleep_timer_callback+0x40>)
1000d838:	701a      	strb	r2, [r3, #0]
		if(hour<23) hour++;
1000d83a:	4b09      	ldr	r3, [pc, #36]	; (1000d860 <aon_sleep_timer_callback+0x44>)
1000d83c:	781b      	ldrb	r3, [r3, #0]
1000d83e:	2b16      	cmp	r3, #22
1000d840:	d803      	bhi.n	1000d84a <aon_sleep_timer_callback+0x2e>
1000d842:	3301      	adds	r3, #1
1000d844:	4a06      	ldr	r2, [pc, #24]	; (1000d860 <aon_sleep_timer_callback+0x44>)
1000d846:	7013      	strb	r3, [r2, #0]
1000d848:	e002      	b.n	1000d850 <aon_sleep_timer_callback+0x34>
		else hour = 0;
1000d84a:	2200      	movs	r2, #0
1000d84c:	4b04      	ldr	r3, [pc, #16]	; (1000d860 <aon_sleep_timer_callback+0x44>)
1000d84e:	701a      	strb	r2, [r3, #0]
	}
	update_watchface();
1000d850:	4b04      	ldr	r3, [pc, #16]	; (1000d864 <aon_sleep_timer_callback+0x48>)
1000d852:	4798      	blx	r3
}
1000d854:	bd10      	pop	{r4, pc}
1000d856:	46c0      	nop			; (mov r8, r8)
1000d858:	100176d2 	.word	0x100176d2
1000d85c:	10015c68 	.word	0x10015c68
1000d860:	10015c6c 	.word	0x10015c6c
1000d864:	1000d685 	.word	0x1000d685

1000d868 <main>:



bool app_exec = true;
int main( void)
{
1000d868:	b5f0      	push	{r4, r5, r6, r7, lr}
1000d86a:	465f      	mov	r7, fp
1000d86c:	4656      	mov	r6, sl
1000d86e:	464d      	mov	r5, r9
1000d870:	4644      	mov	r4, r8
1000d872:	b4f0      	push	{r4, r5, r6, r7}
1000d874:	b089      	sub	sp, #36	; 0x24
	while(dualtimer_get_value(DUALTIMER_TIMER1)){}
}

static void csc_init()
{
	platform_driver_init();
1000d876:	4b5f      	ldr	r3, [pc, #380]	; (1000d9f4 <main+0x18c>)
1000d878:	4798      	blx	r3
	acquire_sleep_lock();
1000d87a:	4b5f      	ldr	r3, [pc, #380]	; (1000d9f8 <main+0x190>)
1000d87c:	4798      	blx	r3

	/* Initialize serial console  */
	serial_console_init();
1000d87e:	4b5f      	ldr	r3, [pc, #380]	; (1000d9fc <main+0x194>)
1000d880:	4798      	blx	r3

	DBG_LOG("Initializing Custom Serial Chat Application");
1000d882:	485f      	ldr	r0, [pc, #380]	; (1000da00 <main+0x198>)
1000d884:	4b5f      	ldr	r3, [pc, #380]	; (1000da04 <main+0x19c>)
1000d886:	4798      	blx	r3
1000d888:	485f      	ldr	r0, [pc, #380]	; (1000da08 <main+0x1a0>)
1000d88a:	4b60      	ldr	r3, [pc, #384]	; (1000da0c <main+0x1a4>)
1000d88c:	4798      	blx	r3
	
	/* Initialize the buffer address and buffer length based on user input */
	csc_prf_buf_init(&send_data[0], APP_TX_BUF_SIZE);
1000d88e:	2196      	movs	r1, #150	; 0x96
1000d890:	485f      	ldr	r0, [pc, #380]	; (1000da10 <main+0x1a8>)
1000d892:	4b60      	ldr	r3, [pc, #384]	; (1000da14 <main+0x1ac>)
1000d894:	4798      	blx	r3
	
	/* initialize the ble chip  and Set the device mac address */
	ble_device_init(NULL);
1000d896:	2000      	movs	r0, #0
1000d898:	4b5f      	ldr	r3, [pc, #380]	; (1000da18 <main+0x1b0>)
1000d89a:	4798      	blx	r3
	
	/* Initializing the profile */
	csc_prf_init(NULL);
1000d89c:	2000      	movs	r0, #0
1000d89e:	4b5f      	ldr	r3, [pc, #380]	; (1000da1c <main+0x1b4>)
1000d8a0:	4798      	blx	r3
	
	/* Started advertisement */
	csc_prf_dev_adv();
1000d8a2:	4b5f      	ldr	r3, [pc, #380]	; (1000da20 <main+0x1b8>)
1000d8a4:	4798      	blx	r3
	
	ble_mgr_events_callback_handler(REGISTER_CALL_BACK,
1000d8a6:	4a5f      	ldr	r2, [pc, #380]	; (1000da24 <main+0x1bc>)
1000d8a8:	2100      	movs	r1, #0
1000d8aa:	2000      	movs	r0, #0
1000d8ac:	4b5e      	ldr	r3, [pc, #376]	; (1000da28 <main+0x1c0>)
1000d8ae:	4798      	blx	r3
	BLE_GAP_EVENT_TYPE,
	app_gap_handle);
	
	/* Register the notification handler */
	notify_recv_ntf_handler(csc_prf_report_ntf_cb);
1000d8b0:	485e      	ldr	r0, [pc, #376]	; (1000da2c <main+0x1c4>)
1000d8b2:	4b5f      	ldr	r3, [pc, #380]	; (1000da30 <main+0x1c8>)
1000d8b4:	4798      	blx	r3
	
	/* Register the user event handler */
	register_ble_user_event_cb(csc_app_send_buf);
1000d8b6:	485f      	ldr	r0, [pc, #380]	; (1000da34 <main+0x1cc>)
1000d8b8:	4b5f      	ldr	r3, [pc, #380]	; (1000da38 <main+0x1d0>)
1000d8ba:	4798      	blx	r3
	
	register_uart_callback(uart_rx_callback);
1000d8bc:	485f      	ldr	r0, [pc, #380]	; (1000da3c <main+0x1d4>)
1000d8be:	4b60      	ldr	r3, [pc, #384]	; (1000da40 <main+0x1d8>)
1000d8c0:	4798      	blx	r3
int main( void)
{
    /* Initialize the SAM system */
    //system_clock_config(CLOCK_RESOURCE_XO_26_MHZ, CLOCK_FREQ_26_MHZ);
	csc_init();
	SysTick->CTRL &= ~SysTick_CTRL_ENABLE_Msk;
1000d8c2:	4a60      	ldr	r2, [pc, #384]	; (1000da44 <main+0x1dc>)
1000d8c4:	6813      	ldr	r3, [r2, #0]
1000d8c6:	2701      	movs	r7, #1
1000d8c8:	43bb      	bics	r3, r7
1000d8ca:	6013      	str	r3, [r2, #0]
{
	//! [setup_6]
	struct aon_sleep_timer_config config_aon_sleep_timer;
	//! [setup_6]
	//! [setup_7]
	aon_sleep_timer_get_config_defaults(&config_aon_sleep_timer);
1000d8cc:	ac01      	add	r4, sp, #4
1000d8ce:	0020      	movs	r0, r4
1000d8d0:	4b5d      	ldr	r3, [pc, #372]	; (1000da48 <main+0x1e0>)
1000d8d2:	4798      	blx	r3
	//! [setup_7]
	//! [setup_8]
	config_aon_sleep_timer.counter = 1966080; //1 min
1000d8d4:	23f0      	movs	r3, #240	; 0xf0
1000d8d6:	035b      	lsls	r3, r3, #13
1000d8d8:	6063      	str	r3, [r4, #4]
	config_aon_sleep_timer.mode = AON_SLEEP_TIMER_RELOAD_MODE;
1000d8da:	2500      	movs	r5, #0
1000d8dc:	7065      	strb	r5, [r4, #1]
	config_aon_sleep_timer.wakeup = AON_SLEEP_TIMER_WAKEUP_ARM_BLE;
1000d8de:	2302      	movs	r3, #2
1000d8e0:	469a      	mov	sl, r3
1000d8e2:	7023      	strb	r3, [r4, #0]
	//! [setup_8]
	//! [setup_9]
	aon_sleep_timer_init(&config_aon_sleep_timer);
1000d8e4:	0020      	movs	r0, r4
1000d8e6:	4b59      	ldr	r3, [pc, #356]	; (1000da4c <main+0x1e4>)
1000d8e8:	4798      	blx	r3
}

static void configure_aon_sleep_timer_callback(void)
{
	//! [setup_register_callback]
	aon_sleep_timer_register_callback(aon_sleep_timer_callback);
1000d8ea:	4859      	ldr	r0, [pc, #356]	; (1000da50 <main+0x1e8>)
1000d8ec:	4b59      	ldr	r3, [pc, #356]	; (1000da54 <main+0x1ec>)
1000d8ee:	4798      	blx	r3
1000d8f0:	4b59      	ldr	r3, [pc, #356]	; (1000da58 <main+0x1f0>)
1000d8f2:	4699      	mov	r9, r3
1000d8f4:	2380      	movs	r3, #128	; 0x80
1000d8f6:	051b      	lsls	r3, r3, #20
1000d8f8:	464a      	mov	r2, r9
1000d8fa:	6013      	str	r3, [r2, #0]
}

static void configure_gpio_pins(void)
{
	struct gpio_config config_gpio_pin;
	gpio_get_config_defaults(&config_gpio_pin);
1000d8fc:	4668      	mov	r0, sp
1000d8fe:	4b57      	ldr	r3, [pc, #348]	; (1000da5c <main+0x1f4>)
1000d900:	469b      	mov	fp, r3
1000d902:	4798      	blx	r3
	config_gpio_pin.direction = GPIO_PIN_DIR_OUTPUT;
1000d904:	466b      	mov	r3, sp
1000d906:	701f      	strb	r7, [r3, #0]
	gpio_pin_set_config(PIN_LP_GPIO_16 , &config_gpio_pin);
1000d908:	4669      	mov	r1, sp
1000d90a:	2010      	movs	r0, #16
1000d90c:	4e54      	ldr	r6, [pc, #336]	; (1000da60 <main+0x1f8>)
1000d90e:	47b0      	blx	r6
	gpio_pin_set_config(PIN_LP_GPIO_20 , &config_gpio_pin);
1000d910:	4669      	mov	r1, sp
1000d912:	2014      	movs	r0, #20
1000d914:	47b0      	blx	r6
	gpio_pin_set_config(LED_0_PIN , &config_gpio_pin);
1000d916:	4669      	mov	r1, sp
1000d918:	2016      	movs	r0, #22
1000d91a:	47b0      	blx	r6
	gpio_pin_set_output_level(PIN_LP_GPIO_16, false);
1000d91c:	2100      	movs	r1, #0
1000d91e:	2010      	movs	r0, #16
1000d920:	4b50      	ldr	r3, [pc, #320]	; (1000da64 <main+0x1fc>)
1000d922:	4698      	mov	r8, r3
1000d924:	4798      	blx	r3
	gpio_pin_set_output_level(PIN_LP_GPIO_20, false);
1000d926:	2100      	movs	r1, #0
1000d928:	2014      	movs	r0, #20
1000d92a:	47c0      	blx	r8
	gpio_pin_set_output_level(LED_0_PIN, false);
1000d92c:	2100      	movs	r1, #0
1000d92e:	2016      	movs	r0, #22
1000d930:	47c0      	blx	r8

	struct gpio_config config_ao_gpio_pin;
	gpio_get_config_defaults(&config_ao_gpio_pin);
1000d932:	0020      	movs	r0, r4
1000d934:	47d8      	blx	fp
	config_ao_gpio_pin.direction = GPIO_PIN_DIR_INPUT;
1000d936:	7025      	strb	r5, [r4, #0]
	config_ao_gpio_pin.input_pull = GPIO_PIN_PULL_NONE;
1000d938:	7065      	strb	r5, [r4, #1]
	config_ao_gpio_pin.aon_wakeup = true;
1000d93a:	70e7      	strb	r7, [r4, #3]
	gpio_pin_set_config(PIN_AO_GPIO_2,&config_ao_gpio_pin);
1000d93c:	0021      	movs	r1, r4
1000d93e:	201d      	movs	r0, #29
1000d940:	47b0      	blx	r6
}

static void configure_gpio_callbalck( void)
{
	gpio_init();
1000d942:	4b49      	ldr	r3, [pc, #292]	; (1000da68 <main+0x200>)
1000d944:	4798      	blx	r3
	gpio_register_callback(PIN_AO_GPIO_2, ao_gpio_callback, GPIO_CALLBACK_RISING);
1000d946:	2202      	movs	r2, #2
1000d948:	4948      	ldr	r1, [pc, #288]	; (1000da6c <main+0x204>)
1000d94a:	201d      	movs	r0, #29
1000d94c:	4b48      	ldr	r3, [pc, #288]	; (1000da70 <main+0x208>)
1000d94e:	4798      	blx	r3
	gpio_enable_callback(PIN_AO_GPIO_2);
1000d950:	201d      	movs	r0, #29
1000d952:	4b48      	ldr	r3, [pc, #288]	; (1000da74 <main+0x20c>)
1000d954:	4798      	blx	r3


static void configure_dualtimer(void)
{
	struct dualtimer_config config_dualtimer;
	dualtimer_get_config_defaults(&config_dualtimer);
1000d956:	0020      	movs	r0, r4
1000d958:	4b47      	ldr	r3, [pc, #284]	; (1000da78 <main+0x210>)
1000d95a:	4798      	blx	r3
	config_dualtimer.timer1.load_value = 0;
1000d95c:	60a5      	str	r5, [r4, #8]
	config_dualtimer.timer2.load_value = 2600000;
1000d95e:	4b47      	ldr	r3, [pc, #284]	; (1000da7c <main+0x214>)
1000d960:	6163      	str	r3, [r4, #20]
	config_dualtimer.timer1.clock_prescaler = DUALTIMER_CLOCK_PRESCALER_DIV1;
1000d962:	70e5      	strb	r5, [r4, #3]
	config_dualtimer.timer1.counter_mode = DUALTIMER_ONE_SHOT_MODE;
1000d964:	7065      	strb	r5, [r4, #1]
	config_dualtimer.timer2.clock_prescaler = DUALTIMER_CLOCK_PRESCALER_DIV1;
1000d966:	73e5      	strb	r5, [r4, #15]
	config_dualtimer.timer2.counter_mode = DUALTIMER_PERIODIC_MODE;
1000d968:	4653      	mov	r3, sl
1000d96a:	7363      	strb	r3, [r4, #13]
	dualtimer_init(&config_dualtimer);
1000d96c:	0020      	movs	r0, r4
1000d96e:	4b44      	ldr	r3, [pc, #272]	; (1000da80 <main+0x218>)
1000d970:	4798      	blx	r3
	gpio_pin_toggle_output_level(PIN_LP_GPIO_20);
}

static void configure_dualtimer_callback(void)
{
	dualtimer_register_callback(DUALTIMER_TIMER2, dualtimer_callback2);
1000d972:	4944      	ldr	r1, [pc, #272]	; (1000da84 <main+0x21c>)
1000d974:	2001      	movs	r0, #1
1000d976:	4b44      	ldr	r3, [pc, #272]	; (1000da88 <main+0x220>)
1000d978:	4798      	blx	r3
1000d97a:	2380      	movs	r3, #128	; 0x80
1000d97c:	01db      	lsls	r3, r3, #7
1000d97e:	464a      	mov	r2, r9
1000d980:	6013      	str	r3, [r2, #0]

	configure_gpio_pins();
	configure_gpio_callbalck();
	configure_dualtimer();
	configure_dualtimer_callback();
	asm volatile ("wfi");
1000d982:	bf30      	wfi
	asm volatile ("nop");
1000d984:	46c0      	nop			; (mov r8, r8)

	Setup(&module);
1000d986:	4c41      	ldr	r4, [pc, #260]	; (1000da8c <main+0x224>)
1000d988:	0020      	movs	r0, r4
1000d98a:	4b41      	ldr	r3, [pc, #260]	; (1000da90 <main+0x228>)
1000d98c:	4798      	blx	r3
	ClearDisplay(&module);
1000d98e:	0020      	movs	r0, r4
1000d990:	4d40      	ldr	r5, [pc, #256]	; (1000da94 <main+0x22c>)
1000d992:	47a8      	blx	r5
	ClearDisplay(&module);
1000d994:	0020      	movs	r0, r4
1000d996:	47a8      	blx	r5
	ClearDisplay(&module);
1000d998:	0020      	movs	r0, r4
1000d99a:	47a8      	blx	r5
	ClearBuffer(frameBuffer);
1000d99c:	483e      	ldr	r0, [pc, #248]	; (1000da98 <main+0x230>)
1000d99e:	4b3f      	ldr	r3, [pc, #252]	; (1000da9c <main+0x234>)
1000d9a0:	4798      	blx	r3
	update_watchface();
1000d9a2:	4b3f      	ldr	r3, [pc, #252]	; (1000daa0 <main+0x238>)
1000d9a4:	4798      	blx	r3


	while(app_exec){
1000d9a6:	4b3f      	ldr	r3, [pc, #252]	; (1000daa4 <main+0x23c>)
1000d9a8:	781b      	ldrb	r3, [r3, #0]
1000d9aa:	2b00      	cmp	r3, #0
1000d9ac:	d01a      	beq.n	1000d9e4 <main+0x17c>
		ble_event_task(BLE_EVENT_TIMEOUT);
1000d9ae:	4e3e      	ldr	r6, [pc, #248]	; (1000daa8 <main+0x240>)
		if(update_watchface_flag) update_watchface();
1000d9b0:	4d3e      	ldr	r5, [pc, #248]	; (1000daac <main+0x244>)
1000d9b2:	4c3b      	ldr	r4, [pc, #236]	; (1000daa0 <main+0x238>)
	ClearBuffer(frameBuffer);
	update_watchface();


	while(app_exec){
		ble_event_task(BLE_EVENT_TIMEOUT);
1000d9b4:	2001      	movs	r0, #1
1000d9b6:	4240      	negs	r0, r0
1000d9b8:	47b0      	blx	r6
		if(update_watchface_flag) update_watchface();
1000d9ba:	782b      	ldrb	r3, [r5, #0]
1000d9bc:	2b00      	cmp	r3, #0
1000d9be:	d000      	beq.n	1000d9c2 <main+0x15a>
1000d9c0:	47a0      	blx	r4
		if(draw_flag) Transfer(frameBuffer, 1, 128, &module); draw_flag = false;
1000d9c2:	4b3b      	ldr	r3, [pc, #236]	; (1000dab0 <main+0x248>)
1000d9c4:	781b      	ldrb	r3, [r3, #0]
1000d9c6:	2b00      	cmp	r3, #0
1000d9c8:	d005      	beq.n	1000d9d6 <main+0x16e>
1000d9ca:	4b30      	ldr	r3, [pc, #192]	; (1000da8c <main+0x224>)
1000d9cc:	2280      	movs	r2, #128	; 0x80
1000d9ce:	2101      	movs	r1, #1
1000d9d0:	4831      	ldr	r0, [pc, #196]	; (1000da98 <main+0x230>)
1000d9d2:	4f38      	ldr	r7, [pc, #224]	; (1000dab4 <main+0x24c>)
1000d9d4:	47b8      	blx	r7
1000d9d6:	2200      	movs	r2, #0
1000d9d8:	4b35      	ldr	r3, [pc, #212]	; (1000dab0 <main+0x248>)
1000d9da:	701a      	strb	r2, [r3, #0]
	ClearDisplay(&module);
	ClearBuffer(frameBuffer);
	update_watchface();


	while(app_exec){
1000d9dc:	4b31      	ldr	r3, [pc, #196]	; (1000daa4 <main+0x23c>)
1000d9de:	781b      	ldrb	r3, [r3, #0]
1000d9e0:	2b00      	cmp	r3, #0
1000d9e2:	d1e7      	bne.n	1000d9b4 <main+0x14c>
		ble_event_task(BLE_EVENT_TIMEOUT);
		if(update_watchface_flag) update_watchface();
		if(draw_flag) Transfer(frameBuffer, 1, 128, &module); draw_flag = false;
	}
	return 0;
}
1000d9e4:	2000      	movs	r0, #0
1000d9e6:	b009      	add	sp, #36	; 0x24
1000d9e8:	bc3c      	pop	{r2, r3, r4, r5}
1000d9ea:	4690      	mov	r8, r2
1000d9ec:	4699      	mov	r9, r3
1000d9ee:	46a2      	mov	sl, r4
1000d9f0:	46ab      	mov	fp, r5
1000d9f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000d9f4:	1000cce5 	.word	0x1000cce5
1000d9f8:	1000d239 	.word	0x1000d239
1000d9fc:	1000c935 	.word	0x1000c935
1000da00:	10015020 	.word	0x10015020
1000da04:	10012481 	.word	0x10012481
1000da08:	10015a24 	.word	0x10015a24
1000da0c:	10012361 	.word	0x10012361
1000da10:	10019d60 	.word	0x10019d60
1000da14:	1000b47d 	.word	0x1000b47d
1000da18:	1000bf41 	.word	0x1000bf41
1000da1c:	1000b489 	.word	0x1000b489
1000da20:	1000b525 	.word	0x1000b525
1000da24:	10015ab8 	.word	0x10015ab8
1000da28:	1000be71 	.word	0x1000be71
1000da2c:	1000d525 	.word	0x1000d525
1000da30:	1000b581 	.word	0x1000b581
1000da34:	1000d4e5 	.word	0x1000d4e5
1000da38:	1000c77d 	.word	0x1000c77d
1000da3c:	1000d45d 	.word	0x1000d45d
1000da40:	1000cab1 	.word	0x1000cab1
1000da44:	e000e010 	.word	0xe000e010
1000da48:	100080e9 	.word	0x100080e9
1000da4c:	10008131 	.word	0x10008131
1000da50:	1000d81d 	.word	0x1000d81d
1000da54:	10008125 	.word	0x10008125
1000da58:	e000e100 	.word	0xe000e100
1000da5c:	10009b91 	.word	0x10009b91
1000da60:	10009ba1 	.word	0x10009ba1
1000da64:	10009d59 	.word	0x10009d59
1000da68:	1000a0a9 	.word	0x1000a0a9
1000da6c:	1000d665 	.word	0x1000d665
1000da70:	10009f7d 	.word	0x10009f7d
1000da74:	1000a04d 	.word	0x1000a04d
1000da78:	100098a1 	.word	0x100098a1
1000da7c:	0027ac40 	.word	0x0027ac40
1000da80:	10009925 	.word	0x10009925
1000da84:	1000d675 	.word	0x1000d675
1000da88:	10009a29 	.word	0x10009a29
1000da8c:	100184d8 	.word	0x100184d8
1000da90:	100096b9 	.word	0x100096b9
1000da94:	100097fd 	.word	0x100097fd
1000da98:	10018560 	.word	0x10018560
1000da9c:	1000983d 	.word	0x1000983d
1000daa0:	1000d685 	.word	0x1000d685
1000daa4:	10015c69 	.word	0x10015c69
1000daa8:	1000c685 	.word	0x1000c685
1000daac:	100176d2 	.word	0x100176d2
1000dab0:	100176d1 	.word	0x100176d1
1000dab4:	1000972d 	.word	0x1000972d

1000dab8 <internal_event_post>:
1000dab8:	b570      	push	{r4, r5, r6, lr}
1000daba:	4d12      	ldr	r5, [pc, #72]	; (1000db04 <internal_event_post+0x4c>)
1000dabc:	682c      	ldr	r4, [r5, #0]
1000dabe:	2c00      	cmp	r4, #0
1000dac0:	d014      	beq.n	1000daec <internal_event_post+0x34>
1000dac2:	6826      	ldr	r6, [r4, #0]
1000dac4:	60e2      	str	r2, [r4, #12]
1000dac6:	602e      	str	r6, [r5, #0]
1000dac8:	2500      	movs	r5, #0
1000daca:	4a0f      	ldr	r2, [pc, #60]	; (1000db08 <internal_event_post+0x50>)
1000dacc:	8123      	strh	r3, [r4, #8]
1000dace:	6813      	ldr	r3, [r2, #0]
1000dad0:	6025      	str	r5, [r4, #0]
1000dad2:	80a0      	strh	r0, [r4, #4]
1000dad4:	80e1      	strh	r1, [r4, #6]
1000dad6:	42ab      	cmp	r3, r5
1000dad8:	d101      	bne.n	1000dade <internal_event_post+0x26>
1000dada:	6014      	str	r4, [r2, #0]
1000dadc:	e011      	b.n	1000db02 <internal_event_post+0x4a>
1000dade:	681a      	ldr	r2, [r3, #0]
1000dae0:	2a00      	cmp	r2, #0
1000dae2:	d001      	beq.n	1000dae8 <internal_event_post+0x30>
1000dae4:	1c13      	adds	r3, r2, #0
1000dae6:	e7fa      	b.n	1000dade <internal_event_post+0x26>
1000dae8:	601c      	str	r4, [r3, #0]
1000daea:	e00a      	b.n	1000db02 <internal_event_post+0x4a>
1000daec:	b2c4      	uxtb	r4, r0
1000daee:	2c00      	cmp	r4, #0
1000daf0:	d107      	bne.n	1000db02 <internal_event_post+0x4a>
1000daf2:	4c06      	ldr	r4, [pc, #24]	; (1000db0c <internal_event_post+0x54>)
1000daf4:	60e2      	str	r2, [r4, #12]
1000daf6:	2201      	movs	r2, #1
1000daf8:	8123      	strh	r3, [r4, #8]
1000dafa:	4b05      	ldr	r3, [pc, #20]	; (1000db10 <internal_event_post+0x58>)
1000dafc:	80a0      	strh	r0, [r4, #4]
1000dafe:	80e1      	strh	r1, [r4, #6]
1000db00:	701a      	strb	r2, [r3, #0]
1000db02:	bd70      	pop	{r4, r5, r6, pc}
1000db04:	100176f0 	.word	0x100176f0
1000db08:	100176ec 	.word	0x100176ec
1000db0c:	100176d8 	.word	0x100176d8
1000db10:	100176e8 	.word	0x100176e8

1000db14 <internal_event_init>:
1000db14:	b510      	push	{r4, lr}
1000db16:	4b08      	ldr	r3, [pc, #32]	; (1000db38 <internal_event_init+0x24>)
1000db18:	0900      	lsrs	r0, r0, #4
1000db1a:	0100      	lsls	r0, r0, #4
1000db1c:	681a      	ldr	r2, [r3, #0]
1000db1e:	1808      	adds	r0, r1, r0
1000db20:	4281      	cmp	r1, r0
1000db22:	d003      	beq.n	1000db2c <internal_event_init+0x18>
1000db24:	600a      	str	r2, [r1, #0]
1000db26:	1c0a      	adds	r2, r1, #0
1000db28:	3110      	adds	r1, #16
1000db2a:	e7f9      	b.n	1000db20 <internal_event_init+0xc>
1000db2c:	601a      	str	r2, [r3, #0]
1000db2e:	2200      	movs	r2, #0
1000db30:	4b02      	ldr	r3, [pc, #8]	; (1000db3c <internal_event_init+0x28>)
1000db32:	601a      	str	r2, [r3, #0]
1000db34:	bd10      	pop	{r4, pc}
1000db36:	46c0      	nop			; (mov r8, r8)
1000db38:	100176f0 	.word	0x100176f0
1000db3c:	100176ec 	.word	0x100176ec

1000db40 <special_events_handler>:
1000db40:	b538      	push	{r3, r4, r5, lr}
1000db42:	4c1b      	ldr	r4, [pc, #108]	; (1000dbb0 <special_events_handler+0x70>)
1000db44:	1c03      	adds	r3, r0, #0
1000db46:	8825      	ldrh	r5, [r4, #0]
1000db48:	1c08      	adds	r0, r1, #0
1000db4a:	1c21      	adds	r1, r4, #0
1000db4c:	429d      	cmp	r5, r3
1000db4e:	d107      	bne.n	1000db60 <special_events_handler+0x20>
1000db50:	88a5      	ldrh	r5, [r4, #4]
1000db52:	4285      	cmp	r5, r0
1000db54:	d104      	bne.n	1000db60 <special_events_handler+0x20>
1000db56:	2301      	movs	r3, #1
1000db58:	425b      	negs	r3, r3
1000db5a:	8023      	strh	r3, [r4, #0]
1000db5c:	60a2      	str	r2, [r4, #8]
1000db5e:	e009      	b.n	1000db74 <special_events_handler+0x34>
1000db60:	884c      	ldrh	r4, [r1, #2]
1000db62:	429c      	cmp	r4, r3
1000db64:	d10a      	bne.n	1000db7c <special_events_handler+0x3c>
1000db66:	888c      	ldrh	r4, [r1, #4]
1000db68:	4284      	cmp	r4, r0
1000db6a:	d107      	bne.n	1000db7c <special_events_handler+0x3c>
1000db6c:	2301      	movs	r3, #1
1000db6e:	425b      	negs	r3, r3
1000db70:	804b      	strh	r3, [r1, #2]
1000db72:	608a      	str	r2, [r1, #8]
1000db74:	4b0f      	ldr	r3, [pc, #60]	; (1000dbb4 <special_events_handler+0x74>)
1000db76:	4798      	blx	r3
1000db78:	2001      	movs	r0, #1
1000db7a:	e017      	b.n	1000dbac <special_events_handler+0x6c>
1000db7c:	490e      	ldr	r1, [pc, #56]	; (1000dbb8 <special_events_handler+0x78>)
1000db7e:	428b      	cmp	r3, r1
1000db80:	d00e      	beq.n	1000dba0 <special_events_handler+0x60>
1000db82:	490e      	ldr	r1, [pc, #56]	; (1000dbbc <special_events_handler+0x7c>)
1000db84:	428b      	cmp	r3, r1
1000db86:	d007      	beq.n	1000db98 <special_events_handler+0x58>
1000db88:	490d      	ldr	r1, [pc, #52]	; (1000dbc0 <special_events_handler+0x80>)
1000db8a:	2000      	movs	r0, #0
1000db8c:	428b      	cmp	r3, r1
1000db8e:	d10d      	bne.n	1000dbac <special_events_handler+0x6c>
1000db90:	1c10      	adds	r0, r2, #0
1000db92:	4b0c      	ldr	r3, [pc, #48]	; (1000dbc4 <special_events_handler+0x84>)
1000db94:	4798      	blx	r3
1000db96:	e7ef      	b.n	1000db78 <special_events_handler+0x38>
1000db98:	1c11      	adds	r1, r2, #0
1000db9a:	4b0b      	ldr	r3, [pc, #44]	; (1000dbc8 <special_events_handler+0x88>)
1000db9c:	2200      	movs	r2, #0
1000db9e:	e002      	b.n	1000dba6 <special_events_handler+0x66>
1000dba0:	1c11      	adds	r1, r2, #0
1000dba2:	2200      	movs	r2, #0
1000dba4:	4b09      	ldr	r3, [pc, #36]	; (1000dbcc <special_events_handler+0x8c>)
1000dba6:	4798      	blx	r3
1000dba8:	4243      	negs	r3, r0
1000dbaa:	4158      	adcs	r0, r3
1000dbac:	bd38      	pop	{r3, r4, r5, pc}
1000dbae:	46c0      	nop			; (mov r8, r8)
1000dbb0:	1001a1f8 	.word	0x1001a1f8
1000dbb4:	1000f685 	.word	0x1000f685
1000dbb8:	00000e13 	.word	0x00000e13
1000dbbc:	00000e15 	.word	0x00000e15
1000dbc0:	00000e01 	.word	0x00000e01
1000dbc4:	1000f9f5 	.word	0x1000f9f5
1000dbc8:	1000fbb5 	.word	0x1000fbb5
1000dbcc:	1000fc8d 	.word	0x1000fc8d

1000dbd0 <at_ble_event_get>:
1000dbd0:	2300      	movs	r3, #0
1000dbd2:	b5f0      	push	{r4, r5, r6, r7, lr}
1000dbd4:	b087      	sub	sp, #28
1000dbd6:	9204      	str	r2, [sp, #16]
1000dbd8:	7003      	strb	r3, [r0, #0]
1000dbda:	9b04      	ldr	r3, [sp, #16]
1000dbdc:	9003      	str	r0, [sp, #12]
1000dbde:	3b01      	subs	r3, #1
1000dbe0:	1c0d      	adds	r5, r1, #0
1000dbe2:	9305      	str	r3, [sp, #20]
1000dbe4:	3303      	adds	r3, #3
1000dbe6:	d802      	bhi.n	1000dbee <at_ble_event_get+0x1e>
1000dbe8:	9804      	ldr	r0, [sp, #16]
1000dbea:	4bae      	ldr	r3, [pc, #696]	; (1000dea4 <at_ble_event_get+0x2d4>)
1000dbec:	4798      	blx	r3
1000dbee:	9b05      	ldr	r3, [sp, #20]
1000dbf0:	4cad      	ldr	r4, [pc, #692]	; (1000dea8 <at_ble_event_get+0x2d8>)
1000dbf2:	3303      	adds	r3, #3
1000dbf4:	d902      	bls.n	1000dbfc <at_ble_event_get+0x2c>
1000dbf6:	2300      	movs	r3, #0
1000dbf8:	9302      	str	r3, [sp, #8]
1000dbfa:	e015      	b.n	1000dc28 <at_ble_event_get+0x58>
1000dbfc:	2300      	movs	r3, #0
1000dbfe:	9302      	str	r3, [sp, #8]
1000dc00:	6823      	ldr	r3, [r4, #0]
1000dc02:	2b00      	cmp	r3, #0
1000dc04:	d113      	bne.n	1000dc2e <at_ble_event_get+0x5e>
1000dc06:	9b02      	ldr	r3, [sp, #8]
1000dc08:	2bd0      	cmp	r3, #208	; 0xd0
1000dc0a:	d100      	bne.n	1000dc0e <at_ble_event_get+0x3e>
1000dc0c:	e2da      	b.n	1000e1c4 <at_ble_event_get+0x5f4>
1000dc0e:	9804      	ldr	r0, [sp, #16]
1000dc10:	4ba6      	ldr	r3, [pc, #664]	; (1000deac <at_ble_event_get+0x2dc>)
1000dc12:	4798      	blx	r3
1000dc14:	9002      	str	r0, [sp, #8]
1000dc16:	2802      	cmp	r0, #2
1000dc18:	d1f2      	bne.n	1000dc00 <at_ble_event_get+0x30>
1000dc1a:	e03f      	b.n	1000dc9c <at_ble_event_get+0xcc>
1000dc1c:	9804      	ldr	r0, [sp, #16]
1000dc1e:	4ba3      	ldr	r3, [pc, #652]	; (1000deac <at_ble_event_get+0x2dc>)
1000dc20:	4798      	blx	r3
1000dc22:	9002      	str	r0, [sp, #8]
1000dc24:	2802      	cmp	r0, #2
1000dc26:	d039      	beq.n	1000dc9c <at_ble_event_get+0xcc>
1000dc28:	6823      	ldr	r3, [r4, #0]
1000dc2a:	2b00      	cmp	r3, #0
1000dc2c:	d0f6      	beq.n	1000dc1c <at_ble_event_get+0x4c>
1000dc2e:	9b02      	ldr	r3, [sp, #8]
1000dc30:	2bd0      	cmp	r3, #208	; 0xd0
1000dc32:	d100      	bne.n	1000dc36 <at_ble_event_get+0x66>
1000dc34:	e2c6      	b.n	1000e1c4 <at_ble_event_get+0x5f4>
1000dc36:	9b02      	ldr	r3, [sp, #8]
1000dc38:	3b03      	subs	r3, #3
1000dc3a:	1e5a      	subs	r2, r3, #1
1000dc3c:	4193      	sbcs	r3, r2
1000dc3e:	9a02      	ldr	r2, [sp, #8]
1000dc40:	425b      	negs	r3, r3
1000dc42:	401a      	ands	r2, r3
1000dc44:	6823      	ldr	r3, [r4, #0]
1000dc46:	9202      	str	r2, [sp, #8]
1000dc48:	2b00      	cmp	r3, #0
1000dc4a:	d100      	bne.n	1000dc4e <at_ble_event_get+0x7e>
1000dc4c:	e2c2      	b.n	1000e1d4 <at_ble_event_get+0x604>
1000dc4e:	681a      	ldr	r2, [r3, #0]
1000dc50:	68de      	ldr	r6, [r3, #12]
1000dc52:	6022      	str	r2, [r4, #0]
1000dc54:	88da      	ldrh	r2, [r3, #6]
1000dc56:	9201      	str	r2, [sp, #4]
1000dc58:	4a95      	ldr	r2, [pc, #596]	; (1000deb0 <at_ble_event_get+0x2e0>)
1000dc5a:	889c      	ldrh	r4, [r3, #4]
1000dc5c:	6811      	ldr	r1, [r2, #0]
1000dc5e:	6013      	str	r3, [r2, #0]
1000dc60:	6019      	str	r1, [r3, #0]
1000dc62:	4b94      	ldr	r3, [pc, #592]	; (1000deb4 <at_ble_event_get+0x2e4>)
1000dc64:	781b      	ldrb	r3, [r3, #0]
1000dc66:	2b01      	cmp	r3, #1
1000dc68:	d10f      	bne.n	1000dc8a <at_ble_event_get+0xba>
1000dc6a:	4b93      	ldr	r3, [pc, #588]	; (1000deb8 <at_ble_event_get+0x2e8>)
1000dc6c:	4a92      	ldr	r2, [pc, #584]	; (1000deb8 <at_ble_event_get+0x2e8>)
1000dc6e:	8898      	ldrh	r0, [r3, #4]
1000dc70:	88d9      	ldrh	r1, [r3, #6]
1000dc72:	68d2      	ldr	r2, [r2, #12]
1000dc74:	891b      	ldrh	r3, [r3, #8]
1000dc76:	4f91      	ldr	r7, [pc, #580]	; (1000debc <at_ble_event_get+0x2ec>)
1000dc78:	47b8      	blx	r7
1000dc7a:	2210      	movs	r2, #16
1000dc7c:	4b90      	ldr	r3, [pc, #576]	; (1000dec0 <at_ble_event_get+0x2f0>)
1000dc7e:	488e      	ldr	r0, [pc, #568]	; (1000deb8 <at_ble_event_get+0x2e8>)
1000dc80:	2100      	movs	r1, #0
1000dc82:	4798      	blx	r3
1000dc84:	2300      	movs	r3, #0
1000dc86:	4a8b      	ldr	r2, [pc, #556]	; (1000deb4 <at_ble_event_get+0x2e4>)
1000dc88:	7013      	strb	r3, [r2, #0]
1000dc8a:	9b02      	ldr	r3, [sp, #8]
1000dc8c:	2b00      	cmp	r3, #0
1000dc8e:	d114      	bne.n	1000dcba <at_ble_event_get+0xea>
1000dc90:	4b8c      	ldr	r3, [pc, #560]	; (1000dec4 <at_ble_event_get+0x2f4>)
1000dc92:	429c      	cmp	r4, r3
1000dc94:	d009      	beq.n	1000dcaa <at_ble_event_get+0xda>
1000dc96:	4b8c      	ldr	r3, [pc, #560]	; (1000dec8 <at_ble_event_get+0x2f8>)
1000dc98:	429c      	cmp	r4, r3
1000dc9a:	d127      	bne.n	1000dcec <at_ble_event_get+0x11c>
1000dc9c:	233a      	movs	r3, #58	; 0x3a
1000dc9e:	9a03      	ldr	r2, [sp, #12]
1000dca0:	7013      	strb	r3, [r2, #0]
1000dca2:	2300      	movs	r3, #0
1000dca4:	9302      	str	r3, [sp, #8]
1000dca6:	1c1d      	adds	r5, r3, #0
1000dca8:	e007      	b.n	1000dcba <at_ble_event_get+0xea>
1000dcaa:	9b01      	ldr	r3, [sp, #4]
1000dcac:	42a3      	cmp	r3, r4
1000dcae:	d000      	beq.n	1000dcb2 <at_ble_event_get+0xe2>
1000dcb0:	e28a      	b.n	1000e1c8 <at_ble_event_get+0x5f8>
1000dcb2:	2338      	movs	r3, #56	; 0x38
1000dcb4:	9a03      	ldr	r2, [sp, #12]
1000dcb6:	7013      	strb	r3, [r2, #0]
1000dcb8:	602e      	str	r6, [r5, #0]
1000dcba:	9b03      	ldr	r3, [sp, #12]
1000dcbc:	781b      	ldrb	r3, [r3, #0]
1000dcbe:	2b3b      	cmp	r3, #59	; 0x3b
1000dcc0:	d101      	bne.n	1000dcc6 <at_ble_event_get+0xf6>
1000dcc2:	4b82      	ldr	r3, [pc, #520]	; (1000decc <at_ble_event_get+0x2fc>)
1000dcc4:	4798      	blx	r3
1000dcc6:	9b03      	ldr	r3, [sp, #12]
1000dcc8:	781b      	ldrb	r3, [r3, #0]
1000dcca:	2b3b      	cmp	r3, #59	; 0x3b
1000dccc:	d003      	beq.n	1000dcd6 <at_ble_event_get+0x106>
1000dcce:	9b05      	ldr	r3, [sp, #20]
1000dcd0:	3303      	adds	r3, #3
1000dcd2:	d904      	bls.n	1000dcde <at_ble_event_get+0x10e>
1000dcd4:	e283      	b.n	1000e1de <at_ble_event_get+0x60e>
1000dcd6:	9b02      	ldr	r3, [sp, #8]
1000dcd8:	2b00      	cmp	r3, #0
1000dcda:	d088      	beq.n	1000dbee <at_ble_event_get+0x1e>
1000dcdc:	e7f7      	b.n	1000dcce <at_ble_event_get+0xfe>
1000dcde:	9b02      	ldr	r3, [sp, #8]
1000dce0:	2bd0      	cmp	r3, #208	; 0xd0
1000dce2:	d100      	bne.n	1000dce6 <at_ble_event_get+0x116>
1000dce4:	e27b      	b.n	1000e1de <at_ble_event_get+0x60e>
1000dce6:	4b7a      	ldr	r3, [pc, #488]	; (1000ded0 <at_ble_event_get+0x300>)
1000dce8:	4798      	blx	r3
1000dcea:	e278      	b.n	1000e1de <at_ble_event_get+0x60e>
1000dcec:	9b01      	ldr	r3, [sp, #4]
1000dcee:	2bbb      	cmp	r3, #187	; 0xbb
1000dcf0:	d125      	bne.n	1000dd3e <at_ble_event_get+0x16e>
1000dcf2:	2cbb      	cmp	r4, #187	; 0xbb
1000dcf4:	d123      	bne.n	1000dd3e <at_ble_event_get+0x16e>
1000dcf6:	466b      	mov	r3, sp
1000dcf8:	891b      	ldrh	r3, [r3, #8]
1000dcfa:	80ab      	strh	r3, [r5, #4]
1000dcfc:	78b3      	ldrb	r3, [r6, #2]
1000dcfe:	7872      	ldrb	r2, [r6, #1]
1000dd00:	78f0      	ldrb	r0, [r6, #3]
1000dd02:	021b      	lsls	r3, r3, #8
1000dd04:	4313      	orrs	r3, r2
1000dd06:	7971      	ldrb	r1, [r6, #5]
1000dd08:	7932      	ldrb	r2, [r6, #4]
1000dd0a:	70a8      	strb	r0, [r5, #2]
1000dd0c:	4871      	ldr	r0, [pc, #452]	; (1000ded4 <at_ble_event_get+0x304>)
1000dd0e:	802b      	strh	r3, [r5, #0]
1000dd10:	4283      	cmp	r3, r0
1000dd12:	d806      	bhi.n	1000dd22 <at_ble_event_get+0x152>
1000dd14:	4a70      	ldr	r2, [pc, #448]	; (1000ded8 <at_ble_event_get+0x308>)
1000dd16:	4293      	cmp	r3, r2
1000dd18:	d20b      	bcs.n	1000dd32 <at_ble_event_get+0x162>
1000dd1a:	4a70      	ldr	r2, [pc, #448]	; (1000dedc <at_ble_event_get+0x30c>)
1000dd1c:	4293      	cmp	r3, r2
1000dd1e:	d008      	beq.n	1000dd32 <at_ble_event_get+0x162>
1000dd20:	e009      	b.n	1000dd36 <at_ble_event_get+0x166>
1000dd22:	486f      	ldr	r0, [pc, #444]	; (1000dee0 <at_ble_event_get+0x310>)
1000dd24:	4283      	cmp	r3, r0
1000dd26:	d106      	bne.n	1000dd36 <at_ble_event_get+0x166>
1000dd28:	020b      	lsls	r3, r1, #8
1000dd2a:	4313      	orrs	r3, r2
1000dd2c:	80ab      	strh	r3, [r5, #4]
1000dd2e:	2337      	movs	r3, #55	; 0x37
1000dd30:	e002      	b.n	1000dd38 <at_ble_event_get+0x168>
1000dd32:	2336      	movs	r3, #54	; 0x36
1000dd34:	e000      	b.n	1000dd38 <at_ble_event_get+0x168>
1000dd36:	2300      	movs	r3, #0
1000dd38:	9a03      	ldr	r2, [sp, #12]
1000dd3a:	7013      	strb	r3, [r2, #0]
1000dd3c:	e7bd      	b.n	1000dcba <at_ble_event_get+0xea>
1000dd3e:	4b69      	ldr	r3, [pc, #420]	; (1000dee4 <at_ble_event_get+0x314>)
1000dd40:	429c      	cmp	r4, r3
1000dd42:	d100      	bne.n	1000dd46 <at_ble_event_get+0x176>
1000dd44:	e144      	b.n	1000dfd0 <at_ble_event_get+0x400>
1000dd46:	d865      	bhi.n	1000de14 <at_ble_event_get+0x244>
1000dd48:	4b67      	ldr	r3, [pc, #412]	; (1000dee8 <at_ble_event_get+0x318>)
1000dd4a:	429c      	cmp	r4, r3
1000dd4c:	d100      	bne.n	1000dd50 <at_ble_event_get+0x180>
1000dd4e:	e1d5      	b.n	1000e0fc <at_ble_event_get+0x52c>
1000dd50:	d82f      	bhi.n	1000ddb2 <at_ble_event_get+0x1e2>
1000dd52:	4b66      	ldr	r3, [pc, #408]	; (1000deec <at_ble_event_get+0x31c>)
1000dd54:	429c      	cmp	r4, r3
1000dd56:	d100      	bne.n	1000dd5a <at_ble_event_get+0x18a>
1000dd58:	e1e0      	b.n	1000e11c <at_ble_event_get+0x54c>
1000dd5a:	d813      	bhi.n	1000dd84 <at_ble_event_get+0x1b4>
1000dd5c:	4b64      	ldr	r3, [pc, #400]	; (1000def0 <at_ble_event_get+0x320>)
1000dd5e:	429c      	cmp	r4, r3
1000dd60:	d100      	bne.n	1000dd64 <at_ble_event_get+0x194>
1000dd62:	e1a3      	b.n	1000e0ac <at_ble_event_get+0x4dc>
1000dd64:	d804      	bhi.n	1000dd70 <at_ble_event_get+0x1a0>
1000dd66:	2638      	movs	r6, #56	; 0x38
1000dd68:	42b4      	cmp	r4, r6
1000dd6a:	d100      	bne.n	1000dd6e <at_ble_event_get+0x19e>
1000dd6c:	e225      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000dd6e:	e117      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000dd70:	4b60      	ldr	r3, [pc, #384]	; (1000def4 <at_ble_event_get+0x324>)
1000dd72:	429c      	cmp	r4, r3
1000dd74:	d100      	bne.n	1000dd78 <at_ble_event_get+0x1a8>
1000dd76:	e19f      	b.n	1000e0b8 <at_ble_event_get+0x4e8>
1000dd78:	33fe      	adds	r3, #254	; 0xfe
1000dd7a:	33ff      	adds	r3, #255	; 0xff
1000dd7c:	429c      	cmp	r4, r3
1000dd7e:	d100      	bne.n	1000dd82 <at_ble_event_get+0x1b2>
1000dd80:	e1d3      	b.n	1000e12a <at_ble_event_get+0x55a>
1000dd82:	e10d      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000dd84:	4b5c      	ldr	r3, [pc, #368]	; (1000def8 <at_ble_event_get+0x328>)
1000dd86:	429c      	cmp	r4, r3
1000dd88:	d100      	bne.n	1000dd8c <at_ble_event_get+0x1bc>
1000dd8a:	e1a9      	b.n	1000e0e0 <at_ble_event_get+0x510>
1000dd8c:	d808      	bhi.n	1000dda0 <at_ble_event_get+0x1d0>
1000dd8e:	4b5b      	ldr	r3, [pc, #364]	; (1000defc <at_ble_event_get+0x32c>)
1000dd90:	429c      	cmp	r4, r3
1000dd92:	d100      	bne.n	1000dd96 <at_ble_event_get+0x1c6>
1000dd94:	e196      	b.n	1000e0c4 <at_ble_event_get+0x4f4>
1000dd96:	4b5a      	ldr	r3, [pc, #360]	; (1000df00 <at_ble_event_get+0x330>)
1000dd98:	429c      	cmp	r4, r3
1000dd9a:	d100      	bne.n	1000dd9e <at_ble_event_get+0x1ce>
1000dd9c:	e199      	b.n	1000e0d2 <at_ble_event_get+0x502>
1000dd9e:	e0ff      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000dda0:	4b58      	ldr	r3, [pc, #352]	; (1000df04 <at_ble_event_get+0x334>)
1000dda2:	429c      	cmp	r4, r3
1000dda4:	d100      	bne.n	1000dda8 <at_ble_event_get+0x1d8>
1000dda6:	e1a2      	b.n	1000e0ee <at_ble_event_get+0x51e>
1000dda8:	4b57      	ldr	r3, [pc, #348]	; (1000df08 <at_ble_event_get+0x338>)
1000ddaa:	429c      	cmp	r4, r3
1000ddac:	d100      	bne.n	1000ddb0 <at_ble_event_get+0x1e0>
1000ddae:	e1d4      	b.n	1000e15a <at_ble_event_get+0x58a>
1000ddb0:	e0f6      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000ddb2:	4b56      	ldr	r3, [pc, #344]	; (1000df0c <at_ble_event_get+0x33c>)
1000ddb4:	429c      	cmp	r4, r3
1000ddb6:	d100      	bne.n	1000ddba <at_ble_event_get+0x1ea>
1000ddb8:	e1c8      	b.n	1000e14c <at_ble_event_get+0x57c>
1000ddba:	d812      	bhi.n	1000dde2 <at_ble_event_get+0x212>
1000ddbc:	4b54      	ldr	r3, [pc, #336]	; (1000df10 <at_ble_event_get+0x340>)
1000ddbe:	429c      	cmp	r4, r3
1000ddc0:	d100      	bne.n	1000ddc4 <at_ble_event_get+0x1f4>
1000ddc2:	e1d1      	b.n	1000e168 <at_ble_event_get+0x598>
1000ddc4:	d804      	bhi.n	1000ddd0 <at_ble_event_get+0x200>
1000ddc6:	4b53      	ldr	r3, [pc, #332]	; (1000df14 <at_ble_event_get+0x344>)
1000ddc8:	429c      	cmp	r4, r3
1000ddca:	d100      	bne.n	1000ddce <at_ble_event_get+0x1fe>
1000ddcc:	e19b      	b.n	1000e106 <at_ble_event_get+0x536>
1000ddce:	e0e7      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000ddd0:	4b51      	ldr	r3, [pc, #324]	; (1000df18 <at_ble_event_get+0x348>)
1000ddd2:	429c      	cmp	r4, r3
1000ddd4:	d100      	bne.n	1000ddd8 <at_ble_event_get+0x208>
1000ddd6:	e1ad      	b.n	1000e134 <at_ble_event_get+0x564>
1000ddd8:	4b50      	ldr	r3, [pc, #320]	; (1000df1c <at_ble_event_get+0x34c>)
1000ddda:	429c      	cmp	r4, r3
1000dddc:	d100      	bne.n	1000dde0 <at_ble_event_get+0x210>
1000ddde:	e1b0      	b.n	1000e142 <at_ble_event_get+0x572>
1000dde0:	e0de      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000dde2:	4b4f      	ldr	r3, [pc, #316]	; (1000df20 <at_ble_event_get+0x350>)
1000dde4:	429c      	cmp	r4, r3
1000dde6:	d100      	bne.n	1000ddea <at_ble_event_get+0x21a>
1000dde8:	e0e0      	b.n	1000dfac <at_ble_event_get+0x3dc>
1000ddea:	d809      	bhi.n	1000de00 <at_ble_event_get+0x230>
1000ddec:	3b08      	subs	r3, #8
1000ddee:	429c      	cmp	r4, r3
1000ddf0:	d100      	bne.n	1000ddf4 <at_ble_event_get+0x224>
1000ddf2:	e0d7      	b.n	1000dfa4 <at_ble_event_get+0x3d4>
1000ddf4:	4b4b      	ldr	r3, [pc, #300]	; (1000df24 <at_ble_event_get+0x354>)
1000ddf6:	2639      	movs	r6, #57	; 0x39
1000ddf8:	429c      	cmp	r4, r3
1000ddfa:	d100      	bne.n	1000ddfe <at_ble_event_get+0x22e>
1000ddfc:	e1dd      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000ddfe:	e0cf      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000de00:	23d1      	movs	r3, #209	; 0xd1
1000de02:	011b      	lsls	r3, r3, #4
1000de04:	429c      	cmp	r4, r3
1000de06:	d100      	bne.n	1000de0a <at_ble_event_get+0x23a>
1000de08:	e0d6      	b.n	1000dfb8 <at_ble_event_get+0x3e8>
1000de0a:	4b47      	ldr	r3, [pc, #284]	; (1000df28 <at_ble_event_get+0x358>)
1000de0c:	429c      	cmp	r4, r3
1000de0e:	d100      	bne.n	1000de12 <at_ble_event_get+0x242>
1000de10:	e0d8      	b.n	1000dfc4 <at_ble_event_get+0x3f4>
1000de12:	e0c5      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000de14:	4b45      	ldr	r3, [pc, #276]	; (1000df2c <at_ble_event_get+0x35c>)
1000de16:	429c      	cmp	r4, r3
1000de18:	d100      	bne.n	1000de1c <at_ble_event_get+0x24c>
1000de1a:	e117      	b.n	1000e04c <at_ble_event_get+0x47c>
1000de1c:	d82e      	bhi.n	1000de7c <at_ble_event_get+0x2ac>
1000de1e:	4b44      	ldr	r3, [pc, #272]	; (1000df30 <at_ble_event_get+0x360>)
1000de20:	429c      	cmp	r4, r3
1000de22:	d100      	bne.n	1000de26 <at_ble_event_get+0x256>
1000de24:	e13d      	b.n	1000e0a2 <at_ble_event_get+0x4d2>
1000de26:	d812      	bhi.n	1000de4e <at_ble_event_get+0x27e>
1000de28:	4b42      	ldr	r3, [pc, #264]	; (1000df34 <at_ble_event_get+0x364>)
1000de2a:	429c      	cmp	r4, r3
1000de2c:	d100      	bne.n	1000de30 <at_ble_event_get+0x260>
1000de2e:	e0e8      	b.n	1000e002 <at_ble_event_get+0x432>
1000de30:	d804      	bhi.n	1000de3c <at_ble_event_get+0x26c>
1000de32:	3b03      	subs	r3, #3
1000de34:	429c      	cmp	r4, r3
1000de36:	d100      	bne.n	1000de3a <at_ble_event_get+0x26a>
1000de38:	e0d0      	b.n	1000dfdc <at_ble_event_get+0x40c>
1000de3a:	e0b1      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000de3c:	4b3e      	ldr	r3, [pc, #248]	; (1000df38 <at_ble_event_get+0x368>)
1000de3e:	429c      	cmp	r4, r3
1000de40:	d100      	bne.n	1000de44 <at_ble_event_get+0x274>
1000de42:	e0d0      	b.n	1000dfe6 <at_ble_event_get+0x416>
1000de44:	4b3d      	ldr	r3, [pc, #244]	; (1000df3c <at_ble_event_get+0x36c>)
1000de46:	429c      	cmp	r4, r3
1000de48:	d100      	bne.n	1000de4c <at_ble_event_get+0x27c>
1000de4a:	e0f9      	b.n	1000e040 <at_ble_event_get+0x470>
1000de4c:	e0a8      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000de4e:	4b3c      	ldr	r3, [pc, #240]	; (1000df40 <at_ble_event_get+0x370>)
1000de50:	429c      	cmp	r4, r3
1000de52:	d100      	bne.n	1000de56 <at_ble_event_get+0x286>
1000de54:	e0db      	b.n	1000e00e <at_ble_event_get+0x43e>
1000de56:	d808      	bhi.n	1000de6a <at_ble_event_get+0x29a>
1000de58:	4b3a      	ldr	r3, [pc, #232]	; (1000df44 <at_ble_event_get+0x374>)
1000de5a:	429c      	cmp	r4, r3
1000de5c:	d100      	bne.n	1000de60 <at_ble_event_get+0x290>
1000de5e:	e11b      	b.n	1000e098 <at_ble_event_get+0x4c8>
1000de60:	4b39      	ldr	r3, [pc, #228]	; (1000df48 <at_ble_event_get+0x378>)
1000de62:	429c      	cmp	r4, r3
1000de64:	d100      	bne.n	1000de68 <at_ble_event_get+0x298>
1000de66:	e0d8      	b.n	1000e01a <at_ble_event_get+0x44a>
1000de68:	e09a      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000de6a:	4b38      	ldr	r3, [pc, #224]	; (1000df4c <at_ble_event_get+0x37c>)
1000de6c:	429c      	cmp	r4, r3
1000de6e:	d100      	bne.n	1000de72 <at_ble_event_get+0x2a2>
1000de70:	e0d8      	b.n	1000e024 <at_ble_event_get+0x454>
1000de72:	4b37      	ldr	r3, [pc, #220]	; (1000df50 <at_ble_event_get+0x380>)
1000de74:	429c      	cmp	r4, r3
1000de76:	d100      	bne.n	1000de7a <at_ble_event_get+0x2aa>
1000de78:	e0db      	b.n	1000e032 <at_ble_event_get+0x462>
1000de7a:	e091      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000de7c:	4b35      	ldr	r3, [pc, #212]	; (1000df54 <at_ble_event_get+0x384>)
1000de7e:	429c      	cmp	r4, r3
1000de80:	d100      	bne.n	1000de84 <at_ble_event_get+0x2b4>
1000de82:	e0f7      	b.n	1000e074 <at_ble_event_get+0x4a4>
1000de84:	d876      	bhi.n	1000df74 <at_ble_event_get+0x3a4>
1000de86:	4b34      	ldr	r3, [pc, #208]	; (1000df58 <at_ble_event_get+0x388>)
1000de88:	429c      	cmp	r4, r3
1000de8a:	d100      	bne.n	1000de8e <at_ble_event_get+0x2be>
1000de8c:	e0f8      	b.n	1000e080 <at_ble_event_get+0x4b0>
1000de8e:	d869      	bhi.n	1000df64 <at_ble_event_get+0x394>
1000de90:	4b32      	ldr	r3, [pc, #200]	; (1000df5c <at_ble_event_get+0x38c>)
1000de92:	429c      	cmp	r4, r3
1000de94:	d100      	bne.n	1000de98 <at_ble_event_get+0x2c8>
1000de96:	e0e0      	b.n	1000e05a <at_ble_event_get+0x48a>
1000de98:	4b31      	ldr	r3, [pc, #196]	; (1000df60 <at_ble_event_get+0x390>)
1000de9a:	429c      	cmp	r4, r3
1000de9c:	d100      	bne.n	1000dea0 <at_ble_event_get+0x2d0>
1000de9e:	e0a9      	b.n	1000dff4 <at_ble_event_get+0x424>
1000dea0:	e07e      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000dea2:	46c0      	nop			; (mov r8, r8)
1000dea4:	1000f6bd 	.word	0x1000f6bd
1000dea8:	100176ec 	.word	0x100176ec
1000deac:	1000cfd5 	.word	0x1000cfd5
1000deb0:	100176f0 	.word	0x100176f0
1000deb4:	100176e8 	.word	0x100176e8
1000deb8:	100176d8 	.word	0x100176d8
1000debc:	1000dab9 	.word	0x1000dab9
1000dec0:	10012219 	.word	0x10012219
1000dec4:	0000ffff 	.word	0x0000ffff
1000dec8:	0000fffe 	.word	0x0000fffe
1000decc:	1000d24d 	.word	0x1000d24d
1000ded0:	1000f6bf 	.word	0x1000f6bf
1000ded4:	0000201e 	.word	0x0000201e
1000ded8:	0000201d 	.word	0x0000201d
1000dedc:	00000c03 	.word	0x00000c03
1000dee0:	0000201f 	.word	0x0000201f
1000dee4:	00000d1c 	.word	0x00000d1c
1000dee8:	00000c0c 	.word	0x00000c0c
1000deec:	00000c02 	.word	0x00000c02
1000def0:	00000a02 	.word	0x00000a02
1000def4:	00000a03 	.word	0x00000a03
1000def8:	00000c06 	.word	0x00000c06
1000defc:	00000c04 	.word	0x00000c04
1000df00:	00000c05 	.word	0x00000c05
1000df04:	00000c07 	.word	0x00000c07
1000df08:	00000c09 	.word	0x00000c09
1000df0c:	00000c17 	.word	0x00000c17
1000df10:	00000c12 	.word	0x00000c12
1000df14:	00000c0d 	.word	0x00000c0d
1000df18:	00000c13 	.word	0x00000c13
1000df1c:	00000c15 	.word	0x00000c15
1000df20:	00000d08 	.word	0x00000d08
1000df24:	00000d01 	.word	0x00000d01
1000df28:	00000d15 	.word	0x00000d15
1000df2c:	00000e1b 	.word	0x00000e1b
1000df30:	00000e0f 	.word	0x00000e0f
1000df34:	00000e03 	.word	0x00000e03
1000df38:	00000e06 	.word	0x00000e06
1000df3c:	00000e0a 	.word	0x00000e0a
1000df40:	00000e15 	.word	0x00000e15
1000df44:	00000e11 	.word	0x00000e11
1000df48:	00000e13 	.word	0x00000e13
1000df4c:	00000e17 	.word	0x00000e17
1000df50:	00000e19 	.word	0x00000e19
1000df54:	00000e27 	.word	0x00000e27
1000df58:	00000e21 	.word	0x00000e21
1000df5c:	00000e1c 	.word	0x00000e1c
1000df60:	00000e1d 	.word	0x00000e1d
1000df64:	4b9f      	ldr	r3, [pc, #636]	; (1000e1e4 <at_ble_event_get+0x614>)
1000df66:	429c      	cmp	r4, r3
1000df68:	d07e      	beq.n	1000e068 <at_ble_event_get+0x498>
1000df6a:	4b9f      	ldr	r3, [pc, #636]	; (1000e1e8 <at_ble_event_get+0x618>)
1000df6c:	429c      	cmp	r4, r3
1000df6e:	d100      	bne.n	1000df72 <at_ble_event_get+0x3a2>
1000df70:	e08c      	b.n	1000e08c <at_ble_event_get+0x4bc>
1000df72:	e015      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000df74:	4b9d      	ldr	r3, [pc, #628]	; (1000e1ec <at_ble_event_get+0x61c>)
1000df76:	429c      	cmp	r4, r3
1000df78:	d100      	bne.n	1000df7c <at_ble_event_get+0x3ac>
1000df7a:	e10a      	b.n	1000e192 <at_ble_event_get+0x5c2>
1000df7c:	d808      	bhi.n	1000df90 <at_ble_event_get+0x3c0>
1000df7e:	4b9c      	ldr	r3, [pc, #624]	; (1000e1f0 <at_ble_event_get+0x620>)
1000df80:	429c      	cmp	r4, r3
1000df82:	d100      	bne.n	1000df86 <at_ble_event_get+0x3b6>
1000df84:	e0f7      	b.n	1000e176 <at_ble_event_get+0x5a6>
1000df86:	4b9b      	ldr	r3, [pc, #620]	; (1000e1f4 <at_ble_event_get+0x624>)
1000df88:	429c      	cmp	r4, r3
1000df8a:	d100      	bne.n	1000df8e <at_ble_event_get+0x3be>
1000df8c:	e0fa      	b.n	1000e184 <at_ble_event_get+0x5b4>
1000df8e:	e007      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000df90:	4b99      	ldr	r3, [pc, #612]	; (1000e1f8 <at_ble_event_get+0x628>)
1000df92:	429c      	cmp	r4, r3
1000df94:	d100      	bne.n	1000df98 <at_ble_event_get+0x3c8>
1000df96:	e103      	b.n	1000e1a0 <at_ble_event_get+0x5d0>
1000df98:	4b98      	ldr	r3, [pc, #608]	; (1000e1fc <at_ble_event_get+0x62c>)
1000df9a:	429c      	cmp	r4, r3
1000df9c:	d100      	bne.n	1000dfa0 <at_ble_event_get+0x3d0>
1000df9e:	e106      	b.n	1000e1ae <at_ble_event_get+0x5de>
1000dfa0:	2600      	movs	r6, #0
1000dfa2:	e10a      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000dfa4:	1c30      	adds	r0, r6, #0
1000dfa6:	1c29      	adds	r1, r5, #0
1000dfa8:	4b95      	ldr	r3, [pc, #596]	; (1000e200 <at_ble_event_get+0x630>)
1000dfaa:	e014      	b.n	1000dfd6 <at_ble_event_get+0x406>
1000dfac:	1c30      	adds	r0, r6, #0
1000dfae:	1c29      	adds	r1, r5, #0
1000dfb0:	4b94      	ldr	r3, [pc, #592]	; (1000e204 <at_ble_event_get+0x634>)
1000dfb2:	4798      	blx	r3
1000dfb4:	2604      	movs	r6, #4
1000dfb6:	e100      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000dfb8:	1c30      	adds	r0, r6, #0
1000dfba:	1c29      	adds	r1, r5, #0
1000dfbc:	4b92      	ldr	r3, [pc, #584]	; (1000e208 <at_ble_event_get+0x638>)
1000dfbe:	4798      	blx	r3
1000dfc0:	2601      	movs	r6, #1
1000dfc2:	e0fa      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000dfc4:	1c30      	adds	r0, r6, #0
1000dfc6:	1c29      	adds	r1, r5, #0
1000dfc8:	4b90      	ldr	r3, [pc, #576]	; (1000e20c <at_ble_event_get+0x63c>)
1000dfca:	4798      	blx	r3
1000dfcc:	260f      	movs	r6, #15
1000dfce:	e0f4      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000dfd0:	1c30      	adds	r0, r6, #0
1000dfd2:	1c29      	adds	r1, r5, #0
1000dfd4:	4b8e      	ldr	r3, [pc, #568]	; (1000e210 <at_ble_event_get+0x640>)
1000dfd6:	4798      	blx	r3
1000dfd8:	1c06      	adds	r6, r0, #0
1000dfda:	e0ee      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000dfdc:	9801      	ldr	r0, [sp, #4]
1000dfde:	1c31      	adds	r1, r6, #0
1000dfe0:	1c2a      	adds	r2, r5, #0
1000dfe2:	4b8c      	ldr	r3, [pc, #560]	; (1000e214 <at_ble_event_get+0x644>)
1000dfe4:	e017      	b.n	1000e016 <at_ble_event_get+0x446>
1000dfe6:	1c31      	adds	r1, r6, #0
1000dfe8:	9801      	ldr	r0, [sp, #4]
1000dfea:	1c2a      	adds	r2, r5, #0
1000dfec:	4b8a      	ldr	r3, [pc, #552]	; (1000e218 <at_ble_event_get+0x648>)
1000dfee:	4798      	blx	r3
1000dff0:	2611      	movs	r6, #17
1000dff2:	e0e2      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000dff4:	1c31      	adds	r1, r6, #0
1000dff6:	9801      	ldr	r0, [sp, #4]
1000dff8:	1c2a      	adds	r2, r5, #0
1000dffa:	4b88      	ldr	r3, [pc, #544]	; (1000e21c <at_ble_event_get+0x64c>)
1000dffc:	4798      	blx	r3
1000dffe:	2612      	movs	r6, #18
1000e000:	e0db      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e002:	1c30      	adds	r0, r6, #0
1000e004:	1c29      	adds	r1, r5, #0
1000e006:	4b86      	ldr	r3, [pc, #536]	; (1000e220 <at_ble_event_get+0x650>)
1000e008:	4798      	blx	r3
1000e00a:	2606      	movs	r6, #6
1000e00c:	e0d5      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e00e:	1c31      	adds	r1, r6, #0
1000e010:	1c2a      	adds	r2, r5, #0
1000e012:	9801      	ldr	r0, [sp, #4]
1000e014:	4b83      	ldr	r3, [pc, #524]	; (1000e224 <at_ble_event_get+0x654>)
1000e016:	4798      	blx	r3
1000e018:	e7de      	b.n	1000dfd8 <at_ble_event_get+0x408>
1000e01a:	9801      	ldr	r0, [sp, #4]
1000e01c:	1c31      	adds	r1, r6, #0
1000e01e:	1c2a      	adds	r2, r5, #0
1000e020:	4b81      	ldr	r3, [pc, #516]	; (1000e228 <at_ble_event_get+0x658>)
1000e022:	e7f8      	b.n	1000e016 <at_ble_event_get+0x446>
1000e024:	1c31      	adds	r1, r6, #0
1000e026:	9801      	ldr	r0, [sp, #4]
1000e028:	1c2a      	adds	r2, r5, #0
1000e02a:	4b80      	ldr	r3, [pc, #512]	; (1000e22c <at_ble_event_get+0x65c>)
1000e02c:	4798      	blx	r3
1000e02e:	260d      	movs	r6, #13
1000e030:	e0c3      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e032:	1c31      	adds	r1, r6, #0
1000e034:	9801      	ldr	r0, [sp, #4]
1000e036:	1c2a      	adds	r2, r5, #0
1000e038:	4b7d      	ldr	r3, [pc, #500]	; (1000e230 <at_ble_event_get+0x660>)
1000e03a:	4798      	blx	r3
1000e03c:	260e      	movs	r6, #14
1000e03e:	e0bc      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e040:	9801      	ldr	r0, [sp, #4]
1000e042:	1c31      	adds	r1, r6, #0
1000e044:	1c2a      	adds	r2, r5, #0
1000e046:	4b7b      	ldr	r3, [pc, #492]	; (1000e234 <at_ble_event_get+0x664>)
1000e048:	4798      	blx	r3
1000e04a:	e084      	b.n	1000e156 <at_ble_event_get+0x586>
1000e04c:	1c31      	adds	r1, r6, #0
1000e04e:	9801      	ldr	r0, [sp, #4]
1000e050:	1c2a      	adds	r2, r5, #0
1000e052:	4b79      	ldr	r3, [pc, #484]	; (1000e238 <at_ble_event_get+0x668>)
1000e054:	4798      	blx	r3
1000e056:	260b      	movs	r6, #11
1000e058:	e0af      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e05a:	1c31      	adds	r1, r6, #0
1000e05c:	9801      	ldr	r0, [sp, #4]
1000e05e:	1c2a      	adds	r2, r5, #0
1000e060:	4b76      	ldr	r3, [pc, #472]	; (1000e23c <at_ble_event_get+0x66c>)
1000e062:	4798      	blx	r3
1000e064:	2610      	movs	r6, #16
1000e066:	e0a8      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e068:	1c30      	adds	r0, r6, #0
1000e06a:	1c29      	adds	r1, r5, #0
1000e06c:	4b74      	ldr	r3, [pc, #464]	; (1000e240 <at_ble_event_get+0x670>)
1000e06e:	4798      	blx	r3
1000e070:	2628      	movs	r6, #40	; 0x28
1000e072:	e0a2      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e074:	1c30      	adds	r0, r6, #0
1000e076:	1c29      	adds	r1, r5, #0
1000e078:	4b72      	ldr	r3, [pc, #456]	; (1000e244 <at_ble_event_get+0x674>)
1000e07a:	4798      	blx	r3
1000e07c:	2629      	movs	r6, #41	; 0x29
1000e07e:	e09c      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e080:	1c30      	adds	r0, r6, #0
1000e082:	1c29      	adds	r1, r5, #0
1000e084:	4b70      	ldr	r3, [pc, #448]	; (1000e248 <at_ble_event_get+0x678>)
1000e086:	4798      	blx	r3
1000e088:	2627      	movs	r6, #39	; 0x27
1000e08a:	e096      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e08c:	1c30      	adds	r0, r6, #0
1000e08e:	1c29      	adds	r1, r5, #0
1000e090:	4b6e      	ldr	r3, [pc, #440]	; (1000e24c <at_ble_event_get+0x67c>)
1000e092:	4798      	blx	r3
1000e094:	262a      	movs	r6, #42	; 0x2a
1000e096:	e090      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e098:	9801      	ldr	r0, [sp, #4]
1000e09a:	1c31      	adds	r1, r6, #0
1000e09c:	1c2a      	adds	r2, r5, #0
1000e09e:	4b6c      	ldr	r3, [pc, #432]	; (1000e250 <at_ble_event_get+0x680>)
1000e0a0:	e7b9      	b.n	1000e016 <at_ble_event_get+0x446>
1000e0a2:	9801      	ldr	r0, [sp, #4]
1000e0a4:	1c31      	adds	r1, r6, #0
1000e0a6:	1c2a      	adds	r2, r5, #0
1000e0a8:	4b6a      	ldr	r3, [pc, #424]	; (1000e254 <at_ble_event_get+0x684>)
1000e0aa:	e7b4      	b.n	1000e016 <at_ble_event_get+0x446>
1000e0ac:	1c30      	adds	r0, r6, #0
1000e0ae:	1c29      	adds	r1, r5, #0
1000e0b0:	4b69      	ldr	r3, [pc, #420]	; (1000e258 <at_ble_event_get+0x688>)
1000e0b2:	4798      	blx	r3
1000e0b4:	262b      	movs	r6, #43	; 0x2b
1000e0b6:	e080      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e0b8:	1c30      	adds	r0, r6, #0
1000e0ba:	1c29      	adds	r1, r5, #0
1000e0bc:	4b67      	ldr	r3, [pc, #412]	; (1000e25c <at_ble_event_get+0x68c>)
1000e0be:	4798      	blx	r3
1000e0c0:	262c      	movs	r6, #44	; 0x2c
1000e0c2:	e07a      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e0c4:	1c31      	adds	r1, r6, #0
1000e0c6:	9801      	ldr	r0, [sp, #4]
1000e0c8:	1c2a      	adds	r2, r5, #0
1000e0ca:	4b65      	ldr	r3, [pc, #404]	; (1000e260 <at_ble_event_get+0x690>)
1000e0cc:	4798      	blx	r3
1000e0ce:	2613      	movs	r6, #19
1000e0d0:	e073      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e0d2:	1c31      	adds	r1, r6, #0
1000e0d4:	9801      	ldr	r0, [sp, #4]
1000e0d6:	1c2a      	adds	r2, r5, #0
1000e0d8:	4b62      	ldr	r3, [pc, #392]	; (1000e264 <at_ble_event_get+0x694>)
1000e0da:	4798      	blx	r3
1000e0dc:	2614      	movs	r6, #20
1000e0de:	e06c      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e0e0:	1c31      	adds	r1, r6, #0
1000e0e2:	9801      	ldr	r0, [sp, #4]
1000e0e4:	1c2a      	adds	r2, r5, #0
1000e0e6:	4b60      	ldr	r3, [pc, #384]	; (1000e268 <at_ble_event_get+0x698>)
1000e0e8:	4798      	blx	r3
1000e0ea:	2615      	movs	r6, #21
1000e0ec:	e065      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e0ee:	1c31      	adds	r1, r6, #0
1000e0f0:	9801      	ldr	r0, [sp, #4]
1000e0f2:	1c2a      	adds	r2, r5, #0
1000e0f4:	4b5d      	ldr	r3, [pc, #372]	; (1000e26c <at_ble_event_get+0x69c>)
1000e0f6:	4798      	blx	r3
1000e0f8:	2616      	movs	r6, #22
1000e0fa:	e05e      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e0fc:	9801      	ldr	r0, [sp, #4]
1000e0fe:	1c31      	adds	r1, r6, #0
1000e100:	1c2a      	adds	r2, r5, #0
1000e102:	4b5b      	ldr	r3, [pc, #364]	; (1000e270 <at_ble_event_get+0x6a0>)
1000e104:	e787      	b.n	1000e016 <at_ble_event_get+0x446>
1000e106:	1c31      	adds	r1, r6, #0
1000e108:	9801      	ldr	r0, [sp, #4]
1000e10a:	1c2a      	adds	r2, r5, #0
1000e10c:	4b58      	ldr	r3, [pc, #352]	; (1000e270 <at_ble_event_get+0x6a0>)
1000e10e:	4798      	blx	r3
1000e110:	88a9      	ldrh	r1, [r5, #4]
1000e112:	1c06      	adds	r6, r0, #0
1000e114:	4b57      	ldr	r3, [pc, #348]	; (1000e274 <at_ble_event_get+0x6a4>)
1000e116:	8828      	ldrh	r0, [r5, #0]
1000e118:	4798      	blx	r3
1000e11a:	e04e      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e11c:	1c31      	adds	r1, r6, #0
1000e11e:	9801      	ldr	r0, [sp, #4]
1000e120:	1c2a      	adds	r2, r5, #0
1000e122:	4b55      	ldr	r3, [pc, #340]	; (1000e278 <at_ble_event_get+0x6a8>)
1000e124:	4798      	blx	r3
1000e126:	2623      	movs	r6, #35	; 0x23
1000e128:	e047      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e12a:	9801      	ldr	r0, [sp, #4]
1000e12c:	1c31      	adds	r1, r6, #0
1000e12e:	1c2a      	adds	r2, r5, #0
1000e130:	4b52      	ldr	r3, [pc, #328]	; (1000e27c <at_ble_event_get+0x6ac>)
1000e132:	e770      	b.n	1000e016 <at_ble_event_get+0x446>
1000e134:	9b01      	ldr	r3, [sp, #4]
1000e136:	1c30      	adds	r0, r6, #0
1000e138:	0a1f      	lsrs	r7, r3, #8
1000e13a:	802f      	strh	r7, [r5, #0]
1000e13c:	1c29      	adds	r1, r5, #0
1000e13e:	4b50      	ldr	r3, [pc, #320]	; (1000e280 <at_ble_event_get+0x6b0>)
1000e140:	e749      	b.n	1000dfd6 <at_ble_event_get+0x406>
1000e142:	9801      	ldr	r0, [sp, #4]
1000e144:	1c31      	adds	r1, r6, #0
1000e146:	1c2a      	adds	r2, r5, #0
1000e148:	4b4e      	ldr	r3, [pc, #312]	; (1000e284 <at_ble_event_get+0x6b4>)
1000e14a:	e764      	b.n	1000e016 <at_ble_event_get+0x446>
1000e14c:	1c30      	adds	r0, r6, #0
1000e14e:	1c29      	adds	r1, r5, #0
1000e150:	9a01      	ldr	r2, [sp, #4]
1000e152:	4b4d      	ldr	r3, [pc, #308]	; (1000e288 <at_ble_event_get+0x6b8>)
1000e154:	4798      	blx	r3
1000e156:	263b      	movs	r6, #59	; 0x3b
1000e158:	e02f      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e15a:	1c31      	adds	r1, r6, #0
1000e15c:	9801      	ldr	r0, [sp, #4]
1000e15e:	1c2a      	adds	r2, r5, #0
1000e160:	4b4a      	ldr	r3, [pc, #296]	; (1000e28c <at_ble_event_get+0x6bc>)
1000e162:	4798      	blx	r3
1000e164:	2618      	movs	r6, #24
1000e166:	e028      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e168:	1c31      	adds	r1, r6, #0
1000e16a:	9801      	ldr	r0, [sp, #4]
1000e16c:	1c2a      	adds	r2, r5, #0
1000e16e:	4b48      	ldr	r3, [pc, #288]	; (1000e290 <at_ble_event_get+0x6c0>)
1000e170:	4798      	blx	r3
1000e172:	2620      	movs	r6, #32
1000e174:	e021      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e176:	1c31      	adds	r1, r6, #0
1000e178:	9801      	ldr	r0, [sp, #4]
1000e17a:	1c2a      	adds	r2, r5, #0
1000e17c:	4b45      	ldr	r3, [pc, #276]	; (1000e294 <at_ble_event_get+0x6c4>)
1000e17e:	4798      	blx	r3
1000e180:	2633      	movs	r6, #51	; 0x33
1000e182:	e01a      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e184:	1c31      	adds	r1, r6, #0
1000e186:	9801      	ldr	r0, [sp, #4]
1000e188:	1c2a      	adds	r2, r5, #0
1000e18a:	4b43      	ldr	r3, [pc, #268]	; (1000e298 <at_ble_event_get+0x6c8>)
1000e18c:	4798      	blx	r3
1000e18e:	2630      	movs	r6, #48	; 0x30
1000e190:	e013      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e192:	1c31      	adds	r1, r6, #0
1000e194:	9801      	ldr	r0, [sp, #4]
1000e196:	1c2a      	adds	r2, r5, #0
1000e198:	4b40      	ldr	r3, [pc, #256]	; (1000e29c <at_ble_event_get+0x6cc>)
1000e19a:	4798      	blx	r3
1000e19c:	2634      	movs	r6, #52	; 0x34
1000e19e:	e00c      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e1a0:	1c31      	adds	r1, r6, #0
1000e1a2:	9801      	ldr	r0, [sp, #4]
1000e1a4:	1c2a      	adds	r2, r5, #0
1000e1a6:	4b3e      	ldr	r3, [pc, #248]	; (1000e2a0 <at_ble_event_get+0x6d0>)
1000e1a8:	4798      	blx	r3
1000e1aa:	2635      	movs	r6, #53	; 0x35
1000e1ac:	e005      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e1ae:	1c31      	adds	r1, r6, #0
1000e1b0:	9801      	ldr	r0, [sp, #4]
1000e1b2:	1c2a      	adds	r2, r5, #0
1000e1b4:	4b3b      	ldr	r3, [pc, #236]	; (1000e2a4 <at_ble_event_get+0x6d4>)
1000e1b6:	4798      	blx	r3
1000e1b8:	2632      	movs	r6, #50	; 0x32
1000e1ba:	9b03      	ldr	r3, [sp, #12]
1000e1bc:	701e      	strb	r6, [r3, #0]
1000e1be:	2300      	movs	r3, #0
1000e1c0:	9302      	str	r3, [sp, #8]
1000e1c2:	e57a      	b.n	1000dcba <at_ble_event_get+0xea>
1000e1c4:	23d0      	movs	r3, #208	; 0xd0
1000e1c6:	e7fb      	b.n	1000e1c0 <at_ble_event_get+0x5f0>
1000e1c8:	9b01      	ldr	r3, [sp, #4]
1000e1ca:	9e02      	ldr	r6, [sp, #8]
1000e1cc:	2bbb      	cmp	r3, #187	; 0xbb
1000e1ce:	d000      	beq.n	1000e1d2 <at_ble_event_get+0x602>
1000e1d0:	e6e6      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000e1d2:	e7f2      	b.n	1000e1ba <at_ble_event_get+0x5ea>
1000e1d4:	9b02      	ldr	r3, [sp, #8]
1000e1d6:	2b00      	cmp	r3, #0
1000e1d8:	d000      	beq.n	1000e1dc <at_ble_event_get+0x60c>
1000e1da:	e56e      	b.n	1000dcba <at_ble_event_get+0xea>
1000e1dc:	e6e0      	b.n	1000dfa0 <at_ble_event_get+0x3d0>
1000e1de:	9802      	ldr	r0, [sp, #8]
1000e1e0:	b007      	add	sp, #28
1000e1e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000e1e4:	00000e22 	.word	0x00000e22
1000e1e8:	00000e25 	.word	0x00000e25
1000e1ec:	00001b05 	.word	0x00001b05
1000e1f0:	00001b01 	.word	0x00001b01
1000e1f4:	00001b03 	.word	0x00001b03
1000e1f8:	00001b06 	.word	0x00001b06
1000e1fc:	00001b08 	.word	0x00001b08
1000e200:	100104e9 	.word	0x100104e9
1000e204:	100104cd 	.word	0x100104cd
1000e208:	10010769 	.word	0x10010769
1000e20c:	10010859 	.word	0x10010859
1000e210:	1001087d 	.word	0x1001087d
1000e214:	1000f861 	.word	0x1000f861
1000e218:	100100e1 	.word	0x100100e1
1000e21c:	1001015d 	.word	0x1001015d
1000e220:	1000fb19 	.word	0x1000fb19
1000e224:	1000fbb5 	.word	0x1000fbb5
1000e228:	1000fc8d 	.word	0x1000fc8d
1000e22c:	1000ff15 	.word	0x1000ff15
1000e230:	1000ffb5 	.word	0x1000ffb5
1000e234:	1001006d 	.word	0x1001006d
1000e238:	10010095 	.word	0x10010095
1000e23c:	100100ab 	.word	0x100100ab
1000e240:	10010175 	.word	0x10010175
1000e244:	100101a3 	.word	0x100101a3
1000e248:	100101b9 	.word	0x100101b9
1000e24c:	100101e3 	.word	0x100101e3
1000e250:	10010011 	.word	0x10010011
1000e254:	1001003b 	.word	0x1001003b
1000e258:	1000f2a1 	.word	0x1000f2a1
1000e25c:	1000f2cd 	.word	0x1000f2cd
1000e260:	10010bb5 	.word	0x10010bb5
1000e264:	10010bf1 	.word	0x10010bf1
1000e268:	10010c39 	.word	0x10010c39
1000e26c:	10010c7d 	.word	0x10010c7d
1000e270:	10010cb1 	.word	0x10010cb1
1000e274:	10010b75 	.word	0x10010b75
1000e278:	10010d7d 	.word	0x10010d7d
1000e27c:	10010d05 	.word	0x10010d05
1000e280:	1000f185 	.word	0x1000f185
1000e284:	1000f1f1 	.word	0x1000f1f1
1000e288:	1000f1b5 	.word	0x1000f1b5
1000e28c:	10010d8d 	.word	0x10010d8d
1000e290:	10010dcd 	.word	0x10010dcd
1000e294:	10011095 	.word	0x10011095
1000e298:	1001109f 	.word	0x1001109f
1000e29c:	100110a5 	.word	0x100110a5
1000e2a0:	100110ab 	.word	0x100110ab
1000e2a4:	100110b7 	.word	0x100110b7

1000e2a8 <internal_event_flush>:
1000e2a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000e2aa:	490e      	ldr	r1, [pc, #56]	; (1000e2e4 <internal_event_flush+0x3c>)
1000e2ac:	2400      	movs	r4, #0
1000e2ae:	680b      	ldr	r3, [r1, #0]
1000e2b0:	1c0f      	adds	r7, r1, #0
1000e2b2:	1c1e      	adds	r6, r3, #0
1000e2b4:	4a0c      	ldr	r2, [pc, #48]	; (1000e2e8 <internal_event_flush+0x40>)
1000e2b6:	6815      	ldr	r5, [r2, #0]
1000e2b8:	9201      	str	r2, [sp, #4]
1000e2ba:	2b00      	cmp	r3, #0
1000e2bc:	d00e      	beq.n	1000e2dc <internal_event_flush+0x34>
1000e2be:	889a      	ldrh	r2, [r3, #4]
1000e2c0:	6819      	ldr	r1, [r3, #0]
1000e2c2:	4282      	cmp	r2, r0
1000e2c4:	d107      	bne.n	1000e2d6 <internal_event_flush+0x2e>
1000e2c6:	2c00      	cmp	r4, #0
1000e2c8:	d001      	beq.n	1000e2ce <internal_event_flush+0x26>
1000e2ca:	6021      	str	r1, [r4, #0]
1000e2cc:	e000      	b.n	1000e2d0 <internal_event_flush+0x28>
1000e2ce:	1c0e      	adds	r6, r1, #0
1000e2d0:	601d      	str	r5, [r3, #0]
1000e2d2:	1c1d      	adds	r5, r3, #0
1000e2d4:	1c23      	adds	r3, r4, #0
1000e2d6:	1c1c      	adds	r4, r3, #0
1000e2d8:	1c0b      	adds	r3, r1, #0
1000e2da:	e7ee      	b.n	1000e2ba <internal_event_flush+0x12>
1000e2dc:	9b01      	ldr	r3, [sp, #4]
1000e2de:	603e      	str	r6, [r7, #0]
1000e2e0:	601d      	str	r5, [r3, #0]
1000e2e2:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
1000e2e4:	100176ec 	.word	0x100176ec
1000e2e8:	100176f0 	.word	0x100176f0

1000e2ec <internal_conn_flush>:
1000e2ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000e2ee:	4a12      	ldr	r2, [pc, #72]	; (1000e338 <internal_conn_flush+0x4c>)
1000e2f0:	9000      	str	r0, [sp, #0]
1000e2f2:	6813      	ldr	r3, [r2, #0]
1000e2f4:	4811      	ldr	r0, [pc, #68]	; (1000e33c <internal_conn_flush+0x50>)
1000e2f6:	1c1f      	adds	r7, r3, #0
1000e2f8:	2100      	movs	r1, #0
1000e2fa:	4684      	mov	ip, r0
1000e2fc:	6804      	ldr	r4, [r0, #0]
1000e2fe:	9201      	str	r2, [sp, #4]
1000e300:	2b00      	cmp	r3, #0
1000e302:	d014      	beq.n	1000e32e <internal_conn_flush+0x42>
1000e304:	88d8      	ldrh	r0, [r3, #6]
1000e306:	9a00      	ldr	r2, [sp, #0]
1000e308:	681d      	ldr	r5, [r3, #0]
1000e30a:	0a06      	lsrs	r6, r0, #8
1000e30c:	4296      	cmp	r6, r2
1000e30e:	d10b      	bne.n	1000e328 <internal_conn_flush+0x3c>
1000e310:	26fd      	movs	r6, #253	; 0xfd
1000e312:	4006      	ands	r6, r0
1000e314:	2e0c      	cmp	r6, #12
1000e316:	d107      	bne.n	1000e328 <internal_conn_flush+0x3c>
1000e318:	2900      	cmp	r1, #0
1000e31a:	d001      	beq.n	1000e320 <internal_conn_flush+0x34>
1000e31c:	600d      	str	r5, [r1, #0]
1000e31e:	e000      	b.n	1000e322 <internal_conn_flush+0x36>
1000e320:	1c2f      	adds	r7, r5, #0
1000e322:	601c      	str	r4, [r3, #0]
1000e324:	1c1c      	adds	r4, r3, #0
1000e326:	1c0b      	adds	r3, r1, #0
1000e328:	1c19      	adds	r1, r3, #0
1000e32a:	1c2b      	adds	r3, r5, #0
1000e32c:	e7e8      	b.n	1000e300 <internal_conn_flush+0x14>
1000e32e:	9b01      	ldr	r3, [sp, #4]
1000e330:	601f      	str	r7, [r3, #0]
1000e332:	4663      	mov	r3, ip
1000e334:	601c      	str	r4, [r3, #0]
1000e336:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
1000e338:	100176ec 	.word	0x100176ec
1000e33c:	100176f0 	.word	0x100176f0

1000e340 <at_ble_device_name_set>:
1000e340:	b530      	push	{r4, r5, lr}
1000e342:	23cf      	movs	r3, #207	; 0xcf
1000e344:	2800      	cmp	r0, #0
1000e346:	d010      	beq.n	1000e36a <at_ble_device_name_set+0x2a>
1000e348:	1e4a      	subs	r2, r1, #1
1000e34a:	2a1f      	cmp	r2, #31
1000e34c:	d80d      	bhi.n	1000e36a <at_ble_device_name_set+0x2a>
1000e34e:	4a08      	ldr	r2, [pc, #32]	; (1000e370 <at_ble_device_name_set+0x30>)
1000e350:	1c13      	adds	r3, r2, #0
1000e352:	33aa      	adds	r3, #170	; 0xaa
1000e354:	8019      	strh	r1, [r3, #0]
1000e356:	2300      	movs	r3, #0
1000e358:	1c1c      	adds	r4, r3, #0
1000e35a:	5cc5      	ldrb	r5, [r0, r3]
1000e35c:	34ac      	adds	r4, #172	; 0xac
1000e35e:	3301      	adds	r3, #1
1000e360:	5515      	strb	r5, [r2, r4]
1000e362:	b2dc      	uxtb	r4, r3
1000e364:	428c      	cmp	r4, r1
1000e366:	d3f7      	bcc.n	1000e358 <at_ble_device_name_set+0x18>
1000e368:	2300      	movs	r3, #0
1000e36a:	1c18      	adds	r0, r3, #0
1000e36c:	bd30      	pop	{r4, r5, pc}
1000e36e:	46c0      	nop			; (mov r8, r8)
1000e370:	1001a296 	.word	0x1001a296

1000e374 <at_ble_addr_get>:
1000e374:	b510      	push	{r4, lr}
1000e376:	1c04      	adds	r4, r0, #0
1000e378:	20cf      	movs	r0, #207	; 0xcf
1000e37a:	2c00      	cmp	r4, #0
1000e37c:	d006      	beq.n	1000e38c <at_ble_addr_get+0x18>
1000e37e:	4b04      	ldr	r3, [pc, #16]	; (1000e390 <at_ble_addr_get+0x1c>)
1000e380:	38ce      	subs	r0, #206	; 0xce
1000e382:	1c21      	adds	r1, r4, #0
1000e384:	4798      	blx	r3
1000e386:	4b03      	ldr	r3, [pc, #12]	; (1000e394 <at_ble_addr_get+0x20>)
1000e388:	791b      	ldrb	r3, [r3, #4]
1000e38a:	7023      	strb	r3, [r4, #0]
1000e38c:	bd10      	pop	{r4, pc}
1000e38e:	46c0      	nop			; (mov r8, r8)
1000e390:	1001037d 	.word	0x1001037d
1000e394:	1001a296 	.word	0x1001a296

1000e398 <at_ble_set_dev_config>:
1000e398:	b5f0      	push	{r4, r5, r6, r7, lr}
1000e39a:	7906      	ldrb	r6, [r0, #4]
1000e39c:	b089      	sub	sp, #36	; 0x24
1000e39e:	25cf      	movs	r5, #207	; 0xcf
1000e3a0:	2e03      	cmp	r6, #3
1000e3a2:	d838      	bhi.n	1000e416 <at_ble_set_dev_config+0x7e>
1000e3a4:	7803      	ldrb	r3, [r0, #0]
1000e3a6:	3511      	adds	r5, #17
1000e3a8:	2b0f      	cmp	r3, #15
1000e3aa:	d834      	bhi.n	1000e416 <at_ble_set_dev_config+0x7e>
1000e3ac:	2380      	movs	r3, #128	; 0x80
1000e3ae:	8c87      	ldrh	r7, [r0, #36]	; 0x24
1000e3b0:	3d11      	subs	r5, #17
1000e3b2:	009b      	lsls	r3, r3, #2
1000e3b4:	429f      	cmp	r7, r3
1000e3b6:	d82e      	bhi.n	1000e416 <at_ble_set_dev_config+0x7e>
1000e3b8:	7fc5      	ldrb	r5, [r0, #31]
1000e3ba:	7f83      	ldrb	r3, [r0, #30]
1000e3bc:	01ad      	lsls	r5, r5, #6
1000e3be:	015b      	lsls	r3, r3, #5
1000e3c0:	431d      	orrs	r5, r3
1000e3c2:	7ec3      	ldrb	r3, [r0, #27]
1000e3c4:	431d      	orrs	r5, r3
1000e3c6:	7f43      	ldrb	r3, [r0, #29]
1000e3c8:	011b      	lsls	r3, r3, #4
1000e3ca:	431d      	orrs	r5, r3
1000e3cc:	7f03      	ldrb	r3, [r0, #28]
1000e3ce:	009b      	lsls	r3, r3, #2
1000e3d0:	431d      	orrs	r5, r3
1000e3d2:	4b12      	ldr	r3, [pc, #72]	; (1000e41c <at_ble_set_dev_config+0x84>)
1000e3d4:	b2ed      	uxtb	r5, r5
1000e3d6:	711e      	strb	r6, [r3, #4]
1000e3d8:	7903      	ldrb	r3, [r0, #4]
1000e3da:	3b02      	subs	r3, #2
1000e3dc:	2b01      	cmp	r3, #1
1000e3de:	d801      	bhi.n	1000e3e4 <at_ble_set_dev_config+0x4c>
1000e3e0:	2302      	movs	r3, #2
1000e3e2:	7103      	strb	r3, [r0, #4]
1000e3e4:	1c04      	adds	r4, r0, #0
1000e3e6:	1c23      	adds	r3, r4, #0
1000e3e8:	330b      	adds	r3, #11
1000e3ea:	8861      	ldrh	r1, [r4, #2]
1000e3ec:	9307      	str	r3, [sp, #28]
1000e3ee:	7923      	ldrb	r3, [r4, #4]
1000e3f0:	7800      	ldrb	r0, [r0, #0]
1000e3f2:	9300      	str	r3, [sp, #0]
1000e3f4:	9501      	str	r5, [sp, #4]
1000e3f6:	8c25      	ldrh	r5, [r4, #32]
1000e3f8:	1d62      	adds	r2, r4, #5
1000e3fa:	9502      	str	r5, [sp, #8]
1000e3fc:	8c65      	ldrh	r5, [r4, #34]	; 0x22
1000e3fe:	9b07      	ldr	r3, [sp, #28]
1000e400:	9503      	str	r5, [sp, #12]
1000e402:	9704      	str	r7, [sp, #16]
1000e404:	4d06      	ldr	r5, [pc, #24]	; (1000e420 <at_ble_set_dev_config+0x88>)
1000e406:	47a8      	blx	r5
1000e408:	7126      	strb	r6, [r4, #4]
1000e40a:	1c05      	adds	r5, r0, #0
1000e40c:	1c21      	adds	r1, r4, #0
1000e40e:	4803      	ldr	r0, [pc, #12]	; (1000e41c <at_ble_set_dev_config+0x84>)
1000e410:	2226      	movs	r2, #38	; 0x26
1000e412:	4b04      	ldr	r3, [pc, #16]	; (1000e424 <at_ble_set_dev_config+0x8c>)
1000e414:	4798      	blx	r3
1000e416:	1c28      	adds	r0, r5, #0
1000e418:	b009      	add	sp, #36	; 0x24
1000e41a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000e41c:	1001a296 	.word	0x1001a296
1000e420:	10010275 	.word	0x10010275
1000e424:	10012207 	.word	0x10012207

1000e428 <at_ble_init>:
1000e428:	b5f0      	push	{r4, r5, r6, r7, lr}
1000e42a:	b087      	sub	sp, #28
1000e42c:	af03      	add	r7, sp, #12
1000e42e:	4954      	ldr	r1, [pc, #336]	; (1000e580 <at_ble_init+0x158>)
1000e430:	220b      	movs	r2, #11
1000e432:	4b54      	ldr	r3, [pc, #336]	; (1000e584 <at_ble_init+0x15c>)
1000e434:	1c04      	adds	r4, r0, #0
1000e436:	1c38      	adds	r0, r7, #0
1000e438:	4798      	blx	r3
1000e43a:	2205      	movs	r2, #5
1000e43c:	4b52      	ldr	r3, [pc, #328]	; (1000e588 <at_ble_init+0x160>)
1000e43e:	2640      	movs	r6, #64	; 0x40
1000e440:	801a      	strh	r2, [r3, #0]
1000e442:	2300      	movs	r3, #0
1000e444:	4a51      	ldr	r2, [pc, #324]	; (1000e58c <at_ble_init+0x164>)
1000e446:	6013      	str	r3, [r2, #0]
1000e448:	4a51      	ldr	r2, [pc, #324]	; (1000e590 <at_ble_init+0x168>)
1000e44a:	7013      	strb	r3, [r2, #0]
1000e44c:	4a51      	ldr	r2, [pc, #324]	; (1000e594 <at_ble_init+0x16c>)
1000e44e:	7013      	strb	r3, [r2, #0]
1000e450:	4b51      	ldr	r3, [pc, #324]	; (1000e598 <at_ble_init+0x170>)
1000e452:	4798      	blx	r3
1000e454:	4b51      	ldr	r3, [pc, #324]	; (1000e59c <at_ble_init+0x174>)
1000e456:	4798      	blx	r3
1000e458:	4b51      	ldr	r3, [pc, #324]	; (1000e5a0 <at_ble_init+0x178>)
1000e45a:	4798      	blx	r3
1000e45c:	4b51      	ldr	r3, [pc, #324]	; (1000e5a4 <at_ble_init+0x17c>)
1000e45e:	4798      	blx	r3
1000e460:	2c00      	cmp	r4, #0
1000e462:	d100      	bne.n	1000e466 <at_ble_init+0x3e>
1000e464:	e089      	b.n	1000e57a <at_ble_init+0x152>
1000e466:	68a3      	ldr	r3, [r4, #8]
1000e468:	2b00      	cmp	r3, #0
1000e46a:	d100      	bne.n	1000e46e <at_ble_init+0x46>
1000e46c:	e085      	b.n	1000e57a <at_ble_init+0x152>
1000e46e:	6923      	ldr	r3, [r4, #16]
1000e470:	2b00      	cmp	r3, #0
1000e472:	d100      	bne.n	1000e476 <at_ble_init+0x4e>
1000e474:	e081      	b.n	1000e57a <at_ble_init+0x152>
1000e476:	6820      	ldr	r0, [r4, #0]
1000e478:	2800      	cmp	r0, #0
1000e47a:	d102      	bne.n	1000e482 <at_ble_init+0x5a>
1000e47c:	6863      	ldr	r3, [r4, #4]
1000e47e:	2b00      	cmp	r3, #0
1000e480:	d17b      	bne.n	1000e57a <at_ble_init+0x152>
1000e482:	4b49      	ldr	r3, [pc, #292]	; (1000e5a8 <at_ble_init+0x180>)
1000e484:	6861      	ldr	r1, [r4, #4]
1000e486:	4798      	blx	r3
1000e488:	4b48      	ldr	r3, [pc, #288]	; (1000e5ac <at_ble_init+0x184>)
1000e48a:	4798      	blx	r3
1000e48c:	2801      	cmp	r0, #1
1000e48e:	d901      	bls.n	1000e494 <at_ble_init+0x6c>
1000e490:	26e2      	movs	r6, #226	; 0xe2
1000e492:	e072      	b.n	1000e57a <at_ble_init+0x152>
1000e494:	4846      	ldr	r0, [pc, #280]	; (1000e5b0 <at_ble_init+0x188>)
1000e496:	4b47      	ldr	r3, [pc, #284]	; (1000e5b4 <at_ble_init+0x18c>)
1000e498:	4798      	blx	r3
1000e49a:	2800      	cmp	r0, #0
1000e49c:	d1f8      	bne.n	1000e490 <at_ble_init+0x68>
1000e49e:	1c20      	adds	r0, r4, #0
1000e4a0:	4b45      	ldr	r3, [pc, #276]	; (1000e5b8 <at_ble_init+0x190>)
1000e4a2:	4798      	blx	r3
1000e4a4:	68e0      	ldr	r0, [r4, #12]
1000e4a6:	68a1      	ldr	r1, [r4, #8]
1000e4a8:	4b44      	ldr	r3, [pc, #272]	; (1000e5bc <at_ble_init+0x194>)
1000e4aa:	4798      	blx	r3
1000e4ac:	466b      	mov	r3, sp
1000e4ae:	2201      	movs	r2, #1
1000e4b0:	1cdc      	adds	r4, r3, #3
1000e4b2:	1c20      	adds	r0, r4, #0
1000e4b4:	a901      	add	r1, sp, #4
1000e4b6:	4252      	negs	r2, r2
1000e4b8:	4b41      	ldr	r3, [pc, #260]	; (1000e5c0 <at_ble_init+0x198>)
1000e4ba:	4798      	blx	r3
1000e4bc:	2800      	cmp	r0, #0
1000e4be:	d102      	bne.n	1000e4c6 <at_ble_init+0x9e>
1000e4c0:	7823      	ldrb	r3, [r4, #0]
1000e4c2:	2b39      	cmp	r3, #57	; 0x39
1000e4c4:	d1f2      	bne.n	1000e4ac <at_ble_init+0x84>
1000e4c6:	4b3f      	ldr	r3, [pc, #252]	; (1000e5c4 <at_ble_init+0x19c>)
1000e4c8:	4798      	blx	r3
1000e4ca:	1e06      	subs	r6, r0, #0
1000e4cc:	d155      	bne.n	1000e57a <at_ble_init+0x152>
1000e4ce:	1c03      	adds	r3, r0, #0
1000e4d0:	2101      	movs	r1, #1
1000e4d2:	4a3d      	ldr	r2, [pc, #244]	; (1000e5c8 <at_ble_init+0x1a0>)
1000e4d4:	4249      	negs	r1, r1
1000e4d6:	189a      	adds	r2, r3, r2
1000e4d8:	3312      	adds	r3, #18
1000e4da:	8151      	strh	r1, [r2, #10]
1000e4dc:	2b90      	cmp	r3, #144	; 0x90
1000e4de:	d1f7      	bne.n	1000e4d0 <at_ble_init+0xa8>
1000e4e0:	4c3a      	ldr	r4, [pc, #232]	; (1000e5cc <at_ble_init+0x1a4>)
1000e4e2:	3b81      	subs	r3, #129	; 0x81
1000e4e4:	7023      	strb	r3, [r4, #0]
1000e4e6:	4b3a      	ldr	r3, [pc, #232]	; (1000e5d0 <at_ble_init+0x1a8>)
1000e4e8:	4a3a      	ldr	r2, [pc, #232]	; (1000e5d4 <at_ble_init+0x1ac>)
1000e4ea:	8063      	strh	r3, [r4, #2]
1000e4ec:	2300      	movs	r3, #0
1000e4ee:	7123      	strb	r3, [r4, #4]
1000e4f0:	3301      	adds	r3, #1
1000e4f2:	1e58      	subs	r0, r3, #1
1000e4f4:	0119      	lsls	r1, r3, #4
1000e4f6:	4301      	orrs	r1, r0
1000e4f8:	3302      	adds	r3, #2
1000e4fa:	7011      	strb	r1, [r2, #0]
1000e4fc:	3201      	adds	r2, #1
1000e4fe:	2b21      	cmp	r3, #33	; 0x21
1000e500:	d1f7      	bne.n	1000e4f2 <at_ble_init+0xca>
1000e502:	33e0      	adds	r3, #224	; 0xe0
1000e504:	33ff      	adds	r3, #255	; 0xff
1000e506:	84a3      	strh	r3, [r4, #36]	; 0x24
1000e508:	1c23      	adds	r3, r4, #0
1000e50a:	2500      	movs	r5, #0
1000e50c:	3373      	adds	r3, #115	; 0x73
1000e50e:	701d      	strb	r5, [r3, #0]
1000e510:	1c23      	adds	r3, r4, #0
1000e512:	3372      	adds	r3, #114	; 0x72
1000e514:	701d      	strb	r5, [r3, #0]
1000e516:	1c23      	adds	r3, r4, #0
1000e518:	3376      	adds	r3, #118	; 0x76
1000e51a:	701d      	strb	r5, [r3, #0]
1000e51c:	1c23      	adds	r3, r4, #0
1000e51e:	33cc      	adds	r3, #204	; 0xcc
1000e520:	801d      	strh	r5, [r3, #0]
1000e522:	1c22      	adds	r2, r4, #0
1000e524:	23a0      	movs	r3, #160	; 0xa0
1000e526:	32d0      	adds	r2, #208	; 0xd0
1000e528:	005b      	lsls	r3, r3, #1
1000e52a:	8013      	strh	r3, [r2, #0]
1000e52c:	1c22      	adds	r2, r4, #0
1000e52e:	32ce      	adds	r2, #206	; 0xce
1000e530:	8013      	strh	r3, [r2, #0]
1000e532:	1c23      	adds	r3, r4, #0
1000e534:	33d2      	adds	r3, #210	; 0xd2
1000e536:	801d      	strh	r5, [r3, #0]
1000e538:	22fa      	movs	r2, #250	; 0xfa
1000e53a:	1c23      	adds	r3, r4, #0
1000e53c:	0052      	lsls	r2, r2, #1
1000e53e:	33d4      	adds	r3, #212	; 0xd4
1000e540:	801a      	strh	r2, [r3, #0]
1000e542:	1c23      	adds	r3, r4, #0
1000e544:	33d6      	adds	r3, #214	; 0xd6
1000e546:	701d      	strb	r5, [r3, #0]
1000e548:	1c20      	adds	r0, r4, #0
1000e54a:	4b23      	ldr	r3, [pc, #140]	; (1000e5d8 <at_ble_init+0x1b0>)
1000e54c:	76e5      	strb	r5, [r4, #27]
1000e54e:	7725      	strb	r5, [r4, #28]
1000e550:	7765      	strb	r5, [r4, #29]
1000e552:	77a5      	strb	r5, [r4, #30]
1000e554:	77e5      	strb	r5, [r4, #31]
1000e556:	8425      	strh	r5, [r4, #32]
1000e558:	8465      	strh	r5, [r4, #34]	; 0x22
1000e55a:	4798      	blx	r3
1000e55c:	1c23      	adds	r3, r4, #0
1000e55e:	2207      	movs	r2, #7
1000e560:	3374      	adds	r3, #116	; 0x74
1000e562:	701a      	strb	r2, [r3, #0]
1000e564:	1c23      	adds	r3, r4, #0
1000e566:	3204      	adds	r2, #4
1000e568:	33aa      	adds	r3, #170	; 0xaa
1000e56a:	801a      	strh	r2, [r3, #0]
1000e56c:	1c2b      	adds	r3, r5, #0
1000e56e:	5d7a      	ldrb	r2, [r7, r5]
1000e570:	33ac      	adds	r3, #172	; 0xac
1000e572:	3501      	adds	r5, #1
1000e574:	54e2      	strb	r2, [r4, r3]
1000e576:	2d0b      	cmp	r5, #11
1000e578:	d1f8      	bne.n	1000e56c <at_ble_init+0x144>
1000e57a:	1c30      	adds	r0, r6, #0
1000e57c:	b007      	add	sp, #28
1000e57e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000e580:	10015b34 	.word	0x10015b34
1000e584:	10012207 	.word	0x10012207
1000e588:	1001a204 	.word	0x1001a204
1000e58c:	1001779c 	.word	0x1001779c
1000e590:	100176fc 	.word	0x100176fc
1000e594:	10015c6e 	.word	0x10015c6e
1000e598:	10010ddd 	.word	0x10010ddd
1000e59c:	1000e88d 	.word	0x1000e88d
1000e5a0:	1000efe1 	.word	0x1000efe1
1000e5a4:	1000f295 	.word	0x1000f295
1000e5a8:	1000f01d 	.word	0x1000f01d
1000e5ac:	1000cce5 	.word	0x1000cce5
1000e5b0:	1000f595 	.word	0x1000f595
1000e5b4:	1000cf29 	.word	0x1000cf29
1000e5b8:	1000f63d 	.word	0x1000f63d
1000e5bc:	1000db15 	.word	0x1000db15
1000e5c0:	1000dbd1 	.word	0x1000dbd1
1000e5c4:	10010205 	.word	0x10010205
1000e5c8:	1001a206 	.word	0x1001a206
1000e5cc:	1001a296 	.word	0x1001a296
1000e5d0:	00003a98 	.word	0x00003a98
1000e5d4:	1001a2a1 	.word	0x1001a2a1
1000e5d8:	1000e399 	.word	0x1000e399

1000e5dc <at_ble_addr_set>:
1000e5dc:	b538      	push	{r3, r4, r5, lr}
1000e5de:	1c45      	adds	r5, r0, #1
1000e5e0:	1c03      	adds	r3, r0, #0
1000e5e2:	20cf      	movs	r0, #207	; 0xcf
1000e5e4:	2d00      	cmp	r5, #0
1000e5e6:	d018      	beq.n	1000e61a <at_ble_addr_set+0x3e>
1000e5e8:	781a      	ldrb	r2, [r3, #0]
1000e5ea:	2a03      	cmp	r2, #3
1000e5ec:	d815      	bhi.n	1000e61a <at_ble_addr_set+0x3e>
1000e5ee:	2a01      	cmp	r2, #1
1000e5f0:	d102      	bne.n	1000e5f8 <at_ble_addr_set+0x1c>
1000e5f2:	785a      	ldrb	r2, [r3, #1]
1000e5f4:	2a00      	cmp	r2, #0
1000e5f6:	d010      	beq.n	1000e61a <at_ble_addr_set+0x3e>
1000e5f8:	1c1c      	adds	r4, r3, #0
1000e5fa:	1c29      	adds	r1, r5, #0
1000e5fc:	2206      	movs	r2, #6
1000e5fe:	4b07      	ldr	r3, [pc, #28]	; (1000e61c <at_ble_addr_set+0x40>)
1000e600:	4807      	ldr	r0, [pc, #28]	; (1000e620 <at_ble_addr_set+0x44>)
1000e602:	4798      	blx	r3
1000e604:	7823      	ldrb	r3, [r4, #0]
1000e606:	4807      	ldr	r0, [pc, #28]	; (1000e624 <at_ble_addr_set+0x48>)
1000e608:	7103      	strb	r3, [r0, #4]
1000e60a:	4b07      	ldr	r3, [pc, #28]	; (1000e628 <at_ble_addr_set+0x4c>)
1000e60c:	4798      	blx	r3
1000e60e:	7823      	ldrb	r3, [r4, #0]
1000e610:	2b00      	cmp	r3, #0
1000e612:	d102      	bne.n	1000e61a <at_ble_addr_set+0x3e>
1000e614:	1c28      	adds	r0, r5, #0
1000e616:	4b05      	ldr	r3, [pc, #20]	; (1000e62c <at_ble_addr_set+0x50>)
1000e618:	4798      	blx	r3
1000e61a:	bd38      	pop	{r3, r4, r5, pc}
1000e61c:	10012207 	.word	0x10012207
1000e620:	1001a29b 	.word	0x1001a29b
1000e624:	1001a296 	.word	0x1001a296
1000e628:	1000e399 	.word	0x1000e399
1000e62c:	1000f6c1 	.word	0x1000f6c1

1000e630 <at_ble_adv_data_set>:
1000e630:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000e632:	4684      	mov	ip, r0
1000e634:	1c0f      	adds	r7, r1, #0
1000e636:	1c16      	adds	r6, r2, #0
1000e638:	1c1c      	adds	r4, r3, #0
1000e63a:	2800      	cmp	r0, #0
1000e63c:	d102      	bne.n	1000e644 <at_ble_adv_data_set+0x14>
1000e63e:	20e2      	movs	r0, #226	; 0xe2
1000e640:	2a00      	cmp	r2, #0
1000e642:	d02b      	beq.n	1000e69c <at_ble_adv_data_set+0x6c>
1000e644:	20cf      	movs	r0, #207	; 0xcf
1000e646:	2f1f      	cmp	r7, #31
1000e648:	d828      	bhi.n	1000e69c <at_ble_adv_data_set+0x6c>
1000e64a:	2c1f      	cmp	r4, #31
1000e64c:	d826      	bhi.n	1000e69c <at_ble_adv_data_set+0x6c>
1000e64e:	4663      	mov	r3, ip
1000e650:	2b00      	cmp	r3, #0
1000e652:	d00e      	beq.n	1000e672 <at_ble_adv_data_set+0x42>
1000e654:	4812      	ldr	r0, [pc, #72]	; (1000e6a0 <at_ble_adv_data_set+0x70>)
1000e656:	4d13      	ldr	r5, [pc, #76]	; (1000e6a4 <at_ble_adv_data_set+0x74>)
1000e658:	2f00      	cmp	r7, #0
1000e65a:	d104      	bne.n	1000e666 <at_ble_adv_data_set+0x36>
1000e65c:	1c39      	adds	r1, r7, #0
1000e65e:	221f      	movs	r2, #31
1000e660:	4b11      	ldr	r3, [pc, #68]	; (1000e6a8 <at_ble_adv_data_set+0x78>)
1000e662:	4798      	blx	r3
1000e664:	e003      	b.n	1000e66e <at_ble_adv_data_set+0x3e>
1000e666:	4661      	mov	r1, ip
1000e668:	1c3a      	adds	r2, r7, #0
1000e66a:	4b10      	ldr	r3, [pc, #64]	; (1000e6ac <at_ble_adv_data_set+0x7c>)
1000e66c:	4798      	blx	r3
1000e66e:	3572      	adds	r5, #114	; 0x72
1000e670:	702f      	strb	r7, [r5, #0]
1000e672:	1e30      	subs	r0, r6, #0
1000e674:	d012      	beq.n	1000e69c <at_ble_adv_data_set+0x6c>
1000e676:	4d0b      	ldr	r5, [pc, #44]	; (1000e6a4 <at_ble_adv_data_set+0x74>)
1000e678:	480d      	ldr	r0, [pc, #52]	; (1000e6b0 <at_ble_adv_data_set+0x80>)
1000e67a:	2c00      	cmp	r4, #0
1000e67c:	d107      	bne.n	1000e68e <at_ble_adv_data_set+0x5e>
1000e67e:	1c21      	adds	r1, r4, #0
1000e680:	221f      	movs	r2, #31
1000e682:	4b09      	ldr	r3, [pc, #36]	; (1000e6a8 <at_ble_adv_data_set+0x78>)
1000e684:	3573      	adds	r5, #115	; 0x73
1000e686:	4798      	blx	r3
1000e688:	702c      	strb	r4, [r5, #0]
1000e68a:	1c20      	adds	r0, r4, #0
1000e68c:	e006      	b.n	1000e69c <at_ble_adv_data_set+0x6c>
1000e68e:	1c31      	adds	r1, r6, #0
1000e690:	1c22      	adds	r2, r4, #0
1000e692:	4b06      	ldr	r3, [pc, #24]	; (1000e6ac <at_ble_adv_data_set+0x7c>)
1000e694:	4798      	blx	r3
1000e696:	2000      	movs	r0, #0
1000e698:	3573      	adds	r5, #115	; 0x73
1000e69a:	702c      	strb	r4, [r5, #0]
1000e69c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e69e:	46c0      	nop			; (mov r8, r8)
1000e6a0:	1001a2ca 	.word	0x1001a2ca
1000e6a4:	1001a296 	.word	0x1001a296
1000e6a8:	10012219 	.word	0x10012219
1000e6ac:	10012207 	.word	0x10012207
1000e6b0:	1001a2e9 	.word	0x1001a2e9

1000e6b4 <at_ble_adv_start>:
1000e6b4:	b5f0      	push	{r4, r5, r6, r7, lr}
1000e6b6:	b091      	sub	sp, #68	; 0x44
1000e6b8:	1c1f      	adds	r7, r3, #0
1000e6ba:	ab16      	add	r3, sp, #88	; 0x58
1000e6bc:	881d      	ldrh	r5, [r3, #0]
1000e6be:	ab17      	add	r3, sp, #92	; 0x5c
1000e6c0:	881b      	ldrh	r3, [r3, #0]
1000e6c2:	910d      	str	r1, [sp, #52]	; 0x34
1000e6c4:	930e      	str	r3, [sp, #56]	; 0x38
1000e6c6:	ab18      	add	r3, sp, #96	; 0x60
1000e6c8:	781b      	ldrb	r3, [r3, #0]
1000e6ca:	1c04      	adds	r4, r0, #0
1000e6cc:	930f      	str	r3, [sp, #60]	; 0x3c
1000e6ce:	4b42      	ldr	r3, [pc, #264]	; (1000e7d8 <at_ble_adv_start+0x124>)
1000e6d0:	1c16      	adds	r6, r2, #0
1000e6d2:	3373      	adds	r3, #115	; 0x73
1000e6d4:	781b      	ldrb	r3, [r3, #0]
1000e6d6:	20cf      	movs	r0, #207	; 0xcf
1000e6d8:	930c      	str	r3, [sp, #48]	; 0x30
1000e6da:	2c01      	cmp	r4, #1
1000e6dc:	d103      	bne.n	1000e6e6 <at_ble_adv_start+0x32>
1000e6de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000e6e0:	2b00      	cmp	r3, #0
1000e6e2:	d176      	bne.n	1000e7d2 <at_ble_adv_start+0x11e>
1000e6e4:	e024      	b.n	1000e730 <at_ble_adv_start+0x7c>
1000e6e6:	2c04      	cmp	r4, #4
1000e6e8:	d873      	bhi.n	1000e7d2 <at_ble_adv_start+0x11e>
1000e6ea:	2380      	movs	r3, #128	; 0x80
1000e6ec:	01db      	lsls	r3, r3, #7
1000e6ee:	429d      	cmp	r5, r3
1000e6f0:	d86f      	bhi.n	1000e7d2 <at_ble_adv_start+0x11e>
1000e6f2:	2c00      	cmp	r4, #0
1000e6f4:	d102      	bne.n	1000e6fc <at_ble_adv_start+0x48>
1000e6f6:	2d1f      	cmp	r5, #31
1000e6f8:	d96b      	bls.n	1000e7d2 <at_ble_adv_start+0x11e>
1000e6fa:	e003      	b.n	1000e704 <at_ble_adv_start+0x50>
1000e6fc:	2d9f      	cmp	r5, #159	; 0x9f
1000e6fe:	d801      	bhi.n	1000e704 <at_ble_adv_start+0x50>
1000e700:	2c01      	cmp	r4, #1
1000e702:	d166      	bne.n	1000e7d2 <at_ble_adv_start+0x11e>
1000e704:	2f00      	cmp	r7, #0
1000e706:	d009      	beq.n	1000e71c <at_ble_adv_start+0x68>
1000e708:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000e70a:	20cf      	movs	r0, #207	; 0xcf
1000e70c:	3b01      	subs	r3, #1
1000e70e:	2b01      	cmp	r3, #1
1000e710:	d95f      	bls.n	1000e7d2 <at_ble_adv_start+0x11e>
1000e712:	2c01      	cmp	r4, #1
1000e714:	d102      	bne.n	1000e71c <at_ble_adv_start+0x68>
1000e716:	2d00      	cmp	r5, #0
1000e718:	d100      	bne.n	1000e71c <at_ble_adv_start+0x68>
1000e71a:	3520      	adds	r5, #32
1000e71c:	4b2f      	ldr	r3, [pc, #188]	; (1000e7dc <at_ble_adv_start+0x128>)
1000e71e:	4798      	blx	r3
1000e720:	1c01      	adds	r1, r0, #0
1000e722:	2e00      	cmp	r6, #0
1000e724:	d043      	beq.n	1000e7ae <at_ble_adv_start+0xfa>
1000e726:	7833      	ldrb	r3, [r6, #0]
1000e728:	1e60      	subs	r0, r4, #1
1000e72a:	2b00      	cmp	r3, #0
1000e72c:	d109      	bne.n	1000e742 <at_ble_adv_start+0x8e>
1000e72e:	e03b      	b.n	1000e7a8 <at_ble_adv_start+0xf4>
1000e730:	2380      	movs	r3, #128	; 0x80
1000e732:	01db      	lsls	r3, r3, #7
1000e734:	429d      	cmp	r5, r3
1000e736:	d84c      	bhi.n	1000e7d2 <at_ble_adv_start+0x11e>
1000e738:	2e00      	cmp	r6, #0
1000e73a:	d04a      	beq.n	1000e7d2 <at_ble_adv_start+0x11e>
1000e73c:	2f00      	cmp	r7, #0
1000e73e:	d1e3      	bne.n	1000e708 <at_ble_adv_start+0x54>
1000e740:	e02b      	b.n	1000e79a <at_ble_adv_start+0xe6>
1000e742:	2301      	movs	r3, #1
1000e744:	2803      	cmp	r0, #3
1000e746:	d93a      	bls.n	1000e7be <at_ble_adv_start+0x10a>
1000e748:	200d      	movs	r0, #13
1000e74a:	1c72      	adds	r2, r6, #1
1000e74c:	e002      	b.n	1000e754 <at_ble_adv_start+0xa0>
1000e74e:	200e      	movs	r0, #14
1000e750:	1e32      	subs	r2, r6, #0
1000e752:	d1fa      	bne.n	1000e74a <at_ble_adv_start+0x96>
1000e754:	4c20      	ldr	r4, [pc, #128]	; (1000e7d8 <at_ble_adv_start+0x124>)
1000e756:	3474      	adds	r4, #116	; 0x74
1000e758:	7826      	ldrb	r6, [r4, #0]
1000e75a:	2407      	movs	r4, #7
1000e75c:	2e00      	cmp	r6, #0
1000e75e:	d000      	beq.n	1000e762 <at_ble_adv_start+0xae>
1000e760:	1c34      	adds	r4, r6, #0
1000e762:	9200      	str	r2, [sp, #0]
1000e764:	9a0d      	ldr	r2, [sp, #52]	; 0x34
1000e766:	9403      	str	r4, [sp, #12]
1000e768:	9204      	str	r2, [sp, #16]
1000e76a:	4a1b      	ldr	r2, [pc, #108]	; (1000e7d8 <at_ble_adv_start+0x124>)
1000e76c:	9501      	str	r5, [sp, #4]
1000e76e:	9502      	str	r5, [sp, #8]
1000e770:	9705      	str	r7, [sp, #20]
1000e772:	3272      	adds	r2, #114	; 0x72
1000e774:	7812      	ldrb	r2, [r2, #0]
1000e776:	9c0e      	ldr	r4, [sp, #56]	; 0x38
1000e778:	9206      	str	r2, [sp, #24]
1000e77a:	4a19      	ldr	r2, [pc, #100]	; (1000e7e0 <at_ble_adv_start+0x12c>)
1000e77c:	9207      	str	r2, [sp, #28]
1000e77e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1000e780:	9208      	str	r2, [sp, #32]
1000e782:	4a18      	ldr	r2, [pc, #96]	; (1000e7e4 <at_ble_adv_start+0x130>)
1000e784:	9209      	str	r2, [sp, #36]	; 0x24
1000e786:	2264      	movs	r2, #100	; 0x64
1000e788:	4362      	muls	r2, r4
1000e78a:	b292      	uxth	r2, r2
1000e78c:	920a      	str	r2, [sp, #40]	; 0x28
1000e78e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
1000e790:	4c15      	ldr	r4, [pc, #84]	; (1000e7e8 <at_ble_adv_start+0x134>)
1000e792:	920b      	str	r2, [sp, #44]	; 0x2c
1000e794:	4a15      	ldr	r2, [pc, #84]	; (1000e7ec <at_ble_adv_start+0x138>)
1000e796:	47a0      	blx	r4
1000e798:	e01b      	b.n	1000e7d2 <at_ble_adv_start+0x11e>
1000e79a:	2d00      	cmp	r5, #0
1000e79c:	d1be      	bne.n	1000e71c <at_ble_adv_start+0x68>
1000e79e:	4b0f      	ldr	r3, [pc, #60]	; (1000e7dc <at_ble_adv_start+0x128>)
1000e7a0:	4798      	blx	r3
1000e7a2:	2520      	movs	r5, #32
1000e7a4:	1c01      	adds	r1, r0, #0
1000e7a6:	e7be      	b.n	1000e726 <at_ble_adv_start+0x72>
1000e7a8:	2803      	cmp	r0, #3
1000e7aa:	d8cd      	bhi.n	1000e748 <at_ble_adv_start+0x94>
1000e7ac:	e006      	b.n	1000e7bc <at_ble_adv_start+0x108>
1000e7ae:	1e60      	subs	r0, r4, #1
1000e7b0:	2803      	cmp	r0, #3
1000e7b2:	d903      	bls.n	1000e7bc <at_ble_adv_start+0x108>
1000e7b4:	1c33      	adds	r3, r6, #0
1000e7b6:	200d      	movs	r0, #13
1000e7b8:	1c32      	adds	r2, r6, #0
1000e7ba:	e7cb      	b.n	1000e754 <at_ble_adv_start+0xa0>
1000e7bc:	2300      	movs	r3, #0
1000e7be:	f002 fc7f 	bl	100110c0 <__gnu_thumb1_case_sqi>
1000e7c2:	06c6      	.short	0x06c6
1000e7c4:	0204      	.short	0x0204
1000e7c6:	200f      	movs	r0, #15
1000e7c8:	e7c2      	b.n	1000e750 <at_ble_adv_start+0x9c>
1000e7ca:	2200      	movs	r2, #0
1000e7cc:	920c      	str	r2, [sp, #48]	; 0x30
1000e7ce:	200c      	movs	r0, #12
1000e7d0:	e7be      	b.n	1000e750 <at_ble_adv_start+0x9c>
1000e7d2:	b011      	add	sp, #68	; 0x44
1000e7d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000e7d6:	46c0      	nop			; (mov r8, r8)
1000e7d8:	1001a296 	.word	0x1001a296
1000e7dc:	10010751 	.word	0x10010751
1000e7e0:	1001a2ca 	.word	0x1001a2ca
1000e7e4:	1001a2e9 	.word	0x1001a2e9
1000e7e8:	10010631 	.word	0x10010631
1000e7ec:	00003a98 	.word	0x00003a98

1000e7f0 <at_ble_scan_stop>:
1000e7f0:	b510      	push	{r4, lr}
1000e7f2:	4b05      	ldr	r3, [pc, #20]	; (1000e808 <at_ble_scan_stop+0x18>)
1000e7f4:	4798      	blx	r3
1000e7f6:	1e04      	subs	r4, r0, #0
1000e7f8:	d103      	bne.n	1000e802 <at_ble_scan_stop+0x12>
1000e7fa:	20d1      	movs	r0, #209	; 0xd1
1000e7fc:	4b03      	ldr	r3, [pc, #12]	; (1000e80c <at_ble_scan_stop+0x1c>)
1000e7fe:	0100      	lsls	r0, r0, #4
1000e800:	4798      	blx	r3
1000e802:	1c20      	adds	r0, r4, #0
1000e804:	bd10      	pop	{r4, pc}
1000e806:	46c0      	nop			; (mov r8, r8)
1000e808:	1001045d 	.word	0x1001045d
1000e80c:	1000e2a9 	.word	0x1000e2a9

1000e810 <at_ble_disconnect>:
1000e810:	b538      	push	{r3, r4, r5, lr}
1000e812:	1c04      	adds	r4, r0, #0
1000e814:	4b04      	ldr	r3, [pc, #16]	; (1000e828 <at_ble_disconnect+0x18>)
1000e816:	1c08      	adds	r0, r1, #0
1000e818:	1c21      	adds	r1, r4, #0
1000e81a:	4798      	blx	r3
1000e81c:	1c05      	adds	r5, r0, #0
1000e81e:	4b03      	ldr	r3, [pc, #12]	; (1000e82c <at_ble_disconnect+0x1c>)
1000e820:	1c20      	adds	r0, r4, #0
1000e822:	4798      	blx	r3
1000e824:	1c28      	adds	r0, r5, #0
1000e826:	bd38      	pop	{r3, r4, r5, pc}
1000e828:	1000fad5 	.word	0x1000fad5
1000e82c:	1000e2ed 	.word	0x1000e2ed

1000e830 <at_ble_conn_update_reply>:
1000e830:	b510      	push	{r4, lr}
1000e832:	4c01      	ldr	r4, [pc, #4]	; (1000e838 <at_ble_conn_update_reply+0x8>)
1000e834:	47a0      	blx	r4
1000e836:	bd10      	pop	{r4, pc}
1000e838:	1000ffc5 	.word	0x1000ffc5

1000e83c <at_ble_random_address_resolve>:
1000e83c:	b510      	push	{r4, lr}
1000e83e:	23cf      	movs	r3, #207	; 0xcf
1000e840:	2800      	cmp	r0, #0
1000e842:	d00a      	beq.n	1000e85a <at_ble_random_address_resolve+0x1e>
1000e844:	2900      	cmp	r1, #0
1000e846:	d008      	beq.n	1000e85a <at_ble_random_address_resolve+0x1e>
1000e848:	2a00      	cmp	r2, #0
1000e84a:	d006      	beq.n	1000e85a <at_ble_random_address_resolve+0x1e>
1000e84c:	780c      	ldrb	r4, [r1, #0]
1000e84e:	2c02      	cmp	r4, #2
1000e850:	d103      	bne.n	1000e85a <at_ble_random_address_resolve+0x1e>
1000e852:	4b03      	ldr	r3, [pc, #12]	; (1000e860 <at_ble_random_address_resolve+0x24>)
1000e854:	3101      	adds	r1, #1
1000e856:	4798      	blx	r3
1000e858:	2300      	movs	r3, #0
1000e85a:	1c18      	adds	r0, r3, #0
1000e85c:	bd10      	pop	{r4, pc}
1000e85e:	46c0      	nop			; (mov r8, r8)
1000e860:	100107f1 	.word	0x100107f1

1000e864 <at_ble_uuid_type2len>:
1000e864:	23cf      	movs	r3, #207	; 0xcf
1000e866:	2802      	cmp	r0, #2
1000e868:	d801      	bhi.n	1000e86e <at_ble_uuid_type2len+0xa>
1000e86a:	4b02      	ldr	r3, [pc, #8]	; (1000e874 <at_ble_uuid_type2len+0x10>)
1000e86c:	5c1b      	ldrb	r3, [r3, r0]
1000e86e:	1c18      	adds	r0, r3, #0
1000e870:	4770      	bx	lr
1000e872:	46c0      	nop			; (mov r8, r8)
1000e874:	10015b3f 	.word	0x10015b3f

1000e878 <at_ble_uuid_len2type>:
1000e878:	1e83      	subs	r3, r0, #2
1000e87a:	b2db      	uxtb	r3, r3
1000e87c:	2003      	movs	r0, #3
1000e87e:	2b0e      	cmp	r3, #14
1000e880:	d801      	bhi.n	1000e886 <at_ble_uuid_len2type+0xe>
1000e882:	4a01      	ldr	r2, [pc, #4]	; (1000e888 <at_ble_uuid_len2type+0x10>)
1000e884:	5cd0      	ldrb	r0, [r2, r3]
1000e886:	4770      	bx	lr
1000e888:	10015b42 	.word	0x10015b42

1000e88c <init_gatt_client_module>:
1000e88c:	2200      	movs	r2, #0
1000e88e:	4b01      	ldr	r3, [pc, #4]	; (1000e894 <init_gatt_client_module+0x8>)
1000e890:	801a      	strh	r2, [r3, #0]
1000e892:	4770      	bx	lr
1000e894:	100176f4 	.word	0x100176f4

1000e898 <at_ble_primary_service_discover_by_uuid>:
1000e898:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000e89a:	2b00      	cmp	r3, #0
1000e89c:	d101      	bne.n	1000e8a2 <at_ble_primary_service_discover_by_uuid+0xa>
1000e89e:	20cf      	movs	r0, #207	; 0xcf
1000e8a0:	e021      	b.n	1000e8e6 <at_ble_primary_service_discover_by_uuid+0x4e>
1000e8a2:	2900      	cmp	r1, #0
1000e8a4:	d0fb      	beq.n	1000e89e <at_ble_primary_service_discover_by_uuid+0x6>
1000e8a6:	428a      	cmp	r2, r1
1000e8a8:	d3f9      	bcc.n	1000e89e <at_ble_primary_service_discover_by_uuid+0x6>
1000e8aa:	1c1c      	adds	r4, r3, #0
1000e8ac:	1c07      	adds	r7, r0, #0
1000e8ae:	7818      	ldrb	r0, [r3, #0]
1000e8b0:	4b0d      	ldr	r3, [pc, #52]	; (1000e8e8 <at_ble_primary_service_discover_by_uuid+0x50>)
1000e8b2:	1c16      	adds	r6, r2, #0
1000e8b4:	1c0d      	adds	r5, r1, #0
1000e8b6:	4798      	blx	r3
1000e8b8:	1c22      	adds	r2, r4, #0
1000e8ba:	1e01      	subs	r1, r0, #0
1000e8bc:	29cf      	cmp	r1, #207	; 0xcf
1000e8be:	d0ee      	beq.n	1000e89e <at_ble_primary_service_discover_by_uuid+0x6>
1000e8c0:	1b13      	subs	r3, r2, r4
1000e8c2:	b2db      	uxtb	r3, r3
1000e8c4:	428b      	cmp	r3, r1
1000e8c6:	d203      	bcs.n	1000e8d0 <at_ble_primary_service_discover_by_uuid+0x38>
1000e8c8:	3201      	adds	r2, #1
1000e8ca:	7810      	ldrb	r0, [r2, #0]
1000e8cc:	2800      	cmp	r0, #0
1000e8ce:	d0f7      	beq.n	1000e8c0 <at_ble_primary_service_discover_by_uuid+0x28>
1000e8d0:	428b      	cmp	r3, r1
1000e8d2:	d0e4      	beq.n	1000e89e <at_ble_primary_service_discover_by_uuid+0x6>
1000e8d4:	3401      	adds	r4, #1
1000e8d6:	9400      	str	r4, [sp, #0]
1000e8d8:	2003      	movs	r0, #3
1000e8da:	9701      	str	r7, [sp, #4]
1000e8dc:	1c2a      	adds	r2, r5, #0
1000e8de:	1c33      	adds	r3, r6, #0
1000e8e0:	4c02      	ldr	r4, [pc, #8]	; (1000e8ec <at_ble_primary_service_discover_by_uuid+0x54>)
1000e8e2:	47a0      	blx	r4
1000e8e4:	2000      	movs	r0, #0
1000e8e6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000e8e8:	1000e865 	.word	0x1000e865
1000e8ec:	10010a5d 	.word	0x10010a5d

1000e8f0 <at_ble_characteristic_discover_all>:
1000e8f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
1000e8f2:	24cf      	movs	r4, #207	; 0xcf
1000e8f4:	2900      	cmp	r1, #0
1000e8f6:	d00a      	beq.n	1000e90e <at_ble_characteristic_discover_all+0x1e>
1000e8f8:	428a      	cmp	r2, r1
1000e8fa:	d308      	bcc.n	1000e90e <at_ble_characteristic_discover_all+0x1e>
1000e8fc:	2400      	movs	r4, #0
1000e8fe:	1c13      	adds	r3, r2, #0
1000e900:	9001      	str	r0, [sp, #4]
1000e902:	1c0a      	adds	r2, r1, #0
1000e904:	9400      	str	r4, [sp, #0]
1000e906:	2005      	movs	r0, #5
1000e908:	1c21      	adds	r1, r4, #0
1000e90a:	4d02      	ldr	r5, [pc, #8]	; (1000e914 <at_ble_characteristic_discover_all+0x24>)
1000e90c:	47a8      	blx	r5
1000e90e:	1c20      	adds	r0, r4, #0
1000e910:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
1000e912:	46c0      	nop			; (mov r8, r8)
1000e914:	10010a5d 	.word	0x10010a5d

1000e918 <at_ble_descriptor_discover_all>:
1000e918:	b537      	push	{r0, r1, r2, r4, r5, lr}
1000e91a:	24cf      	movs	r4, #207	; 0xcf
1000e91c:	2900      	cmp	r1, #0
1000e91e:	d00a      	beq.n	1000e936 <at_ble_descriptor_discover_all+0x1e>
1000e920:	428a      	cmp	r2, r1
1000e922:	d308      	bcc.n	1000e936 <at_ble_descriptor_discover_all+0x1e>
1000e924:	2400      	movs	r4, #0
1000e926:	1c13      	adds	r3, r2, #0
1000e928:	9001      	str	r0, [sp, #4]
1000e92a:	1c0a      	adds	r2, r1, #0
1000e92c:	9400      	str	r4, [sp, #0]
1000e92e:	2007      	movs	r0, #7
1000e930:	1c21      	adds	r1, r4, #0
1000e932:	4d02      	ldr	r5, [pc, #8]	; (1000e93c <at_ble_descriptor_discover_all+0x24>)
1000e934:	47a8      	blx	r5
1000e936:	1c20      	adds	r0, r4, #0
1000e938:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
1000e93a:	46c0      	nop			; (mov r8, r8)
1000e93c:	10010a5d 	.word	0x10010a5d

1000e940 <at_ble_characteristic_write>:
1000e940:	b5f0      	push	{r4, r5, r6, r7, lr}
1000e942:	b085      	sub	sp, #20
1000e944:	1c14      	adds	r4, r2, #0
1000e946:	aa0a      	add	r2, sp, #40	; 0x28
1000e948:	1c0d      	adds	r5, r1, #0
1000e94a:	ca02      	ldmia	r2!, {r1}
1000e94c:	1c06      	adds	r6, r0, #0
1000e94e:	a80c      	add	r0, sp, #48	; 0x30
1000e950:	7807      	ldrb	r7, [r0, #0]
1000e952:	7812      	ldrb	r2, [r2, #0]
1000e954:	20cf      	movs	r0, #207	; 0xcf
1000e956:	2900      	cmp	r1, #0
1000e958:	d014      	beq.n	1000e984 <at_ble_characteristic_write+0x44>
1000e95a:	2b00      	cmp	r3, #0
1000e95c:	d012      	beq.n	1000e984 <at_ble_characteristic_write+0x44>
1000e95e:	2f00      	cmp	r7, #0
1000e960:	d003      	beq.n	1000e96a <at_ble_characteristic_write+0x2a>
1000e962:	2a00      	cmp	r2, #0
1000e964:	d10e      	bne.n	1000e984 <at_ble_characteristic_write+0x44>
1000e966:	38c3      	subs	r0, #195	; 0xc3
1000e968:	e003      	b.n	1000e972 <at_ble_characteristic_write+0x32>
1000e96a:	1e50      	subs	r0, r2, #1
1000e96c:	4182      	sbcs	r2, r0
1000e96e:	320d      	adds	r2, #13
1000e970:	1c10      	adds	r0, r2, #0
1000e972:	9300      	str	r3, [sp, #0]
1000e974:	9101      	str	r1, [sp, #4]
1000e976:	1c23      	adds	r3, r4, #0
1000e978:	9602      	str	r6, [sp, #8]
1000e97a:	2101      	movs	r1, #1
1000e97c:	1c2a      	adds	r2, r5, #0
1000e97e:	4c02      	ldr	r4, [pc, #8]	; (1000e988 <at_ble_characteristic_write+0x48>)
1000e980:	47a0      	blx	r4
1000e982:	2000      	movs	r0, #0
1000e984:	b005      	add	sp, #20
1000e986:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000e988:	10010aed 	.word	0x10010aed

1000e98c <db_searchATT>:
1000e98c:	b570      	push	{r4, r5, r6, lr}
1000e98e:	1c05      	adds	r5, r0, #0
1000e990:	2400      	movs	r4, #0
1000e992:	4b0c      	ldr	r3, [pc, #48]	; (1000e9c4 <db_searchATT+0x38>)
1000e994:	6819      	ldr	r1, [r3, #0]
1000e996:	4b0c      	ldr	r3, [pc, #48]	; (1000e9c8 <db_searchATT+0x3c>)
1000e998:	681e      	ldr	r6, [r3, #0]
1000e99a:	428c      	cmp	r4, r1
1000e99c:	dc10      	bgt.n	1000e9c0 <db_searchATT+0x34>
1000e99e:	200c      	movs	r0, #12
1000e9a0:	1863      	adds	r3, r4, r1
1000e9a2:	0fda      	lsrs	r2, r3, #31
1000e9a4:	18d3      	adds	r3, r2, r3
1000e9a6:	1c02      	adds	r2, r0, #0
1000e9a8:	105b      	asrs	r3, r3, #1
1000e9aa:	435a      	muls	r2, r3
1000e9ac:	18b0      	adds	r0, r6, r2
1000e9ae:	8802      	ldrh	r2, [r0, #0]
1000e9b0:	42aa      	cmp	r2, r5
1000e9b2:	d201      	bcs.n	1000e9b8 <db_searchATT+0x2c>
1000e9b4:	1e59      	subs	r1, r3, #1
1000e9b6:	e7f0      	b.n	1000e99a <db_searchATT+0xe>
1000e9b8:	42aa      	cmp	r2, r5
1000e9ba:	d902      	bls.n	1000e9c2 <db_searchATT+0x36>
1000e9bc:	1c5c      	adds	r4, r3, #1
1000e9be:	e7ec      	b.n	1000e99a <db_searchATT+0xe>
1000e9c0:	2000      	movs	r0, #0
1000e9c2:	bd70      	pop	{r4, r5, r6, pc}
1000e9c4:	10017708 	.word	0x10017708
1000e9c8:	10017700 	.word	0x10017700

1000e9cc <att_permissions>:
1000e9cc:	b530      	push	{r4, r5, lr}
1000e9ce:	2403      	movs	r4, #3
1000e9d0:	1c05      	adds	r5, r0, #0
1000e9d2:	2301      	movs	r3, #1
1000e9d4:	4025      	ands	r5, r4
1000e9d6:	42a5      	cmp	r5, r4
1000e9d8:	d009      	beq.n	1000e9ee <att_permissions+0x22>
1000e9da:	1c23      	adds	r3, r4, #0
1000e9dc:	1924      	adds	r4, r4, r4
1000e9de:	4220      	tst	r0, r4
1000e9e0:	d105      	bne.n	1000e9ee <att_permissions+0x22>
1000e9e2:	3b02      	subs	r3, #2
1000e9e4:	4218      	tst	r0, r3
1000e9e6:	d102      	bne.n	1000e9ee <att_permissions+0x22>
1000e9e8:	1e4b      	subs	r3, r1, #1
1000e9ea:	4199      	sbcs	r1, r3
1000e9ec:	b28b      	uxth	r3, r1
1000e9ee:	2130      	movs	r1, #48	; 0x30
1000e9f0:	4001      	ands	r1, r0
1000e9f2:	2930      	cmp	r1, #48	; 0x30
1000e9f4:	d007      	beq.n	1000ea06 <att_permissions+0x3a>
1000e9f6:	0641      	lsls	r1, r0, #25
1000e9f8:	d401      	bmi.n	1000e9fe <att_permissions+0x32>
1000e9fa:	0681      	lsls	r1, r0, #26
1000e9fc:	d501      	bpl.n	1000ea02 <att_permissions+0x36>
1000e9fe:	4807      	ldr	r0, [pc, #28]	; (1000ea1c <att_permissions+0x50>)
1000ea00:	e009      	b.n	1000ea16 <att_permissions+0x4a>
1000ea02:	06c1      	lsls	r1, r0, #27
1000ea04:	d501      	bpl.n	1000ea0a <att_permissions+0x3e>
1000ea06:	4806      	ldr	r0, [pc, #24]	; (1000ea20 <att_permissions+0x54>)
1000ea08:	e005      	b.n	1000ea16 <att_permissions+0x4a>
1000ea0a:	2a00      	cmp	r2, #0
1000ea0c:	d001      	beq.n	1000ea12 <att_permissions+0x46>
1000ea0e:	2204      	movs	r2, #4
1000ea10:	4313      	orrs	r3, r2
1000ea12:	2080      	movs	r0, #128	; 0x80
1000ea14:	0180      	lsls	r0, r0, #6
1000ea16:	4318      	orrs	r0, r3
1000ea18:	bd30      	pop	{r4, r5, pc}
1000ea1a:	46c0      	nop			; (mov r8, r8)
1000ea1c:	0000200c 	.word	0x0000200c
1000ea20:	00002004 	.word	0x00002004

1000ea24 <char_permissions>:
1000ea24:	b530      	push	{r4, r5, lr}
1000ea26:	2300      	movs	r3, #0
1000ea28:	0784      	lsls	r4, r0, #30
1000ea2a:	d503      	bpl.n	1000ea34 <char_permissions+0x10>
1000ea2c:	3301      	adds	r3, #1
1000ea2e:	4219      	tst	r1, r3
1000ea30:	d100      	bne.n	1000ea34 <char_permissions+0x10>
1000ea32:	3302      	adds	r3, #2
1000ea34:	0704      	lsls	r4, r0, #28
1000ea36:	d508      	bpl.n	1000ea4a <char_permissions+0x26>
1000ea38:	06cc      	lsls	r4, r1, #27
1000ea3a:	d501      	bpl.n	1000ea40 <char_permissions+0x1c>
1000ea3c:	2404      	movs	r4, #4
1000ea3e:	e000      	b.n	1000ea42 <char_permissions+0x1e>
1000ea40:	240c      	movs	r4, #12
1000ea42:	4323      	orrs	r3, r4
1000ea44:	2480      	movs	r4, #128	; 0x80
1000ea46:	01a4      	lsls	r4, r4, #6
1000ea48:	4323      	orrs	r3, r4
1000ea4a:	0684      	lsls	r4, r0, #26
1000ea4c:	d506      	bpl.n	1000ea5c <char_permissions+0x38>
1000ea4e:	2406      	movs	r4, #6
1000ea50:	4221      	tst	r1, r4
1000ea52:	d101      	bne.n	1000ea58 <char_permissions+0x34>
1000ea54:	340a      	adds	r4, #10
1000ea56:	e000      	b.n	1000ea5a <char_permissions+0x36>
1000ea58:	2430      	movs	r4, #48	; 0x30
1000ea5a:	4323      	orrs	r3, r4
1000ea5c:	06c4      	lsls	r4, r0, #27
1000ea5e:	d506      	bpl.n	1000ea6e <char_permissions+0x4a>
1000ea60:	2406      	movs	r4, #6
1000ea62:	4221      	tst	r1, r4
1000ea64:	d101      	bne.n	1000ea6a <char_permissions+0x46>
1000ea66:	343a      	adds	r4, #58	; 0x3a
1000ea68:	e000      	b.n	1000ea6c <char_permissions+0x48>
1000ea6a:	24c0      	movs	r4, #192	; 0xc0
1000ea6c:	4323      	orrs	r3, r4
1000ea6e:	2480      	movs	r4, #128	; 0x80
1000ea70:	0064      	lsls	r4, r4, #1
1000ea72:	4220      	tst	r0, r4
1000ea74:	d000      	beq.n	1000ea78 <char_permissions+0x54>
1000ea76:	4323      	orrs	r3, r4
1000ea78:	07c4      	lsls	r4, r0, #31
1000ea7a:	d502      	bpl.n	1000ea82 <char_permissions+0x5e>
1000ea7c:	2480      	movs	r4, #128	; 0x80
1000ea7e:	00a4      	lsls	r4, r4, #2
1000ea80:	4323      	orrs	r3, r4
1000ea82:	2404      	movs	r4, #4
1000ea84:	4220      	tst	r0, r4
1000ea86:	d006      	beq.n	1000ea96 <char_permissions+0x72>
1000ea88:	06cd      	lsls	r5, r1, #27
1000ea8a:	d400      	bmi.n	1000ea8e <char_permissions+0x6a>
1000ea8c:	240c      	movs	r4, #12
1000ea8e:	4323      	orrs	r3, r4
1000ea90:	2480      	movs	r4, #128	; 0x80
1000ea92:	0124      	lsls	r4, r4, #4
1000ea94:	4323      	orrs	r3, r4
1000ea96:	0644      	lsls	r4, r0, #25
1000ea98:	d501      	bpl.n	1000ea9e <char_permissions+0x7a>
1000ea9a:	4c08      	ldr	r4, [pc, #32]	; (1000eabc <char_permissions+0x98>)
1000ea9c:	4323      	orrs	r3, r4
1000ea9e:	0600      	lsls	r0, r0, #24
1000eaa0:	d507      	bpl.n	1000eab2 <char_permissions+0x8e>
1000eaa2:	2004      	movs	r0, #4
1000eaa4:	06c9      	lsls	r1, r1, #27
1000eaa6:	d400      	bmi.n	1000eaaa <char_permissions+0x86>
1000eaa8:	200c      	movs	r0, #12
1000eaaa:	4303      	orrs	r3, r0
1000eaac:	2084      	movs	r0, #132	; 0x84
1000eaae:	0180      	lsls	r0, r0, #6
1000eab0:	4303      	orrs	r3, r0
1000eab2:	0390      	lsls	r0, r2, #14
1000eab4:	4303      	orrs	r3, r0
1000eab6:	b298      	uxth	r0, r3
1000eab8:	bd30      	pop	{r4, r5, pc}
1000eaba:	46c0      	nop			; (mov r8, r8)
1000eabc:	00001004 	.word	0x00001004

1000eac0 <presentation_format_define>:
1000eac0:	b507      	push	{r0, r1, r2, lr}
1000eac2:	466a      	mov	r2, sp
1000eac4:	780b      	ldrb	r3, [r1, #0]
1000eac6:	7013      	strb	r3, [r2, #0]
1000eac8:	784b      	ldrb	r3, [r1, #1]
1000eaca:	7053      	strb	r3, [r2, #1]
1000eacc:	884b      	ldrh	r3, [r1, #2]
1000eace:	7093      	strb	r3, [r2, #2]
1000ead0:	0a1b      	lsrs	r3, r3, #8
1000ead2:	70d3      	strb	r3, [r2, #3]
1000ead4:	790b      	ldrb	r3, [r1, #4]
1000ead6:	7113      	strb	r3, [r2, #4]
1000ead8:	88cb      	ldrh	r3, [r1, #6]
1000eada:	2107      	movs	r1, #7
1000eadc:	7153      	strb	r3, [r2, #5]
1000eade:	0a1b      	lsrs	r3, r3, #8
1000eae0:	7193      	strb	r3, [r2, #6]
1000eae2:	4b01      	ldr	r3, [pc, #4]	; (1000eae8 <presentation_format_define+0x28>)
1000eae4:	4798      	blx	r3
1000eae6:	bd0e      	pop	{r1, r2, r3, pc}
1000eae8:	10010f6d 	.word	0x10010f6d

1000eaec <db_addATT>:
1000eaec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000eaee:	4c29      	ldr	r4, [pc, #164]	; (1000eb94 <db_addATT+0xa8>)
1000eaf0:	1c1d      	adds	r5, r3, #0
1000eaf2:	6823      	ldr	r3, [r4, #0]
1000eaf4:	9001      	str	r0, [sp, #4]
1000eaf6:	26d3      	movs	r6, #211	; 0xd3
1000eaf8:	2b00      	cmp	r3, #0
1000eafa:	d048      	beq.n	1000eb8e <db_addATT+0xa2>
1000eafc:	1c1e      	adds	r6, r3, #0
1000eafe:	3e0c      	subs	r6, #12
1000eb00:	6026      	str	r6, [r4, #0]
1000eb02:	2900      	cmp	r1, #0
1000eb04:	d005      	beq.n	1000eb12 <db_addATT+0x26>
1000eb06:	4f24      	ldr	r7, [pc, #144]	; (1000eb98 <db_addATT+0xac>)
1000eb08:	46bc      	mov	ip, r7
1000eb0a:	4660      	mov	r0, ip
1000eb0c:	683f      	ldr	r7, [r7, #0]
1000eb0e:	18bf      	adds	r7, r7, r2
1000eb10:	6007      	str	r7, [r0, #0]
1000eb12:	4821      	ldr	r0, [pc, #132]	; (1000eb98 <db_addATT+0xac>)
1000eb14:	6807      	ldr	r7, [r0, #0]
1000eb16:	4684      	mov	ip, r0
1000eb18:	42be      	cmp	r6, r7
1000eb1a:	d932      	bls.n	1000eb82 <db_addATT+0x96>
1000eb1c:	4668      	mov	r0, sp
1000eb1e:	8880      	ldrh	r0, [r0, #4]
1000eb20:	3b0c      	subs	r3, #12
1000eb22:	8018      	strh	r0, [r3, #0]
1000eb24:	6823      	ldr	r3, [r4, #0]
1000eb26:	2900      	cmp	r1, #0
1000eb28:	d009      	beq.n	1000eb3e <db_addATT+0x52>
1000eb2a:	2a00      	cmp	r2, #0
1000eb2c:	d007      	beq.n	1000eb3e <db_addATT+0x52>
1000eb2e:	4660      	mov	r0, ip
1000eb30:	6800      	ldr	r0, [r0, #0]
1000eb32:	809a      	strh	r2, [r3, #4]
1000eb34:	1a80      	subs	r0, r0, r2
1000eb36:	6098      	str	r0, [r3, #8]
1000eb38:	4b18      	ldr	r3, [pc, #96]	; (1000eb9c <db_addATT+0xb0>)
1000eb3a:	4798      	blx	r3
1000eb3c:	e002      	b.n	1000eb44 <db_addATT+0x58>
1000eb3e:	2100      	movs	r1, #0
1000eb40:	809a      	strh	r2, [r3, #4]
1000eb42:	6099      	str	r1, [r3, #8]
1000eb44:	2300      	movs	r3, #0
1000eb46:	6822      	ldr	r2, [r4, #0]
1000eb48:	7093      	strb	r3, [r2, #2]
1000eb4a:	3303      	adds	r3, #3
1000eb4c:	402b      	ands	r3, r5
1000eb4e:	2b03      	cmp	r3, #3
1000eb50:	d001      	beq.n	1000eb56 <db_addATT+0x6a>
1000eb52:	076b      	lsls	r3, r5, #29
1000eb54:	d504      	bpl.n	1000eb60 <db_addATT+0x74>
1000eb56:	2101      	movs	r1, #1
1000eb58:	6822      	ldr	r2, [r4, #0]
1000eb5a:	7893      	ldrb	r3, [r2, #2]
1000eb5c:	430b      	orrs	r3, r1
1000eb5e:	7093      	strb	r3, [r2, #2]
1000eb60:	2330      	movs	r3, #48	; 0x30
1000eb62:	402b      	ands	r3, r5
1000eb64:	2b30      	cmp	r3, #48	; 0x30
1000eb66:	d001      	beq.n	1000eb6c <db_addATT+0x80>
1000eb68:	066b      	lsls	r3, r5, #25
1000eb6a:	d504      	bpl.n	1000eb76 <db_addATT+0x8a>
1000eb6c:	2102      	movs	r1, #2
1000eb6e:	6822      	ldr	r2, [r4, #0]
1000eb70:	7893      	ldrb	r3, [r2, #2]
1000eb72:	430b      	orrs	r3, r1
1000eb74:	7093      	strb	r3, [r2, #2]
1000eb76:	4a0a      	ldr	r2, [pc, #40]	; (1000eba0 <db_addATT+0xb4>)
1000eb78:	2600      	movs	r6, #0
1000eb7a:	6813      	ldr	r3, [r2, #0]
1000eb7c:	3301      	adds	r3, #1
1000eb7e:	6013      	str	r3, [r2, #0]
1000eb80:	e005      	b.n	1000eb8e <db_addATT+0xa2>
1000eb82:	6023      	str	r3, [r4, #0]
1000eb84:	2611      	movs	r6, #17
1000eb86:	2900      	cmp	r1, #0
1000eb88:	d001      	beq.n	1000eb8e <db_addATT+0xa2>
1000eb8a:	1aba      	subs	r2, r7, r2
1000eb8c:	6002      	str	r2, [r0, #0]
1000eb8e:	1c30      	adds	r0, r6, #0
1000eb90:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000eb92:	46c0      	nop			; (mov r8, r8)
1000eb94:	10017700 	.word	0x10017700
1000eb98:	10017704 	.word	0x10017704
1000eb9c:	10012207 	.word	0x10012207
1000eba0:	10017708 	.word	0x10017708

1000eba4 <user_description_define>:
1000eba4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000eba6:	1c05      	adds	r5, r0, #0
1000eba8:	20cf      	movs	r0, #207	; 0xcf
1000ebaa:	2a00      	cmp	r2, #0
1000ebac:	d01c      	beq.n	1000ebe8 <user_description_define+0x44>
1000ebae:	1c14      	adds	r4, r2, #0
1000ebb0:	2203      	movs	r2, #3
1000ebb2:	1c1e      	adds	r6, r3, #0
1000ebb4:	400a      	ands	r2, r1
1000ebb6:	1c0b      	adds	r3, r1, #0
1000ebb8:	3a03      	subs	r2, #3
1000ebba:	4251      	negs	r1, r2
1000ebbc:	4151      	adcs	r1, r2
1000ebbe:	075a      	lsls	r2, r3, #29
1000ebc0:	0fd2      	lsrs	r2, r2, #31
1000ebc2:	430a      	orrs	r2, r1
1000ebc4:	03d2      	lsls	r2, r2, #15
1000ebc6:	4f09      	ldr	r7, [pc, #36]	; (1000ebec <user_description_define+0x48>)
1000ebc8:	1c28      	adds	r0, r5, #0
1000ebca:	2a00      	cmp	r2, #0
1000ebcc:	d003      	beq.n	1000ebd6 <user_description_define+0x32>
1000ebce:	1c21      	adds	r1, r4, #0
1000ebd0:	1c32      	adds	r2, r6, #0
1000ebd2:	47b8      	blx	r7
1000ebd4:	e008      	b.n	1000ebe8 <user_description_define+0x44>
1000ebd6:	1c11      	adds	r1, r2, #0
1000ebd8:	47b8      	blx	r7
1000ebda:	2800      	cmp	r0, #0
1000ebdc:	d104      	bne.n	1000ebe8 <user_description_define+0x44>
1000ebde:	1c28      	adds	r0, r5, #0
1000ebe0:	1c31      	adds	r1, r6, #0
1000ebe2:	1c22      	adds	r2, r4, #0
1000ebe4:	4b02      	ldr	r3, [pc, #8]	; (1000ebf0 <user_description_define+0x4c>)
1000ebe6:	4798      	blx	r3
1000ebe8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000ebea:	46c0      	nop			; (mov r8, r8)
1000ebec:	1000eaed 	.word	0x1000eaed
1000ebf0:	10010f6d 	.word	0x10010f6d

1000ebf4 <at_ble_read_authorize_reply.part.1>:
1000ebf4:	b537      	push	{r0, r1, r2, r4, r5, lr}
1000ebf6:	4b09      	ldr	r3, [pc, #36]	; (1000ec1c <at_ble_read_authorize_reply.part.1+0x28>)
1000ebf8:	1c05      	adds	r5, r0, #0
1000ebfa:	1c08      	adds	r0, r1, #0
1000ebfc:	1c0c      	adds	r4, r1, #0
1000ebfe:	4798      	blx	r3
1000ec00:	2800      	cmp	r0, #0
1000ec02:	d009      	beq.n	1000ec18 <at_ble_read_authorize_reply.part.1+0x24>
1000ec04:	6882      	ldr	r2, [r0, #8]
1000ec06:	2a00      	cmp	r2, #0
1000ec08:	d006      	beq.n	1000ec18 <at_ble_read_authorize_reply.part.1+0x24>
1000ec0a:	8883      	ldrh	r3, [r0, #4]
1000ec0c:	1c29      	adds	r1, r5, #0
1000ec0e:	9200      	str	r2, [sp, #0]
1000ec10:	1c20      	adds	r0, r4, #0
1000ec12:	2200      	movs	r2, #0
1000ec14:	4c02      	ldr	r4, [pc, #8]	; (1000ec20 <at_ble_read_authorize_reply.part.1+0x2c>)
1000ec16:	47a0      	blx	r4
1000ec18:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
1000ec1a:	46c0      	nop			; (mov r8, r8)
1000ec1c:	1000e98d 	.word	0x1000e98d
1000ec20:	100108ed 	.word	0x100108ed

1000ec24 <internal_at_ble_service_define>:
1000ec24:	b5f0      	push	{r4, r5, r6, r7, lr}
1000ec26:	b08b      	sub	sp, #44	; 0x2c
1000ec28:	9306      	str	r3, [sp, #24]
1000ec2a:	ab10      	add	r3, sp, #64	; 0x40
1000ec2c:	9202      	str	r2, [sp, #8]
1000ec2e:	cb04      	ldmia	r3!, {r2}
1000ec30:	1c05      	adds	r5, r0, #0
1000ec32:	881b      	ldrh	r3, [r3, #0]
1000ec34:	9105      	str	r1, [sp, #20]
1000ec36:	9303      	str	r3, [sp, #12]
1000ec38:	ab12      	add	r3, sp, #72	; 0x48
1000ec3a:	781b      	ldrb	r3, [r3, #0]
1000ec3c:	20cf      	movs	r0, #207	; 0xcf
1000ec3e:	9304      	str	r3, [sp, #16]
1000ec40:	2d00      	cmp	r5, #0
1000ec42:	d100      	bne.n	1000ec46 <internal_at_ble_service_define+0x22>
1000ec44:	e1ca      	b.n	1000efdc <internal_at_ble_service_define+0x3b8>
1000ec46:	2900      	cmp	r1, #0
1000ec48:	d100      	bne.n	1000ec4c <internal_at_ble_service_define+0x28>
1000ec4a:	e1c7      	b.n	1000efdc <internal_at_ble_service_define+0x3b8>
1000ec4c:	2a00      	cmp	r2, #0
1000ec4e:	d100      	bne.n	1000ec52 <internal_at_ble_service_define+0x2e>
1000ec50:	e1c4      	b.n	1000efdc <internal_at_ble_service_define+0x3b8>
1000ec52:	9b03      	ldr	r3, [sp, #12]
1000ec54:	2b00      	cmp	r3, #0
1000ec56:	d100      	bne.n	1000ec5a <internal_at_ble_service_define+0x36>
1000ec58:	e1c0      	b.n	1000efdc <internal_at_ble_service_define+0x3b8>
1000ec5a:	4bc9      	ldr	r3, [pc, #804]	; (1000ef80 <internal_at_ble_service_define+0x35c>)
1000ec5c:	3004      	adds	r0, #4
1000ec5e:	681e      	ldr	r6, [r3, #0]
1000ec60:	2e00      	cmp	r6, #0
1000ec62:	d100      	bne.n	1000ec66 <internal_at_ble_service_define+0x42>
1000ec64:	e1ba      	b.n	1000efdc <internal_at_ble_service_define+0x3b8>
1000ec66:	2400      	movs	r4, #0
1000ec68:	4bc6      	ldr	r3, [pc, #792]	; (1000ef84 <internal_at_ble_service_define+0x360>)
1000ec6a:	8034      	strh	r4, [r6, #0]
1000ec6c:	881b      	ldrh	r3, [r3, #0]
1000ec6e:	1db7      	adds	r7, r6, #6
1000ec70:	1c21      	adds	r1, r4, #0
1000ec72:	2210      	movs	r2, #16
1000ec74:	8073      	strh	r3, [r6, #2]
1000ec76:	1c38      	adds	r0, r7, #0
1000ec78:	4bc3      	ldr	r3, [pc, #780]	; (1000ef88 <internal_at_ble_service_define+0x364>)
1000ec7a:	4798      	blx	r3
1000ec7c:	7828      	ldrb	r0, [r5, #0]
1000ec7e:	4bc3      	ldr	r3, [pc, #780]	; (1000ef8c <internal_at_ble_service_define+0x368>)
1000ec80:	4798      	blx	r3
1000ec82:	1c69      	adds	r1, r5, #1
1000ec84:	1c02      	adds	r2, r0, #0
1000ec86:	4bc2      	ldr	r3, [pc, #776]	; (1000ef90 <internal_at_ble_service_define+0x36c>)
1000ec88:	1c38      	adds	r0, r7, #0
1000ec8a:	4798      	blx	r3
1000ec8c:	2204      	movs	r2, #4
1000ec8e:	782b      	ldrb	r3, [r5, #0]
1000ec90:	9d02      	ldr	r5, [sp, #8]
1000ec92:	011b      	lsls	r3, r3, #4
1000ec94:	4313      	orrs	r3, r2
1000ec96:	9a04      	ldr	r2, [sp, #16]
1000ec98:	7174      	strb	r4, [r6, #5]
1000ec9a:	0192      	lsls	r2, r2, #6
1000ec9c:	4313      	orrs	r3, r2
1000ec9e:	7133      	strb	r3, [r6, #4]
1000eca0:	2316      	movs	r3, #22
1000eca2:	9a06      	ldr	r2, [sp, #24]
1000eca4:	3512      	adds	r5, #18
1000eca6:	4353      	muls	r3, r2
1000eca8:	9a02      	ldr	r2, [sp, #8]
1000ecaa:	3312      	adds	r3, #18
1000ecac:	18d7      	adds	r7, r2, r3
1000ecae:	42bd      	cmp	r5, r7
1000ecb0:	d00f      	beq.n	1000ecd2 <internal_at_ble_service_define+0xae>
1000ecb2:	4bb8      	ldr	r3, [pc, #736]	; (1000ef94 <internal_at_ble_service_define+0x370>)
1000ecb4:	8829      	ldrh	r1, [r5, #0]
1000ecb6:	9300      	str	r3, [sp, #0]
1000ecb8:	230e      	movs	r3, #14
1000ecba:	aa06      	add	r2, sp, #24
1000ecbc:	189b      	adds	r3, r3, r2
1000ecbe:	9301      	str	r3, [sp, #4]
1000ecc0:	4cb5      	ldr	r4, [pc, #724]	; (1000ef98 <internal_at_ble_service_define+0x374>)
1000ecc2:	1c30      	adds	r0, r6, #0
1000ecc4:	2201      	movs	r2, #1
1000ecc6:	2302      	movs	r3, #2
1000ecc8:	47a0      	blx	r4
1000ecca:	3516      	adds	r5, #22
1000eccc:	1e04      	subs	r4, r0, #0
1000ecce:	d0ee      	beq.n	1000ecae <internal_at_ble_service_define+0x8a>
1000ecd0:	e183      	b.n	1000efda <internal_at_ble_service_define+0x3b6>
1000ecd2:	9f10      	ldr	r7, [sp, #64]	; 0x40
1000ecd4:	2300      	movs	r3, #0
1000ecd6:	3714      	adds	r7, #20
1000ecd8:	1c3d      	adds	r5, r7, #0
1000ecda:	9302      	str	r3, [sp, #8]
1000ecdc:	9b02      	ldr	r3, [sp, #8]
1000ecde:	9a03      	ldr	r2, [sp, #12]
1000ece0:	4293      	cmp	r3, r2
1000ece2:	db00      	blt.n	1000ece6 <internal_at_ble_service_define+0xc2>
1000ece4:	e0bf      	b.n	1000ee66 <internal_at_ble_service_define+0x242>
1000ece6:	4bad      	ldr	r3, [pc, #692]	; (1000ef9c <internal_at_ble_service_define+0x378>)
1000ece8:	aa06      	add	r2, sp, #24
1000ecea:	9300      	str	r3, [sp, #0]
1000ecec:	230e      	movs	r3, #14
1000ecee:	189b      	adds	r3, r3, r2
1000ecf0:	9301      	str	r3, [sp, #4]
1000ecf2:	4ca9      	ldr	r4, [pc, #676]	; (1000ef98 <internal_at_ble_service_define+0x374>)
1000ecf4:	1c30      	adds	r0, r6, #0
1000ecf6:	2104      	movs	r1, #4
1000ecf8:	2201      	movs	r2, #1
1000ecfa:	2302      	movs	r3, #2
1000ecfc:	47a0      	blx	r4
1000ecfe:	1e04      	subs	r4, r0, #0
1000ed00:	d000      	beq.n	1000ed04 <internal_at_ble_service_define+0xe0>
1000ed02:	e16a      	b.n	1000efda <internal_at_ble_service_define+0x3b6>
1000ed04:	1c2b      	adds	r3, r5, #0
1000ed06:	3b12      	subs	r3, #18
1000ed08:	7b2c      	ldrb	r4, [r5, #12]
1000ed0a:	781b      	ldrb	r3, [r3, #0]
1000ed0c:	1c21      	adds	r1, r4, #0
1000ed0e:	1c1a      	adds	r2, r3, #0
1000ed10:	9304      	str	r3, [sp, #16]
1000ed12:	8828      	ldrh	r0, [r5, #0]
1000ed14:	4ba2      	ldr	r3, [pc, #648]	; (1000efa0 <internal_at_ble_service_define+0x37c>)
1000ed16:	4798      	blx	r3
1000ed18:	2303      	movs	r3, #3
1000ed1a:	4023      	ands	r3, r4
1000ed1c:	3b03      	subs	r3, #3
1000ed1e:	4259      	negs	r1, r3
1000ed20:	4159      	adcs	r1, r3
1000ed22:	2301      	movs	r3, #1
1000ed24:	08a4      	lsrs	r4, r4, #2
1000ed26:	401c      	ands	r4, r3
1000ed28:	430c      	orrs	r4, r1
1000ed2a:	896b      	ldrh	r3, [r5, #10]
1000ed2c:	03e4      	lsls	r4, r4, #15
1000ed2e:	431c      	orrs	r4, r3
1000ed30:	9007      	str	r0, [sp, #28]
1000ed32:	4b96      	ldr	r3, [pc, #600]	; (1000ef8c <internal_at_ble_service_define+0x368>)
1000ed34:	9804      	ldr	r0, [sp, #16]
1000ed36:	4798      	blx	r3
1000ed38:	1c2a      	adds	r2, r5, #0
1000ed3a:	3a11      	subs	r2, #17
1000ed3c:	9200      	str	r2, [sp, #0]
1000ed3e:	3a03      	subs	r2, #3
1000ed40:	1c03      	adds	r3, r0, #0
1000ed42:	9201      	str	r2, [sp, #4]
1000ed44:	1c21      	adds	r1, r4, #0
1000ed46:	1c30      	adds	r0, r6, #0
1000ed48:	4c93      	ldr	r4, [pc, #588]	; (1000ef98 <internal_at_ble_service_define+0x374>)
1000ed4a:	9a07      	ldr	r2, [sp, #28]
1000ed4c:	47a0      	blx	r4
1000ed4e:	1e04      	subs	r4, r0, #0
1000ed50:	d000      	beq.n	1000ed54 <internal_at_ble_service_define+0x130>
1000ed52:	e142      	b.n	1000efda <internal_at_ble_service_define+0x3b6>
1000ed54:	22c0      	movs	r2, #192	; 0xc0
1000ed56:	882b      	ldrh	r3, [r5, #0]
1000ed58:	0052      	lsls	r2, r2, #1
1000ed5a:	4213      	tst	r3, r2
1000ed5c:	d104      	bne.n	1000ed68 <internal_at_ble_service_define+0x144>
1000ed5e:	8aab      	ldrh	r3, [r5, #20]
1000ed60:	9304      	str	r3, [sp, #16]
1000ed62:	2b00      	cmp	r3, #0
1000ed64:	d116      	bne.n	1000ed94 <internal_at_ble_service_define+0x170>
1000ed66:	e03a      	b.n	1000edde <internal_at_ble_service_define+0x1ba>
1000ed68:	2201      	movs	r2, #1
1000ed6a:	09d9      	lsrs	r1, r3, #7
1000ed6c:	4011      	ands	r1, r2
1000ed6e:	05db      	lsls	r3, r3, #23
1000ed70:	d501      	bpl.n	1000ed76 <internal_at_ble_service_define+0x152>
1000ed72:	2302      	movs	r3, #2
1000ed74:	4319      	orrs	r1, r3
1000ed76:	4b8b      	ldr	r3, [pc, #556]	; (1000efa4 <internal_at_ble_service_define+0x380>)
1000ed78:	aa06      	add	r2, sp, #24
1000ed7a:	9300      	str	r3, [sp, #0]
1000ed7c:	230e      	movs	r3, #14
1000ed7e:	189b      	adds	r3, r3, r2
1000ed80:	9301      	str	r3, [sp, #4]
1000ed82:	4c85      	ldr	r4, [pc, #532]	; (1000ef98 <internal_at_ble_service_define+0x374>)
1000ed84:	0209      	lsls	r1, r1, #8
1000ed86:	1c30      	adds	r0, r6, #0
1000ed88:	2201      	movs	r2, #1
1000ed8a:	2302      	movs	r3, #2
1000ed8c:	47a0      	blx	r4
1000ed8e:	1e04      	subs	r4, r0, #0
1000ed90:	d0e5      	beq.n	1000ed5e <internal_at_ble_service_define+0x13a>
1000ed92:	e122      	b.n	1000efda <internal_at_ble_service_define+0x3b6>
1000ed94:	2380      	movs	r3, #128	; 0x80
1000ed96:	882a      	ldrh	r2, [r5, #0]
1000ed98:	7f2c      	ldrb	r4, [r5, #28]
1000ed9a:	005b      	lsls	r3, r3, #1
1000ed9c:	401a      	ands	r2, r3
1000ed9e:	1c20      	adds	r0, r4, #0
1000eda0:	2101      	movs	r1, #1
1000eda2:	2a00      	cmp	r2, #0
1000eda4:	d000      	beq.n	1000eda8 <internal_at_ble_service_define+0x184>
1000eda6:	1c0a      	adds	r2, r1, #0
1000eda8:	4b7f      	ldr	r3, [pc, #508]	; (1000efa8 <internal_at_ble_service_define+0x384>)
1000edaa:	4798      	blx	r3
1000edac:	2203      	movs	r2, #3
1000edae:	4022      	ands	r2, r4
1000edb0:	3a03      	subs	r2, #3
1000edb2:	4251      	negs	r1, r2
1000edb4:	4151      	adcs	r1, r2
1000edb6:	4b7d      	ldr	r3, [pc, #500]	; (1000efac <internal_at_ble_service_define+0x388>)
1000edb8:	1c0a      	adds	r2, r1, #0
1000edba:	9300      	str	r3, [sp, #0]
1000edbc:	1c2b      	adds	r3, r5, #0
1000edbe:	0764      	lsls	r4, r4, #29
1000edc0:	0fe4      	lsrs	r4, r4, #31
1000edc2:	4322      	orrs	r2, r4
1000edc4:	03d2      	lsls	r2, r2, #15
1000edc6:	4310      	orrs	r0, r2
1000edc8:	3320      	adds	r3, #32
1000edca:	b282      	uxth	r2, r0
1000edcc:	9301      	str	r3, [sp, #4]
1000edce:	4c72      	ldr	r4, [pc, #456]	; (1000ef98 <internal_at_ble_service_define+0x374>)
1000edd0:	1c30      	adds	r0, r6, #0
1000edd2:	9904      	ldr	r1, [sp, #16]
1000edd4:	2302      	movs	r3, #2
1000edd6:	47a0      	blx	r4
1000edd8:	1e04      	subs	r4, r0, #0
1000edda:	d000      	beq.n	1000edde <internal_at_ble_service_define+0x1ba>
1000eddc:	e0fd      	b.n	1000efda <internal_at_ble_service_define+0x3b6>
1000edde:	2101      	movs	r1, #1
1000ede0:	882b      	ldrh	r3, [r5, #0]
1000ede2:	420b      	tst	r3, r1
1000ede4:	d011      	beq.n	1000ee0a <internal_at_ble_service_define+0x1e6>
1000ede6:	7fa8      	ldrb	r0, [r5, #30]
1000ede8:	4b6f      	ldr	r3, [pc, #444]	; (1000efa8 <internal_at_ble_service_define+0x384>)
1000edea:	2200      	movs	r2, #0
1000edec:	4798      	blx	r3
1000edee:	4b70      	ldr	r3, [pc, #448]	; (1000efb0 <internal_at_ble_service_define+0x38c>)
1000edf0:	1c02      	adds	r2, r0, #0
1000edf2:	9300      	str	r3, [sp, #0]
1000edf4:	1c2b      	adds	r3, r5, #0
1000edf6:	3324      	adds	r3, #36	; 0x24
1000edf8:	9301      	str	r3, [sp, #4]
1000edfa:	4c67      	ldr	r4, [pc, #412]	; (1000ef98 <internal_at_ble_service_define+0x374>)
1000edfc:	1c30      	adds	r0, r6, #0
1000edfe:	496d      	ldr	r1, [pc, #436]	; (1000efb4 <internal_at_ble_service_define+0x390>)
1000ee00:	2302      	movs	r3, #2
1000ee02:	47a0      	blx	r4
1000ee04:	1e04      	subs	r4, r0, #0
1000ee06:	d000      	beq.n	1000ee0a <internal_at_ble_service_define+0x1e6>
1000ee08:	e0e7      	b.n	1000efda <internal_at_ble_service_define+0x3b6>
1000ee0a:	2330      	movs	r3, #48	; 0x30
1000ee0c:	882a      	ldrh	r2, [r5, #0]
1000ee0e:	421a      	tst	r2, r3
1000ee10:	d012      	beq.n	1000ee38 <internal_at_ble_service_define+0x214>
1000ee12:	2101      	movs	r1, #1
1000ee14:	7f68      	ldrb	r0, [r5, #29]
1000ee16:	1c0a      	adds	r2, r1, #0
1000ee18:	4b63      	ldr	r3, [pc, #396]	; (1000efa8 <internal_at_ble_service_define+0x384>)
1000ee1a:	4798      	blx	r3
1000ee1c:	4b66      	ldr	r3, [pc, #408]	; (1000efb8 <internal_at_ble_service_define+0x394>)
1000ee1e:	1c02      	adds	r2, r0, #0
1000ee20:	9300      	str	r3, [sp, #0]
1000ee22:	1c2b      	adds	r3, r5, #0
1000ee24:	3322      	adds	r3, #34	; 0x22
1000ee26:	9301      	str	r3, [sp, #4]
1000ee28:	4c5b      	ldr	r4, [pc, #364]	; (1000ef98 <internal_at_ble_service_define+0x374>)
1000ee2a:	1c30      	adds	r0, r6, #0
1000ee2c:	4961      	ldr	r1, [pc, #388]	; (1000efb4 <internal_at_ble_service_define+0x390>)
1000ee2e:	2302      	movs	r3, #2
1000ee30:	47a0      	blx	r4
1000ee32:	1e04      	subs	r4, r0, #0
1000ee34:	d000      	beq.n	1000ee38 <internal_at_ble_service_define+0x214>
1000ee36:	e0d0      	b.n	1000efda <internal_at_ble_service_define+0x3b6>
1000ee38:	69ab      	ldr	r3, [r5, #24]
1000ee3a:	2b00      	cmp	r3, #0
1000ee3c:	d00e      	beq.n	1000ee5c <internal_at_ble_service_define+0x238>
1000ee3e:	4b5f      	ldr	r3, [pc, #380]	; (1000efbc <internal_at_ble_service_define+0x398>)
1000ee40:	aa06      	add	r2, sp, #24
1000ee42:	9300      	str	r3, [sp, #0]
1000ee44:	230e      	movs	r3, #14
1000ee46:	189b      	adds	r3, r3, r2
1000ee48:	9301      	str	r3, [sp, #4]
1000ee4a:	4c53      	ldr	r4, [pc, #332]	; (1000ef98 <internal_at_ble_service_define+0x374>)
1000ee4c:	1c30      	adds	r0, r6, #0
1000ee4e:	2107      	movs	r1, #7
1000ee50:	2201      	movs	r2, #1
1000ee52:	2302      	movs	r3, #2
1000ee54:	47a0      	blx	r4
1000ee56:	1e04      	subs	r4, r0, #0
1000ee58:	d000      	beq.n	1000ee5c <internal_at_ble_service_define+0x238>
1000ee5a:	e0be      	b.n	1000efda <internal_at_ble_service_define+0x3b6>
1000ee5c:	9b02      	ldr	r3, [sp, #8]
1000ee5e:	353c      	adds	r5, #60	; 0x3c
1000ee60:	3301      	adds	r3, #1
1000ee62:	9302      	str	r3, [sp, #8]
1000ee64:	e73a      	b.n	1000ecdc <internal_at_ble_service_define+0xb8>
1000ee66:	1c30      	adds	r0, r6, #0
1000ee68:	4b55      	ldr	r3, [pc, #340]	; (1000efc0 <internal_at_ble_service_define+0x39c>)
1000ee6a:	4798      	blx	r3
1000ee6c:	1e04      	subs	r4, r0, #0
1000ee6e:	d000      	beq.n	1000ee72 <internal_at_ble_service_define+0x24e>
1000ee70:	e0b3      	b.n	1000efda <internal_at_ble_service_define+0x3b6>
1000ee72:	8833      	ldrh	r3, [r6, #0]
1000ee74:	9a05      	ldr	r2, [sp, #20]
1000ee76:	8013      	strh	r3, [r2, #0]
1000ee78:	8836      	ldrh	r6, [r6, #0]
1000ee7a:	9b06      	ldr	r3, [sp, #24]
1000ee7c:	9a03      	ldr	r2, [sp, #12]
1000ee7e:	18f6      	adds	r6, r6, r3
1000ee80:	b2b3      	uxth	r3, r6
1000ee82:	9302      	str	r3, [sp, #8]
1000ee84:	233c      	movs	r3, #60	; 0x3c
1000ee86:	4353      	muls	r3, r2
1000ee88:	9a10      	ldr	r2, [sp, #64]	; 0x40
1000ee8a:	3314      	adds	r3, #20
1000ee8c:	18d3      	adds	r3, r2, r3
1000ee8e:	9304      	str	r3, [sp, #16]
1000ee90:	9b04      	ldr	r3, [sp, #16]
1000ee92:	429f      	cmp	r7, r3
1000ee94:	d100      	bne.n	1000ee98 <internal_at_ble_service_define+0x274>
1000ee96:	e0a0      	b.n	1000efda <internal_at_ble_service_define+0x3b6>
1000ee98:	9b02      	ldr	r3, [sp, #8]
1000ee9a:	1c9d      	adds	r5, r3, #2
1000ee9c:	1c3b      	adds	r3, r7, #0
1000ee9e:	b2ad      	uxth	r5, r5
1000eea0:	3b14      	subs	r3, #20
1000eea2:	801d      	strh	r5, [r3, #0]
1000eea4:	9303      	str	r3, [sp, #12]
1000eea6:	893b      	ldrh	r3, [r7, #8]
1000eea8:	2b00      	cmp	r3, #0
1000eeaa:	d108      	bne.n	1000eebe <internal_at_ble_service_define+0x29a>
1000eeac:	23c0      	movs	r3, #192	; 0xc0
1000eeae:	883a      	ldrh	r2, [r7, #0]
1000eeb0:	005b      	lsls	r3, r3, #1
1000eeb2:	421a      	tst	r2, r3
1000eeb4:	d026      	beq.n	1000ef04 <internal_at_ble_service_define+0x2e0>
1000eeb6:	9e02      	ldr	r6, [sp, #8]
1000eeb8:	3603      	adds	r6, #3
1000eeba:	b2b5      	uxth	r5, r6
1000eebc:	e022      	b.n	1000ef04 <internal_at_ble_service_define+0x2e0>
1000eebe:	2103      	movs	r1, #3
1000eec0:	7b3b      	ldrb	r3, [r7, #12]
1000eec2:	4019      	ands	r1, r3
1000eec4:	3903      	subs	r1, #3
1000eec6:	424a      	negs	r2, r1
1000eec8:	414a      	adcs	r2, r1
1000eeca:	0759      	lsls	r1, r3, #29
1000eecc:	0fc9      	lsrs	r1, r1, #31
1000eece:	4311      	orrs	r1, r2
1000eed0:	03c9      	lsls	r1, r1, #15
1000eed2:	897a      	ldrh	r2, [r7, #10]
1000eed4:	2900      	cmp	r1, #0
1000eed6:	d007      	beq.n	1000eee8 <internal_at_ble_service_define+0x2c4>
1000eed8:	6879      	ldr	r1, [r7, #4]
1000eeda:	2900      	cmp	r1, #0
1000eedc:	d100      	bne.n	1000eee0 <internal_at_ble_service_define+0x2bc>
1000eede:	4939      	ldr	r1, [pc, #228]	; (1000efc4 <internal_at_ble_service_define+0x3a0>)
1000eee0:	1c28      	adds	r0, r5, #0
1000eee2:	4e39      	ldr	r6, [pc, #228]	; (1000efc8 <internal_at_ble_service_define+0x3a4>)
1000eee4:	47b0      	blx	r6
1000eee6:	e00a      	b.n	1000eefe <internal_at_ble_service_define+0x2da>
1000eee8:	1c28      	adds	r0, r5, #0
1000eeea:	4e37      	ldr	r6, [pc, #220]	; (1000efc8 <internal_at_ble_service_define+0x3a4>)
1000eeec:	47b0      	blx	r6
1000eeee:	2800      	cmp	r0, #0
1000eef0:	d172      	bne.n	1000efd8 <internal_at_ble_service_define+0x3b4>
1000eef2:	9b03      	ldr	r3, [sp, #12]
1000eef4:	8939      	ldrh	r1, [r7, #8]
1000eef6:	8818      	ldrh	r0, [r3, #0]
1000eef8:	687a      	ldr	r2, [r7, #4]
1000eefa:	4b34      	ldr	r3, [pc, #208]	; (1000efcc <internal_at_ble_service_define+0x3a8>)
1000eefc:	4798      	blx	r3
1000eefe:	2800      	cmp	r0, #0
1000ef00:	d0d4      	beq.n	1000eeac <internal_at_ble_service_define+0x288>
1000ef02:	e069      	b.n	1000efd8 <internal_at_ble_service_define+0x3b4>
1000ef04:	8abb      	ldrh	r3, [r7, #20]
1000ef06:	2b00      	cmp	r3, #0
1000ef08:	d00a      	beq.n	1000ef20 <internal_at_ble_service_define+0x2fc>
1000ef0a:	3501      	adds	r5, #1
1000ef0c:	b2ad      	uxth	r5, r5
1000ef0e:	843d      	strh	r5, [r7, #32]
1000ef10:	7f39      	ldrb	r1, [r7, #28]
1000ef12:	8afb      	ldrh	r3, [r7, #22]
1000ef14:	1c28      	adds	r0, r5, #0
1000ef16:	693a      	ldr	r2, [r7, #16]
1000ef18:	4e2d      	ldr	r6, [pc, #180]	; (1000efd0 <internal_at_ble_service_define+0x3ac>)
1000ef1a:	47b0      	blx	r6
1000ef1c:	2800      	cmp	r0, #0
1000ef1e:	d15b      	bne.n	1000efd8 <internal_at_ble_service_define+0x3b4>
1000ef20:	883b      	ldrh	r3, [r7, #0]
1000ef22:	07db      	lsls	r3, r3, #31
1000ef24:	d50d      	bpl.n	1000ef42 <internal_at_ble_service_define+0x31e>
1000ef26:	2200      	movs	r2, #0
1000ef28:	3501      	adds	r5, #1
1000ef2a:	b2ad      	uxth	r5, r5
1000ef2c:	a909      	add	r1, sp, #36	; 0x24
1000ef2e:	84bd      	strh	r5, [r7, #36]	; 0x24
1000ef30:	7fbb      	ldrb	r3, [r7, #30]
1000ef32:	1c28      	adds	r0, r5, #0
1000ef34:	700a      	strb	r2, [r1, #0]
1000ef36:	704a      	strb	r2, [r1, #1]
1000ef38:	4e23      	ldr	r6, [pc, #140]	; (1000efc8 <internal_at_ble_service_define+0x3a4>)
1000ef3a:	3202      	adds	r2, #2
1000ef3c:	47b0      	blx	r6
1000ef3e:	2800      	cmp	r0, #0
1000ef40:	d14a      	bne.n	1000efd8 <internal_at_ble_service_define+0x3b4>
1000ef42:	2330      	movs	r3, #48	; 0x30
1000ef44:	883a      	ldrh	r2, [r7, #0]
1000ef46:	421a      	tst	r2, r3
1000ef48:	d00d      	beq.n	1000ef66 <internal_at_ble_service_define+0x342>
1000ef4a:	2200      	movs	r2, #0
1000ef4c:	3501      	adds	r5, #1
1000ef4e:	b2ad      	uxth	r5, r5
1000ef50:	a909      	add	r1, sp, #36	; 0x24
1000ef52:	847d      	strh	r5, [r7, #34]	; 0x22
1000ef54:	7f7b      	ldrb	r3, [r7, #29]
1000ef56:	1c28      	adds	r0, r5, #0
1000ef58:	700a      	strb	r2, [r1, #0]
1000ef5a:	704a      	strb	r2, [r1, #1]
1000ef5c:	4e1a      	ldr	r6, [pc, #104]	; (1000efc8 <internal_at_ble_service_define+0x3a4>)
1000ef5e:	3202      	adds	r2, #2
1000ef60:	47b0      	blx	r6
1000ef62:	2800      	cmp	r0, #0
1000ef64:	d138      	bne.n	1000efd8 <internal_at_ble_service_define+0x3b4>
1000ef66:	69b9      	ldr	r1, [r7, #24]
1000ef68:	2900      	cmp	r1, #0
1000ef6a:	d006      	beq.n	1000ef7a <internal_at_ble_service_define+0x356>
1000ef6c:	3501      	adds	r5, #1
1000ef6e:	b2ad      	uxth	r5, r5
1000ef70:	1c28      	adds	r0, r5, #0
1000ef72:	4b18      	ldr	r3, [pc, #96]	; (1000efd4 <internal_at_ble_service_define+0x3b0>)
1000ef74:	4798      	blx	r3
1000ef76:	2800      	cmp	r0, #0
1000ef78:	d12e      	bne.n	1000efd8 <internal_at_ble_service_define+0x3b4>
1000ef7a:	373c      	adds	r7, #60	; 0x3c
1000ef7c:	9502      	str	r5, [sp, #8]
1000ef7e:	e787      	b.n	1000ee90 <internal_at_ble_service_define+0x26c>
1000ef80:	10017710 	.word	0x10017710
1000ef84:	1001a204 	.word	0x1001a204
1000ef88:	10012219 	.word	0x10012219
1000ef8c:	1000e865 	.word	0x1000e865
1000ef90:	10012207 	.word	0x10012207
1000ef94:	10015b5b 	.word	0x10015b5b
1000ef98:	10010efd 	.word	0x10010efd
1000ef9c:	10015b5d 	.word	0x10015b5d
1000efa0:	1000ea25 	.word	0x1000ea25
1000efa4:	10015b59 	.word	0x10015b59
1000efa8:	1000e9cd 	.word	0x1000e9cd
1000efac:	10015b55 	.word	0x10015b55
1000efb0:	10015b57 	.word	0x10015b57
1000efb4:	00008002 	.word	0x00008002
1000efb8:	10015b51 	.word	0x10015b51
1000efbc:	10015b53 	.word	0x10015b53
1000efc0:	10010df1 	.word	0x10010df1
1000efc4:	100176fc 	.word	0x100176fc
1000efc8:	1000eaed 	.word	0x1000eaed
1000efcc:	10010f6d 	.word	0x10010f6d
1000efd0:	1000eba5 	.word	0x1000eba5
1000efd4:	1000eac1 	.word	0x1000eac1
1000efd8:	1c04      	adds	r4, r0, #0
1000efda:	1c20      	adds	r0, r4, #0
1000efdc:	b00b      	add	sp, #44	; 0x2c
1000efde:	bdf0      	pop	{r4, r5, r6, r7, pc}

1000efe0 <initi_gatt_server_module>:
1000efe0:	2300      	movs	r3, #0
1000efe2:	4a07      	ldr	r2, [pc, #28]	; (1000f000 <initi_gatt_server_module+0x20>)
1000efe4:	7013      	strb	r3, [r2, #0]
1000efe6:	4a07      	ldr	r2, [pc, #28]	; (1000f004 <initi_gatt_server_module+0x24>)
1000efe8:	6013      	str	r3, [r2, #0]
1000efea:	4a07      	ldr	r2, [pc, #28]	; (1000f008 <initi_gatt_server_module+0x28>)
1000efec:	6013      	str	r3, [r2, #0]
1000efee:	4a07      	ldr	r2, [pc, #28]	; (1000f00c <initi_gatt_server_module+0x2c>)
1000eff0:	6013      	str	r3, [r2, #0]
1000eff2:	4a07      	ldr	r2, [pc, #28]	; (1000f010 <initi_gatt_server_module+0x30>)
1000eff4:	6013      	str	r3, [r2, #0]
1000eff6:	4a07      	ldr	r2, [pc, #28]	; (1000f014 <initi_gatt_server_module+0x34>)
1000eff8:	6013      	str	r3, [r2, #0]
1000effa:	4a07      	ldr	r2, [pc, #28]	; (1000f018 <initi_gatt_server_module+0x38>)
1000effc:	6013      	str	r3, [r2, #0]
1000effe:	4770      	bx	lr
1000f000:	100176fc 	.word	0x100176fc
1000f004:	1001770c 	.word	0x1001770c
1000f008:	10017708 	.word	0x10017708
1000f00c:	100176f8 	.word	0x100176f8
1000f010:	10017704 	.word	0x10017704
1000f014:	10017700 	.word	0x10017700
1000f018:	10017710 	.word	0x10017710

1000f01c <db_init>:
1000f01c:	4b0a      	ldr	r3, [pc, #40]	; (1000f048 <db_init+0x2c>)
1000f01e:	4a0b      	ldr	r2, [pc, #44]	; (1000f04c <db_init+0x30>)
1000f020:	6018      	str	r0, [r3, #0]
1000f022:	084b      	lsrs	r3, r1, #1
1000f024:	6013      	str	r3, [r2, #0]
1000f026:	4a0a      	ldr	r2, [pc, #40]	; (1000f050 <db_init+0x34>)
1000f028:	18c3      	adds	r3, r0, r3
1000f02a:	6013      	str	r3, [r2, #0]
1000f02c:	4a09      	ldr	r2, [pc, #36]	; (1000f054 <db_init+0x38>)
1000f02e:	1841      	adds	r1, r0, r1
1000f030:	6013      	str	r3, [r2, #0]
1000f032:	2303      	movs	r3, #3
1000f034:	2200      	movs	r2, #0
1000f036:	3103      	adds	r1, #3
1000f038:	4399      	bics	r1, r3
1000f03a:	4b07      	ldr	r3, [pc, #28]	; (1000f058 <db_init+0x3c>)
1000f03c:	3904      	subs	r1, #4
1000f03e:	6019      	str	r1, [r3, #0]
1000f040:	4b06      	ldr	r3, [pc, #24]	; (1000f05c <db_init+0x40>)
1000f042:	601a      	str	r2, [r3, #0]
1000f044:	4770      	bx	lr
1000f046:	46c0      	nop			; (mov r8, r8)
1000f048:	10017710 	.word	0x10017710
1000f04c:	1001770c 	.word	0x1001770c
1000f050:	100176f8 	.word	0x100176f8
1000f054:	10017704 	.word	0x10017704
1000f058:	10017700 	.word	0x10017700
1000f05c:	10017708 	.word	0x10017708

1000f060 <at_ble_primary_service_define>:
1000f060:	b530      	push	{r4, r5, lr}
1000f062:	b085      	sub	sp, #20
1000f064:	ac08      	add	r4, sp, #32
1000f066:	cc20      	ldmia	r4!, {r5}
1000f068:	8824      	ldrh	r4, [r4, #0]
1000f06a:	9500      	str	r5, [sp, #0]
1000f06c:	9401      	str	r4, [sp, #4]
1000f06e:	2401      	movs	r4, #1
1000f070:	9402      	str	r4, [sp, #8]
1000f072:	4c02      	ldr	r4, [pc, #8]	; (1000f07c <at_ble_primary_service_define+0x1c>)
1000f074:	47a0      	blx	r4
1000f076:	b005      	add	sp, #20
1000f078:	bd30      	pop	{r4, r5, pc}
1000f07a:	46c0      	nop			; (mov r8, r8)
1000f07c:	1000ec25 	.word	0x1000ec25

1000f080 <at_ble_characteristic_value_set>:
1000f080:	b570      	push	{r4, r5, r6, lr}
1000f082:	4b0b      	ldr	r3, [pc, #44]	; (1000f0b0 <at_ble_characteristic_value_set+0x30>)
1000f084:	1c06      	adds	r6, r0, #0
1000f086:	1c0c      	adds	r4, r1, #0
1000f088:	1c15      	adds	r5, r2, #0
1000f08a:	4798      	blx	r3
1000f08c:	2800      	cmp	r0, #0
1000f08e:	d008      	beq.n	1000f0a2 <at_ble_characteristic_value_set+0x22>
1000f090:	6880      	ldr	r0, [r0, #8]
1000f092:	2800      	cmp	r0, #0
1000f094:	d005      	beq.n	1000f0a2 <at_ble_characteristic_value_set+0x22>
1000f096:	1c21      	adds	r1, r4, #0
1000f098:	1c2a      	adds	r2, r5, #0
1000f09a:	4b06      	ldr	r3, [pc, #24]	; (1000f0b4 <at_ble_characteristic_value_set+0x34>)
1000f09c:	4798      	blx	r3
1000f09e:	2000      	movs	r0, #0
1000f0a0:	e004      	b.n	1000f0ac <at_ble_characteristic_value_set+0x2c>
1000f0a2:	1c30      	adds	r0, r6, #0
1000f0a4:	1c29      	adds	r1, r5, #0
1000f0a6:	1c22      	adds	r2, r4, #0
1000f0a8:	4b03      	ldr	r3, [pc, #12]	; (1000f0b8 <at_ble_characteristic_value_set+0x38>)
1000f0aa:	4798      	blx	r3
1000f0ac:	bd70      	pop	{r4, r5, r6, pc}
1000f0ae:	46c0      	nop			; (mov r8, r8)
1000f0b0:	1000e98d 	.word	0x1000e98d
1000f0b4:	10012207 	.word	0x10012207
1000f0b8:	10010f6d 	.word	0x10010f6d

1000f0bc <at_ble_characteristic_value_get>:
1000f0bc:	b570      	push	{r4, r5, r6, lr}
1000f0be:	4b0c      	ldr	r3, [pc, #48]	; (1000f0f0 <at_ble_characteristic_value_get+0x34>)
1000f0c0:	1c06      	adds	r6, r0, #0
1000f0c2:	1c0c      	adds	r4, r1, #0
1000f0c4:	1c15      	adds	r5, r2, #0
1000f0c6:	4798      	blx	r3
1000f0c8:	2800      	cmp	r0, #0
1000f0ca:	d00b      	beq.n	1000f0e4 <at_ble_characteristic_value_get+0x28>
1000f0cc:	6883      	ldr	r3, [r0, #8]
1000f0ce:	2b00      	cmp	r3, #0
1000f0d0:	d008      	beq.n	1000f0e4 <at_ble_characteristic_value_get+0x28>
1000f0d2:	8883      	ldrh	r3, [r0, #4]
1000f0d4:	802b      	strh	r3, [r5, #0]
1000f0d6:	8882      	ldrh	r2, [r0, #4]
1000f0d8:	6881      	ldr	r1, [r0, #8]
1000f0da:	4b06      	ldr	r3, [pc, #24]	; (1000f0f4 <at_ble_characteristic_value_get+0x38>)
1000f0dc:	1c20      	adds	r0, r4, #0
1000f0de:	4798      	blx	r3
1000f0e0:	2000      	movs	r0, #0
1000f0e2:	e004      	b.n	1000f0ee <at_ble_characteristic_value_get+0x32>
1000f0e4:	1c30      	adds	r0, r6, #0
1000f0e6:	1c29      	adds	r1, r5, #0
1000f0e8:	1c22      	adds	r2, r4, #0
1000f0ea:	4b03      	ldr	r3, [pc, #12]	; (1000f0f8 <at_ble_characteristic_value_get+0x3c>)
1000f0ec:	4798      	blx	r3
1000f0ee:	bd70      	pop	{r4, r5, r6, pc}
1000f0f0:	1000e98d 	.word	0x1000e98d
1000f0f4:	10012207 	.word	0x10012207
1000f0f8:	10010ff9 	.word	0x10010ff9

1000f0fc <at_ble_write_authorize_reply>:
1000f0fc:	b5f0      	push	{r4, r5, r6, r7, lr}
1000f0fe:	b085      	sub	sp, #20
1000f100:	1c04      	adds	r4, r0, #0
1000f102:	9101      	str	r1, [sp, #4]
1000f104:	2900      	cmp	r1, #0
1000f106:	d128      	bne.n	1000f15a <at_ble_write_authorize_reply+0x5e>
1000f108:	8843      	ldrh	r3, [r0, #2]
1000f10a:	1c27      	adds	r7, r4, #0
1000f10c:	9300      	str	r3, [sp, #0]
1000f10e:	1c18      	adds	r0, r3, #0
1000f110:	4b16      	ldr	r3, [pc, #88]	; (1000f16c <at_ble_write_authorize_reply+0x70>)
1000f112:	4798      	blx	r3
1000f114:	3708      	adds	r7, #8
1000f116:	2800      	cmp	r0, #0
1000f118:	d009      	beq.n	1000f12e <at_ble_write_authorize_reply+0x32>
1000f11a:	6880      	ldr	r0, [r0, #8]
1000f11c:	2800      	cmp	r0, #0
1000f11e:	d006      	beq.n	1000f12e <at_ble_write_authorize_reply+0x32>
1000f120:	88a3      	ldrh	r3, [r4, #4]
1000f122:	88e2      	ldrh	r2, [r4, #6]
1000f124:	18c0      	adds	r0, r0, r3
1000f126:	1c39      	adds	r1, r7, #0
1000f128:	4b11      	ldr	r3, [pc, #68]	; (1000f170 <at_ble_write_authorize_reply+0x74>)
1000f12a:	4798      	blx	r3
1000f12c:	e015      	b.n	1000f15a <at_ble_write_authorize_reply+0x5e>
1000f12e:	ab02      	add	r3, sp, #8
1000f130:	1d9e      	adds	r6, r3, #6
1000f132:	2300      	movs	r3, #0
1000f134:	4d0f      	ldr	r5, [pc, #60]	; (1000f174 <at_ble_write_authorize_reply+0x78>)
1000f136:	8033      	strh	r3, [r6, #0]
1000f138:	6829      	ldr	r1, [r5, #0]
1000f13a:	1c32      	adds	r2, r6, #0
1000f13c:	4b0e      	ldr	r3, [pc, #56]	; (1000f178 <at_ble_write_authorize_reply+0x7c>)
1000f13e:	9800      	ldr	r0, [sp, #0]
1000f140:	4798      	blx	r3
1000f142:	682b      	ldr	r3, [r5, #0]
1000f144:	88a0      	ldrh	r0, [r4, #4]
1000f146:	88e2      	ldrh	r2, [r4, #6]
1000f148:	1818      	adds	r0, r3, r0
1000f14a:	1c39      	adds	r1, r7, #0
1000f14c:	4b08      	ldr	r3, [pc, #32]	; (1000f170 <at_ble_write_authorize_reply+0x74>)
1000f14e:	4798      	blx	r3
1000f150:	8860      	ldrh	r0, [r4, #2]
1000f152:	8832      	ldrh	r2, [r6, #0]
1000f154:	6829      	ldr	r1, [r5, #0]
1000f156:	4b09      	ldr	r3, [pc, #36]	; (1000f17c <at_ble_write_authorize_reply+0x80>)
1000f158:	4798      	blx	r3
1000f15a:	8860      	ldrh	r0, [r4, #2]
1000f15c:	8821      	ldrh	r1, [r4, #0]
1000f15e:	9a01      	ldr	r2, [sp, #4]
1000f160:	4b07      	ldr	r3, [pc, #28]	; (1000f180 <at_ble_write_authorize_reply+0x84>)
1000f162:	4798      	blx	r3
1000f164:	2000      	movs	r0, #0
1000f166:	b005      	add	sp, #20
1000f168:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000f16a:	46c0      	nop			; (mov r8, r8)
1000f16c:	1000e98d 	.word	0x1000e98d
1000f170:	10012207 	.word	0x10012207
1000f174:	10015c70 	.word	0x10015c70
1000f178:	1000f0bd 	.word	0x1000f0bd
1000f17c:	1000f081 	.word	0x1000f081
1000f180:	10010959 	.word	0x10010959

1000f184 <gatts_handle_read_req>:
1000f184:	b538      	push	{r3, r4, r5, lr}
1000f186:	1c0c      	adds	r4, r1, #0
1000f188:	4b07      	ldr	r3, [pc, #28]	; (1000f1a8 <gatts_handle_read_req+0x24>)
1000f18a:	4798      	blx	r3
1000f18c:	8865      	ldrh	r5, [r4, #2]
1000f18e:	4b07      	ldr	r3, [pc, #28]	; (1000f1ac <gatts_handle_read_req+0x28>)
1000f190:	1c28      	adds	r0, r5, #0
1000f192:	4798      	blx	r3
1000f194:	7883      	ldrb	r3, [r0, #2]
1000f196:	2026      	movs	r0, #38	; 0x26
1000f198:	07db      	lsls	r3, r3, #31
1000f19a:	d404      	bmi.n	1000f1a6 <gatts_handle_read_req+0x22>
1000f19c:	8820      	ldrh	r0, [r4, #0]
1000f19e:	1c29      	adds	r1, r5, #0
1000f1a0:	4b03      	ldr	r3, [pc, #12]	; (1000f1b0 <gatts_handle_read_req+0x2c>)
1000f1a2:	4798      	blx	r3
1000f1a4:	203b      	movs	r0, #59	; 0x3b
1000f1a6:	bd38      	pop	{r3, r4, r5, pc}
1000f1a8:	1001089d 	.word	0x1001089d
1000f1ac:	1000e98d 	.word	0x1000e98d
1000f1b0:	1000ebf5 	.word	0x1000ebf5

1000f1b4 <gatts_handle_att_info_req>:
1000f1b4:	b538      	push	{r3, r4, r5, lr}
1000f1b6:	1c0d      	adds	r5, r1, #0
1000f1b8:	4b0a      	ldr	r3, [pc, #40]	; (1000f1e4 <gatts_handle_att_info_req+0x30>)
1000f1ba:	1c14      	adds	r4, r2, #0
1000f1bc:	4798      	blx	r3
1000f1be:	882d      	ldrh	r5, [r5, #0]
1000f1c0:	4b09      	ldr	r3, [pc, #36]	; (1000f1e8 <gatts_handle_att_info_req+0x34>)
1000f1c2:	1c28      	adds	r0, r5, #0
1000f1c4:	4798      	blx	r3
1000f1c6:	0a22      	lsrs	r2, r4, #8
1000f1c8:	1c03      	adds	r3, r0, #0
1000f1ca:	4c08      	ldr	r4, [pc, #32]	; (1000f1ec <gatts_handle_att_info_req+0x38>)
1000f1cc:	b291      	uxth	r1, r2
1000f1ce:	2800      	cmp	r0, #0
1000f1d0:	d003      	beq.n	1000f1da <gatts_handle_att_info_req+0x26>
1000f1d2:	8882      	ldrh	r2, [r0, #4]
1000f1d4:	2300      	movs	r3, #0
1000f1d6:	1c28      	adds	r0, r5, #0
1000f1d8:	e001      	b.n	1000f1de <gatts_handle_att_info_req+0x2a>
1000f1da:	1c28      	adds	r0, r5, #0
1000f1dc:	2201      	movs	r2, #1
1000f1de:	47a0      	blx	r4
1000f1e0:	203b      	movs	r0, #59	; 0x3b
1000f1e2:	bd38      	pop	{r3, r4, r5, pc}
1000f1e4:	100108e1 	.word	0x100108e1
1000f1e8:	1000e98d 	.word	0x1000e98d
1000f1ec:	1001099d 	.word	0x1001099d

1000f1f0 <gatts_handle_write_req>:
1000f1f0:	b510      	push	{r4, lr}
1000f1f2:	1c14      	adds	r4, r2, #0
1000f1f4:	4b07      	ldr	r3, [pc, #28]	; (1000f214 <gatts_handle_write_req+0x24>)
1000f1f6:	4798      	blx	r3
1000f1f8:	4b07      	ldr	r3, [pc, #28]	; (1000f218 <gatts_handle_write_req+0x28>)
1000f1fa:	8860      	ldrh	r0, [r4, #2]
1000f1fc:	4798      	blx	r3
1000f1fe:	2302      	movs	r3, #2
1000f200:	7881      	ldrb	r1, [r0, #2]
1000f202:	2022      	movs	r0, #34	; 0x22
1000f204:	4019      	ands	r1, r3
1000f206:	d103      	bne.n	1000f210 <gatts_handle_write_req+0x20>
1000f208:	1c20      	adds	r0, r4, #0
1000f20a:	4b04      	ldr	r3, [pc, #16]	; (1000f21c <gatts_handle_write_req+0x2c>)
1000f20c:	4798      	blx	r3
1000f20e:	201f      	movs	r0, #31
1000f210:	bd10      	pop	{r4, pc}
1000f212:	46c0      	nop			; (mov r8, r8)
1000f214:	100108a9 	.word	0x100108a9
1000f218:	1000e98d 	.word	0x1000e98d
1000f21c:	1000f0fd 	.word	0x1000f0fd

1000f220 <at_ble_notification_send>:
1000f220:	b5f0      	push	{r4, r5, r6, r7, lr}
1000f222:	4d17      	ldr	r5, [pc, #92]	; (1000f280 <at_ble_notification_send+0x60>)
1000f224:	4c17      	ldr	r4, [pc, #92]	; (1000f284 <at_ble_notification_send+0x64>)
1000f226:	682a      	ldr	r2, [r5, #0]
1000f228:	44a5      	add	sp, r4
1000f22a:	23d2      	movs	r3, #210	; 0xd2
1000f22c:	2a04      	cmp	r2, #4
1000f22e:	d822      	bhi.n	1000f276 <at_ble_notification_send+0x56>
1000f230:	1c06      	adds	r6, r0, #0
1000f232:	4b15      	ldr	r3, [pc, #84]	; (1000f288 <at_ble_notification_send+0x68>)
1000f234:	1c08      	adds	r0, r1, #0
1000f236:	1c0c      	adds	r4, r1, #0
1000f238:	4798      	blx	r3
1000f23a:	2800      	cmp	r0, #0
1000f23c:	d008      	beq.n	1000f250 <at_ble_notification_send+0x30>
1000f23e:	6883      	ldr	r3, [r0, #8]
1000f240:	2b00      	cmp	r3, #0
1000f242:	d005      	beq.n	1000f250 <at_ble_notification_send+0x30>
1000f244:	8882      	ldrh	r2, [r0, #4]
1000f246:	1c21      	adds	r1, r4, #0
1000f248:	9200      	str	r2, [sp, #0]
1000f24a:	2012      	movs	r0, #18
1000f24c:	1c32      	adds	r2, r6, #0
1000f24e:	e00c      	b.n	1000f26a <at_ble_notification_send+0x4a>
1000f250:	270e      	movs	r7, #14
1000f252:	446f      	add	r7, sp
1000f254:	1c39      	adds	r1, r7, #0
1000f256:	aa04      	add	r2, sp, #16
1000f258:	4b0c      	ldr	r3, [pc, #48]	; (1000f28c <at_ble_notification_send+0x6c>)
1000f25a:	1c20      	adds	r0, r4, #0
1000f25c:	4798      	blx	r3
1000f25e:	2012      	movs	r0, #18
1000f260:	1c21      	adds	r1, r4, #0
1000f262:	1c32      	adds	r2, r6, #0
1000f264:	883b      	ldrh	r3, [r7, #0]
1000f266:	9300      	str	r3, [sp, #0]
1000f268:	ab04      	add	r3, sp, #16
1000f26a:	4c09      	ldr	r4, [pc, #36]	; (1000f290 <at_ble_notification_send+0x70>)
1000f26c:	47a0      	blx	r4
1000f26e:	682b      	ldr	r3, [r5, #0]
1000f270:	3301      	adds	r3, #1
1000f272:	602b      	str	r3, [r5, #0]
1000f274:	2300      	movs	r3, #0
1000f276:	1c18      	adds	r0, r3, #0
1000f278:	2385      	movs	r3, #133	; 0x85
1000f27a:	009b      	lsls	r3, r3, #2
1000f27c:	449d      	add	sp, r3
1000f27e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000f280:	1001779c 	.word	0x1001779c
1000f284:	fffffdec 	.word	0xfffffdec
1000f288:	1000e98d 	.word	0x1000e98d
1000f28c:	10010ff9 	.word	0x10010ff9
1000f290:	100109e5 	.word	0x100109e5

1000f294 <init_l2cc_task_module>:
1000f294:	220a      	movs	r2, #10
1000f296:	4b01      	ldr	r3, [pc, #4]	; (1000f29c <init_l2cc_task_module+0x8>)
1000f298:	701a      	strb	r2, [r3, #0]
1000f29a:	4770      	bx	lr
1000f29c:	10015c6e 	.word	0x10015c6e

1000f2a0 <l2cc_data_send_rsp_handler>:
1000f2a0:	b510      	push	{r4, lr}
1000f2a2:	7802      	ldrb	r2, [r0, #0]
1000f2a4:	700a      	strb	r2, [r1, #0]
1000f2a6:	7883      	ldrb	r3, [r0, #2]
1000f2a8:	7844      	ldrb	r4, [r0, #1]
1000f2aa:	021b      	lsls	r3, r3, #8
1000f2ac:	4323      	orrs	r3, r4
1000f2ae:	804b      	strh	r3, [r1, #2]
1000f2b0:	7903      	ldrb	r3, [r0, #4]
1000f2b2:	78c0      	ldrb	r0, [r0, #3]
1000f2b4:	021b      	lsls	r3, r3, #8
1000f2b6:	4303      	orrs	r3, r0
1000f2b8:	808b      	strh	r3, [r1, #4]
1000f2ba:	2a00      	cmp	r2, #0
1000f2bc:	d103      	bne.n	1000f2c6 <l2cc_data_send_rsp_handler+0x26>
1000f2be:	4a02      	ldr	r2, [pc, #8]	; (1000f2c8 <l2cc_data_send_rsp_handler+0x28>)
1000f2c0:	7813      	ldrb	r3, [r2, #0]
1000f2c2:	3301      	adds	r3, #1
1000f2c4:	7013      	strb	r3, [r2, #0]
1000f2c6:	bd10      	pop	{r4, pc}
1000f2c8:	10015c6e 	.word	0x10015c6e

1000f2cc <l2cc_data_received_handler>:
1000f2cc:	b508      	push	{r3, lr}
1000f2ce:	1c03      	adds	r3, r0, #0
1000f2d0:	7842      	ldrb	r2, [r0, #1]
1000f2d2:	7800      	ldrb	r0, [r0, #0]
1000f2d4:	0212      	lsls	r2, r2, #8
1000f2d6:	4302      	orrs	r2, r0
1000f2d8:	800a      	strh	r2, [r1, #0]
1000f2da:	78da      	ldrb	r2, [r3, #3]
1000f2dc:	7898      	ldrb	r0, [r3, #2]
1000f2de:	0212      	lsls	r2, r2, #8
1000f2e0:	4302      	orrs	r2, r0
1000f2e2:	804a      	strh	r2, [r1, #2]
1000f2e4:	795a      	ldrb	r2, [r3, #5]
1000f2e6:	7918      	ldrb	r0, [r3, #4]
1000f2e8:	0212      	lsls	r2, r2, #8
1000f2ea:	4302      	orrs	r2, r0
1000f2ec:	808a      	strh	r2, [r1, #4]
1000f2ee:	1d88      	adds	r0, r1, #6
1000f2f0:	1d99      	adds	r1, r3, #6
1000f2f2:	4b01      	ldr	r3, [pc, #4]	; (1000f2f8 <l2cc_data_received_handler+0x2c>)
1000f2f4:	4798      	blx	r3
1000f2f6:	bd08      	pop	{r3, pc}
1000f2f8:	10012207 	.word	0x10012207

1000f2fc <at_ble_authenticate>:
1000f2fc:	b5f0      	push	{r4, r5, r6, r7, lr}
1000f2fe:	1c0c      	adds	r4, r1, #0
1000f300:	211f      	movs	r1, #31
1000f302:	b08b      	sub	sp, #44	; 0x2c
1000f304:	9307      	str	r3, [sp, #28]
1000f306:	ab02      	add	r3, sp, #8
1000f308:	18c9      	adds	r1, r1, r3
1000f30a:	230f      	movs	r3, #15
1000f30c:	700b      	strb	r3, [r1, #0]
1000f30e:	4b40      	ldr	r3, [pc, #256]	; (1000f410 <at_ble_authenticate+0x114>)
1000f310:	1c05      	adds	r5, r0, #0
1000f312:	1c16      	adds	r6, r2, #0
1000f314:	4798      	blx	r3
1000f316:	1c07      	adds	r7, r0, #0
1000f318:	2001      	movs	r0, #1
1000f31a:	2f07      	cmp	r7, #7
1000f31c:	d875      	bhi.n	1000f40a <at_ble_authenticate+0x10e>
1000f31e:	2c00      	cmp	r4, #0
1000f320:	d113      	bne.n	1000f34a <at_ble_authenticate+0x4e>
1000f322:	2312      	movs	r3, #18
1000f324:	435f      	muls	r7, r3
1000f326:	4b3b      	ldr	r3, [pc, #236]	; (1000f414 <at_ble_authenticate+0x118>)
1000f328:	5cfb      	ldrb	r3, [r7, r3]
1000f32a:	4283      	cmp	r3, r0
1000f32c:	d001      	beq.n	1000f332 <at_ble_authenticate+0x36>
1000f32e:	20cf      	movs	r0, #207	; 0xcf
1000f330:	e06b      	b.n	1000f40a <at_ble_authenticate+0x10e>
1000f332:	9504      	str	r5, [sp, #16]
1000f334:	9400      	str	r4, [sp, #0]
1000f336:	9401      	str	r4, [sp, #4]
1000f338:	9402      	str	r4, [sp, #8]
1000f33a:	9403      	str	r4, [sp, #12]
1000f33c:	1c20      	adds	r0, r4, #0
1000f33e:	1c21      	adds	r1, r4, #0
1000f340:	1c22      	adds	r2, r4, #0
1000f342:	1c23      	adds	r3, r4, #0
1000f344:	4d34      	ldr	r5, [pc, #208]	; (1000f418 <at_ble_authenticate+0x11c>)
1000f346:	47a8      	blx	r5
1000f348:	e05e      	b.n	1000f408 <at_ble_authenticate+0x10c>
1000f34a:	7922      	ldrb	r2, [r4, #4]
1000f34c:	2a06      	cmp	r2, #6
1000f34e:	d9ee      	bls.n	1000f32e <at_ble_authenticate+0x32>
1000f350:	7963      	ldrb	r3, [r4, #5]
1000f352:	2b10      	cmp	r3, #16
1000f354:	d8eb      	bhi.n	1000f32e <at_ble_authenticate+0x32>
1000f356:	429a      	cmp	r2, r3
1000f358:	d8e9      	bhi.n	1000f32e <at_ble_authenticate+0x32>
1000f35a:	7a23      	ldrb	r3, [r4, #8]
1000f35c:	2b04      	cmp	r3, #4
1000f35e:	d8e6      	bhi.n	1000f32e <at_ble_authenticate+0x32>
1000f360:	79a3      	ldrb	r3, [r4, #6]
1000f362:	2b07      	cmp	r3, #7
1000f364:	d8e3      	bhi.n	1000f32e <at_ble_authenticate+0x32>
1000f366:	79e3      	ldrb	r3, [r4, #7]
1000f368:	2b07      	cmp	r3, #7
1000f36a:	d8e0      	bhi.n	1000f32e <at_ble_authenticate+0x32>
1000f36c:	78a3      	ldrb	r3, [r4, #2]
1000f36e:	2b00      	cmp	r3, #0
1000f370:	d006      	beq.n	1000f380 <at_ble_authenticate+0x84>
1000f372:	2e00      	cmp	r6, #0
1000f374:	d0db      	beq.n	1000f32e <at_ble_authenticate+0x32>
1000f376:	4829      	ldr	r0, [pc, #164]	; (1000f41c <at_ble_authenticate+0x120>)
1000f378:	1c31      	adds	r1, r6, #0
1000f37a:	221c      	movs	r2, #28
1000f37c:	4b28      	ldr	r3, [pc, #160]	; (1000f420 <at_ble_authenticate+0x124>)
1000f37e:	4798      	blx	r3
1000f380:	9b07      	ldr	r3, [sp, #28]
1000f382:	2b00      	cmp	r3, #0
1000f384:	d005      	beq.n	1000f392 <at_ble_authenticate+0x96>
1000f386:	4827      	ldr	r0, [pc, #156]	; (1000f424 <at_ble_authenticate+0x128>)
1000f388:	1c19      	adds	r1, r3, #0
1000f38a:	309a      	adds	r0, #154	; 0x9a
1000f38c:	2210      	movs	r2, #16
1000f38e:	4b24      	ldr	r3, [pc, #144]	; (1000f420 <at_ble_authenticate+0x124>)
1000f390:	4798      	blx	r3
1000f392:	7863      	ldrb	r3, [r4, #1]
1000f394:	78a2      	ldrb	r2, [r4, #2]
1000f396:	009b      	lsls	r3, r3, #2
1000f398:	4313      	orrs	r3, r2
1000f39a:	2212      	movs	r2, #18
1000f39c:	4357      	muls	r7, r2
1000f39e:	4a1d      	ldr	r2, [pc, #116]	; (1000f414 <at_ble_authenticate+0x118>)
1000f3a0:	b2db      	uxtb	r3, r3
1000f3a2:	5cba      	ldrb	r2, [r7, r2]
1000f3a4:	2a00      	cmp	r2, #0
1000f3a6:	d116      	bne.n	1000f3d6 <at_ble_authenticate+0xda>
1000f3a8:	79a0      	ldrb	r0, [r4, #6]
1000f3aa:	0742      	lsls	r2, r0, #29
1000f3ac:	d502      	bpl.n	1000f3b4 <at_ble_authenticate+0xb8>
1000f3ae:	9a07      	ldr	r2, [sp, #28]
1000f3b0:	2a00      	cmp	r2, #0
1000f3b2:	d0bc      	beq.n	1000f32e <at_ble_authenticate+0x32>
1000f3b4:	07c2      	lsls	r2, r0, #31
1000f3b6:	d501      	bpl.n	1000f3bc <at_ble_authenticate+0xc0>
1000f3b8:	2e00      	cmp	r6, #0
1000f3ba:	d0b8      	beq.n	1000f32e <at_ble_authenticate+0x32>
1000f3bc:	7966      	ldrb	r6, [r4, #5]
1000f3be:	7821      	ldrb	r1, [r4, #0]
1000f3c0:	78e2      	ldrb	r2, [r4, #3]
1000f3c2:	9600      	str	r6, [sp, #0]
1000f3c4:	9001      	str	r0, [sp, #4]
1000f3c6:	79e0      	ldrb	r0, [r4, #7]
1000f3c8:	9002      	str	r0, [sp, #8]
1000f3ca:	7a20      	ldrb	r0, [r4, #8]
1000f3cc:	4c16      	ldr	r4, [pc, #88]	; (1000f428 <at_ble_authenticate+0x12c>)
1000f3ce:	9003      	str	r0, [sp, #12]
1000f3d0:	1c28      	adds	r0, r5, #0
1000f3d2:	47a0      	blx	r4
1000f3d4:	e018      	b.n	1000f408 <at_ble_authenticate+0x10c>
1000f3d6:	2a01      	cmp	r2, #1
1000f3d8:	d1a9      	bne.n	1000f32e <at_ble_authenticate+0x32>
1000f3da:	79e0      	ldrb	r0, [r4, #7]
1000f3dc:	0742      	lsls	r2, r0, #29
1000f3de:	d502      	bpl.n	1000f3e6 <at_ble_authenticate+0xea>
1000f3e0:	9a07      	ldr	r2, [sp, #28]
1000f3e2:	2a00      	cmp	r2, #0
1000f3e4:	d0a3      	beq.n	1000f32e <at_ble_authenticate+0x32>
1000f3e6:	07c2      	lsls	r2, r0, #31
1000f3e8:	d501      	bpl.n	1000f3ee <at_ble_authenticate+0xf2>
1000f3ea:	2e00      	cmp	r6, #0
1000f3ec:	d09f      	beq.n	1000f32e <at_ble_authenticate+0x32>
1000f3ee:	7966      	ldrb	r6, [r4, #5]
1000f3f0:	7821      	ldrb	r1, [r4, #0]
1000f3f2:	78e2      	ldrb	r2, [r4, #3]
1000f3f4:	9600      	str	r6, [sp, #0]
1000f3f6:	79a6      	ldrb	r6, [r4, #6]
1000f3f8:	9002      	str	r0, [sp, #8]
1000f3fa:	9601      	str	r6, [sp, #4]
1000f3fc:	7a20      	ldrb	r0, [r4, #8]
1000f3fe:	9504      	str	r5, [sp, #16]
1000f400:	9003      	str	r0, [sp, #12]
1000f402:	4c05      	ldr	r4, [pc, #20]	; (1000f418 <at_ble_authenticate+0x11c>)
1000f404:	2001      	movs	r0, #1
1000f406:	47a0      	blx	r4
1000f408:	2000      	movs	r0, #0
1000f40a:	b00b      	add	sp, #44	; 0x2c
1000f40c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000f40e:	46c0      	nop			; (mov r8, r8)
1000f410:	1000f7fd 	.word	0x1000f7fd
1000f414:	1001a206 	.word	0x1001a206
1000f418:	1000fd6d 	.word	0x1000fd6d
1000f41c:	1001a314 	.word	0x1001a314
1000f420:	10012207 	.word	0x10012207
1000f424:	1001a296 	.word	0x1001a296
1000f428:	1000fb4d 	.word	0x1000fb4d

1000f42c <at_ble_pair_key_reply>:
1000f42c:	b5f0      	push	{r4, r5, r6, r7, lr}
1000f42e:	b085      	sub	sp, #20
1000f430:	1c05      	adds	r5, r0, #0
1000f432:	1c0c      	adds	r4, r1, #0
1000f434:	1c16      	adds	r6, r2, #0
1000f436:	2100      	movs	r1, #0
1000f438:	4668      	mov	r0, sp
1000f43a:	2210      	movs	r2, #16
1000f43c:	4b18      	ldr	r3, [pc, #96]	; (1000f4a0 <at_ble_pair_key_reply+0x74>)
1000f43e:	4798      	blx	r3
1000f440:	2101      	movs	r1, #1
1000f442:	2e00      	cmp	r6, #0
1000f444:	d101      	bne.n	1000f44a <at_ble_pair_key_reply+0x1e>
1000f446:	1c31      	adds	r1, r6, #0
1000f448:	466e      	mov	r6, sp
1000f44a:	2c00      	cmp	r4, #0
1000f44c:	d116      	bne.n	1000f47c <at_ble_pair_key_reply+0x50>
1000f44e:	2701      	movs	r7, #1
1000f450:	1c23      	adds	r3, r4, #0
1000f452:	1d70      	adds	r0, r6, #5
1000f454:	3e01      	subs	r6, #1
1000f456:	7802      	ldrb	r2, [r0, #0]
1000f458:	3801      	subs	r0, #1
1000f45a:	3a30      	subs	r2, #48	; 0x30
1000f45c:	437a      	muls	r2, r7
1000f45e:	189b      	adds	r3, r3, r2
1000f460:	220a      	movs	r2, #10
1000f462:	4357      	muls	r7, r2
1000f464:	42b0      	cmp	r0, r6
1000f466:	d1f6      	bne.n	1000f456 <at_ble_pair_key_reply+0x2a>
1000f468:	466a      	mov	r2, sp
1000f46a:	4668      	mov	r0, sp
1000f46c:	7013      	strb	r3, [r2, #0]
1000f46e:	0a1a      	lsrs	r2, r3, #8
1000f470:	7042      	strb	r2, [r0, #1]
1000f472:	0c1a      	lsrs	r2, r3, #16
1000f474:	0e1b      	lsrs	r3, r3, #24
1000f476:	7082      	strb	r2, [r0, #2]
1000f478:	70c3      	strb	r3, [r0, #3]
1000f47a:	e009      	b.n	1000f490 <at_ble_pair_key_reply+0x64>
1000f47c:	20cf      	movs	r0, #207	; 0xcf
1000f47e:	2c01      	cmp	r4, #1
1000f480:	d10c      	bne.n	1000f49c <at_ble_pair_key_reply+0x70>
1000f482:	2300      	movs	r3, #0
1000f484:	4668      	mov	r0, sp
1000f486:	5cf2      	ldrb	r2, [r6, r3]
1000f488:	54c2      	strb	r2, [r0, r3]
1000f48a:	3301      	adds	r3, #1
1000f48c:	2b10      	cmp	r3, #16
1000f48e:	d1f9      	bne.n	1000f484 <at_ble_pair_key_reply+0x58>
1000f490:	2004      	movs	r0, #4
1000f492:	466a      	mov	r2, sp
1000f494:	1c2b      	adds	r3, r5, #0
1000f496:	4c03      	ldr	r4, [pc, #12]	; (1000f4a4 <at_ble_pair_key_reply+0x78>)
1000f498:	47a0      	blx	r4
1000f49a:	2000      	movs	r0, #0
1000f49c:	b005      	add	sp, #20
1000f49e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000f4a0:	10012219 	.word	0x10012219
1000f4a4:	1000fde9 	.word	0x1000fde9

1000f4a8 <at_ble_send_slave_sec_request>:
1000f4a8:	b570      	push	{r4, r5, r6, lr}
1000f4aa:	4b0c      	ldr	r3, [pc, #48]	; (1000f4dc <at_ble_send_slave_sec_request+0x34>)
1000f4ac:	1c0e      	adds	r6, r1, #0
1000f4ae:	2100      	movs	r1, #0
1000f4b0:	1c05      	adds	r5, r0, #0
1000f4b2:	1c14      	adds	r4, r2, #0
1000f4b4:	4798      	blx	r3
1000f4b6:	2301      	movs	r3, #1
1000f4b8:	2807      	cmp	r0, #7
1000f4ba:	d80d      	bhi.n	1000f4d8 <at_ble_send_slave_sec_request+0x30>
1000f4bc:	3311      	adds	r3, #17
1000f4be:	4358      	muls	r0, r3
1000f4c0:	4b07      	ldr	r3, [pc, #28]	; (1000f4e0 <at_ble_send_slave_sec_request+0x38>)
1000f4c2:	5cc2      	ldrb	r2, [r0, r3]
1000f4c4:	23e0      	movs	r3, #224	; 0xe0
1000f4c6:	2a01      	cmp	r2, #1
1000f4c8:	d106      	bne.n	1000f4d8 <at_ble_send_slave_sec_request+0x30>
1000f4ca:	00b1      	lsls	r1, r6, #2
1000f4cc:	430c      	orrs	r4, r1
1000f4ce:	4b05      	ldr	r3, [pc, #20]	; (1000f4e4 <at_ble_send_slave_sec_request+0x3c>)
1000f4d0:	b2e1      	uxtb	r1, r4
1000f4d2:	1c28      	adds	r0, r5, #0
1000f4d4:	4798      	blx	r3
1000f4d6:	2300      	movs	r3, #0
1000f4d8:	1c18      	adds	r0, r3, #0
1000f4da:	bd70      	pop	{r4, r5, r6, pc}
1000f4dc:	1000f7fd 	.word	0x1000f7fd
1000f4e0:	1001a206 	.word	0x1001a206
1000f4e4:	1000fe39 	.word	0x1000fe39

1000f4e8 <at_ble_encryption_start>:
1000f4e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000f4ea:	23cf      	movs	r3, #207	; 0xcf
1000f4ec:	2900      	cmp	r1, #0
1000f4ee:	d02b      	beq.n	1000f548 <at_ble_encryption_start+0x60>
1000f4f0:	2a05      	cmp	r2, #5
1000f4f2:	d829      	bhi.n	1000f548 <at_ble_encryption_start+0x60>
1000f4f4:	2701      	movs	r7, #1
1000f4f6:	1c3d      	adds	r5, r7, #0
1000f4f8:	2433      	movs	r4, #51	; 0x33
1000f4fa:	4095      	lsls	r5, r2
1000f4fc:	4225      	tst	r5, r4
1000f4fe:	d023      	beq.n	1000f548 <at_ble_encryption_start+0x60>
1000f500:	7e8c      	ldrb	r4, [r1, #26]
1000f502:	3c07      	subs	r4, #7
1000f504:	2c09      	cmp	r4, #9
1000f506:	d81f      	bhi.n	1000f548 <at_ble_encryption_start+0x60>
1000f508:	4b10      	ldr	r3, [pc, #64]	; (1000f54c <at_ble_encryption_start+0x64>)
1000f50a:	1c0c      	adds	r4, r1, #0
1000f50c:	2100      	movs	r1, #0
1000f50e:	1c15      	adds	r5, r2, #0
1000f510:	1c06      	adds	r6, r0, #0
1000f512:	4798      	blx	r3
1000f514:	1c3b      	adds	r3, r7, #0
1000f516:	2807      	cmp	r0, #7
1000f518:	d816      	bhi.n	1000f548 <at_ble_encryption_start+0x60>
1000f51a:	2312      	movs	r3, #18
1000f51c:	4358      	muls	r0, r3
1000f51e:	4b0c      	ldr	r3, [pc, #48]	; (1000f550 <at_ble_encryption_start+0x68>)
1000f520:	5cc7      	ldrb	r7, [r0, r3]
1000f522:	23e0      	movs	r3, #224	; 0xe0
1000f524:	2f00      	cmp	r7, #0
1000f526:	d10f      	bne.n	1000f548 <at_ble_encryption_start+0x60>
1000f528:	1c21      	adds	r1, r4, #0
1000f52a:	221c      	movs	r2, #28
1000f52c:	4b09      	ldr	r3, [pc, #36]	; (1000f554 <at_ble_encryption_start+0x6c>)
1000f52e:	480a      	ldr	r0, [pc, #40]	; (1000f558 <at_ble_encryption_start+0x70>)
1000f530:	4798      	blx	r3
1000f532:	1c23      	adds	r3, r4, #0
1000f534:	7ea1      	ldrb	r1, [r4, #26]
1000f536:	8a22      	ldrh	r2, [r4, #16]
1000f538:	3312      	adds	r3, #18
1000f53a:	9100      	str	r1, [sp, #0]
1000f53c:	9501      	str	r5, [sp, #4]
1000f53e:	1c21      	adds	r1, r4, #0
1000f540:	1c30      	adds	r0, r6, #0
1000f542:	4c06      	ldr	r4, [pc, #24]	; (1000f55c <at_ble_encryption_start+0x74>)
1000f544:	47a0      	blx	r4
1000f546:	1c3b      	adds	r3, r7, #0
1000f548:	1c18      	adds	r0, r3, #0
1000f54a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000f54c:	1000f7fd 	.word	0x1000f7fd
1000f550:	1001a206 	.word	0x1001a206
1000f554:	10012207 	.word	0x10012207
1000f558:	1001a314 	.word	0x1001a314
1000f55c:	1000fe79 	.word	0x1000fe79

1000f560 <at_ble_encryption_request_reply>:
1000f560:	b573      	push	{r0, r1, r4, r5, r6, lr}
1000f562:	24cf      	movs	r4, #207	; 0xcf
1000f564:	2b00      	cmp	r3, #0
1000f566:	d011      	beq.n	1000f58c <at_ble_encryption_request_reply+0x2c>
1000f568:	2a00      	cmp	r2, #0
1000f56a:	d00a      	beq.n	1000f582 <at_ble_encryption_request_reply+0x22>
1000f56c:	2905      	cmp	r1, #5
1000f56e:	d80d      	bhi.n	1000f58c <at_ble_encryption_request_reply+0x2c>
1000f570:	2501      	movs	r5, #1
1000f572:	2633      	movs	r6, #51	; 0x33
1000f574:	408d      	lsls	r5, r1
1000f576:	4235      	tst	r5, r6
1000f578:	d008      	beq.n	1000f58c <at_ble_encryption_request_reply+0x2c>
1000f57a:	7e9d      	ldrb	r5, [r3, #26]
1000f57c:	3d07      	subs	r5, #7
1000f57e:	2d09      	cmp	r5, #9
1000f580:	d804      	bhi.n	1000f58c <at_ble_encryption_request_reply+0x2c>
1000f582:	7e9c      	ldrb	r4, [r3, #26]
1000f584:	9400      	str	r4, [sp, #0]
1000f586:	4c02      	ldr	r4, [pc, #8]	; (1000f590 <at_ble_encryption_request_reply+0x30>)
1000f588:	47a0      	blx	r4
1000f58a:	2400      	movs	r4, #0
1000f58c:	1c20      	adds	r0, r4, #0
1000f58e:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
1000f590:	1000ff35 	.word	0x1000ff35

1000f594 <rx_callback>:
1000f594:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000f596:	8883      	ldrh	r3, [r0, #4]
1000f598:	1c01      	adds	r1, r0, #0
1000f59a:	9301      	str	r3, [sp, #4]
1000f59c:	88c5      	ldrh	r5, [r0, #6]
1000f59e:	8806      	ldrh	r6, [r0, #0]
1000f5a0:	2d00      	cmp	r5, #0
1000f5a2:	d10f      	bne.n	1000f5c4 <rx_callback+0x30>
1000f5a4:	1c19      	adds	r1, r3, #0
1000f5a6:	1c30      	adds	r0, r6, #0
1000f5a8:	4b19      	ldr	r3, [pc, #100]	; (1000f610 <rx_callback+0x7c>)
1000f5aa:	1c2a      	adds	r2, r5, #0
1000f5ac:	4798      	blx	r3
1000f5ae:	1e03      	subs	r3, r0, #0
1000f5b0:	d105      	bne.n	1000f5be <rx_callback+0x2a>
1000f5b2:	1c30      	adds	r0, r6, #0
1000f5b4:	9901      	ldr	r1, [sp, #4]
1000f5b6:	1c1a      	adds	r2, r3, #0
1000f5b8:	4c16      	ldr	r4, [pc, #88]	; (1000f614 <rx_callback+0x80>)
1000f5ba:	47a0      	blx	r4
1000f5bc:	e027      	b.n	1000f60e <rx_callback+0x7a>
1000f5be:	4b16      	ldr	r3, [pc, #88]	; (1000f618 <rx_callback+0x84>)
1000f5c0:	4798      	blx	r3
1000f5c2:	e024      	b.n	1000f60e <rx_callback+0x7a>
1000f5c4:	4c15      	ldr	r4, [pc, #84]	; (1000f61c <rx_callback+0x88>)
1000f5c6:	4a16      	ldr	r2, [pc, #88]	; (1000f620 <rx_callback+0x8c>)
1000f5c8:	6823      	ldr	r3, [r4, #0]
1000f5ca:	6812      	ldr	r2, [r2, #0]
1000f5cc:	18eb      	adds	r3, r5, r3
1000f5ce:	4293      	cmp	r3, r2
1000f5d0:	d901      	bls.n	1000f5d6 <rx_callback+0x42>
1000f5d2:	2300      	movs	r3, #0
1000f5d4:	6023      	str	r3, [r4, #0]
1000f5d6:	4f13      	ldr	r7, [pc, #76]	; (1000f624 <rx_callback+0x90>)
1000f5d8:	6822      	ldr	r2, [r4, #0]
1000f5da:	683b      	ldr	r3, [r7, #0]
1000f5dc:	3108      	adds	r1, #8
1000f5de:	1898      	adds	r0, r3, r2
1000f5e0:	1c2a      	adds	r2, r5, #0
1000f5e2:	4b11      	ldr	r3, [pc, #68]	; (1000f628 <rx_callback+0x94>)
1000f5e4:	4798      	blx	r3
1000f5e6:	683b      	ldr	r3, [r7, #0]
1000f5e8:	6822      	ldr	r2, [r4, #0]
1000f5ea:	1c30      	adds	r0, r6, #0
1000f5ec:	189a      	adds	r2, r3, r2
1000f5ee:	9901      	ldr	r1, [sp, #4]
1000f5f0:	4b07      	ldr	r3, [pc, #28]	; (1000f610 <rx_callback+0x7c>)
1000f5f2:	4798      	blx	r3
1000f5f4:	2800      	cmp	r0, #0
1000f5f6:	d1e2      	bne.n	1000f5be <rx_callback+0x2a>
1000f5f8:	6823      	ldr	r3, [r4, #0]
1000f5fa:	683a      	ldr	r2, [r7, #0]
1000f5fc:	1c30      	adds	r0, r6, #0
1000f5fe:	18d2      	adds	r2, r2, r3
1000f600:	9901      	ldr	r1, [sp, #4]
1000f602:	1c2b      	adds	r3, r5, #0
1000f604:	4e03      	ldr	r6, [pc, #12]	; (1000f614 <rx_callback+0x80>)
1000f606:	47b0      	blx	r6
1000f608:	6823      	ldr	r3, [r4, #0]
1000f60a:	18ed      	adds	r5, r5, r3
1000f60c:	6025      	str	r5, [r4, #0]
1000f60e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
1000f610:	1000db41 	.word	0x1000db41
1000f614:	1000dab9 	.word	0x1000dab9
1000f618:	1000d24d 	.word	0x1000d24d
1000f61c:	1001a370 	.word	0x1001a370
1000f620:	10017718 	.word	0x10017718
1000f624:	10017714 	.word	0x10017714
1000f628:	10012207 	.word	0x10012207

1000f62c <interface_send>:
1000f62c:	b508      	push	{r3, lr}
1000f62e:	4b02      	ldr	r3, [pc, #8]	; (1000f638 <interface_send+0xc>)
1000f630:	4798      	blx	r3
1000f632:	2000      	movs	r0, #0
1000f634:	bd08      	pop	{r3, pc}
1000f636:	46c0      	nop			; (mov r8, r8)
1000f638:	1000cf45 	.word	0x1000cf45

1000f63c <interface_init>:
1000f63c:	2280      	movs	r2, #128	; 0x80
1000f63e:	b510      	push	{r4, lr}
1000f640:	2100      	movs	r1, #0
1000f642:	1c04      	adds	r4, r0, #0
1000f644:	0092      	lsls	r2, r2, #2
1000f646:	4b08      	ldr	r3, [pc, #32]	; (1000f668 <interface_init+0x2c>)
1000f648:	4808      	ldr	r0, [pc, #32]	; (1000f66c <interface_init+0x30>)
1000f64a:	4798      	blx	r3
1000f64c:	2200      	movs	r2, #0
1000f64e:	4b08      	ldr	r3, [pc, #32]	; (1000f670 <interface_init+0x34>)
1000f650:	601a      	str	r2, [r3, #0]
1000f652:	4a08      	ldr	r2, [pc, #32]	; (1000f674 <interface_init+0x38>)
1000f654:	4b08      	ldr	r3, [pc, #32]	; (1000f678 <interface_init+0x3c>)
1000f656:	601a      	str	r2, [r3, #0]
1000f658:	4b08      	ldr	r3, [pc, #32]	; (1000f67c <interface_init+0x40>)
1000f65a:	6922      	ldr	r2, [r4, #16]
1000f65c:	601a      	str	r2, [r3, #0]
1000f65e:	6962      	ldr	r2, [r4, #20]
1000f660:	4b07      	ldr	r3, [pc, #28]	; (1000f680 <interface_init+0x44>)
1000f662:	601a      	str	r2, [r3, #0]
1000f664:	bd10      	pop	{r4, pc}
1000f666:	46c0      	nop			; (mov r8, r8)
1000f668:	10012219 	.word	0x10012219
1000f66c:	1001a574 	.word	0x1001a574
1000f670:	1001a370 	.word	0x1001a370
1000f674:	1001a374 	.word	0x1001a374
1000f678:	10015c70 	.word	0x10015c70
1000f67c:	10017714 	.word	0x10017714
1000f680:	10017718 	.word	0x10017718

1000f684 <platform_cmd_cmpl_signal>:
1000f684:	2201      	movs	r2, #1
1000f686:	4b01      	ldr	r3, [pc, #4]	; (1000f68c <platform_cmd_cmpl_signal+0x8>)
1000f688:	601a      	str	r2, [r3, #0]
1000f68a:	4770      	bx	lr
1000f68c:	1001771c 	.word	0x1001771c

1000f690 <platform_cmd_cmpl_wait>:
1000f690:	b510      	push	{r4, lr}
1000f692:	1c04      	adds	r4, r0, #0
1000f694:	4b07      	ldr	r3, [pc, #28]	; (1000f6b4 <platform_cmd_cmpl_wait+0x24>)
1000f696:	681a      	ldr	r2, [r3, #0]
1000f698:	2a01      	cmp	r2, #1
1000f69a:	d003      	beq.n	1000f6a4 <platform_cmd_cmpl_wait+0x14>
1000f69c:	4b06      	ldr	r3, [pc, #24]	; (1000f6b8 <platform_cmd_cmpl_wait+0x28>)
1000f69e:	2000      	movs	r0, #0
1000f6a0:	4798      	blx	r3
1000f6a2:	e7f7      	b.n	1000f694 <platform_cmd_cmpl_wait+0x4>
1000f6a4:	6819      	ldr	r1, [r3, #0]
1000f6a6:	2901      	cmp	r1, #1
1000f6a8:	d102      	bne.n	1000f6b0 <platform_cmd_cmpl_wait+0x20>
1000f6aa:	2200      	movs	r2, #0
1000f6ac:	601a      	str	r2, [r3, #0]
1000f6ae:	e000      	b.n	1000f6b2 <platform_cmd_cmpl_wait+0x22>
1000f6b0:	7022      	strb	r2, [r4, #0]
1000f6b2:	bd10      	pop	{r4, pc}
1000f6b4:	1001771c 	.word	0x1001771c
1000f6b8:	1000cfd5 	.word	0x1000cfd5

1000f6bc <start_timer>:
1000f6bc:	4770      	bx	lr

1000f6be <stop_timer>:
1000f6be:	4770      	bx	lr

1000f6c0 <dbg_le_set_bd_addr_req_handler>:
1000f6c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000f6c2:	466b      	mov	r3, sp
1000f6c4:	1dde      	adds	r6, r3, #7
1000f6c6:	2300      	movs	r3, #0
1000f6c8:	7033      	strb	r3, [r6, #0]
1000f6ca:	230f      	movs	r3, #15
1000f6cc:	4c13      	ldr	r4, [pc, #76]	; (1000f71c <dbg_le_set_bd_addr_req_handler+0x5c>)
1000f6ce:	2703      	movs	r7, #3
1000f6d0:	7023      	strb	r3, [r4, #0]
1000f6d2:	2300      	movs	r3, #0
1000f6d4:	70e3      	strb	r3, [r4, #3]
1000f6d6:	4b12      	ldr	r3, [pc, #72]	; (1000f720 <dbg_le_set_bd_addr_req_handler+0x60>)
1000f6d8:	1c01      	adds	r1, r0, #0
1000f6da:	881a      	ldrh	r2, [r3, #0]
1000f6dc:	881b      	ldrh	r3, [r3, #0]
1000f6de:	7122      	strb	r2, [r4, #4]
1000f6e0:	0a1b      	lsrs	r3, r3, #8
1000f6e2:	2206      	movs	r2, #6
1000f6e4:	7163      	strb	r3, [r4, #5]
1000f6e6:	480f      	ldr	r0, [pc, #60]	; (1000f724 <dbg_le_set_bd_addr_req_handler+0x64>)
1000f6e8:	4b0f      	ldr	r3, [pc, #60]	; (1000f728 <dbg_le_set_bd_addr_req_handler+0x68>)
1000f6ea:	7067      	strb	r7, [r4, #1]
1000f6ec:	70a7      	strb	r7, [r4, #2]
1000f6ee:	4798      	blx	r3
1000f6f0:	4d0e      	ldr	r5, [pc, #56]	; (1000f72c <dbg_le_set_bd_addr_req_handler+0x6c>)
1000f6f2:	4b0f      	ldr	r3, [pc, #60]	; (1000f730 <dbg_le_set_bd_addr_req_handler+0x70>)
1000f6f4:	210e      	movs	r1, #14
1000f6f6:	802b      	strh	r3, [r5, #0]
1000f6f8:	2306      	movs	r3, #6
1000f6fa:	71a3      	strb	r3, [r4, #6]
1000f6fc:	2300      	movs	r3, #0
1000f6fe:	1c20      	adds	r0, r4, #0
1000f700:	71e3      	strb	r3, [r4, #7]
1000f702:	4b0c      	ldr	r3, [pc, #48]	; (1000f734 <dbg_le_set_bd_addr_req_handler+0x74>)
1000f704:	80af      	strh	r7, [r5, #4]
1000f706:	4798      	blx	r3
1000f708:	1c30      	adds	r0, r6, #0
1000f70a:	4b0b      	ldr	r3, [pc, #44]	; (1000f738 <dbg_le_set_bd_addr_req_handler+0x78>)
1000f70c:	4798      	blx	r3
1000f70e:	7833      	ldrb	r3, [r6, #0]
1000f710:	20e2      	movs	r0, #226	; 0xe2
1000f712:	2b00      	cmp	r3, #0
1000f714:	d101      	bne.n	1000f71a <dbg_le_set_bd_addr_req_handler+0x5a>
1000f716:	68ab      	ldr	r3, [r5, #8]
1000f718:	7818      	ldrb	r0, [r3, #0]
1000f71a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000f71c:	1001a574 	.word	0x1001a574
1000f720:	1001a204 	.word	0x1001a204
1000f724:	1001a57c 	.word	0x1001a57c
1000f728:	10012207 	.word	0x10012207
1000f72c:	1001a1f8 	.word	0x1001a1f8
1000f730:	00000329 	.word	0x00000329
1000f734:	1000f62d 	.word	0x1000f62d
1000f738:	1000f691 	.word	0x1000f691

1000f73c <gapc_get_dev_info_cfm.constprop.1>:
1000f73c:	b538      	push	{r3, r4, r5, lr}
1000f73e:	230b      	movs	r3, #11
1000f740:	4c27      	ldr	r4, [pc, #156]	; (1000f7e0 <gapc_get_dev_info_cfm.constprop.1+0xa4>)
1000f742:	7023      	strb	r3, [r4, #0]
1000f744:	3303      	adds	r3, #3
1000f746:	7063      	strb	r3, [r4, #1]
1000f748:	3329      	adds	r3, #41	; 0x29
1000f74a:	70a3      	strb	r3, [r4, #2]
1000f74c:	4b25      	ldr	r3, [pc, #148]	; (1000f7e4 <gapc_get_dev_info_cfm.constprop.1+0xa8>)
1000f74e:	70e1      	strb	r1, [r4, #3]
1000f750:	881a      	ldrh	r2, [r3, #0]
1000f752:	881b      	ldrh	r3, [r3, #0]
1000f754:	7122      	strb	r2, [r4, #4]
1000f756:	0a1b      	lsrs	r3, r3, #8
1000f758:	7163      	strb	r3, [r4, #5]
1000f75a:	2300      	movs	r3, #0
1000f75c:	7220      	strb	r0, [r4, #8]
1000f75e:	7263      	strb	r3, [r4, #9]
1000f760:	2801      	cmp	r0, #1
1000f762:	d02b      	beq.n	1000f7bc <gapc_get_dev_info_cfm.constprop.1+0x80>
1000f764:	4298      	cmp	r0, r3
1000f766:	d01b      	beq.n	1000f7a0 <gapc_get_dev_info_cfm.constprop.1+0x64>
1000f768:	2802      	cmp	r0, #2
1000f76a:	d12f      	bne.n	1000f7cc <gapc_get_dev_info_cfm.constprop.1+0x90>
1000f76c:	4b1e      	ldr	r3, [pc, #120]	; (1000f7e8 <gapc_get_dev_info_cfm.constprop.1+0xac>)
1000f76e:	2112      	movs	r1, #18
1000f770:	1c1a      	adds	r2, r3, #0
1000f772:	32ce      	adds	r2, #206	; 0xce
1000f774:	8812      	ldrh	r2, [r2, #0]
1000f776:	72a2      	strb	r2, [r4, #10]
1000f778:	0a12      	lsrs	r2, r2, #8
1000f77a:	72e2      	strb	r2, [r4, #11]
1000f77c:	1c1a      	adds	r2, r3, #0
1000f77e:	32d0      	adds	r2, #208	; 0xd0
1000f780:	8812      	ldrh	r2, [r2, #0]
1000f782:	7322      	strb	r2, [r4, #12]
1000f784:	0a12      	lsrs	r2, r2, #8
1000f786:	7362      	strb	r2, [r4, #13]
1000f788:	1c1a      	adds	r2, r3, #0
1000f78a:	32d2      	adds	r2, #210	; 0xd2
1000f78c:	8812      	ldrh	r2, [r2, #0]
1000f78e:	33d4      	adds	r3, #212	; 0xd4
1000f790:	73a2      	strb	r2, [r4, #14]
1000f792:	0a12      	lsrs	r2, r2, #8
1000f794:	73e2      	strb	r2, [r4, #15]
1000f796:	881b      	ldrh	r3, [r3, #0]
1000f798:	7423      	strb	r3, [r4, #16]
1000f79a:	0a1b      	lsrs	r3, r3, #8
1000f79c:	7463      	strb	r3, [r4, #17]
1000f79e:	e016      	b.n	1000f7ce <gapc_get_dev_info_cfm.constprop.1+0x92>
1000f7a0:	4b11      	ldr	r3, [pc, #68]	; (1000f7e8 <gapc_get_dev_info_cfm.constprop.1+0xac>)
1000f7a2:	4912      	ldr	r1, [pc, #72]	; (1000f7ec <gapc_get_dev_info_cfm.constprop.1+0xb0>)
1000f7a4:	33aa      	adds	r3, #170	; 0xaa
1000f7a6:	881d      	ldrh	r5, [r3, #0]
1000f7a8:	4811      	ldr	r0, [pc, #68]	; (1000f7f0 <gapc_get_dev_info_cfm.constprop.1+0xb4>)
1000f7aa:	0a2b      	lsrs	r3, r5, #8
1000f7ac:	72a5      	strb	r5, [r4, #10]
1000f7ae:	72e3      	strb	r3, [r4, #11]
1000f7b0:	1c2a      	adds	r2, r5, #0
1000f7b2:	4b10      	ldr	r3, [pc, #64]	; (1000f7f4 <gapc_get_dev_info_cfm.constprop.1+0xb8>)
1000f7b4:	350c      	adds	r5, #12
1000f7b6:	4798      	blx	r3
1000f7b8:	b2a9      	uxth	r1, r5
1000f7ba:	e008      	b.n	1000f7ce <gapc_get_dev_info_cfm.constprop.1+0x92>
1000f7bc:	4b0a      	ldr	r3, [pc, #40]	; (1000f7e8 <gapc_get_dev_info_cfm.constprop.1+0xac>)
1000f7be:	210c      	movs	r1, #12
1000f7c0:	33cc      	adds	r3, #204	; 0xcc
1000f7c2:	881b      	ldrh	r3, [r3, #0]
1000f7c4:	72a3      	strb	r3, [r4, #10]
1000f7c6:	0a1b      	lsrs	r3, r3, #8
1000f7c8:	72e3      	strb	r3, [r4, #11]
1000f7ca:	e000      	b.n	1000f7ce <gapc_get_dev_info_cfm.constprop.1+0x92>
1000f7cc:	210a      	movs	r1, #10
1000f7ce:	1c0b      	adds	r3, r1, #0
1000f7d0:	3b08      	subs	r3, #8
1000f7d2:	71a3      	strb	r3, [r4, #6]
1000f7d4:	121b      	asrs	r3, r3, #8
1000f7d6:	71e3      	strb	r3, [r4, #7]
1000f7d8:	1c20      	adds	r0, r4, #0
1000f7da:	4b07      	ldr	r3, [pc, #28]	; (1000f7f8 <gapc_get_dev_info_cfm.constprop.1+0xbc>)
1000f7dc:	4798      	blx	r3
1000f7de:	bd38      	pop	{r3, r4, r5, pc}
1000f7e0:	1001a574 	.word	0x1001a574
1000f7e4:	1001a204 	.word	0x1001a204
1000f7e8:	1001a296 	.word	0x1001a296
1000f7ec:	1001a342 	.word	0x1001a342
1000f7f0:	1001a580 	.word	0x1001a580
1000f7f4:	10012207 	.word	0x10012207
1000f7f8:	1000f62d 	.word	0x1000f62d

1000f7fc <check_ConnData_idx_role>:
1000f7fc:	4b0c      	ldr	r3, [pc, #48]	; (1000f830 <check_ConnData_idx_role+0x34>)
1000f7fe:	b570      	push	{r4, r5, r6, lr}
1000f800:	1c04      	adds	r4, r0, #0
1000f802:	2008      	movs	r0, #8
1000f804:	429c      	cmp	r4, r3
1000f806:	d011      	beq.n	1000f82c <check_ConnData_idx_role+0x30>
1000f808:	2300      	movs	r3, #0
1000f80a:	2212      	movs	r2, #18
1000f80c:	435a      	muls	r2, r3
1000f80e:	4d09      	ldr	r5, [pc, #36]	; (1000f834 <check_ConnData_idx_role+0x38>)
1000f810:	b2d8      	uxtb	r0, r3
1000f812:	1956      	adds	r6, r2, r5
1000f814:	8976      	ldrh	r6, [r6, #10]
1000f816:	42a6      	cmp	r6, r4
1000f818:	d104      	bne.n	1000f824 <check_ConnData_idx_role+0x28>
1000f81a:	2900      	cmp	r1, #0
1000f81c:	d006      	beq.n	1000f82c <check_ConnData_idx_role+0x30>
1000f81e:	5d53      	ldrb	r3, [r2, r5]
1000f820:	700b      	strb	r3, [r1, #0]
1000f822:	e003      	b.n	1000f82c <check_ConnData_idx_role+0x30>
1000f824:	3301      	adds	r3, #1
1000f826:	2b08      	cmp	r3, #8
1000f828:	d1ef      	bne.n	1000f80a <check_ConnData_idx_role+0xe>
1000f82a:	1c18      	adds	r0, r3, #0
1000f82c:	bd70      	pop	{r4, r5, r6, pc}
1000f82e:	46c0      	nop			; (mov r8, r8)
1000f830:	0000ffff 	.word	0x0000ffff
1000f834:	1001a206 	.word	0x1001a206

1000f838 <check_ConnData_emptyEntry>:
1000f838:	2300      	movs	r3, #0
1000f83a:	2212      	movs	r2, #18
1000f83c:	435a      	muls	r2, r3
1000f83e:	4906      	ldr	r1, [pc, #24]	; (1000f858 <check_ConnData_emptyEntry+0x20>)
1000f840:	b2d8      	uxtb	r0, r3
1000f842:	1852      	adds	r2, r2, r1
1000f844:	8951      	ldrh	r1, [r2, #10]
1000f846:	4a05      	ldr	r2, [pc, #20]	; (1000f85c <check_ConnData_emptyEntry+0x24>)
1000f848:	4291      	cmp	r1, r2
1000f84a:	d003      	beq.n	1000f854 <check_ConnData_emptyEntry+0x1c>
1000f84c:	3301      	adds	r3, #1
1000f84e:	2b08      	cmp	r3, #8
1000f850:	d1f3      	bne.n	1000f83a <check_ConnData_emptyEntry+0x2>
1000f852:	1c18      	adds	r0, r3, #0
1000f854:	4770      	bx	lr
1000f856:	46c0      	nop			; (mov r8, r8)
1000f858:	1001a206 	.word	0x1001a206
1000f85c:	0000ffff 	.word	0x0000ffff

1000f860 <gapc_cmp_evt>:
1000f860:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000f862:	780b      	ldrb	r3, [r1, #0]
1000f864:	1c05      	adds	r5, r0, #0
1000f866:	1e58      	subs	r0, r3, #1
1000f868:	784e      	ldrb	r6, [r1, #1]
1000f86a:	280f      	cmp	r0, #15
1000f86c:	d85a      	bhi.n	1000f924 <gapc_cmp_evt+0xc4>
1000f86e:	1c14      	adds	r4, r2, #0
1000f870:	f001 fc30 	bl	100110d4 <__gnu_thumb1_case_uqi>
1000f874:	5858440a 	.word	0x5858440a
1000f878:	4b584444 	.word	0x4b584444
1000f87c:	0825122d 	.word	0x0825122d
1000f880:	3e395858 	.word	0x3e395858
1000f884:	203b      	movs	r0, #59	; 0x3b
1000f886:	e04e      	b.n	1000f926 <gapc_cmp_evt+0xc6>
1000f888:	203b      	movs	r0, #59	; 0x3b
1000f88a:	2e00      	cmp	r6, #0
1000f88c:	d04b      	beq.n	1000f926 <gapc_cmp_evt+0xc6>
1000f88e:	0a2d      	lsrs	r5, r5, #8
1000f890:	8015      	strh	r5, [r2, #0]
1000f892:	7096      	strb	r6, [r2, #2]
1000f894:	3835      	subs	r0, #53	; 0x35
1000f896:	e046      	b.n	1000f926 <gapc_cmp_evt+0xc6>
1000f898:	466b      	mov	r3, sp
1000f89a:	1ddf      	adds	r7, r3, #7
1000f89c:	2301      	movs	r3, #1
1000f89e:	0a2d      	lsrs	r5, r5, #8
1000f8a0:	703b      	strb	r3, [r7, #0]
1000f8a2:	1c28      	adds	r0, r5, #0
1000f8a4:	1c39      	adds	r1, r7, #0
1000f8a6:	4b20      	ldr	r3, [pc, #128]	; (1000f928 <gapc_cmp_evt+0xc8>)
1000f8a8:	4798      	blx	r3
1000f8aa:	2807      	cmp	r0, #7
1000f8ac:	d803      	bhi.n	1000f8b6 <gapc_cmp_evt+0x56>
1000f8ae:	783b      	ldrb	r3, [r7, #0]
1000f8b0:	203b      	movs	r0, #59	; 0x3b
1000f8b2:	2b00      	cmp	r3, #0
1000f8b4:	d037      	beq.n	1000f926 <gapc_cmp_evt+0xc6>
1000f8b6:	8065      	strh	r5, [r4, #2]
1000f8b8:	7126      	strb	r6, [r4, #4]
1000f8ba:	2009      	movs	r0, #9
1000f8bc:	e033      	b.n	1000f926 <gapc_cmp_evt+0xc6>
1000f8be:	203b      	movs	r0, #59	; 0x3b
1000f8c0:	2e00      	cmp	r6, #0
1000f8c2:	d030      	beq.n	1000f926 <gapc_cmp_evt+0xc6>
1000f8c4:	0a2d      	lsrs	r5, r5, #8
1000f8c6:	8015      	strh	r5, [r2, #0]
1000f8c8:	7096      	strb	r6, [r2, #2]
1000f8ca:	382d      	subs	r0, #45	; 0x2d
1000f8cc:	e02b      	b.n	1000f926 <gapc_cmp_evt+0xc6>
1000f8ce:	203b      	movs	r0, #59	; 0x3b
1000f8d0:	2e00      	cmp	r6, #0
1000f8d2:	d028      	beq.n	1000f926 <gapc_cmp_evt+0xc6>
1000f8d4:	2300      	movs	r3, #0
1000f8d6:	0a2d      	lsrs	r5, r5, #8
1000f8d8:	8015      	strh	r5, [r2, #0]
1000f8da:	7096      	strb	r6, [r2, #2]
1000f8dc:	8093      	strh	r3, [r2, #4]
1000f8de:	80d3      	strh	r3, [r2, #6]
1000f8e0:	8113      	strh	r3, [r2, #8]
1000f8e2:	3834      	subs	r0, #52	; 0x34
1000f8e4:	e01f      	b.n	1000f926 <gapc_cmp_evt+0xc6>
1000f8e6:	203b      	movs	r0, #59	; 0x3b
1000f8e8:	2e00      	cmp	r6, #0
1000f8ea:	d01c      	beq.n	1000f926 <gapc_cmp_evt+0xc6>
1000f8ec:	7216      	strb	r6, [r2, #8]
1000f8ee:	e003      	b.n	1000f8f8 <gapc_cmp_evt+0x98>
1000f8f0:	203b      	movs	r0, #59	; 0x3b
1000f8f2:	2e00      	cmp	r6, #0
1000f8f4:	d017      	beq.n	1000f926 <gapc_cmp_evt+0xc6>
1000f8f6:	7116      	strb	r6, [r2, #4]
1000f8f8:	3812      	subs	r0, #18
1000f8fa:	e014      	b.n	1000f926 <gapc_cmp_evt+0xc6>
1000f8fc:	203b      	movs	r0, #59	; 0x3b
1000f8fe:	2e00      	cmp	r6, #0
1000f900:	d011      	beq.n	1000f926 <gapc_cmp_evt+0xc6>
1000f902:	7093      	strb	r3, [r2, #2]
1000f904:	70d6      	strb	r6, [r2, #3]
1000f906:	382a      	subs	r0, #42	; 0x2a
1000f908:	e00d      	b.n	1000f926 <gapc_cmp_evt+0xc6>
1000f90a:	203b      	movs	r0, #59	; 0x3b
1000f90c:	2e00      	cmp	r6, #0
1000f90e:	d00a      	beq.n	1000f926 <gapc_cmp_evt+0xc6>
1000f910:	0a2d      	lsrs	r5, r5, #8
1000f912:	7016      	strb	r6, [r2, #0]
1000f914:	8055      	strh	r5, [r2, #2]
1000f916:	1d10      	adds	r0, r2, #4
1000f918:	2100      	movs	r1, #0
1000f91a:	2205      	movs	r2, #5
1000f91c:	4b03      	ldr	r3, [pc, #12]	; (1000f92c <gapc_cmp_evt+0xcc>)
1000f91e:	4798      	blx	r3
1000f920:	2012      	movs	r0, #18
1000f922:	e000      	b.n	1000f926 <gapc_cmp_evt+0xc6>
1000f924:	2000      	movs	r0, #0
1000f926:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000f928:	1000f7fd 	.word	0x1000f7fd
1000f92c:	10012219 	.word	0x10012219

1000f930 <gapc_connection_cfm_handler>:
1000f930:	b5f0      	push	{r4, r5, r6, r7, lr}
1000f932:	b085      	sub	sp, #20
1000f934:	1c1d      	adds	r5, r3, #0
1000f936:	ab0a      	add	r3, sp, #40	; 0x28
1000f938:	781b      	ldrb	r3, [r3, #0]
1000f93a:	9201      	str	r2, [sp, #4]
1000f93c:	9302      	str	r3, [sp, #8]
1000f93e:	ab0b      	add	r3, sp, #44	; 0x2c
1000f940:	781b      	ldrb	r3, [r3, #0]
1000f942:	1c07      	adds	r7, r0, #0
1000f944:	9303      	str	r3, [sp, #12]
1000f946:	ab0c      	add	r3, sp, #48	; 0x30
1000f948:	881a      	ldrh	r2, [r3, #0]
1000f94a:	2302      	movs	r3, #2
1000f94c:	1c0e      	adds	r6, r1, #0
1000f94e:	4c23      	ldr	r4, [pc, #140]	; (1000f9dc <gapc_connection_cfm_handler+0xac>)
1000f950:	1c39      	adds	r1, r7, #0
1000f952:	7023      	strb	r3, [r4, #0]
1000f954:	330c      	adds	r3, #12
1000f956:	7063      	strb	r3, [r4, #1]
1000f958:	70a3      	strb	r3, [r4, #2]
1000f95a:	4b21      	ldr	r3, [pc, #132]	; (1000f9e0 <gapc_connection_cfm_handler+0xb0>)
1000f95c:	70e2      	strb	r2, [r4, #3]
1000f95e:	881a      	ldrh	r2, [r3, #0]
1000f960:	881b      	ldrh	r3, [r3, #0]
1000f962:	7122      	strb	r2, [r4, #4]
1000f964:	0a1b      	lsrs	r3, r3, #8
1000f966:	4f1f      	ldr	r7, [pc, #124]	; (1000f9e4 <gapc_connection_cfm_handler+0xb4>)
1000f968:	2210      	movs	r2, #16
1000f96a:	481f      	ldr	r0, [pc, #124]	; (1000f9e8 <gapc_connection_cfm_handler+0xb8>)
1000f96c:	7163      	strb	r3, [r4, #5]
1000f96e:	47b8      	blx	r7
1000f970:	0a33      	lsrs	r3, r6, #8
1000f972:	7626      	strb	r6, [r4, #24]
1000f974:	7663      	strb	r3, [r4, #25]
1000f976:	9901      	ldr	r1, [sp, #4]
1000f978:	0c33      	lsrs	r3, r6, #16
1000f97a:	2210      	movs	r2, #16
1000f97c:	0e36      	lsrs	r6, r6, #24
1000f97e:	481b      	ldr	r0, [pc, #108]	; (1000f9ec <gapc_connection_cfm_handler+0xbc>)
1000f980:	76a3      	strb	r3, [r4, #26]
1000f982:	76e6      	strb	r6, [r4, #27]
1000f984:	47b8      	blx	r7
1000f986:	1c23      	adds	r3, r4, #0
1000f988:	332c      	adds	r3, #44	; 0x2c
1000f98a:	701d      	strb	r5, [r3, #0]
1000f98c:	1c23      	adds	r3, r4, #0
1000f98e:	0a2a      	lsrs	r2, r5, #8
1000f990:	332d      	adds	r3, #45	; 0x2d
1000f992:	701a      	strb	r2, [r3, #0]
1000f994:	1c23      	adds	r3, r4, #0
1000f996:	0c2a      	lsrs	r2, r5, #16
1000f998:	332e      	adds	r3, #46	; 0x2e
1000f99a:	701a      	strb	r2, [r3, #0]
1000f99c:	1c23      	adds	r3, r4, #0
1000f99e:	0e2d      	lsrs	r5, r5, #24
1000f9a0:	332f      	adds	r3, #47	; 0x2f
1000f9a2:	466a      	mov	r2, sp
1000f9a4:	701d      	strb	r5, [r3, #0]
1000f9a6:	1c23      	adds	r3, r4, #0
1000f9a8:	7a12      	ldrb	r2, [r2, #8]
1000f9aa:	3330      	adds	r3, #48	; 0x30
1000f9ac:	701a      	strb	r2, [r3, #0]
1000f9ae:	1c23      	adds	r3, r4, #0
1000f9b0:	2500      	movs	r5, #0
1000f9b2:	3331      	adds	r3, #49	; 0x31
1000f9b4:	466a      	mov	r2, sp
1000f9b6:	701d      	strb	r5, [r3, #0]
1000f9b8:	1c23      	adds	r3, r4, #0
1000f9ba:	7b12      	ldrb	r2, [r2, #12]
1000f9bc:	3332      	adds	r3, #50	; 0x32
1000f9be:	701a      	strb	r2, [r3, #0]
1000f9c0:	1c23      	adds	r3, r4, #0
1000f9c2:	3333      	adds	r3, #51	; 0x33
1000f9c4:	701d      	strb	r5, [r3, #0]
1000f9c6:	232c      	movs	r3, #44	; 0x2c
1000f9c8:	1c20      	adds	r0, r4, #0
1000f9ca:	71a3      	strb	r3, [r4, #6]
1000f9cc:	2134      	movs	r1, #52	; 0x34
1000f9ce:	4b08      	ldr	r3, [pc, #32]	; (1000f9f0 <gapc_connection_cfm_handler+0xc0>)
1000f9d0:	71e5      	strb	r5, [r4, #7]
1000f9d2:	4798      	blx	r3
1000f9d4:	1c28      	adds	r0, r5, #0
1000f9d6:	b005      	add	sp, #20
1000f9d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000f9da:	46c0      	nop			; (mov r8, r8)
1000f9dc:	1001a574 	.word	0x1001a574
1000f9e0:	1001a204 	.word	0x1001a204
1000f9e4:	10012207 	.word	0x10012207
1000f9e8:	1001a57c 	.word	0x1001a57c
1000f9ec:	1001a590 	.word	0x1001a590
1000f9f0:	1000f62d 	.word	0x1000f62d

1000f9f4 <gapc_con_req_ind>:
1000f9f4:	b5f0      	push	{r4, r5, r6, r7, lr}
1000f9f6:	7845      	ldrb	r5, [r0, #1]
1000f9f8:	7803      	ldrb	r3, [r0, #0]
1000f9fa:	4c30      	ldr	r4, [pc, #192]	; (1000fabc <gapc_con_req_ind+0xc8>)
1000f9fc:	022d      	lsls	r5, r5, #8
1000f9fe:	431d      	orrs	r5, r3
1000fa00:	85a5      	strh	r5, [r4, #44]	; 0x2c
1000fa02:	78c3      	ldrb	r3, [r0, #3]
1000fa04:	7882      	ldrb	r2, [r0, #2]
1000fa06:	b08b      	sub	sp, #44	; 0x2c
1000fa08:	021b      	lsls	r3, r3, #8
1000fa0a:	431a      	orrs	r2, r3
1000fa0c:	466b      	mov	r3, sp
1000fa0e:	9205      	str	r2, [sp, #20]
1000fa10:	8a9b      	ldrh	r3, [r3, #20]
1000fa12:	2120      	movs	r1, #32
1000fa14:	85e3      	strh	r3, [r4, #46]	; 0x2e
1000fa16:	7943      	ldrb	r3, [r0, #5]
1000fa18:	7902      	ldrb	r2, [r0, #4]
1000fa1a:	021b      	lsls	r3, r3, #8
1000fa1c:	431a      	orrs	r2, r3
1000fa1e:	466b      	mov	r3, sp
1000fa20:	9206      	str	r2, [sp, #24]
1000fa22:	8b1b      	ldrh	r3, [r3, #24]
1000fa24:	1c06      	adds	r6, r0, #0
1000fa26:	8623      	strh	r3, [r4, #48]	; 0x30
1000fa28:	79c3      	ldrb	r3, [r0, #7]
1000fa2a:	7982      	ldrb	r2, [r0, #6]
1000fa2c:	021b      	lsls	r3, r3, #8
1000fa2e:	431a      	orrs	r2, r3
1000fa30:	466b      	mov	r3, sp
1000fa32:	9207      	str	r2, [sp, #28]
1000fa34:	466a      	mov	r2, sp
1000fa36:	8b9b      	ldrh	r3, [r3, #28]
1000fa38:	1852      	adds	r2, r2, r1
1000fa3a:	8663      	strh	r3, [r4, #50]	; 0x32
1000fa3c:	7a43      	ldrb	r3, [r0, #9]
1000fa3e:	1c01      	adds	r1, r0, #0
1000fa40:	9308      	str	r3, [sp, #32]
1000fa42:	1c23      	adds	r3, r4, #0
1000fa44:	7812      	ldrb	r2, [r2, #0]
1000fa46:	3377      	adds	r3, #119	; 0x77
1000fa48:	3478      	adds	r4, #120	; 0x78
1000fa4a:	701a      	strb	r2, [r3, #0]
1000fa4c:	310a      	adds	r1, #10
1000fa4e:	2206      	movs	r2, #6
1000fa50:	4b1b      	ldr	r3, [pc, #108]	; (1000fac0 <gapc_con_req_ind+0xcc>)
1000fa52:	1c20      	adds	r0, r4, #0
1000fa54:	4798      	blx	r3
1000fa56:	7c33      	ldrb	r3, [r6, #16]
1000fa58:	9309      	str	r3, [sp, #36]	; 0x24
1000fa5a:	4b1a      	ldr	r3, [pc, #104]	; (1000fac4 <gapc_con_req_ind+0xd0>)
1000fa5c:	4798      	blx	r3
1000fa5e:	4e1a      	ldr	r6, [pc, #104]	; (1000fac8 <gapc_con_req_ind+0xd4>)
1000fa60:	1e07      	subs	r7, r0, #0
1000fa62:	2f07      	cmp	r7, #7
1000fa64:	d81b      	bhi.n	1000fa9e <gapc_con_req_ind+0xaa>
1000fa66:	2312      	movs	r3, #18
1000fa68:	4343      	muls	r3, r0
1000fa6a:	18f0      	adds	r0, r6, r3
1000fa6c:	8145      	strh	r5, [r0, #10]
1000fa6e:	4669      	mov	r1, sp
1000fa70:	2524      	movs	r5, #36	; 0x24
1000fa72:	1949      	adds	r1, r1, r5
1000fa74:	7809      	ldrb	r1, [r1, #0]
1000fa76:	2206      	movs	r2, #6
1000fa78:	54f1      	strb	r1, [r6, r3]
1000fa7a:	2120      	movs	r1, #32
1000fa7c:	466b      	mov	r3, sp
1000fa7e:	185b      	adds	r3, r3, r1
1000fa80:	781b      	ldrb	r3, [r3, #0]
1000fa82:	1c21      	adds	r1, r4, #0
1000fa84:	7043      	strb	r3, [r0, #1]
1000fa86:	466b      	mov	r3, sp
1000fa88:	8a9b      	ldrh	r3, [r3, #20]
1000fa8a:	3002      	adds	r0, #2
1000fa8c:	8143      	strh	r3, [r0, #10]
1000fa8e:	466b      	mov	r3, sp
1000fa90:	8b1b      	ldrh	r3, [r3, #24]
1000fa92:	8183      	strh	r3, [r0, #12]
1000fa94:	466b      	mov	r3, sp
1000fa96:	8b9b      	ldrh	r3, [r3, #28]
1000fa98:	81c3      	strh	r3, [r0, #14]
1000fa9a:	4b09      	ldr	r3, [pc, #36]	; (1000fac0 <gapc_con_req_ind+0xcc>)
1000fa9c:	4798      	blx	r3
1000fa9e:	2112      	movs	r1, #18
1000faa0:	2300      	movs	r3, #0
1000faa2:	434f      	muls	r7, r1
1000faa4:	9300      	str	r3, [sp, #0]
1000faa6:	9301      	str	r3, [sp, #4]
1000faa8:	19f6      	adds	r6, r6, r7
1000faaa:	8971      	ldrh	r1, [r6, #10]
1000faac:	4a07      	ldr	r2, [pc, #28]	; (1000facc <gapc_con_req_ind+0xd8>)
1000faae:	9102      	str	r1, [sp, #8]
1000fab0:	1c10      	adds	r0, r2, #0
1000fab2:	1c19      	adds	r1, r3, #0
1000fab4:	4c06      	ldr	r4, [pc, #24]	; (1000fad0 <gapc_con_req_ind+0xdc>)
1000fab6:	47a0      	blx	r4
1000fab8:	b00b      	add	sp, #44	; 0x2c
1000faba:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000fabc:	1001a296 	.word	0x1001a296
1000fac0:	10012207 	.word	0x10012207
1000fac4:	1000f839 	.word	0x1000f839
1000fac8:	1001a206 	.word	0x1001a206
1000facc:	10017720 	.word	0x10017720
1000fad0:	1000f931 	.word	0x1000f931

1000fad4 <gapc_disconnect_cmd_handler>:
1000fad4:	2204      	movs	r2, #4
1000fad6:	b510      	push	{r4, lr}
1000fad8:	4b0c      	ldr	r3, [pc, #48]	; (1000fb0c <gapc_disconnect_cmd_handler+0x38>)
1000fada:	2400      	movs	r4, #0
1000fadc:	701a      	strb	r2, [r3, #0]
1000fade:	320a      	adds	r2, #10
1000fae0:	705a      	strb	r2, [r3, #1]
1000fae2:	709a      	strb	r2, [r3, #2]
1000fae4:	4a0a      	ldr	r2, [pc, #40]	; (1000fb10 <gapc_disconnect_cmd_handler+0x3c>)
1000fae6:	70d9      	strb	r1, [r3, #3]
1000fae8:	8811      	ldrh	r1, [r2, #0]
1000faea:	8812      	ldrh	r2, [r2, #0]
1000faec:	7119      	strb	r1, [r3, #4]
1000faee:	0a12      	lsrs	r2, r2, #8
1000faf0:	715a      	strb	r2, [r3, #5]
1000faf2:	2201      	movs	r2, #1
1000faf4:	721a      	strb	r2, [r3, #8]
1000faf6:	1892      	adds	r2, r2, r2
1000faf8:	7258      	strb	r0, [r3, #9]
1000fafa:	719a      	strb	r2, [r3, #6]
1000fafc:	71dc      	strb	r4, [r3, #7]
1000fafe:	1c18      	adds	r0, r3, #0
1000fb00:	210a      	movs	r1, #10
1000fb02:	4b04      	ldr	r3, [pc, #16]	; (1000fb14 <gapc_disconnect_cmd_handler+0x40>)
1000fb04:	4798      	blx	r3
1000fb06:	1c20      	adds	r0, r4, #0
1000fb08:	bd10      	pop	{r4, pc}
1000fb0a:	46c0      	nop			; (mov r8, r8)
1000fb0c:	1001a574 	.word	0x1001a574
1000fb10:	1001a204 	.word	0x1001a204
1000fb14:	1000f62d 	.word	0x1000f62d

1000fb18 <gapc_disconnect_ind>:
1000fb18:	1c02      	adds	r2, r0, #0
1000fb1a:	b508      	push	{r3, lr}
1000fb1c:	7843      	ldrb	r3, [r0, #1]
1000fb1e:	7800      	ldrb	r0, [r0, #0]
1000fb20:	021b      	lsls	r3, r3, #8
1000fb22:	4318      	orrs	r0, r3
1000fb24:	8008      	strh	r0, [r1, #0]
1000fb26:	7893      	ldrb	r3, [r2, #2]
1000fb28:	708b      	strb	r3, [r1, #2]
1000fb2a:	2100      	movs	r1, #0
1000fb2c:	4b05      	ldr	r3, [pc, #20]	; (1000fb44 <gapc_disconnect_ind+0x2c>)
1000fb2e:	4798      	blx	r3
1000fb30:	2807      	cmp	r0, #7
1000fb32:	d806      	bhi.n	1000fb42 <gapc_disconnect_ind+0x2a>
1000fb34:	2312      	movs	r3, #18
1000fb36:	4358      	muls	r0, r3
1000fb38:	4b03      	ldr	r3, [pc, #12]	; (1000fb48 <gapc_disconnect_ind+0x30>)
1000fb3a:	1818      	adds	r0, r3, r0
1000fb3c:	2301      	movs	r3, #1
1000fb3e:	425b      	negs	r3, r3
1000fb40:	8143      	strh	r3, [r0, #10]
1000fb42:	bd08      	pop	{r3, pc}
1000fb44:	1000f7fd 	.word	0x1000f7fd
1000fb48:	1001a206 	.word	0x1001a206

1000fb4c <gapc_bond_cmd_handler>:
1000fb4c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000fb4e:	9300      	str	r3, [sp, #0]
1000fb50:	2312      	movs	r3, #18
1000fb52:	1c04      	adds	r4, r0, #0
1000fb54:	a808      	add	r0, sp, #32
1000fb56:	7807      	ldrb	r7, [r0, #0]
1000fb58:	a809      	add	r0, sp, #36	; 0x24
1000fb5a:	7806      	ldrb	r6, [r0, #0]
1000fb5c:	a80a      	add	r0, sp, #40	; 0x28
1000fb5e:	7805      	ldrb	r5, [r0, #0]
1000fb60:	a80b      	add	r0, sp, #44	; 0x2c
1000fb62:	7800      	ldrb	r0, [r0, #0]
1000fb64:	9001      	str	r0, [sp, #4]
1000fb66:	4810      	ldr	r0, [pc, #64]	; (1000fba8 <gapc_bond_cmd_handler+0x5c>)
1000fb68:	7003      	strb	r3, [r0, #0]
1000fb6a:	230e      	movs	r3, #14
1000fb6c:	70c4      	strb	r4, [r0, #3]
1000fb6e:	4c0f      	ldr	r4, [pc, #60]	; (1000fbac <gapc_bond_cmd_handler+0x60>)
1000fb70:	7043      	strb	r3, [r0, #1]
1000fb72:	7083      	strb	r3, [r0, #2]
1000fb74:	8823      	ldrh	r3, [r4, #0]
1000fb76:	8824      	ldrh	r4, [r4, #0]
1000fb78:	7103      	strb	r3, [r0, #4]
1000fb7a:	466b      	mov	r3, sp
1000fb7c:	781b      	ldrb	r3, [r3, #0]
1000fb7e:	0a24      	lsrs	r4, r4, #8
1000fb80:	72c3      	strb	r3, [r0, #11]
1000fb82:	466b      	mov	r3, sp
1000fb84:	791b      	ldrb	r3, [r3, #4]
1000fb86:	7144      	strb	r4, [r0, #5]
1000fb88:	73c3      	strb	r3, [r0, #15]
1000fb8a:	2308      	movs	r3, #8
1000fb8c:	7183      	strb	r3, [r0, #6]
1000fb8e:	2300      	movs	r3, #0
1000fb90:	240a      	movs	r4, #10
1000fb92:	7241      	strb	r1, [r0, #9]
1000fb94:	71c3      	strb	r3, [r0, #7]
1000fb96:	2110      	movs	r1, #16
1000fb98:	4b05      	ldr	r3, [pc, #20]	; (1000fbb0 <gapc_bond_cmd_handler+0x64>)
1000fb9a:	7307      	strb	r7, [r0, #12]
1000fb9c:	7346      	strb	r6, [r0, #13]
1000fb9e:	7385      	strb	r5, [r0, #14]
1000fba0:	7204      	strb	r4, [r0, #8]
1000fba2:	7282      	strb	r2, [r0, #10]
1000fba4:	4798      	blx	r3
1000fba6:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
1000fba8:	1001a574 	.word	0x1001a574
1000fbac:	1001a204 	.word	0x1001a204
1000fbb0:	1000f62d 	.word	0x1000f62d

1000fbb4 <gapc_bond_ind>:
1000fbb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000fbb6:	780e      	ldrb	r6, [r1, #0]
1000fbb8:	1c03      	adds	r3, r0, #0
1000fbba:	1eb0      	subs	r0, r6, #2
1000fbbc:	2805      	cmp	r0, #5
1000fbbe:	d85d      	bhi.n	1000fc7c <gapc_bond_ind+0xc8>
1000fbc0:	1c15      	adds	r5, r2, #0
1000fbc2:	1c0c      	adds	r4, r1, #0
1000fbc4:	f001 fa86 	bl	100110d4 <__gnu_thumb1_case_uqi>
1000fbc8:	2f5a030d 	.word	0x2f5a030d
1000fbcc:	4740      	.short	0x4740
1000fbce:	2009      	movs	r0, #9
1000fbd0:	2a00      	cmp	r2, #0
1000fbd2:	d054      	beq.n	1000fc7e <gapc_bond_ind+0xca>
1000fbd4:	0a1b      	lsrs	r3, r3, #8
1000fbd6:	8053      	strh	r3, [r2, #2]
1000fbd8:	788b      	ldrb	r3, [r1, #2]
1000fbda:	4829      	ldr	r0, [pc, #164]	; (1000fc80 <gapc_bond_ind+0xcc>)
1000fbdc:	7113      	strb	r3, [r2, #4]
1000fbde:	2100      	movs	r1, #0
1000fbe0:	e01c      	b.n	1000fc1c <gapc_bond_ind+0x68>
1000fbe2:	2009      	movs	r0, #9
1000fbe4:	2a00      	cmp	r2, #0
1000fbe6:	d04a      	beq.n	1000fc7e <gapc_bond_ind+0xca>
1000fbe8:	4c25      	ldr	r4, [pc, #148]	; (1000fc80 <gapc_bond_ind+0xcc>)
1000fbea:	0a1b      	lsrs	r3, r3, #8
1000fbec:	8053      	strh	r3, [r2, #2]
1000fbee:	788b      	ldrb	r3, [r1, #2]
1000fbf0:	2700      	movs	r7, #0
1000fbf2:	1c10      	adds	r0, r2, #0
1000fbf4:	1c21      	adds	r1, r4, #0
1000fbf6:	7013      	strb	r3, [r2, #0]
1000fbf8:	4e22      	ldr	r6, [pc, #136]	; (1000fc84 <gapc_bond_ind+0xd0>)
1000fbfa:	7117      	strb	r7, [r2, #4]
1000fbfc:	312e      	adds	r1, #46	; 0x2e
1000fbfe:	2217      	movs	r2, #23
1000fc00:	3032      	adds	r0, #50	; 0x32
1000fc02:	47b0      	blx	r6
1000fc04:	1c28      	adds	r0, r5, #0
1000fc06:	1c21      	adds	r1, r4, #0
1000fc08:	2210      	movs	r2, #16
1000fc0a:	311e      	adds	r1, #30
1000fc0c:	3022      	adds	r0, #34	; 0x22
1000fc0e:	47b0      	blx	r6
1000fc10:	1ca1      	adds	r1, r4, #2
1000fc12:	1da8      	adds	r0, r5, #6
1000fc14:	221c      	movs	r2, #28
1000fc16:	47b0      	blx	r6
1000fc18:	1c20      	adds	r0, r4, #0
1000fc1a:	1c39      	adds	r1, r7, #0
1000fc1c:	2246      	movs	r2, #70	; 0x46
1000fc1e:	4b1a      	ldr	r3, [pc, #104]	; (1000fc88 <gapc_bond_ind+0xd4>)
1000fc20:	4798      	blx	r3
1000fc22:	2009      	movs	r0, #9
1000fc24:	e02b      	b.n	1000fc7e <gapc_bond_ind+0xca>
1000fc26:	4d16      	ldr	r5, [pc, #88]	; (1000fc80 <gapc_bond_ind+0xcc>)
1000fc28:	3102      	adds	r1, #2
1000fc2a:	1c28      	adds	r0, r5, #0
1000fc2c:	2210      	movs	r2, #16
1000fc2e:	4e15      	ldr	r6, [pc, #84]	; (1000fc84 <gapc_bond_ind+0xd0>)
1000fc30:	302e      	adds	r0, #46	; 0x2e
1000fc32:	47b0      	blx	r6
1000fc34:	1c28      	adds	r0, r5, #0
1000fc36:	1c21      	adds	r1, r4, #0
1000fc38:	303f      	adds	r0, #63	; 0x3f
1000fc3a:	3112      	adds	r1, #18
1000fc3c:	2206      	movs	r2, #6
1000fc3e:	47b0      	blx	r6
1000fc40:	7e23      	ldrb	r3, [r4, #24]
1000fc42:	353e      	adds	r5, #62	; 0x3e
1000fc44:	702b      	strb	r3, [r5, #0]
1000fc46:	e019      	b.n	1000fc7c <gapc_bond_ind+0xc8>
1000fc48:	480d      	ldr	r0, [pc, #52]	; (1000fc80 <gapc_bond_ind+0xcc>)
1000fc4a:	3102      	adds	r1, #2
1000fc4c:	2210      	movs	r2, #16
1000fc4e:	4b0d      	ldr	r3, [pc, #52]	; (1000fc84 <gapc_bond_ind+0xd0>)
1000fc50:	301e      	adds	r0, #30
1000fc52:	4798      	blx	r3
1000fc54:	e012      	b.n	1000fc7c <gapc_bond_ind+0xc8>
1000fc56:	4d0a      	ldr	r5, [pc, #40]	; (1000fc80 <gapc_bond_ind+0xcc>)
1000fc58:	3102      	adds	r1, #2
1000fc5a:	2210      	movs	r2, #16
1000fc5c:	4e09      	ldr	r6, [pc, #36]	; (1000fc84 <gapc_bond_ind+0xd0>)
1000fc5e:	1ca8      	adds	r0, r5, #2
1000fc60:	47b0      	blx	r6
1000fc62:	1c28      	adds	r0, r5, #0
1000fc64:	1c21      	adds	r1, r4, #0
1000fc66:	7ce3      	ldrb	r3, [r4, #19]
1000fc68:	7ca2      	ldrb	r2, [r4, #18]
1000fc6a:	021b      	lsls	r3, r3, #8
1000fc6c:	4313      	orrs	r3, r2
1000fc6e:	3014      	adds	r0, #20
1000fc70:	3114      	adds	r1, #20
1000fc72:	2208      	movs	r2, #8
1000fc74:	826b      	strh	r3, [r5, #18]
1000fc76:	47b0      	blx	r6
1000fc78:	7f23      	ldrb	r3, [r4, #28]
1000fc7a:	772b      	strb	r3, [r5, #28]
1000fc7c:	2000      	movs	r0, #0
1000fc7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000fc80:	10017750 	.word	0x10017750
1000fc84:	10012207 	.word	0x10012207
1000fc88:	10012219 	.word	0x10012219

1000fc8c <gapc_bond_req_ind>:
1000fc8c:	b570      	push	{r4, r5, r6, lr}
1000fc8e:	780c      	ldrb	r4, [r1, #0]
1000fc90:	1c03      	adds	r3, r0, #0
1000fc92:	7849      	ldrb	r1, [r1, #1]
1000fc94:	2c07      	cmp	r4, #7
1000fc96:	d85c      	bhi.n	1000fd52 <gapc_bond_req_ind+0xc6>
1000fc98:	1c20      	adds	r0, r4, #0
1000fc9a:	f001 fa1b 	bl	100110d4 <__gnu_thumb1_case_uqi>
1000fc9e:	5a04      	.short	0x5a04
1000fca0:	5a0b5a5a 	.word	0x5a0b5a5a
1000fca4:	1f1f      	.short	0x1f1f
1000fca6:	200a      	movs	r0, #10
1000fca8:	2a00      	cmp	r2, #0
1000fcaa:	d053      	beq.n	1000fd54 <gapc_bond_req_ind+0xc8>
1000fcac:	0a1b      	lsrs	r3, r3, #8
1000fcae:	8013      	strh	r3, [r2, #0]
1000fcb0:	7091      	strb	r1, [r2, #2]
1000fcb2:	e04f      	b.n	1000fd54 <gapc_bond_req_ind+0xc8>
1000fcb4:	2a00      	cmp	r2, #0
1000fcb6:	d00b      	beq.n	1000fcd0 <gapc_bond_req_ind+0x44>
1000fcb8:	0a1b      	lsrs	r3, r3, #8
1000fcba:	8013      	strh	r3, [r2, #0]
1000fcbc:	2900      	cmp	r1, #0
1000fcbe:	d102      	bne.n	1000fcc6 <gapc_bond_req_ind+0x3a>
1000fcc0:	2301      	movs	r3, #1
1000fcc2:	7093      	strb	r3, [r2, #2]
1000fcc4:	e004      	b.n	1000fcd0 <gapc_bond_req_ind+0x44>
1000fcc6:	2300      	movs	r3, #0
1000fcc8:	7093      	strb	r3, [r2, #2]
1000fcca:	2902      	cmp	r1, #2
1000fccc:	d102      	bne.n	1000fcd4 <gapc_bond_req_ind+0x48>
1000fcce:	70d3      	strb	r3, [r2, #3]
1000fcd0:	200c      	movs	r0, #12
1000fcd2:	e03f      	b.n	1000fd54 <gapc_bond_req_ind+0xc8>
1000fcd4:	2901      	cmp	r1, #1
1000fcd6:	d1fb      	bne.n	1000fcd0 <gapc_bond_req_ind+0x44>
1000fcd8:	70d1      	strb	r1, [r2, #3]
1000fcda:	e7f9      	b.n	1000fcd0 <gapc_bond_req_ind+0x44>
1000fcdc:	2214      	movs	r2, #20
1000fcde:	481e      	ldr	r0, [pc, #120]	; (1000fd58 <gapc_bond_req_ind+0xcc>)
1000fce0:	0a1b      	lsrs	r3, r3, #8
1000fce2:	70c3      	strb	r3, [r0, #3]
1000fce4:	4b1d      	ldr	r3, [pc, #116]	; (1000fd5c <gapc_bond_req_ind+0xd0>)
1000fce6:	7002      	strb	r2, [r0, #0]
1000fce8:	3a06      	subs	r2, #6
1000fcea:	7042      	strb	r2, [r0, #1]
1000fcec:	7082      	strb	r2, [r0, #2]
1000fcee:	881a      	ldrh	r2, [r3, #0]
1000fcf0:	881b      	ldrh	r3, [r3, #0]
1000fcf2:	4e1b      	ldr	r6, [pc, #108]	; (1000fd60 <gapc_bond_req_ind+0xd4>)
1000fcf4:	0a1b      	lsrs	r3, r3, #8
1000fcf6:	7143      	strb	r3, [r0, #5]
1000fcf8:	2301      	movs	r3, #1
1000fcfa:	7102      	strb	r2, [r0, #4]
1000fcfc:	7204      	strb	r4, [r0, #8]
1000fcfe:	7243      	strb	r3, [r0, #9]
1000fd00:	1c05      	adds	r5, r0, #0
1000fd02:	1c31      	adds	r1, r6, #0
1000fd04:	300a      	adds	r0, #10
1000fd06:	2c07      	cmp	r4, #7
1000fd08:	d116      	bne.n	1000fd38 <gapc_bond_req_ind+0xac>
1000fd0a:	317e      	adds	r1, #126	; 0x7e
1000fd0c:	2210      	movs	r2, #16
1000fd0e:	4c15      	ldr	r4, [pc, #84]	; (1000fd64 <gapc_bond_req_ind+0xd8>)
1000fd10:	47a0      	blx	r4
1000fd12:	1c33      	adds	r3, r6, #0
1000fd14:	1c31      	adds	r1, r6, #0
1000fd16:	1c28      	adds	r0, r5, #0
1000fd18:	338e      	adds	r3, #142	; 0x8e
1000fd1a:	881b      	ldrh	r3, [r3, #0]
1000fd1c:	3190      	adds	r1, #144	; 0x90
1000fd1e:	76ab      	strb	r3, [r5, #26]
1000fd20:	2208      	movs	r2, #8
1000fd22:	0a1b      	lsrs	r3, r3, #8
1000fd24:	301c      	adds	r0, #28
1000fd26:	76eb      	strb	r3, [r5, #27]
1000fd28:	47a0      	blx	r4
1000fd2a:	1c31      	adds	r1, r6, #0
1000fd2c:	3198      	adds	r1, #152	; 0x98
1000fd2e:	780a      	ldrb	r2, [r1, #0]
1000fd30:	1d6b      	adds	r3, r5, #5
1000fd32:	77da      	strb	r2, [r3, #31]
1000fd34:	2125      	movs	r1, #37	; 0x25
1000fd36:	e004      	b.n	1000fd42 <gapc_bond_req_ind+0xb6>
1000fd38:	319a      	adds	r1, #154	; 0x9a
1000fd3a:	2210      	movs	r2, #16
1000fd3c:	4b09      	ldr	r3, [pc, #36]	; (1000fd64 <gapc_bond_req_ind+0xd8>)
1000fd3e:	4798      	blx	r3
1000fd40:	211a      	movs	r1, #26
1000fd42:	1c0b      	adds	r3, r1, #0
1000fd44:	2400      	movs	r4, #0
1000fd46:	3b08      	subs	r3, #8
1000fd48:	71ab      	strb	r3, [r5, #6]
1000fd4a:	1c28      	adds	r0, r5, #0
1000fd4c:	4b06      	ldr	r3, [pc, #24]	; (1000fd68 <gapc_bond_req_ind+0xdc>)
1000fd4e:	71ec      	strb	r4, [r5, #7]
1000fd50:	4798      	blx	r3
1000fd52:	2000      	movs	r0, #0
1000fd54:	bd70      	pop	{r4, r5, r6, pc}
1000fd56:	46c0      	nop			; (mov r8, r8)
1000fd58:	1001a574 	.word	0x1001a574
1000fd5c:	1001a204 	.word	0x1001a204
1000fd60:	1001a296 	.word	0x1001a296
1000fd64:	10012207 	.word	0x10012207
1000fd68:	1000f62d 	.word	0x1000f62d

1000fd6c <gapc_bond_cfm_handler_pair_resp>:
1000fd6c:	b5f0      	push	{r4, r5, r6, r7, lr}
1000fd6e:	b085      	sub	sp, #20
1000fd70:	1c07      	adds	r7, r0, #0
1000fd72:	a80a      	add	r0, sp, #40	; 0x28
1000fd74:	7806      	ldrb	r6, [r0, #0]
1000fd76:	a80b      	add	r0, sp, #44	; 0x2c
1000fd78:	7805      	ldrb	r5, [r0, #0]
1000fd7a:	a80c      	add	r0, sp, #48	; 0x30
1000fd7c:	7800      	ldrb	r0, [r0, #0]
1000fd7e:	2414      	movs	r4, #20
1000fd80:	9002      	str	r0, [sp, #8]
1000fd82:	a80d      	add	r0, sp, #52	; 0x34
1000fd84:	7800      	ldrb	r0, [r0, #0]
1000fd86:	9301      	str	r3, [sp, #4]
1000fd88:	9003      	str	r0, [sp, #12]
1000fd8a:	a80e      	add	r0, sp, #56	; 0x38
1000fd8c:	8800      	ldrh	r0, [r0, #0]
1000fd8e:	4684      	mov	ip, r0
1000fd90:	4812      	ldr	r0, [pc, #72]	; (1000fddc <gapc_bond_cfm_handler_pair_resp+0x70>)
1000fd92:	7004      	strb	r4, [r0, #0]
1000fd94:	3c06      	subs	r4, #6
1000fd96:	7044      	strb	r4, [r0, #1]
1000fd98:	7084      	strb	r4, [r0, #2]
1000fd9a:	4664      	mov	r4, ip
1000fd9c:	70c4      	strb	r4, [r0, #3]
1000fd9e:	4c10      	ldr	r4, [pc, #64]	; (1000fde0 <gapc_bond_cfm_handler_pair_resp+0x74>)
1000fda0:	7247      	strb	r7, [r0, #9]
1000fda2:	8823      	ldrh	r3, [r4, #0]
1000fda4:	8824      	ldrh	r4, [r4, #0]
1000fda6:	7103      	strb	r3, [r0, #4]
1000fda8:	466b      	mov	r3, sp
1000fdaa:	791b      	ldrb	r3, [r3, #4]
1000fdac:	0a24      	lsrs	r4, r4, #8
1000fdae:	7303      	strb	r3, [r0, #12]
1000fdb0:	466b      	mov	r3, sp
1000fdb2:	7a1b      	ldrb	r3, [r3, #8]
1000fdb4:	7144      	strb	r4, [r0, #5]
1000fdb6:	73c3      	strb	r3, [r0, #15]
1000fdb8:	466b      	mov	r3, sp
1000fdba:	7b1b      	ldrb	r3, [r3, #12]
1000fdbc:	2401      	movs	r4, #1
1000fdbe:	7403      	strb	r3, [r0, #16]
1000fdc0:	2309      	movs	r3, #9
1000fdc2:	7183      	strb	r3, [r0, #6]
1000fdc4:	2300      	movs	r3, #0
1000fdc6:	7204      	strb	r4, [r0, #8]
1000fdc8:	7281      	strb	r1, [r0, #10]
1000fdca:	72c2      	strb	r2, [r0, #11]
1000fdcc:	7346      	strb	r6, [r0, #13]
1000fdce:	7385      	strb	r5, [r0, #14]
1000fdd0:	71c3      	strb	r3, [r0, #7]
1000fdd2:	2111      	movs	r1, #17
1000fdd4:	4b03      	ldr	r3, [pc, #12]	; (1000fde4 <gapc_bond_cfm_handler_pair_resp+0x78>)
1000fdd6:	4798      	blx	r3
1000fdd8:	b005      	add	sp, #20
1000fdda:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000fddc:	1001a574 	.word	0x1001a574
1000fde0:	1001a204 	.word	0x1001a204
1000fde4:	1000f62d 	.word	0x1000f62d

1000fde8 <gapc_bond_cfm_handler_key_exch>:
1000fde8:	b538      	push	{r3, r4, r5, lr}
1000fdea:	2514      	movs	r5, #20
1000fdec:	4c0d      	ldr	r4, [pc, #52]	; (1000fe24 <gapc_bond_cfm_handler_key_exch+0x3c>)
1000fdee:	70e3      	strb	r3, [r4, #3]
1000fdf0:	4b0d      	ldr	r3, [pc, #52]	; (1000fe28 <gapc_bond_cfm_handler_key_exch+0x40>)
1000fdf2:	7025      	strb	r5, [r4, #0]
1000fdf4:	3d06      	subs	r5, #6
1000fdf6:	7065      	strb	r5, [r4, #1]
1000fdf8:	70a5      	strb	r5, [r4, #2]
1000fdfa:	881d      	ldrh	r5, [r3, #0]
1000fdfc:	881b      	ldrh	r3, [r3, #0]
1000fdfe:	7220      	strb	r0, [r4, #8]
1000fe00:	0a1b      	lsrs	r3, r3, #8
1000fe02:	7163      	strb	r3, [r4, #5]
1000fe04:	7261      	strb	r1, [r4, #9]
1000fe06:	4b09      	ldr	r3, [pc, #36]	; (1000fe2c <gapc_bond_cfm_handler_key_exch+0x44>)
1000fe08:	1c11      	adds	r1, r2, #0
1000fe0a:	4809      	ldr	r0, [pc, #36]	; (1000fe30 <gapc_bond_cfm_handler_key_exch+0x48>)
1000fe0c:	2210      	movs	r2, #16
1000fe0e:	7125      	strb	r5, [r4, #4]
1000fe10:	4798      	blx	r3
1000fe12:	2312      	movs	r3, #18
1000fe14:	71a3      	strb	r3, [r4, #6]
1000fe16:	2300      	movs	r3, #0
1000fe18:	1c20      	adds	r0, r4, #0
1000fe1a:	71e3      	strb	r3, [r4, #7]
1000fe1c:	211a      	movs	r1, #26
1000fe1e:	4b05      	ldr	r3, [pc, #20]	; (1000fe34 <gapc_bond_cfm_handler_key_exch+0x4c>)
1000fe20:	4798      	blx	r3
1000fe22:	bd38      	pop	{r3, r4, r5, pc}
1000fe24:	1001a574 	.word	0x1001a574
1000fe28:	1001a204 	.word	0x1001a204
1000fe2c:	10012207 	.word	0x10012207
1000fe30:	1001a57e 	.word	0x1001a57e
1000fe34:	1000f62d 	.word	0x1000f62d

1000fe38 <gapc_security_cmd_handler>:
1000fe38:	221a      	movs	r2, #26
1000fe3a:	b508      	push	{r3, lr}
1000fe3c:	4b0b      	ldr	r3, [pc, #44]	; (1000fe6c <gapc_security_cmd_handler+0x34>)
1000fe3e:	701a      	strb	r2, [r3, #0]
1000fe40:	3a0c      	subs	r2, #12
1000fe42:	705a      	strb	r2, [r3, #1]
1000fe44:	709a      	strb	r2, [r3, #2]
1000fe46:	4a0a      	ldr	r2, [pc, #40]	; (1000fe70 <gapc_security_cmd_handler+0x38>)
1000fe48:	70d8      	strb	r0, [r3, #3]
1000fe4a:	8810      	ldrh	r0, [r2, #0]
1000fe4c:	8812      	ldrh	r2, [r2, #0]
1000fe4e:	7118      	strb	r0, [r3, #4]
1000fe50:	0a12      	lsrs	r2, r2, #8
1000fe52:	715a      	strb	r2, [r3, #5]
1000fe54:	220c      	movs	r2, #12
1000fe56:	721a      	strb	r2, [r3, #8]
1000fe58:	3a0a      	subs	r2, #10
1000fe5a:	719a      	strb	r2, [r3, #6]
1000fe5c:	2200      	movs	r2, #0
1000fe5e:	7259      	strb	r1, [r3, #9]
1000fe60:	71da      	strb	r2, [r3, #7]
1000fe62:	1c18      	adds	r0, r3, #0
1000fe64:	210a      	movs	r1, #10
1000fe66:	4b03      	ldr	r3, [pc, #12]	; (1000fe74 <gapc_security_cmd_handler+0x3c>)
1000fe68:	4798      	blx	r3
1000fe6a:	bd08      	pop	{r3, pc}
1000fe6c:	1001a574 	.word	0x1001a574
1000fe70:	1001a204 	.word	0x1001a204
1000fe74:	1000f62d 	.word	0x1000f62d

1000fe78 <gapc_encrypt_cmd_handler>:
1000fe78:	b5f0      	push	{r4, r5, r6, r7, lr}
1000fe7a:	2500      	movs	r5, #0
1000fe7c:	b089      	sub	sp, #36	; 0x24
1000fe7e:	9306      	str	r3, [sp, #24]
1000fe80:	ab0e      	add	r3, sp, #56	; 0x38
1000fe82:	781b      	ldrb	r3, [r3, #0]
1000fe84:	1c17      	adds	r7, r2, #0
1000fe86:	9307      	str	r3, [sp, #28]
1000fe88:	ab0f      	add	r3, sp, #60	; 0x3c
1000fe8a:	781b      	ldrb	r3, [r3, #0]
1000fe8c:	4a19      	ldr	r2, [pc, #100]	; (1000fef4 <gapc_encrypt_cmd_handler+0x7c>)
1000fe8e:	1c06      	adds	r6, r0, #0
1000fe90:	9105      	str	r1, [sp, #20]
1000fe92:	9300      	str	r3, [sp, #0]
1000fe94:	9002      	str	r0, [sp, #8]
1000fe96:	1c29      	adds	r1, r5, #0
1000fe98:	1c2b      	adds	r3, r5, #0
1000fe9a:	9501      	str	r5, [sp, #4]
1000fe9c:	1c10      	adds	r0, r2, #0
1000fe9e:	4c16      	ldr	r4, [pc, #88]	; (1000fef8 <gapc_encrypt_cmd_handler+0x80>)
1000fea0:	47a0      	blx	r4
1000fea2:	2316      	movs	r3, #22
1000fea4:	4c15      	ldr	r4, [pc, #84]	; (1000fefc <gapc_encrypt_cmd_handler+0x84>)
1000fea6:	9905      	ldr	r1, [sp, #20]
1000fea8:	7023      	strb	r3, [r4, #0]
1000feaa:	3b08      	subs	r3, #8
1000feac:	7063      	strb	r3, [r4, #1]
1000feae:	70a3      	strb	r3, [r4, #2]
1000feb0:	4b13      	ldr	r3, [pc, #76]	; (1000ff00 <gapc_encrypt_cmd_handler+0x88>)
1000feb2:	70e6      	strb	r6, [r4, #3]
1000feb4:	881a      	ldrh	r2, [r3, #0]
1000feb6:	881b      	ldrh	r3, [r3, #0]
1000feb8:	7122      	strb	r2, [r4, #4]
1000feba:	0a1b      	lsrs	r3, r3, #8
1000febc:	7163      	strb	r3, [r4, #5]
1000febe:	230b      	movs	r3, #11
1000fec0:	4e10      	ldr	r6, [pc, #64]	; (1000ff04 <gapc_encrypt_cmd_handler+0x8c>)
1000fec2:	2210      	movs	r2, #16
1000fec4:	4810      	ldr	r0, [pc, #64]	; (1000ff08 <gapc_encrypt_cmd_handler+0x90>)
1000fec6:	7223      	strb	r3, [r4, #8]
1000fec8:	7265      	strb	r5, [r4, #9]
1000feca:	47b0      	blx	r6
1000fecc:	0a3b      	lsrs	r3, r7, #8
1000fece:	9906      	ldr	r1, [sp, #24]
1000fed0:	2208      	movs	r2, #8
1000fed2:	480e      	ldr	r0, [pc, #56]	; (1000ff0c <gapc_encrypt_cmd_handler+0x94>)
1000fed4:	76e3      	strb	r3, [r4, #27]
1000fed6:	76a7      	strb	r7, [r4, #26]
1000fed8:	47b0      	blx	r6
1000feda:	466a      	mov	r2, sp
1000fedc:	7f12      	ldrb	r2, [r2, #28]
1000fede:	1d63      	adds	r3, r4, #5
1000fee0:	77da      	strb	r2, [r3, #31]
1000fee2:	231d      	movs	r3, #29
1000fee4:	1c20      	adds	r0, r4, #0
1000fee6:	71a3      	strb	r3, [r4, #6]
1000fee8:	2125      	movs	r1, #37	; 0x25
1000feea:	4b09      	ldr	r3, [pc, #36]	; (1000ff10 <gapc_encrypt_cmd_handler+0x98>)
1000feec:	71e5      	strb	r5, [r4, #7]
1000feee:	4798      	blx	r3
1000fef0:	b009      	add	sp, #36	; 0x24
1000fef2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000fef4:	10017730 	.word	0x10017730
1000fef8:	1000f931 	.word	0x1000f931
1000fefc:	1001a574 	.word	0x1001a574
1000ff00:	1001a204 	.word	0x1001a204
1000ff04:	10012207 	.word	0x10012207
1000ff08:	1001a57e 	.word	0x1001a57e
1000ff0c:	1001a590 	.word	0x1001a590
1000ff10:	1000f62d 	.word	0x1000f62d

1000ff14 <gapc_encrypt_req_ind>:
1000ff14:	b508      	push	{r3, lr}
1000ff16:	0a00      	lsrs	r0, r0, #8
1000ff18:	8010      	strh	r0, [r2, #0]
1000ff1a:	784b      	ldrb	r3, [r1, #1]
1000ff1c:	7808      	ldrb	r0, [r1, #0]
1000ff1e:	021b      	lsls	r3, r3, #8
1000ff20:	4303      	orrs	r3, r0
1000ff22:	8053      	strh	r3, [r2, #2]
1000ff24:	1d10      	adds	r0, r2, #4
1000ff26:	3102      	adds	r1, #2
1000ff28:	2208      	movs	r2, #8
1000ff2a:	4b01      	ldr	r3, [pc, #4]	; (1000ff30 <gapc_encrypt_req_ind+0x1c>)
1000ff2c:	4798      	blx	r3
1000ff2e:	bd08      	pop	{r3, pc}
1000ff30:	10012207 	.word	0x10012207

1000ff34 <gapc_encrypt_cfm_handler>:
1000ff34:	b5f0      	push	{r4, r5, r6, r7, lr}
1000ff36:	2500      	movs	r5, #0
1000ff38:	b087      	sub	sp, #28
1000ff3a:	9304      	str	r3, [sp, #16]
1000ff3c:	ab0c      	add	r3, sp, #48	; 0x30
1000ff3e:	781b      	ldrb	r3, [r3, #0]
1000ff40:	1c17      	adds	r7, r2, #0
1000ff42:	4a15      	ldr	r2, [pc, #84]	; (1000ff98 <gapc_encrypt_cfm_handler+0x64>)
1000ff44:	1c06      	adds	r6, r0, #0
1000ff46:	9305      	str	r3, [sp, #20]
1000ff48:	9100      	str	r1, [sp, #0]
1000ff4a:	9002      	str	r0, [sp, #8]
1000ff4c:	1c29      	adds	r1, r5, #0
1000ff4e:	1c2b      	adds	r3, r5, #0
1000ff50:	9501      	str	r5, [sp, #4]
1000ff52:	1c10      	adds	r0, r2, #0
1000ff54:	4c11      	ldr	r4, [pc, #68]	; (1000ff9c <gapc_encrypt_cfm_handler+0x68>)
1000ff56:	47a0      	blx	r4
1000ff58:	2318      	movs	r3, #24
1000ff5a:	4c11      	ldr	r4, [pc, #68]	; (1000ffa0 <gapc_encrypt_cfm_handler+0x6c>)
1000ff5c:	9904      	ldr	r1, [sp, #16]
1000ff5e:	7023      	strb	r3, [r4, #0]
1000ff60:	3b0a      	subs	r3, #10
1000ff62:	7063      	strb	r3, [r4, #1]
1000ff64:	70a3      	strb	r3, [r4, #2]
1000ff66:	4b0f      	ldr	r3, [pc, #60]	; (1000ffa4 <gapc_encrypt_cfm_handler+0x70>)
1000ff68:	480f      	ldr	r0, [pc, #60]	; (1000ffa8 <gapc_encrypt_cfm_handler+0x74>)
1000ff6a:	881a      	ldrh	r2, [r3, #0]
1000ff6c:	881b      	ldrh	r3, [r3, #0]
1000ff6e:	7122      	strb	r2, [r4, #4]
1000ff70:	0a1b      	lsrs	r3, r3, #8
1000ff72:	7163      	strb	r3, [r4, #5]
1000ff74:	2210      	movs	r2, #16
1000ff76:	4b0d      	ldr	r3, [pc, #52]	; (1000ffac <gapc_encrypt_cfm_handler+0x78>)
1000ff78:	70e6      	strb	r6, [r4, #3]
1000ff7a:	7227      	strb	r7, [r4, #8]
1000ff7c:	4798      	blx	r3
1000ff7e:	466b      	mov	r3, sp
1000ff80:	7d1b      	ldrb	r3, [r3, #20]
1000ff82:	1c20      	adds	r0, r4, #0
1000ff84:	7663      	strb	r3, [r4, #25]
1000ff86:	2312      	movs	r3, #18
1000ff88:	211a      	movs	r1, #26
1000ff8a:	71a3      	strb	r3, [r4, #6]
1000ff8c:	4b08      	ldr	r3, [pc, #32]	; (1000ffb0 <gapc_encrypt_cfm_handler+0x7c>)
1000ff8e:	71e5      	strb	r5, [r4, #7]
1000ff90:	4798      	blx	r3
1000ff92:	b007      	add	sp, #28
1000ff94:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000ff96:	46c0      	nop			; (mov r8, r8)
1000ff98:	10017740 	.word	0x10017740
1000ff9c:	1000f931 	.word	0x1000f931
1000ffa0:	1001a574 	.word	0x1001a574
1000ffa4:	1001a204 	.word	0x1001a204
1000ffa8:	1001a57d 	.word	0x1001a57d
1000ffac:	10012207 	.word	0x10012207
1000ffb0:	1000f62d 	.word	0x1000f62d

1000ffb4 <gapc_encrypt_ind>:
1000ffb4:	780b      	ldrb	r3, [r1, #0]
1000ffb6:	0a00      	lsrs	r0, r0, #8
1000ffb8:	70d3      	strb	r3, [r2, #3]
1000ffba:	2300      	movs	r3, #0
1000ffbc:	8010      	strh	r0, [r2, #0]
1000ffbe:	7093      	strb	r3, [r2, #2]
1000ffc0:	4770      	bx	lr
	...

1000ffc4 <gapc_param_update_cfm_handler>:
1000ffc4:	b538      	push	{r3, r4, r5, lr}
1000ffc6:	2410      	movs	r4, #16
1000ffc8:	1c05      	adds	r5, r0, #0
1000ffca:	480e      	ldr	r0, [pc, #56]	; (10010004 <gapc_param_update_cfm_handler+0x40>)
1000ffcc:	7004      	strb	r4, [r0, #0]
1000ffce:	3c02      	subs	r4, #2
1000ffd0:	7044      	strb	r4, [r0, #1]
1000ffd2:	7084      	strb	r4, [r0, #2]
1000ffd4:	4c0c      	ldr	r4, [pc, #48]	; (10010008 <gapc_param_update_cfm_handler+0x44>)
1000ffd6:	70c5      	strb	r5, [r0, #3]
1000ffd8:	8825      	ldrh	r5, [r4, #0]
1000ffda:	8824      	ldrh	r4, [r4, #0]
1000ffdc:	72c3      	strb	r3, [r0, #11]
1000ffde:	0a1b      	lsrs	r3, r3, #8
1000ffe0:	0a24      	lsrs	r4, r4, #8
1000ffe2:	7303      	strb	r3, [r0, #12]
1000ffe4:	2305      	movs	r3, #5
1000ffe6:	7144      	strb	r4, [r0, #5]
1000ffe8:	2400      	movs	r4, #0
1000ffea:	7201      	strb	r1, [r0, #8]
1000ffec:	7242      	strb	r2, [r0, #9]
1000ffee:	7183      	strb	r3, [r0, #6]
1000fff0:	0a12      	lsrs	r2, r2, #8
1000fff2:	210d      	movs	r1, #13
1000fff4:	4b05      	ldr	r3, [pc, #20]	; (1001000c <gapc_param_update_cfm_handler+0x48>)
1000fff6:	7105      	strb	r5, [r0, #4]
1000fff8:	7282      	strb	r2, [r0, #10]
1000fffa:	71c4      	strb	r4, [r0, #7]
1000fffc:	4798      	blx	r3
1000fffe:	1c20      	adds	r0, r4, #0
10010000:	bd38      	pop	{r3, r4, r5, pc}
10010002:	46c0      	nop			; (mov r8, r8)
10010004:	1001a574 	.word	0x1001a574
10010008:	1001a204 	.word	0x1001a204
1001000c:	1000f62d 	.word	0x1000f62d

10010010 <gapc_param_updated_ind>:
10010010:	2300      	movs	r3, #0
10010012:	0a00      	lsrs	r0, r0, #8
10010014:	8010      	strh	r0, [r2, #0]
10010016:	7093      	strb	r3, [r2, #2]
10010018:	784b      	ldrb	r3, [r1, #1]
1001001a:	7808      	ldrb	r0, [r1, #0]
1001001c:	021b      	lsls	r3, r3, #8
1001001e:	4303      	orrs	r3, r0
10010020:	8093      	strh	r3, [r2, #4]
10010022:	78cb      	ldrb	r3, [r1, #3]
10010024:	7888      	ldrb	r0, [r1, #2]
10010026:	021b      	lsls	r3, r3, #8
10010028:	4303      	orrs	r3, r0
1001002a:	80d3      	strh	r3, [r2, #6]
1001002c:	794b      	ldrb	r3, [r1, #5]
1001002e:	7909      	ldrb	r1, [r1, #4]
10010030:	021b      	lsls	r3, r3, #8
10010032:	430b      	orrs	r3, r1
10010034:	2007      	movs	r0, #7
10010036:	8113      	strh	r3, [r2, #8]
10010038:	4770      	bx	lr

1001003a <gapc_param_updated_req_ind>:
1001003a:	0a00      	lsrs	r0, r0, #8
1001003c:	8010      	strh	r0, [r2, #0]
1001003e:	784b      	ldrb	r3, [r1, #1]
10010040:	7808      	ldrb	r0, [r1, #0]
10010042:	021b      	lsls	r3, r3, #8
10010044:	4303      	orrs	r3, r0
10010046:	8053      	strh	r3, [r2, #2]
10010048:	78cb      	ldrb	r3, [r1, #3]
1001004a:	7888      	ldrb	r0, [r1, #2]
1001004c:	021b      	lsls	r3, r3, #8
1001004e:	4303      	orrs	r3, r0
10010050:	8093      	strh	r3, [r2, #4]
10010052:	794b      	ldrb	r3, [r1, #5]
10010054:	7908      	ldrb	r0, [r1, #4]
10010056:	021b      	lsls	r3, r3, #8
10010058:	4303      	orrs	r3, r0
1001005a:	80d3      	strh	r3, [r2, #6]
1001005c:	79cb      	ldrb	r3, [r1, #7]
1001005e:	7989      	ldrb	r1, [r1, #6]
10010060:	021b      	lsls	r3, r3, #8
10010062:	430b      	orrs	r3, r1
10010064:	2008      	movs	r0, #8
10010066:	8113      	strh	r3, [r2, #8]
10010068:	4770      	bx	lr
	...

1001006c <gapc_dev_info_req_ind_handler>:
1001006c:	b508      	push	{r3, lr}
1001006e:	1c0b      	adds	r3, r1, #0
10010070:	0a01      	lsrs	r1, r0, #8
10010072:	8011      	strh	r1, [r2, #0]
10010074:	7818      	ldrb	r0, [r3, #0]
10010076:	7090      	strb	r0, [r2, #2]
10010078:	2800      	cmp	r0, #0
1001007a:	d104      	bne.n	10010086 <gapc_dev_info_req_ind_handler+0x1a>
1001007c:	4b03      	ldr	r3, [pc, #12]	; (1001008c <gapc_dev_info_req_ind_handler+0x20>)
1001007e:	33aa      	adds	r3, #170	; 0xaa
10010080:	881b      	ldrh	r3, [r3, #0]
10010082:	2b00      	cmp	r3, #0
10010084:	d001      	beq.n	1001008a <gapc_dev_info_req_ind_handler+0x1e>
10010086:	4b02      	ldr	r3, [pc, #8]	; (10010090 <gapc_dev_info_req_ind_handler+0x24>)
10010088:	4798      	blx	r3
1001008a:	bd08      	pop	{r3, pc}
1001008c:	1001a296 	.word	0x1001a296
10010090:	1000f73d 	.word	0x1000f73d

10010094 <gapc_sec_req_ind>:
10010094:	0a00      	lsrs	r0, r0, #8
10010096:	8010      	strh	r0, [r2, #0]
10010098:	7809      	ldrb	r1, [r1, #0]
1001009a:	2301      	movs	r3, #1
1001009c:	1c08      	adds	r0, r1, #0
1001009e:	0889      	lsrs	r1, r1, #2
100100a0:	4018      	ands	r0, r3
100100a2:	400b      	ands	r3, r1
100100a4:	70d0      	strb	r0, [r2, #3]
100100a6:	7113      	strb	r3, [r2, #4]
100100a8:	4770      	bx	lr

100100aa <gapc_sign_counter_ind_handler>:
100100aa:	0a00      	lsrs	r0, r0, #8
100100ac:	8010      	strh	r0, [r2, #0]
100100ae:	784b      	ldrb	r3, [r1, #1]
100100b0:	0218      	lsls	r0, r3, #8
100100b2:	788b      	ldrb	r3, [r1, #2]
100100b4:	041b      	lsls	r3, r3, #16
100100b6:	4303      	orrs	r3, r0
100100b8:	7808      	ldrb	r0, [r1, #0]
100100ba:	4303      	orrs	r3, r0
100100bc:	78c8      	ldrb	r0, [r1, #3]
100100be:	0600      	lsls	r0, r0, #24
100100c0:	4303      	orrs	r3, r0
100100c2:	6053      	str	r3, [r2, #4]
100100c4:	794b      	ldrb	r3, [r1, #5]
100100c6:	0218      	lsls	r0, r3, #8
100100c8:	798b      	ldrb	r3, [r1, #6]
100100ca:	041b      	lsls	r3, r3, #16
100100cc:	4303      	orrs	r3, r0
100100ce:	7908      	ldrb	r0, [r1, #4]
100100d0:	79c9      	ldrb	r1, [r1, #7]
100100d2:	4303      	orrs	r3, r0
100100d4:	0609      	lsls	r1, r1, #24
100100d6:	430b      	orrs	r3, r1
100100d8:	2000      	movs	r0, #0
100100da:	6093      	str	r3, [r2, #8]
100100dc:	4770      	bx	lr
	...

100100e0 <gapc_peer_att_info_ind_handler>:
100100e0:	b510      	push	{r4, lr}
100100e2:	0a00      	lsrs	r0, r0, #8
100100e4:	8010      	strh	r0, [r2, #0]
100100e6:	7808      	ldrb	r0, [r1, #0]
100100e8:	7090      	strb	r0, [r2, #2]
100100ea:	788b      	ldrb	r3, [r1, #2]
100100ec:	784c      	ldrb	r4, [r1, #1]
100100ee:	021b      	lsls	r3, r3, #8
100100f0:	4323      	orrs	r3, r4
100100f2:	8093      	strh	r3, [r2, #4]
100100f4:	2801      	cmp	r0, #1
100100f6:	d027      	beq.n	10010148 <gapc_peer_att_info_ind_handler+0x68>
100100f8:	2800      	cmp	r0, #0
100100fa:	d017      	beq.n	1001012c <gapc_peer_att_info_ind_handler+0x4c>
100100fc:	2802      	cmp	r0, #2
100100fe:	d12a      	bne.n	10010156 <gapc_peer_att_info_ind_handler+0x76>
10010100:	790b      	ldrb	r3, [r1, #4]
10010102:	78c8      	ldrb	r0, [r1, #3]
10010104:	021b      	lsls	r3, r3, #8
10010106:	4303      	orrs	r3, r0
10010108:	8113      	strh	r3, [r2, #8]
1001010a:	798b      	ldrb	r3, [r1, #6]
1001010c:	7948      	ldrb	r0, [r1, #5]
1001010e:	021b      	lsls	r3, r3, #8
10010110:	4303      	orrs	r3, r0
10010112:	80d3      	strh	r3, [r2, #6]
10010114:	7a0b      	ldrb	r3, [r1, #8]
10010116:	79c8      	ldrb	r0, [r1, #7]
10010118:	021b      	lsls	r3, r3, #8
1001011a:	4303      	orrs	r3, r0
1001011c:	8193      	strh	r3, [r2, #12]
1001011e:	7a8b      	ldrb	r3, [r1, #10]
10010120:	7a49      	ldrb	r1, [r1, #9]
10010122:	021b      	lsls	r3, r3, #8
10010124:	430b      	orrs	r3, r1
10010126:	8153      	strh	r3, [r2, #10]
10010128:	2306      	movs	r3, #6
1001012a:	e013      	b.n	10010154 <gapc_peer_att_info_ind_handler+0x74>
1001012c:	1c14      	adds	r4, r2, #0
1001012e:	1c20      	adds	r0, r4, #0
10010130:	790a      	ldrb	r2, [r1, #4]
10010132:	78cb      	ldrb	r3, [r1, #3]
10010134:	0212      	lsls	r2, r2, #8
10010136:	431a      	orrs	r2, r3
10010138:	80e2      	strh	r2, [r4, #6]
1001013a:	4b07      	ldr	r3, [pc, #28]	; (10010158 <gapc_peer_att_info_ind_handler+0x78>)
1001013c:	3008      	adds	r0, #8
1001013e:	3105      	adds	r1, #5
10010140:	4798      	blx	r3
10010142:	2302      	movs	r3, #2
10010144:	70a3      	strb	r3, [r4, #2]
10010146:	e006      	b.n	10010156 <gapc_peer_att_info_ind_handler+0x76>
10010148:	790b      	ldrb	r3, [r1, #4]
1001014a:	78c9      	ldrb	r1, [r1, #3]
1001014c:	021b      	lsls	r3, r3, #8
1001014e:	430b      	orrs	r3, r1
10010150:	80d3      	strh	r3, [r2, #6]
10010152:	2305      	movs	r3, #5
10010154:	7093      	strb	r3, [r2, #2]
10010156:	bd10      	pop	{r4, pc}
10010158:	10012207 	.word	0x10012207

1001015c <gapc_con_channel_map_ind_handler>:
1001015c:	b508      	push	{r3, lr}
1001015e:	2300      	movs	r3, #0
10010160:	0a00      	lsrs	r0, r0, #8
10010162:	7013      	strb	r3, [r2, #0]
10010164:	8050      	strh	r0, [r2, #2]
10010166:	4b02      	ldr	r3, [pc, #8]	; (10010170 <gapc_con_channel_map_ind_handler+0x14>)
10010168:	1d10      	adds	r0, r2, #4
1001016a:	2205      	movs	r2, #5
1001016c:	4798      	blx	r3
1001016e:	bd08      	pop	{r3, pc}
10010170:	10012207 	.word	0x10012207

10010174 <gapc_lecb_connected>:
10010174:	7843      	ldrb	r3, [r0, #1]
10010176:	7802      	ldrb	r2, [r0, #0]
10010178:	021b      	lsls	r3, r3, #8
1001017a:	4313      	orrs	r3, r2
1001017c:	800b      	strh	r3, [r1, #0]
1001017e:	78c3      	ldrb	r3, [r0, #3]
10010180:	7882      	ldrb	r2, [r0, #2]
10010182:	021b      	lsls	r3, r3, #8
10010184:	4313      	orrs	r3, r2
10010186:	804b      	strh	r3, [r1, #2]
10010188:	7943      	ldrb	r3, [r0, #5]
1001018a:	7902      	ldrb	r2, [r0, #4]
1001018c:	021b      	lsls	r3, r3, #8
1001018e:	4313      	orrs	r3, r2
10010190:	808b      	strh	r3, [r1, #4]
10010192:	79c3      	ldrb	r3, [r0, #7]
10010194:	7982      	ldrb	r2, [r0, #6]
10010196:	021b      	lsls	r3, r3, #8
10010198:	4313      	orrs	r3, r2
1001019a:	80cb      	strh	r3, [r1, #6]
1001019c:	2300      	movs	r3, #0
1001019e:	720b      	strb	r3, [r1, #8]
100101a0:	4770      	bx	lr

100101a2 <gapc_lecb_disconnected>:
100101a2:	7843      	ldrb	r3, [r0, #1]
100101a4:	7802      	ldrb	r2, [r0, #0]
100101a6:	021b      	lsls	r3, r3, #8
100101a8:	4313      	orrs	r3, r2
100101aa:	800b      	strh	r3, [r1, #0]
100101ac:	78c3      	ldrb	r3, [r0, #3]
100101ae:	7882      	ldrb	r2, [r0, #2]
100101b0:	021b      	lsls	r3, r3, #8
100101b2:	4313      	orrs	r3, r2
100101b4:	804b      	strh	r3, [r1, #2]
100101b6:	4770      	bx	lr

100101b8 <gapc_lecb_connect_req_ind>:
100101b8:	7843      	ldrb	r3, [r0, #1]
100101ba:	7802      	ldrb	r2, [r0, #0]
100101bc:	021b      	lsls	r3, r3, #8
100101be:	4313      	orrs	r3, r2
100101c0:	800b      	strh	r3, [r1, #0]
100101c2:	78c3      	ldrb	r3, [r0, #3]
100101c4:	7882      	ldrb	r2, [r0, #2]
100101c6:	021b      	lsls	r3, r3, #8
100101c8:	4313      	orrs	r3, r2
100101ca:	804b      	strh	r3, [r1, #2]
100101cc:	7943      	ldrb	r3, [r0, #5]
100101ce:	7902      	ldrb	r2, [r0, #4]
100101d0:	021b      	lsls	r3, r3, #8
100101d2:	4313      	orrs	r3, r2
100101d4:	808b      	strh	r3, [r1, #4]
100101d6:	79c3      	ldrb	r3, [r0, #7]
100101d8:	7982      	ldrb	r2, [r0, #6]
100101da:	021b      	lsls	r3, r3, #8
100101dc:	4313      	orrs	r3, r2
100101de:	80cb      	strh	r3, [r1, #6]
100101e0:	4770      	bx	lr

100101e2 <gapc_lecb_add_credit_resp_handler>:
100101e2:	7843      	ldrb	r3, [r0, #1]
100101e4:	7802      	ldrb	r2, [r0, #0]
100101e6:	021b      	lsls	r3, r3, #8
100101e8:	4313      	orrs	r3, r2
100101ea:	800b      	strh	r3, [r1, #0]
100101ec:	78c3      	ldrb	r3, [r0, #3]
100101ee:	7882      	ldrb	r2, [r0, #2]
100101f0:	021b      	lsls	r3, r3, #8
100101f2:	4313      	orrs	r3, r2
100101f4:	804b      	strh	r3, [r1, #2]
100101f6:	7943      	ldrb	r3, [r0, #5]
100101f8:	7902      	ldrb	r2, [r0, #4]
100101fa:	021b      	lsls	r3, r3, #8
100101fc:	4313      	orrs	r3, r2
100101fe:	808b      	strh	r3, [r1, #4]
10010200:	4770      	bx	lr
	...

10010204 <gapm_reset_req_handler>:
10010204:	b573      	push	{r0, r1, r4, r5, r6, lr}
10010206:	466b      	mov	r3, sp
10010208:	4915      	ldr	r1, [pc, #84]	; (10010260 <gapm_reset_req_handler+0x5c>)
1001020a:	4816      	ldr	r0, [pc, #88]	; (10010264 <gapm_reset_req_handler+0x60>)
1001020c:	880c      	ldrh	r4, [r1, #0]
1001020e:	8809      	ldrh	r1, [r1, #0]
10010210:	1ddd      	adds	r5, r3, #7
10010212:	0a09      	lsrs	r1, r1, #8
10010214:	2300      	movs	r3, #0
10010216:	2202      	movs	r2, #2
10010218:	7141      	strb	r1, [r0, #5]
1001021a:	26d0      	movs	r6, #208	; 0xd0
1001021c:	2101      	movs	r1, #1
1001021e:	7104      	strb	r4, [r0, #4]
10010220:	4c11      	ldr	r4, [pc, #68]	; (10010268 <gapm_reset_req_handler+0x64>)
10010222:	702b      	strb	r3, [r5, #0]
10010224:	7002      	strb	r2, [r0, #0]
10010226:	70c3      	strb	r3, [r0, #3]
10010228:	320b      	adds	r2, #11
1001022a:	7201      	strb	r1, [r0, #8]
1001022c:	7181      	strb	r1, [r0, #6]
1001022e:	71c3      	strb	r3, [r0, #7]
10010230:	3108      	adds	r1, #8
10010232:	4b0e      	ldr	r3, [pc, #56]	; (1001026c <gapm_reset_req_handler+0x68>)
10010234:	0136      	lsls	r6, r6, #4
10010236:	7042      	strb	r2, [r0, #1]
10010238:	7082      	strb	r2, [r0, #2]
1001023a:	80a2      	strh	r2, [r4, #4]
1001023c:	8026      	strh	r6, [r4, #0]
1001023e:	4798      	blx	r3
10010240:	1c28      	adds	r0, r5, #0
10010242:	4b0b      	ldr	r3, [pc, #44]	; (10010270 <gapm_reset_req_handler+0x6c>)
10010244:	4798      	blx	r3
10010246:	782b      	ldrb	r3, [r5, #0]
10010248:	20e2      	movs	r0, #226	; 0xe2
1001024a:	2b00      	cmp	r3, #0
1001024c:	d106      	bne.n	1001025c <gapm_reset_req_handler+0x58>
1001024e:	68a3      	ldr	r3, [r4, #8]
10010250:	20e2      	movs	r0, #226	; 0xe2
10010252:	781a      	ldrb	r2, [r3, #0]
10010254:	785b      	ldrb	r3, [r3, #1]
10010256:	2a01      	cmp	r2, #1
10010258:	d100      	bne.n	1001025c <gapm_reset_req_handler+0x58>
1001025a:	1c18      	adds	r0, r3, #0
1001025c:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
1001025e:	46c0      	nop			; (mov r8, r8)
10010260:	1001a204 	.word	0x1001a204
10010264:	1001a574 	.word	0x1001a574
10010268:	1001a1f8 	.word	0x1001a1f8
1001026c:	1000f62d 	.word	0x1000f62d
10010270:	1000f691 	.word	0x1000f691

10010274 <gapm_set_dev_config_cmd_handler>:
10010274:	b5f0      	push	{r4, r5, r6, r7, lr}
10010276:	b089      	sub	sp, #36	; 0x24
10010278:	9303      	str	r3, [sp, #12]
1001027a:	ab0e      	add	r3, sp, #56	; 0x38
1001027c:	781b      	ldrb	r3, [r3, #0]
1001027e:	4c37      	ldr	r4, [pc, #220]	; (1001035c <gapm_set_dev_config_cmd_handler+0xe8>)
10010280:	9304      	str	r3, [sp, #16]
10010282:	ab0f      	add	r3, sp, #60	; 0x3c
10010284:	781b      	ldrb	r3, [r3, #0]
10010286:	270d      	movs	r7, #13
10010288:	9305      	str	r3, [sp, #20]
1001028a:	ab10      	add	r3, sp, #64	; 0x40
1001028c:	881b      	ldrh	r3, [r3, #0]
1001028e:	72a1      	strb	r1, [r4, #10]
10010290:	9300      	str	r3, [sp, #0]
10010292:	ab11      	add	r3, sp, #68	; 0x44
10010294:	881b      	ldrh	r3, [r3, #0]
10010296:	0a09      	lsrs	r1, r1, #8
10010298:	9301      	str	r3, [sp, #4]
1001029a:	ab12      	add	r3, sp, #72	; 0x48
1001029c:	881b      	ldrh	r3, [r3, #0]
1001029e:	7260      	strb	r0, [r4, #9]
100102a0:	9302      	str	r3, [sp, #8]
100102a2:	ab06      	add	r3, sp, #24
100102a4:	1dde      	adds	r6, r3, #7
100102a6:	2300      	movs	r3, #0
100102a8:	7033      	strb	r3, [r6, #0]
100102aa:	2304      	movs	r3, #4
100102ac:	7023      	strb	r3, [r4, #0]
100102ae:	2300      	movs	r3, #0
100102b0:	70e3      	strb	r3, [r4, #3]
100102b2:	4b2b      	ldr	r3, [pc, #172]	; (10010360 <gapm_set_dev_config_cmd_handler+0xec>)
100102b4:	72e1      	strb	r1, [r4, #11]
100102b6:	881d      	ldrh	r5, [r3, #0]
100102b8:	881b      	ldrh	r3, [r3, #0]
100102ba:	1c11      	adds	r1, r2, #0
100102bc:	0a1b      	lsrs	r3, r3, #8
100102be:	7163      	strb	r3, [r4, #5]
100102c0:	2303      	movs	r3, #3
100102c2:	7125      	strb	r5, [r4, #4]
100102c4:	2206      	movs	r2, #6
100102c6:	4d27      	ldr	r5, [pc, #156]	; (10010364 <gapm_set_dev_config_cmd_handler+0xf0>)
100102c8:	4827      	ldr	r0, [pc, #156]	; (10010368 <gapm_set_dev_config_cmd_handler+0xf4>)
100102ca:	7223      	strb	r3, [r4, #8]
100102cc:	7067      	strb	r7, [r4, #1]
100102ce:	70a7      	strb	r7, [r4, #2]
100102d0:	47a8      	blx	r5
100102d2:	9903      	ldr	r1, [sp, #12]
100102d4:	2210      	movs	r2, #16
100102d6:	4825      	ldr	r0, [pc, #148]	; (1001036c <gapm_set_dev_config_cmd_handler+0xf8>)
100102d8:	47a8      	blx	r5
100102da:	466a      	mov	r2, sp
100102dc:	7c12      	ldrb	r2, [r2, #16]
100102de:	1ce3      	adds	r3, r4, #3
100102e0:	77da      	strb	r2, [r3, #31]
100102e2:	466a      	mov	r2, sp
100102e4:	7d12      	ldrb	r2, [r2, #20]
100102e6:	1d23      	adds	r3, r4, #4
100102e8:	77da      	strb	r2, [r3, #31]
100102ea:	466a      	mov	r2, sp
100102ec:	7812      	ldrb	r2, [r2, #0]
100102ee:	1d63      	adds	r3, r4, #5
100102f0:	77da      	strb	r2, [r3, #31]
100102f2:	9b00      	ldr	r3, [sp, #0]
100102f4:	1da2      	adds	r2, r4, #6
100102f6:	0a1b      	lsrs	r3, r3, #8
100102f8:	77d3      	strb	r3, [r2, #31]
100102fa:	466a      	mov	r2, sp
100102fc:	7912      	ldrb	r2, [r2, #4]
100102fe:	1de3      	adds	r3, r4, #7
10010300:	77da      	strb	r2, [r3, #31]
10010302:	1c22      	adds	r2, r4, #0
10010304:	9b01      	ldr	r3, [sp, #4]
10010306:	3208      	adds	r2, #8
10010308:	0a1b      	lsrs	r3, r3, #8
1001030a:	77d3      	strb	r3, [r2, #31]
1001030c:	466a      	mov	r2, sp
1001030e:	1c23      	adds	r3, r4, #0
10010310:	7a12      	ldrb	r2, [r2, #8]
10010312:	3328      	adds	r3, #40	; 0x28
10010314:	701a      	strb	r2, [r3, #0]
10010316:	1c22      	adds	r2, r4, #0
10010318:	9b02      	ldr	r3, [sp, #8]
1001031a:	3229      	adds	r2, #41	; 0x29
1001031c:	0a1b      	lsrs	r3, r3, #8
1001031e:	7013      	strb	r3, [r2, #0]
10010320:	23d0      	movs	r3, #208	; 0xd0
10010322:	4d13      	ldr	r5, [pc, #76]	; (10010370 <gapm_set_dev_config_cmd_handler+0xfc>)
10010324:	011b      	lsls	r3, r3, #4
10010326:	802b      	strh	r3, [r5, #0]
10010328:	2322      	movs	r3, #34	; 0x22
1001032a:	71a3      	strb	r3, [r4, #6]
1001032c:	2300      	movs	r3, #0
1001032e:	212a      	movs	r1, #42	; 0x2a
10010330:	71e3      	strb	r3, [r4, #7]
10010332:	1c20      	adds	r0, r4, #0
10010334:	4b0f      	ldr	r3, [pc, #60]	; (10010374 <gapm_set_dev_config_cmd_handler+0x100>)
10010336:	80af      	strh	r7, [r5, #4]
10010338:	4798      	blx	r3
1001033a:	1c30      	adds	r0, r6, #0
1001033c:	4b0e      	ldr	r3, [pc, #56]	; (10010378 <gapm_set_dev_config_cmd_handler+0x104>)
1001033e:	4798      	blx	r3
10010340:	7833      	ldrb	r3, [r6, #0]
10010342:	20e2      	movs	r0, #226	; 0xe2
10010344:	2b00      	cmp	r3, #0
10010346:	d106      	bne.n	10010356 <gapm_set_dev_config_cmd_handler+0xe2>
10010348:	68ab      	ldr	r3, [r5, #8]
1001034a:	20e2      	movs	r0, #226	; 0xe2
1001034c:	781a      	ldrb	r2, [r3, #0]
1001034e:	785b      	ldrb	r3, [r3, #1]
10010350:	2a03      	cmp	r2, #3
10010352:	d100      	bne.n	10010356 <gapm_set_dev_config_cmd_handler+0xe2>
10010354:	1c18      	adds	r0, r3, #0
10010356:	b009      	add	sp, #36	; 0x24
10010358:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001035a:	46c0      	nop			; (mov r8, r8)
1001035c:	1001a574 	.word	0x1001a574
10010360:	1001a204 	.word	0x1001a204
10010364:	10012207 	.word	0x10012207
10010368:	1001a580 	.word	0x1001a580
1001036c:	1001a586 	.word	0x1001a586
10010370:	1001a1f8 	.word	0x1001a1f8
10010374:	1000f62d 	.word	0x1000f62d
10010378:	1000f691 	.word	0x1000f691

1001037c <gapm_get_dev_config_cmd_handler>:
1001037c:	4684      	mov	ip, r0
1001037e:	4663      	mov	r3, ip
10010380:	b5f0      	push	{r4, r5, r6, r7, lr}
10010382:	b085      	sub	sp, #20
10010384:	9100      	str	r1, [sp, #0]
10010386:	20cf      	movs	r0, #207	; 0xcf
10010388:	2b01      	cmp	r3, #1
1001038a:	d854      	bhi.n	10010436 <gapm_get_dev_config_cmd_handler+0xba>
1001038c:	2900      	cmp	r1, #0
1001038e:	d052      	beq.n	10010436 <gapm_get_dev_config_cmd_handler+0xba>
10010390:	2200      	movs	r2, #0
10010392:	492a      	ldr	r1, [pc, #168]	; (1001043c <gapm_get_dev_config_cmd_handler+0xc0>)
10010394:	ab02      	add	r3, sp, #8
10010396:	880c      	ldrh	r4, [r1, #0]
10010398:	8809      	ldrh	r1, [r1, #0]
1001039a:	1d9f      	adds	r7, r3, #6
1001039c:	719a      	strb	r2, [r3, #6]
1001039e:	4b28      	ldr	r3, [pc, #160]	; (10010440 <gapm_get_dev_config_cmd_handler+0xc4>)
100103a0:	0a09      	lsrs	r1, r1, #8
100103a2:	250d      	movs	r5, #13
100103a4:	2606      	movs	r6, #6
100103a6:	7159      	strb	r1, [r3, #5]
100103a8:	4661      	mov	r1, ip
100103aa:	701e      	strb	r6, [r3, #0]
100103ac:	705d      	strb	r5, [r3, #1]
100103ae:	709d      	strb	r5, [r3, #2]
100103b0:	70da      	strb	r2, [r3, #3]
100103b2:	711c      	strb	r4, [r3, #4]
100103b4:	2901      	cmp	r1, #1
100103b6:	d13e      	bne.n	10010436 <gapm_get_dev_config_cmd_handler+0xba>
100103b8:	21d0      	movs	r1, #208	; 0xd0
100103ba:	4c22      	ldr	r4, [pc, #136]	; (10010444 <gapm_get_dev_config_cmd_handler+0xc8>)
100103bc:	0109      	lsls	r1, r1, #4
100103be:	8061      	strh	r1, [r4, #2]
100103c0:	4921      	ldr	r1, [pc, #132]	; (10010448 <gapm_get_dev_config_cmd_handler+0xcc>)
100103c2:	71da      	strb	r2, [r3, #7]
100103c4:	8021      	strh	r1, [r4, #0]
100103c6:	4661      	mov	r1, ip
100103c8:	721e      	strb	r6, [r3, #8]
100103ca:	7199      	strb	r1, [r3, #6]
100103cc:	1c18      	adds	r0, r3, #0
100103ce:	2109      	movs	r1, #9
100103d0:	4b1e      	ldr	r3, [pc, #120]	; (1001044c <gapm_get_dev_config_cmd_handler+0xd0>)
100103d2:	80a5      	strh	r5, [r4, #4]
100103d4:	4798      	blx	r3
100103d6:	1c38      	adds	r0, r7, #0
100103d8:	4b1d      	ldr	r3, [pc, #116]	; (10010450 <gapm_get_dev_config_cmd_handler+0xd4>)
100103da:	4798      	blx	r3
100103dc:	783b      	ldrb	r3, [r7, #0]
100103de:	20e2      	movs	r0, #226	; 0xe2
100103e0:	9301      	str	r3, [sp, #4]
100103e2:	2b00      	cmp	r3, #0
100103e4:	d127      	bne.n	10010436 <gapm_get_dev_config_cmd_handler+0xba>
100103e6:	8821      	ldrh	r1, [r4, #0]
100103e8:	4a1a      	ldr	r2, [pc, #104]	; (10010454 <gapm_get_dev_config_cmd_handler+0xd8>)
100103ea:	68a7      	ldr	r7, [r4, #8]
100103ec:	3b01      	subs	r3, #1
100103ee:	4291      	cmp	r1, r2
100103f0:	d001      	beq.n	100103f6 <gapm_get_dev_config_cmd_handler+0x7a>
100103f2:	8023      	strh	r3, [r4, #0]
100103f4:	e01a      	b.n	1001042c <gapm_get_dev_config_cmd_handler+0xb0>
100103f6:	8063      	strh	r3, [r4, #2]
100103f8:	9b00      	ldr	r3, [sp, #0]
100103fa:	1c39      	adds	r1, r7, #0
100103fc:	1c58      	adds	r0, r3, #1
100103fe:	1c32      	adds	r2, r6, #0
10010400:	4b15      	ldr	r3, [pc, #84]	; (10010458 <gapm_get_dev_config_cmd_handler+0xdc>)
10010402:	4798      	blx	r3
10010404:	79bb      	ldrb	r3, [r7, #6]
10010406:	9a00      	ldr	r2, [sp, #0]
10010408:	7013      	strb	r3, [r2, #0]
1001040a:	23d0      	movs	r3, #208	; 0xd0
1001040c:	011b      	lsls	r3, r3, #4
1001040e:	8023      	strh	r3, [r4, #0]
10010410:	ab02      	add	r3, sp, #8
10010412:	80a5      	strh	r5, [r4, #4]
10010414:	1ddd      	adds	r5, r3, #7
10010416:	466b      	mov	r3, sp
10010418:	791b      	ldrb	r3, [r3, #4]
1001041a:	1c28      	adds	r0, r5, #0
1001041c:	702b      	strb	r3, [r5, #0]
1001041e:	4b0c      	ldr	r3, [pc, #48]	; (10010450 <gapm_get_dev_config_cmd_handler+0xd4>)
10010420:	4798      	blx	r3
10010422:	782b      	ldrb	r3, [r5, #0]
10010424:	20d0      	movs	r0, #208	; 0xd0
10010426:	2b00      	cmp	r3, #0
10010428:	d105      	bne.n	10010436 <gapm_get_dev_config_cmd_handler+0xba>
1001042a:	68a7      	ldr	r7, [r4, #8]
1001042c:	783b      	ldrb	r3, [r7, #0]
1001042e:	7878      	ldrb	r0, [r7, #1]
10010430:	2b06      	cmp	r3, #6
10010432:	d000      	beq.n	10010436 <gapm_get_dev_config_cmd_handler+0xba>
10010434:	20e2      	movs	r0, #226	; 0xe2
10010436:	b005      	add	sp, #20
10010438:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001043a:	46c0      	nop			; (mov r8, r8)
1001043c:	1001a204 	.word	0x1001a204
10010440:	1001a574 	.word	0x1001a574
10010444:	1001a1f8 	.word	0x1001a1f8
10010448:	00000d08 	.word	0x00000d08
1001044c:	1000f62d 	.word	0x1000f62d
10010450:	1000f691 	.word	0x1000f691
10010454:	0000ffff 	.word	0x0000ffff
10010458:	10012207 	.word	0x10012207

1001045c <gapm_cancel_cmd_handler>:
1001045c:	b537      	push	{r0, r1, r2, r4, r5, lr}
1001045e:	4916      	ldr	r1, [pc, #88]	; (100104b8 <gapm_cancel_cmd_handler+0x5c>)
10010460:	4816      	ldr	r0, [pc, #88]	; (100104bc <gapm_cancel_cmd_handler+0x60>)
10010462:	880c      	ldrh	r4, [r1, #0]
10010464:	8809      	ldrh	r1, [r1, #0]
10010466:	466b      	mov	r3, sp
10010468:	0a09      	lsrs	r1, r1, #8
1001046a:	7141      	strb	r1, [r0, #5]
1001046c:	2102      	movs	r1, #2
1001046e:	2203      	movs	r2, #3
10010470:	7201      	strb	r1, [r0, #8]
10010472:	21d0      	movs	r1, #208	; 0xd0
10010474:	1ddd      	adds	r5, r3, #7
10010476:	2300      	movs	r3, #0
10010478:	7104      	strb	r4, [r0, #4]
1001047a:	4c11      	ldr	r4, [pc, #68]	; (100104c0 <gapm_cancel_cmd_handler+0x64>)
1001047c:	7002      	strb	r2, [r0, #0]
1001047e:	0109      	lsls	r1, r1, #4
10010480:	320a      	adds	r2, #10
10010482:	702b      	strb	r3, [r5, #0]
10010484:	7042      	strb	r2, [r0, #1]
10010486:	7082      	strb	r2, [r0, #2]
10010488:	70c3      	strb	r3, [r0, #3]
1001048a:	8021      	strh	r1, [r4, #0]
1001048c:	80a2      	strh	r2, [r4, #4]
1001048e:	71c3      	strb	r3, [r0, #7]
10010490:	3a0c      	subs	r2, #12
10010492:	2109      	movs	r1, #9
10010494:	4b0b      	ldr	r3, [pc, #44]	; (100104c4 <gapm_cancel_cmd_handler+0x68>)
10010496:	7182      	strb	r2, [r0, #6]
10010498:	4798      	blx	r3
1001049a:	1c28      	adds	r0, r5, #0
1001049c:	4b0a      	ldr	r3, [pc, #40]	; (100104c8 <gapm_cancel_cmd_handler+0x6c>)
1001049e:	4798      	blx	r3
100104a0:	7828      	ldrb	r0, [r5, #0]
100104a2:	2800      	cmp	r0, #0
100104a4:	d001      	beq.n	100104aa <gapm_cancel_cmd_handler+0x4e>
100104a6:	20e2      	movs	r0, #226	; 0xe2
100104a8:	e004      	b.n	100104b4 <gapm_cancel_cmd_handler+0x58>
100104aa:	68a3      	ldr	r3, [r4, #8]
100104ac:	785b      	ldrb	r3, [r3, #1]
100104ae:	2b44      	cmp	r3, #68	; 0x44
100104b0:	d000      	beq.n	100104b4 <gapm_cancel_cmd_handler+0x58>
100104b2:	1c18      	adds	r0, r3, #0
100104b4:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
100104b6:	46c0      	nop			; (mov r8, r8)
100104b8:	1001a204 	.word	0x1001a204
100104bc:	1001a574 	.word	0x1001a574
100104c0:	1001a1f8 	.word	0x1001a1f8
100104c4:	1000f62d 	.word	0x1000f62d
100104c8:	1000f691 	.word	0x1000f691

100104cc <gapm_dev_bdaddr_ind_handler>:
100104cc:	b538      	push	{r3, r4, r5, lr}
100104ce:	1c05      	adds	r5, r0, #0
100104d0:	1c0c      	adds	r4, r1, #0
100104d2:	1c48      	adds	r0, r1, #1
100104d4:	2206      	movs	r2, #6
100104d6:	1c29      	adds	r1, r5, #0
100104d8:	4b02      	ldr	r3, [pc, #8]	; (100104e4 <gapm_dev_bdaddr_ind_handler+0x18>)
100104da:	4798      	blx	r3
100104dc:	79ab      	ldrb	r3, [r5, #6]
100104de:	2000      	movs	r0, #0
100104e0:	7023      	strb	r3, [r4, #0]
100104e2:	bd38      	pop	{r3, r4, r5, pc}
100104e4:	10012207 	.word	0x10012207

100104e8 <gapm_cmp_evt>:
100104e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100104ea:	7803      	ldrb	r3, [r0, #0]
100104ec:	7845      	ldrb	r5, [r0, #1]
100104ee:	3b0c      	subs	r3, #12
100104f0:	1e18      	subs	r0, r3, #0
100104f2:	280b      	cmp	r0, #11
100104f4:	d900      	bls.n	100104f8 <gapm_cmp_evt+0x10>
100104f6:	e08d      	b.n	10010614 <gapm_cmp_evt+0x12c>
100104f8:	1c0c      	adds	r4, r1, #0
100104fa:	f000 fdeb 	bl	100110d4 <__gnu_thumb1_case_uqi>
100104fe:	1952      	.short	0x1952
10010500:	068b1919 	.word	0x068b1919
10010504:	8b595906 	.word	0x8b595906
10010508:	0d8b      	.short	0x0d8b
1001050a:	2300      	movs	r3, #0
1001050c:	2d45      	cmp	r5, #69	; 0x45
1001050e:	d000      	beq.n	10010512 <gapm_cmp_evt+0x2a>
10010510:	1c2b      	adds	r3, r5, #0
10010512:	7023      	strb	r3, [r4, #0]
10010514:	2002      	movs	r0, #2
10010516:	e07e      	b.n	10010616 <gapm_cmp_evt+0x12e>
10010518:	203b      	movs	r0, #59	; 0x3b
1001051a:	2d00      	cmp	r5, #0
1001051c:	d100      	bne.n	10010520 <gapm_cmp_evt+0x38>
1001051e:	e07a      	b.n	10010616 <gapm_cmp_evt+0x12e>
10010520:	700d      	strb	r5, [r1, #0]
10010522:	1c48      	adds	r0, r1, #1
10010524:	2210      	movs	r2, #16
10010526:	2100      	movs	r1, #0
10010528:	4b3b      	ldr	r3, [pc, #236]	; (10010618 <gapm_cmp_evt+0x130>)
1001052a:	4798      	blx	r3
1001052c:	200f      	movs	r0, #15
1001052e:	e072      	b.n	10010616 <gapm_cmp_evt+0x12e>
10010530:	2d00      	cmp	r5, #0
10010532:	d134      	bne.n	1001059e <gapm_cmp_evt+0xb6>
10010534:	4b39      	ldr	r3, [pc, #228]	; (1001061c <gapm_cmp_evt+0x134>)
10010536:	4798      	blx	r3
10010538:	1e43      	subs	r3, r0, #1
1001053a:	b2db      	uxtb	r3, r3
1001053c:	1c28      	adds	r0, r5, #0
1001053e:	2b06      	cmp	r3, #6
10010540:	d869      	bhi.n	10010616 <gapm_cmp_evt+0x12e>
10010542:	466b      	mov	r3, sp
10010544:	4e36      	ldr	r6, [pc, #216]	; (10010620 <gapm_cmp_evt+0x138>)
10010546:	1dd9      	adds	r1, r3, #7
10010548:	8db0      	ldrh	r0, [r6, #44]	; 0x2c
1001054a:	4b36      	ldr	r3, [pc, #216]	; (10010624 <gapm_cmp_evt+0x13c>)
1001054c:	4798      	blx	r3
1001054e:	2312      	movs	r3, #18
10010550:	4358      	muls	r0, r3
10010552:	4935      	ldr	r1, [pc, #212]	; (10010628 <gapm_cmp_evt+0x140>)
10010554:	1809      	adds	r1, r1, r0
10010556:	1c0b      	adds	r3, r1, #0
10010558:	894a      	ldrh	r2, [r1, #10]
1001055a:	3308      	adds	r3, #8
1001055c:	8122      	strh	r2, [r4, #8]
1001055e:	784f      	ldrb	r7, [r1, #1]
10010560:	72a5      	strb	r5, [r4, #10]
10010562:	7027      	strb	r7, [r4, #0]
10010564:	898a      	ldrh	r2, [r1, #12]
10010566:	1c60      	adds	r0, r4, #1
10010568:	81a2      	strh	r2, [r4, #12]
1001056a:	88db      	ldrh	r3, [r3, #6]
1001056c:	3102      	adds	r1, #2
1001056e:	81e3      	strh	r3, [r4, #14]
10010570:	89cb      	ldrh	r3, [r1, #14]
10010572:	2206      	movs	r2, #6
10010574:	8223      	strh	r3, [r4, #16]
10010576:	4b2d      	ldr	r3, [pc, #180]	; (1001062c <gapm_cmp_evt+0x144>)
10010578:	4798      	blx	r3
1001057a:	2f00      	cmp	r7, #0
1001057c:	d00a      	beq.n	10010594 <gapm_cmp_evt+0xac>
1001057e:	79a3      	ldrb	r3, [r4, #6]
10010580:	223f      	movs	r2, #63	; 0x3f
10010582:	1c19      	adds	r1, r3, #0
10010584:	3501      	adds	r5, #1
10010586:	4391      	bics	r1, r2
10010588:	29c0      	cmp	r1, #192	; 0xc0
1001058a:	d003      	beq.n	10010594 <gapm_cmp_evt+0xac>
1001058c:	065b      	lsls	r3, r3, #25
1001058e:	0fdb      	lsrs	r3, r3, #31
10010590:	3502      	adds	r5, #2
10010592:	1aed      	subs	r5, r5, r3
10010594:	2301      	movs	r3, #1
10010596:	425b      	negs	r3, r3
10010598:	7025      	strb	r5, [r4, #0]
1001059a:	85b3      	strh	r3, [r6, #44]	; 0x2c
1001059c:	e038      	b.n	10010610 <gapm_cmp_evt+0x128>
1001059e:	700d      	strb	r5, [r1, #0]
100105a0:	e004      	b.n	100105ac <gapm_cmp_evt+0xc4>
100105a2:	2300      	movs	r3, #0
100105a4:	2d45      	cmp	r5, #69	; 0x45
100105a6:	d000      	beq.n	100105aa <gapm_cmp_evt+0xc2>
100105a8:	1c2b      	adds	r3, r5, #0
100105aa:	7023      	strb	r3, [r4, #0]
100105ac:	2003      	movs	r0, #3
100105ae:	e032      	b.n	10010616 <gapm_cmp_evt+0x12e>
100105b0:	4e1b      	ldr	r6, [pc, #108]	; (10010620 <gapm_cmp_evt+0x138>)
100105b2:	2100      	movs	r1, #0
100105b4:	8db0      	ldrh	r0, [r6, #44]	; 0x2c
100105b6:	4b1b      	ldr	r3, [pc, #108]	; (10010624 <gapm_cmp_evt+0x13c>)
100105b8:	4798      	blx	r3
100105ba:	2807      	cmp	r0, #7
100105bc:	d818      	bhi.n	100105f0 <gapm_cmp_evt+0x108>
100105be:	2301      	movs	r3, #1
100105c0:	425b      	negs	r3, r3
100105c2:	85b3      	strh	r3, [r6, #44]	; 0x2c
100105c4:	3313      	adds	r3, #19
100105c6:	4358      	muls	r0, r3
100105c8:	4917      	ldr	r1, [pc, #92]	; (10010628 <gapm_cmp_evt+0x140>)
100105ca:	1809      	adds	r1, r1, r0
100105cc:	1c0b      	adds	r3, r1, #0
100105ce:	894a      	ldrh	r2, [r1, #10]
100105d0:	3308      	adds	r3, #8
100105d2:	8122      	strh	r2, [r4, #8]
100105d4:	784a      	ldrb	r2, [r1, #1]
100105d6:	72a5      	strb	r5, [r4, #10]
100105d8:	7022      	strb	r2, [r4, #0]
100105da:	898a      	ldrh	r2, [r1, #12]
100105dc:	1c60      	adds	r0, r4, #1
100105de:	81a2      	strh	r2, [r4, #12]
100105e0:	88db      	ldrh	r3, [r3, #6]
100105e2:	3102      	adds	r1, #2
100105e4:	81e3      	strh	r3, [r4, #14]
100105e6:	89cb      	ldrh	r3, [r1, #14]
100105e8:	2206      	movs	r2, #6
100105ea:	8223      	strh	r3, [r4, #16]
100105ec:	4b0f      	ldr	r3, [pc, #60]	; (1001062c <gapm_cmp_evt+0x144>)
100105ee:	4798      	blx	r3
100105f0:	2200      	movs	r2, #0
100105f2:	7823      	ldrb	r3, [r4, #0]
100105f4:	4293      	cmp	r3, r2
100105f6:	d00a      	beq.n	1001060e <gapm_cmp_evt+0x126>
100105f8:	79a3      	ldrb	r3, [r4, #6]
100105fa:	323f      	adds	r2, #63	; 0x3f
100105fc:	1c19      	adds	r1, r3, #0
100105fe:	4391      	bics	r1, r2
10010600:	3a3e      	subs	r2, #62	; 0x3e
10010602:	29c0      	cmp	r1, #192	; 0xc0
10010604:	d003      	beq.n	1001060e <gapm_cmp_evt+0x126>
10010606:	065b      	lsls	r3, r3, #25
10010608:	0fdb      	lsrs	r3, r3, #31
1001060a:	3202      	adds	r2, #2
1001060c:	1ad2      	subs	r2, r2, r3
1001060e:	7022      	strb	r2, [r4, #0]
10010610:	2005      	movs	r0, #5
10010612:	e000      	b.n	10010616 <gapm_cmp_evt+0x12e>
10010614:	2000      	movs	r0, #0
10010616:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10010618:	10012219 	.word	0x10012219
1001061c:	1000f839 	.word	0x1000f839
10010620:	1001a296 	.word	0x1001a296
10010624:	1000f7fd 	.word	0x1000f7fd
10010628:	1001a206 	.word	0x1001a206
1001062c:	10012207 	.word	0x10012207

10010630 <gapm_start_adv_cmd_handler>:
10010630:	b5f0      	push	{r4, r5, r6, r7, lr}
10010632:	b089      	sub	sp, #36	; 0x24
10010634:	9303      	str	r3, [sp, #12]
10010636:	ab0e      	add	r3, sp, #56	; 0x38
10010638:	9102      	str	r1, [sp, #8]
1001063a:	cb02      	ldmia	r3!, {r1}
1001063c:	aa08      	add	r2, sp, #32
1001063e:	881b      	ldrh	r3, [r3, #0]
10010640:	4e3c      	ldr	r6, [pc, #240]	; (10010734 <gapm_start_adv_cmd_handler+0x104>)
10010642:	9300      	str	r3, [sp, #0]
10010644:	ab10      	add	r3, sp, #64	; 0x40
10010646:	881b      	ldrh	r3, [r3, #0]
10010648:	240d      	movs	r4, #13
1001064a:	469c      	mov	ip, r3
1001064c:	ab11      	add	r3, sp, #68	; 0x44
1001064e:	781b      	ldrb	r3, [r3, #0]
10010650:	9304      	str	r3, [sp, #16]
10010652:	ab12      	add	r3, sp, #72	; 0x48
10010654:	781b      	ldrb	r3, [r3, #0]
10010656:	9305      	str	r3, [sp, #20]
10010658:	ab13      	add	r3, sp, #76	; 0x4c
1001065a:	781b      	ldrb	r3, [r3, #0]
1001065c:	9306      	str	r3, [sp, #24]
1001065e:	ab14      	add	r3, sp, #80	; 0x50
10010660:	781b      	ldrb	r3, [r3, #0]
10010662:	9301      	str	r3, [sp, #4]
10010664:	2319      	movs	r3, #25
10010666:	189b      	adds	r3, r3, r2
10010668:	7fdd      	ldrb	r5, [r3, #31]
1001066a:	ab18      	add	r3, sp, #96	; 0x60
1001066c:	881f      	ldrh	r7, [r3, #0]
1001066e:	ab19      	add	r3, sp, #100	; 0x64
10010670:	781b      	ldrb	r3, [r3, #0]
10010672:	8832      	ldrh	r2, [r6, #0]
10010674:	9307      	str	r3, [sp, #28]
10010676:	4b30      	ldr	r3, [pc, #192]	; (10010738 <gapm_start_adv_cmd_handler+0x108>)
10010678:	8836      	ldrh	r6, [r6, #0]
1001067a:	711a      	strb	r2, [r3, #4]
1001067c:	466a      	mov	r2, sp
1001067e:	7a12      	ldrb	r2, [r2, #8]
10010680:	701c      	strb	r4, [r3, #0]
10010682:	705c      	strb	r4, [r3, #1]
10010684:	709c      	strb	r4, [r3, #2]
10010686:	725a      	strb	r2, [r3, #9]
10010688:	2400      	movs	r4, #0
1001068a:	466a      	mov	r2, sp
1001068c:	0a36      	lsrs	r6, r6, #8
1001068e:	70dc      	strb	r4, [r3, #3]
10010690:	7218      	strb	r0, [r3, #8]
10010692:	729c      	strb	r4, [r3, #10]
10010694:	715e      	strb	r6, [r3, #5]
10010696:	72dc      	strb	r4, [r3, #11]
10010698:	7812      	ldrb	r2, [r2, #0]
1001069a:	380e      	subs	r0, #14
1001069c:	731a      	strb	r2, [r3, #12]
1001069e:	9a00      	ldr	r2, [sp, #0]
100106a0:	0a14      	lsrs	r4, r2, #8
100106a2:	4662      	mov	r2, ip
100106a4:	739a      	strb	r2, [r3, #14]
100106a6:	4662      	mov	r2, ip
100106a8:	735c      	strb	r4, [r3, #13]
100106aa:	0a14      	lsrs	r4, r2, #8
100106ac:	466a      	mov	r2, sp
100106ae:	7c12      	ldrb	r2, [r2, #16]
100106b0:	73dc      	strb	r4, [r3, #15]
100106b2:	741a      	strb	r2, [r3, #16]
100106b4:	1c1c      	adds	r4, r3, #0
100106b6:	2801      	cmp	r0, #1
100106b8:	d809      	bhi.n	100106ce <gapm_start_adv_cmd_handler+0x9e>
100106ba:	2900      	cmp	r1, #0
100106bc:	d003      	beq.n	100106c6 <gapm_start_adv_cmd_handler+0x96>
100106be:	481f      	ldr	r0, [pc, #124]	; (1001073c <gapm_start_adv_cmd_handler+0x10c>)
100106c0:	2206      	movs	r2, #6
100106c2:	4b1f      	ldr	r3, [pc, #124]	; (10010740 <gapm_start_adv_cmd_handler+0x110>)
100106c4:	4798      	blx	r3
100106c6:	466b      	mov	r3, sp
100106c8:	7b1b      	ldrb	r3, [r3, #12]
100106ca:	75e3      	strb	r3, [r4, #23]
100106cc:	e014      	b.n	100106f8 <gapm_start_adv_cmd_handler+0xc8>
100106ce:	466b      	mov	r3, sp
100106d0:	7d1b      	ldrb	r3, [r3, #20]
100106d2:	9915      	ldr	r1, [sp, #84]	; 0x54
100106d4:	7463      	strb	r3, [r4, #17]
100106d6:	466b      	mov	r3, sp
100106d8:	7e1b      	ldrb	r3, [r3, #24]
100106da:	9a01      	ldr	r2, [sp, #4]
100106dc:	74a3      	strb	r3, [r4, #18]
100106de:	466b      	mov	r3, sp
100106e0:	791b      	ldrb	r3, [r3, #4]
100106e2:	4818      	ldr	r0, [pc, #96]	; (10010744 <gapm_start_adv_cmd_handler+0x114>)
100106e4:	4e16      	ldr	r6, [pc, #88]	; (10010740 <gapm_start_adv_cmd_handler+0x110>)
100106e6:	74e3      	strb	r3, [r4, #19]
100106e8:	47b0      	blx	r6
100106ea:	1c23      	adds	r3, r4, #0
100106ec:	4816      	ldr	r0, [pc, #88]	; (10010748 <gapm_start_adv_cmd_handler+0x118>)
100106ee:	3330      	adds	r3, #48	; 0x30
100106f0:	9917      	ldr	r1, [sp, #92]	; 0x5c
100106f2:	1c2a      	adds	r2, r5, #0
100106f4:	701d      	strb	r5, [r3, #0]
100106f6:	47b0      	blx	r6
100106f8:	1c22      	adds	r2, r4, #0
100106fa:	23a5      	movs	r3, #165	; 0xa5
100106fc:	3250      	adds	r2, #80	; 0x50
100106fe:	7013      	strb	r3, [r2, #0]
10010700:	1c22      	adds	r2, r4, #0
10010702:	3251      	adds	r2, #81	; 0x51
10010704:	7013      	strb	r3, [r2, #0]
10010706:	1c23      	adds	r3, r4, #0
10010708:	1c22      	adds	r2, r4, #0
1001070a:	3352      	adds	r3, #82	; 0x52
1001070c:	701f      	strb	r7, [r3, #0]
1001070e:	3253      	adds	r2, #83	; 0x53
10010710:	0a3b      	lsrs	r3, r7, #8
10010712:	7013      	strb	r3, [r2, #0]
10010714:	466a      	mov	r2, sp
10010716:	1c23      	adds	r3, r4, #0
10010718:	7f12      	ldrb	r2, [r2, #28]
1001071a:	3354      	adds	r3, #84	; 0x54
1001071c:	701a      	strb	r2, [r3, #0]
1001071e:	234d      	movs	r3, #77	; 0x4d
10010720:	2500      	movs	r5, #0
10010722:	71a3      	strb	r3, [r4, #6]
10010724:	1c20      	adds	r0, r4, #0
10010726:	2155      	movs	r1, #85	; 0x55
10010728:	4b08      	ldr	r3, [pc, #32]	; (1001074c <gapm_start_adv_cmd_handler+0x11c>)
1001072a:	71e5      	strb	r5, [r4, #7]
1001072c:	4798      	blx	r3
1001072e:	1c28      	adds	r0, r5, #0
10010730:	b009      	add	sp, #36	; 0x24
10010732:	bdf0      	pop	{r4, r5, r6, r7, pc}
10010734:	1001a204 	.word	0x1001a204
10010738:	1001a574 	.word	0x1001a574
1001073c:	1001a585 	.word	0x1001a585
10010740:	10012207 	.word	0x10012207
10010744:	1001a588 	.word	0x1001a588
10010748:	1001a5a5 	.word	0x1001a5a5
1001074c:	1000f62d 	.word	0x1000f62d

10010750 <get_gap_local_addr_type>:
10010750:	4b04      	ldr	r3, [pc, #16]	; (10010764 <get_gap_local_addr_type+0x14>)
10010752:	2001      	movs	r0, #1
10010754:	791b      	ldrb	r3, [r3, #4]
10010756:	2b02      	cmp	r3, #2
10010758:	d003      	beq.n	10010762 <get_gap_local_addr_type+0x12>
1001075a:	3b03      	subs	r3, #3
1001075c:	4258      	negs	r0, r3
1001075e:	4158      	adcs	r0, r3
10010760:	0040      	lsls	r0, r0, #1
10010762:	4770      	bx	lr
10010764:	1001a296 	.word	0x1001a296

10010768 <gapm_adv_report_evt_handler>:
10010768:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1001076a:	7843      	ldrb	r3, [r0, #1]
1001076c:	1c05      	adds	r5, r0, #0
1001076e:	9301      	str	r3, [sp, #4]
10010770:	466b      	mov	r3, sp
10010772:	1c0c      	adds	r4, r1, #0
10010774:	791b      	ldrb	r3, [r3, #4]
10010776:	7806      	ldrb	r6, [r0, #0]
10010778:	2206      	movs	r2, #6
1001077a:	704b      	strb	r3, [r1, #1]
1001077c:	1c88      	adds	r0, r1, #2
1001077e:	4f1b      	ldr	r7, [pc, #108]	; (100107ec <gapm_adv_report_evt_handler+0x84>)
10010780:	1ca9      	adds	r1, r5, #2
10010782:	47b8      	blx	r7
10010784:	1c20      	adds	r0, r4, #0
10010786:	1c29      	adds	r1, r5, #0
10010788:	7a2a      	ldrb	r2, [r5, #8]
1001078a:	3008      	adds	r0, #8
1001078c:	77c2      	strb	r2, [r0, #31]
1001078e:	3109      	adds	r1, #9
10010790:	3528      	adds	r5, #40	; 0x28
10010792:	47b8      	blx	r7
10010794:	782b      	ldrb	r3, [r5, #0]
10010796:	b25a      	sxtb	r2, r3
10010798:	2a00      	cmp	r2, #0
1001079a:	da01      	bge.n	100107a0 <gapm_adv_report_evt_handler+0x38>
1001079c:	3301      	adds	r3, #1
1001079e:	b2db      	uxtb	r3, r3
100107a0:	1c22      	adds	r2, r4, #0
100107a2:	3228      	adds	r2, #40	; 0x28
100107a4:	7013      	strb	r3, [r2, #0]
100107a6:	2200      	movs	r2, #0
100107a8:	9b01      	ldr	r3, [sp, #4]
100107aa:	4293      	cmp	r3, r2
100107ac:	d00a      	beq.n	100107c4 <gapm_adv_report_evt_handler+0x5c>
100107ae:	79e3      	ldrb	r3, [r4, #7]
100107b0:	323f      	adds	r2, #63	; 0x3f
100107b2:	1c19      	adds	r1, r3, #0
100107b4:	4391      	bics	r1, r2
100107b6:	3a3e      	subs	r2, #62	; 0x3e
100107b8:	29c0      	cmp	r1, #192	; 0xc0
100107ba:	d003      	beq.n	100107c4 <gapm_adv_report_evt_handler+0x5c>
100107bc:	065b      	lsls	r3, r3, #25
100107be:	0fdb      	lsrs	r3, r3, #31
100107c0:	3202      	adds	r2, #2
100107c2:	1ad2      	subs	r2, r2, r3
100107c4:	7062      	strb	r2, [r4, #1]
100107c6:	2e04      	cmp	r6, #4
100107c8:	d80f      	bhi.n	100107ea <gapm_adv_report_evt_handler+0x82>
100107ca:	1c30      	adds	r0, r6, #0
100107cc:	f000 fc82 	bl	100110d4 <__gnu_thumb1_case_uqi>
100107d0:	09070503 	.word	0x09070503
100107d4:	0b          	.byte	0x0b
100107d5:	00          	.byte	0x00
100107d6:	2300      	movs	r3, #0
100107d8:	e006      	b.n	100107e8 <gapm_adv_report_evt_handler+0x80>
100107da:	2301      	movs	r3, #1
100107dc:	e004      	b.n	100107e8 <gapm_adv_report_evt_handler+0x80>
100107de:	2302      	movs	r3, #2
100107e0:	e002      	b.n	100107e8 <gapm_adv_report_evt_handler+0x80>
100107e2:	2303      	movs	r3, #3
100107e4:	e000      	b.n	100107e8 <gapm_adv_report_evt_handler+0x80>
100107e6:	2305      	movs	r3, #5
100107e8:	7023      	strb	r3, [r4, #0]
100107ea:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
100107ec:	10012207 	.word	0x10012207

100107f0 <gapm_resolv_addr_cmd_handler>:
100107f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100107f2:	2314      	movs	r3, #20
100107f4:	4c12      	ldr	r4, [pc, #72]	; (10010840 <gapm_resolv_addr_cmd_handler+0x50>)
100107f6:	1c17      	adds	r7, r2, #0
100107f8:	7023      	strb	r3, [r4, #0]
100107fa:	3b07      	subs	r3, #7
100107fc:	7063      	strb	r3, [r4, #1]
100107fe:	70a3      	strb	r3, [r4, #2]
10010800:	2300      	movs	r3, #0
10010802:	70e3      	strb	r3, [r4, #3]
10010804:	4b0f      	ldr	r3, [pc, #60]	; (10010844 <gapm_resolv_addr_cmd_handler+0x54>)
10010806:	1c05      	adds	r5, r0, #0
10010808:	881a      	ldrh	r2, [r3, #0]
1001080a:	881b      	ldrh	r3, [r3, #0]
1001080c:	4e0e      	ldr	r6, [pc, #56]	; (10010848 <gapm_resolv_addr_cmd_handler+0x58>)
1001080e:	0a1b      	lsrs	r3, r3, #8
10010810:	7163      	strb	r3, [r4, #5]
10010812:	2317      	movs	r3, #23
10010814:	012d      	lsls	r5, r5, #4
10010816:	7122      	strb	r2, [r4, #4]
10010818:	7260      	strb	r0, [r4, #9]
1001081a:	2206      	movs	r2, #6
1001081c:	480b      	ldr	r0, [pc, #44]	; (1001084c <gapm_resolv_addr_cmd_handler+0x5c>)
1001081e:	7223      	strb	r3, [r4, #8]
10010820:	47b0      	blx	r6
10010822:	1c39      	adds	r1, r7, #0
10010824:	1c2a      	adds	r2, r5, #0
10010826:	480a      	ldr	r0, [pc, #40]	; (10010850 <gapm_resolv_addr_cmd_handler+0x60>)
10010828:	47b0      	blx	r6
1001082a:	1c29      	adds	r1, r5, #0
1001082c:	3110      	adds	r1, #16
1001082e:	1c0b      	adds	r3, r1, #0
10010830:	3b08      	subs	r3, #8
10010832:	71a3      	strb	r3, [r4, #6]
10010834:	121b      	asrs	r3, r3, #8
10010836:	71e3      	strb	r3, [r4, #7]
10010838:	1c20      	adds	r0, r4, #0
1001083a:	4b06      	ldr	r3, [pc, #24]	; (10010854 <gapm_resolv_addr_cmd_handler+0x64>)
1001083c:	4798      	blx	r3
1001083e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10010840:	1001a574 	.word	0x1001a574
10010844:	1001a204 	.word	0x1001a204
10010848:	10012207 	.word	0x10012207
1001084c:	1001a57e 	.word	0x1001a57e
10010850:	1001a584 	.word	0x1001a584
10010854:	1000f62d 	.word	0x1000f62d

10010858 <gapm_addr_solved_ind_handler>:
10010858:	b570      	push	{r4, r5, r6, lr}
1001085a:	1c04      	adds	r4, r0, #0
1001085c:	1c08      	adds	r0, r1, #0
1001085e:	1c0d      	adds	r5, r1, #0
10010860:	4e05      	ldr	r6, [pc, #20]	; (10010878 <gapm_addr_solved_ind_handler+0x20>)
10010862:	1c21      	adds	r1, r4, #0
10010864:	2206      	movs	r2, #6
10010866:	3011      	adds	r0, #17
10010868:	47b0      	blx	r6
1001086a:	1c68      	adds	r0, r5, #1
1001086c:	1da1      	adds	r1, r4, #6
1001086e:	2210      	movs	r2, #16
10010870:	47b0      	blx	r6
10010872:	2300      	movs	r3, #0
10010874:	702b      	strb	r3, [r5, #0]
10010876:	bd70      	pop	{r4, r5, r6, pc}
10010878:	10012207 	.word	0x10012207

1001087c <gapm_profile_added_ind_handler>:
1001087c:	b510      	push	{r4, lr}
1001087e:	7843      	ldrb	r3, [r0, #1]
10010880:	7902      	ldrb	r2, [r0, #4]
10010882:	7944      	ldrb	r4, [r0, #5]
10010884:	7800      	ldrb	r0, [r0, #0]
10010886:	021b      	lsls	r3, r3, #8
10010888:	4303      	orrs	r3, r0
1001088a:	2b1b      	cmp	r3, #27
1001088c:	d104      	bne.n	10010898 <gapm_profile_added_ind_handler+0x1c>
1001088e:	2300      	movs	r3, #0
10010890:	700b      	strb	r3, [r1, #0]
10010892:	0223      	lsls	r3, r4, #8
10010894:	4313      	orrs	r3, r2
10010896:	804b      	strh	r3, [r1, #2]
10010898:	203b      	movs	r0, #59	; 0x3b
1001089a:	bd10      	pop	{r4, pc}

1001089c <gattc_read_req_ind_parser>:
1001089c:	7843      	ldrb	r3, [r0, #1]
1001089e:	7802      	ldrb	r2, [r0, #0]
100108a0:	021b      	lsls	r3, r3, #8
100108a2:	4313      	orrs	r3, r2
100108a4:	804b      	strh	r3, [r1, #2]
100108a6:	4770      	bx	lr

100108a8 <gattc_write_req_ind_parser>:
100108a8:	b508      	push	{r3, lr}
100108aa:	1c13      	adds	r3, r2, #0
100108ac:	0a00      	lsrs	r0, r0, #8
100108ae:	8010      	strh	r0, [r2, #0]
100108b0:	784a      	ldrb	r2, [r1, #1]
100108b2:	7808      	ldrb	r0, [r1, #0]
100108b4:	0212      	lsls	r2, r2, #8
100108b6:	4302      	orrs	r2, r0
100108b8:	805a      	strh	r2, [r3, #2]
100108ba:	78ca      	ldrb	r2, [r1, #3]
100108bc:	7888      	ldrb	r0, [r1, #2]
100108be:	0212      	lsls	r2, r2, #8
100108c0:	4302      	orrs	r2, r0
100108c2:	809a      	strh	r2, [r3, #4]
100108c4:	794a      	ldrb	r2, [r1, #5]
100108c6:	7908      	ldrb	r0, [r1, #4]
100108c8:	0212      	lsls	r2, r2, #8
100108ca:	4302      	orrs	r2, r0
100108cc:	80da      	strh	r2, [r3, #6]
100108ce:	3308      	adds	r3, #8
100108d0:	1c18      	adds	r0, r3, #0
100108d2:	3106      	adds	r1, #6
100108d4:	4b01      	ldr	r3, [pc, #4]	; (100108dc <gattc_write_req_ind_parser+0x34>)
100108d6:	4798      	blx	r3
100108d8:	bd08      	pop	{r3, pc}
100108da:	46c0      	nop			; (mov r8, r8)
100108dc:	10012207 	.word	0x10012207

100108e0 <gattc_att_info_req_parser>:
100108e0:	7843      	ldrb	r3, [r0, #1]
100108e2:	7802      	ldrb	r2, [r0, #0]
100108e4:	021b      	lsls	r3, r3, #8
100108e6:	4313      	orrs	r3, r2
100108e8:	800b      	strh	r3, [r1, #0]
100108ea:	4770      	bx	lr

100108ec <gattc_read_cfm>:
100108ec:	b538      	push	{r3, r4, r5, lr}
100108ee:	2514      	movs	r5, #20
100108f0:	1c1c      	adds	r4, r3, #0
100108f2:	4b14      	ldr	r3, [pc, #80]	; (10010944 <gattc_read_cfm+0x58>)
100108f4:	70d9      	strb	r1, [r3, #3]
100108f6:	4914      	ldr	r1, [pc, #80]	; (10010948 <gattc_read_cfm+0x5c>)
100108f8:	701d      	strb	r5, [r3, #0]
100108fa:	3d08      	subs	r5, #8
100108fc:	705d      	strb	r5, [r3, #1]
100108fe:	709d      	strb	r5, [r3, #2]
10010900:	880d      	ldrh	r5, [r1, #0]
10010902:	8809      	ldrh	r1, [r1, #0]
10010904:	7218      	strb	r0, [r3, #8]
10010906:	0a09      	lsrs	r1, r1, #8
10010908:	7159      	strb	r1, [r3, #5]
1001090a:	0a00      	lsrs	r0, r0, #8
1001090c:	0a21      	lsrs	r1, r4, #8
1001090e:	711d      	strb	r5, [r3, #4]
10010910:	7258      	strb	r0, [r3, #9]
10010912:	729c      	strb	r4, [r3, #10]
10010914:	72d9      	strb	r1, [r3, #11]
10010916:	731a      	strb	r2, [r3, #12]
10010918:	1c1d      	adds	r5, r3, #0
1001091a:	2c00      	cmp	r4, #0
1001091c:	d007      	beq.n	1001092e <gattc_read_cfm+0x42>
1001091e:	9904      	ldr	r1, [sp, #16]
10010920:	1c22      	adds	r2, r4, #0
10010922:	480a      	ldr	r0, [pc, #40]	; (1001094c <gattc_read_cfm+0x60>)
10010924:	4b0a      	ldr	r3, [pc, #40]	; (10010950 <gattc_read_cfm+0x64>)
10010926:	340d      	adds	r4, #13
10010928:	4798      	blx	r3
1001092a:	b2a1      	uxth	r1, r4
1001092c:	e001      	b.n	10010932 <gattc_read_cfm+0x46>
1001092e:	210e      	movs	r1, #14
10010930:	735c      	strb	r4, [r3, #13]
10010932:	1c0b      	adds	r3, r1, #0
10010934:	3b08      	subs	r3, #8
10010936:	71ab      	strb	r3, [r5, #6]
10010938:	121b      	asrs	r3, r3, #8
1001093a:	71eb      	strb	r3, [r5, #7]
1001093c:	1c28      	adds	r0, r5, #0
1001093e:	4b05      	ldr	r3, [pc, #20]	; (10010954 <gattc_read_cfm+0x68>)
10010940:	4798      	blx	r3
10010942:	bd38      	pop	{r3, r4, r5, pc}
10010944:	1001a574 	.word	0x1001a574
10010948:	1001a204 	.word	0x1001a204
1001094c:	1001a581 	.word	0x1001a581
10010950:	10012207 	.word	0x10012207
10010954:	1000f62d 	.word	0x1000f62d

10010958 <gattc_write_cfm>:
10010958:	4b0d      	ldr	r3, [pc, #52]	; (10010990 <gattc_write_cfm+0x38>)
1001095a:	b510      	push	{r4, lr}
1001095c:	729a      	strb	r2, [r3, #10]
1001095e:	2203      	movs	r2, #3
10010960:	2416      	movs	r4, #22
10010962:	719a      	strb	r2, [r3, #6]
10010964:	2200      	movs	r2, #0
10010966:	70d9      	strb	r1, [r3, #3]
10010968:	490a      	ldr	r1, [pc, #40]	; (10010994 <gattc_write_cfm+0x3c>)
1001096a:	701c      	strb	r4, [r3, #0]
1001096c:	3c0a      	subs	r4, #10
1001096e:	705c      	strb	r4, [r3, #1]
10010970:	709c      	strb	r4, [r3, #2]
10010972:	880c      	ldrh	r4, [r1, #0]
10010974:	8809      	ldrh	r1, [r1, #0]
10010976:	7218      	strb	r0, [r3, #8]
10010978:	0a09      	lsrs	r1, r1, #8
1001097a:	0a00      	lsrs	r0, r0, #8
1001097c:	711c      	strb	r4, [r3, #4]
1001097e:	7159      	strb	r1, [r3, #5]
10010980:	7258      	strb	r0, [r3, #9]
10010982:	71da      	strb	r2, [r3, #7]
10010984:	1c18      	adds	r0, r3, #0
10010986:	210b      	movs	r1, #11
10010988:	4b03      	ldr	r3, [pc, #12]	; (10010998 <gattc_write_cfm+0x40>)
1001098a:	4798      	blx	r3
1001098c:	bd10      	pop	{r4, pc}
1001098e:	46c0      	nop			; (mov r8, r8)
10010990:	1001a574 	.word	0x1001a574
10010994:	1001a204 	.word	0x1001a204
10010998:	1000f62d 	.word	0x1000f62d

1001099c <gattc_att_info_cfm>:
1001099c:	b538      	push	{r3, r4, r5, lr}
1001099e:	4c0e      	ldr	r4, [pc, #56]	; (100109d8 <gattc_att_info_cfm+0x3c>)
100109a0:	2518      	movs	r5, #24
100109a2:	7323      	strb	r3, [r4, #12]
100109a4:	2305      	movs	r3, #5
100109a6:	71a3      	strb	r3, [r4, #6]
100109a8:	2300      	movs	r3, #0
100109aa:	70e1      	strb	r1, [r4, #3]
100109ac:	490b      	ldr	r1, [pc, #44]	; (100109dc <gattc_att_info_cfm+0x40>)
100109ae:	7025      	strb	r5, [r4, #0]
100109b0:	3d0c      	subs	r5, #12
100109b2:	7065      	strb	r5, [r4, #1]
100109b4:	70a5      	strb	r5, [r4, #2]
100109b6:	880d      	ldrh	r5, [r1, #0]
100109b8:	8809      	ldrh	r1, [r1, #0]
100109ba:	7220      	strb	r0, [r4, #8]
100109bc:	0a09      	lsrs	r1, r1, #8
100109be:	0a00      	lsrs	r0, r0, #8
100109c0:	7161      	strb	r1, [r4, #5]
100109c2:	7260      	strb	r0, [r4, #9]
100109c4:	72a2      	strb	r2, [r4, #10]
100109c6:	71e3      	strb	r3, [r4, #7]
100109c8:	0a12      	lsrs	r2, r2, #8
100109ca:	1c20      	adds	r0, r4, #0
100109cc:	210d      	movs	r1, #13
100109ce:	4b04      	ldr	r3, [pc, #16]	; (100109e0 <gattc_att_info_cfm+0x44>)
100109d0:	7125      	strb	r5, [r4, #4]
100109d2:	72e2      	strb	r2, [r4, #11]
100109d4:	4798      	blx	r3
100109d6:	bd38      	pop	{r3, r4, r5, pc}
100109d8:	1001a574 	.word	0x1001a574
100109dc:	1001a204 	.word	0x1001a204
100109e0:	1000f62d 	.word	0x1000f62d

100109e4 <gattc_send_evt_cmd_handler>:
100109e4:	b570      	push	{r4, r5, r6, lr}
100109e6:	2610      	movs	r6, #16
100109e8:	ac04      	add	r4, sp, #16
100109ea:	8825      	ldrh	r5, [r4, #0]
100109ec:	4c15      	ldr	r4, [pc, #84]	; (10010a44 <gattc_send_evt_cmd_handler+0x60>)
100109ee:	70e2      	strb	r2, [r4, #3]
100109f0:	4a15      	ldr	r2, [pc, #84]	; (10010a48 <gattc_send_evt_cmd_handler+0x64>)
100109f2:	7026      	strb	r6, [r4, #0]
100109f4:	3e04      	subs	r6, #4
100109f6:	7066      	strb	r6, [r4, #1]
100109f8:	70a6      	strb	r6, [r4, #2]
100109fa:	8816      	ldrh	r6, [r2, #0]
100109fc:	8812      	ldrh	r2, [r2, #0]
100109fe:	7220      	strb	r0, [r4, #8]
10010a00:	0a12      	lsrs	r2, r2, #8
10010a02:	7162      	strb	r2, [r4, #5]
10010a04:	4a11      	ldr	r2, [pc, #68]	; (10010a4c <gattc_send_evt_cmd_handler+0x68>)
10010a06:	7321      	strb	r1, [r4, #12]
10010a08:	8812      	ldrh	r2, [r2, #0]
10010a0a:	73a5      	strb	r5, [r4, #14]
10010a0c:	3201      	adds	r2, #1
10010a0e:	7262      	strb	r2, [r4, #9]
10010a10:	1212      	asrs	r2, r2, #8
10010a12:	72a2      	strb	r2, [r4, #10]
10010a14:	2200      	movs	r2, #0
10010a16:	72e2      	strb	r2, [r4, #11]
10010a18:	0a0a      	lsrs	r2, r1, #8
10010a1a:	7362      	strb	r2, [r4, #13]
10010a1c:	0a2a      	lsrs	r2, r5, #8
10010a1e:	73e2      	strb	r2, [r4, #15]
10010a20:	1c19      	adds	r1, r3, #0
10010a22:	1c2a      	adds	r2, r5, #0
10010a24:	4b0a      	ldr	r3, [pc, #40]	; (10010a50 <gattc_send_evt_cmd_handler+0x6c>)
10010a26:	3510      	adds	r5, #16
10010a28:	480a      	ldr	r0, [pc, #40]	; (10010a54 <gattc_send_evt_cmd_handler+0x70>)
10010a2a:	7126      	strb	r6, [r4, #4]
10010a2c:	4798      	blx	r3
10010a2e:	b2a9      	uxth	r1, r5
10010a30:	1c0b      	adds	r3, r1, #0
10010a32:	3b08      	subs	r3, #8
10010a34:	71a3      	strb	r3, [r4, #6]
10010a36:	121b      	asrs	r3, r3, #8
10010a38:	71e3      	strb	r3, [r4, #7]
10010a3a:	1c20      	adds	r0, r4, #0
10010a3c:	4b06      	ldr	r3, [pc, #24]	; (10010a58 <gattc_send_evt_cmd_handler+0x74>)
10010a3e:	4798      	blx	r3
10010a40:	bd70      	pop	{r4, r5, r6, pc}
10010a42:	46c0      	nop			; (mov r8, r8)
10010a44:	1001a574 	.word	0x1001a574
10010a48:	1001a204 	.word	0x1001a204
10010a4c:	10017798 	.word	0x10017798
10010a50:	10012207 	.word	0x10012207
10010a54:	1001a584 	.word	0x1001a584
10010a58:	1000f62d 	.word	0x1000f62d

10010a5c <gattc_disc_cmd_handler>:
10010a5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10010a5e:	2603      	movs	r6, #3
10010a60:	ac06      	add	r4, sp, #24
10010a62:	1c0d      	adds	r5, r1, #0
10010a64:	cc02      	ldmia	r4!, {r1}
10010a66:	8827      	ldrh	r7, [r4, #0]
10010a68:	4c1a      	ldr	r4, [pc, #104]	; (10010ad4 <gattc_disc_cmd_handler+0x78>)
10010a6a:	7026      	strb	r6, [r4, #0]
10010a6c:	3609      	adds	r6, #9
10010a6e:	7066      	strb	r6, [r4, #1]
10010a70:	70a6      	strb	r6, [r4, #2]
10010a72:	4e19      	ldr	r6, [pc, #100]	; (10010ad8 <gattc_disc_cmd_handler+0x7c>)
10010a74:	70e7      	strb	r7, [r4, #3]
10010a76:	8837      	ldrh	r7, [r6, #0]
10010a78:	8836      	ldrh	r6, [r6, #0]
10010a7a:	7127      	strb	r7, [r4, #4]
10010a7c:	0a36      	lsrs	r6, r6, #8
10010a7e:	7166      	strb	r6, [r4, #5]
10010a80:	7220      	strb	r0, [r4, #8]
10010a82:	2900      	cmp	r1, #0
10010a84:	d102      	bne.n	10010a8c <gattc_disc_cmd_handler+0x30>
10010a86:	2002      	movs	r0, #2
10010a88:	7260      	strb	r0, [r4, #9]
10010a8a:	e000      	b.n	10010a8e <gattc_disc_cmd_handler+0x32>
10010a8c:	7265      	strb	r5, [r4, #9]
10010a8e:	4e13      	ldr	r6, [pc, #76]	; (10010adc <gattc_disc_cmd_handler+0x80>)
10010a90:	7322      	strb	r2, [r4, #12]
10010a92:	8830      	ldrh	r0, [r6, #0]
10010a94:	0a12      	lsrs	r2, r2, #8
10010a96:	0a07      	lsrs	r7, r0, #8
10010a98:	72a0      	strb	r0, [r4, #10]
10010a9a:	73a3      	strb	r3, [r4, #14]
10010a9c:	3001      	adds	r0, #1
10010a9e:	0a1b      	lsrs	r3, r3, #8
10010aa0:	72e7      	strb	r7, [r4, #11]
10010aa2:	8030      	strh	r0, [r6, #0]
10010aa4:	7362      	strb	r2, [r4, #13]
10010aa6:	73e3      	strb	r3, [r4, #15]
10010aa8:	2900      	cmp	r1, #0
10010aaa:	d103      	bne.n	10010ab4 <gattc_disc_cmd_handler+0x58>
10010aac:	7421      	strb	r1, [r4, #16]
10010aae:	7461      	strb	r1, [r4, #17]
10010ab0:	3112      	adds	r1, #18
10010ab2:	e005      	b.n	10010ac0 <gattc_disc_cmd_handler+0x64>
10010ab4:	480a      	ldr	r0, [pc, #40]	; (10010ae0 <gattc_disc_cmd_handler+0x84>)
10010ab6:	1c2a      	adds	r2, r5, #0
10010ab8:	4b0a      	ldr	r3, [pc, #40]	; (10010ae4 <gattc_disc_cmd_handler+0x88>)
10010aba:	4798      	blx	r3
10010abc:	1c29      	adds	r1, r5, #0
10010abe:	3110      	adds	r1, #16
10010ac0:	1c0b      	adds	r3, r1, #0
10010ac2:	3b08      	subs	r3, #8
10010ac4:	71a3      	strb	r3, [r4, #6]
10010ac6:	121b      	asrs	r3, r3, #8
10010ac8:	71e3      	strb	r3, [r4, #7]
10010aca:	1c20      	adds	r0, r4, #0
10010acc:	4b06      	ldr	r3, [pc, #24]	; (10010ae8 <gattc_disc_cmd_handler+0x8c>)
10010ace:	4798      	blx	r3
10010ad0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10010ad2:	46c0      	nop			; (mov r8, r8)
10010ad4:	1001a574 	.word	0x1001a574
10010ad8:	1001a204 	.word	0x1001a204
10010adc:	10017796 	.word	0x10017796
10010ae0:	1001a584 	.word	0x1001a584
10010ae4:	10012207 	.word	0x10012207
10010ae8:	1000f62d 	.word	0x1000f62d

10010aec <gattc_write_cmd_handler>:
10010aec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10010aee:	260a      	movs	r6, #10
10010af0:	ac06      	add	r4, sp, #24
10010af2:	8825      	ldrh	r5, [r4, #0]
10010af4:	ac08      	add	r4, sp, #32
10010af6:	8827      	ldrh	r7, [r4, #0]
10010af8:	4c18      	ldr	r4, [pc, #96]	; (10010b5c <gattc_write_cmd_handler+0x70>)
10010afa:	73a3      	strb	r3, [r4, #14]
10010afc:	0a1b      	lsrs	r3, r3, #8
10010afe:	73e3      	strb	r3, [r4, #15]
10010b00:	0a2b      	lsrs	r3, r5, #8
10010b02:	7463      	strb	r3, [r4, #17]
10010b04:	2300      	movs	r3, #0
10010b06:	7026      	strb	r6, [r4, #0]
10010b08:	3602      	adds	r6, #2
10010b0a:	7066      	strb	r6, [r4, #1]
10010b0c:	70a6      	strb	r6, [r4, #2]
10010b0e:	4e14      	ldr	r6, [pc, #80]	; (10010b60 <gattc_write_cmd_handler+0x74>)
10010b10:	7220      	strb	r0, [r4, #8]
10010b12:	4814      	ldr	r0, [pc, #80]	; (10010b64 <gattc_write_cmd_handler+0x78>)
10010b14:	70e7      	strb	r7, [r4, #3]
10010b16:	8837      	ldrh	r7, [r6, #0]
10010b18:	8836      	ldrh	r6, [r6, #0]
10010b1a:	7261      	strb	r1, [r4, #9]
10010b1c:	8801      	ldrh	r1, [r0, #0]
10010b1e:	0a36      	lsrs	r6, r6, #8
10010b20:	7166      	strb	r6, [r4, #5]
10010b22:	72a1      	strb	r1, [r4, #10]
10010b24:	0a0e      	lsrs	r6, r1, #8
10010b26:	7322      	strb	r2, [r4, #12]
10010b28:	3101      	adds	r1, #1
10010b2a:	0a12      	lsrs	r2, r2, #8
10010b2c:	8001      	strh	r1, [r0, #0]
10010b2e:	7362      	strb	r2, [r4, #13]
10010b30:	7425      	strb	r5, [r4, #16]
10010b32:	1c2a      	adds	r2, r5, #0
10010b34:	74a3      	strb	r3, [r4, #18]
10010b36:	74e3      	strb	r3, [r4, #19]
10010b38:	9907      	ldr	r1, [sp, #28]
10010b3a:	3514      	adds	r5, #20
10010b3c:	4b0a      	ldr	r3, [pc, #40]	; (10010b68 <gattc_write_cmd_handler+0x7c>)
10010b3e:	480b      	ldr	r0, [pc, #44]	; (10010b6c <gattc_write_cmd_handler+0x80>)
10010b40:	7127      	strb	r7, [r4, #4]
10010b42:	72e6      	strb	r6, [r4, #11]
10010b44:	4798      	blx	r3
10010b46:	b2a9      	uxth	r1, r5
10010b48:	1c0b      	adds	r3, r1, #0
10010b4a:	3b08      	subs	r3, #8
10010b4c:	71a3      	strb	r3, [r4, #6]
10010b4e:	121b      	asrs	r3, r3, #8
10010b50:	71e3      	strb	r3, [r4, #7]
10010b52:	1c20      	adds	r0, r4, #0
10010b54:	4b06      	ldr	r3, [pc, #24]	; (10010b70 <gattc_write_cmd_handler+0x84>)
10010b56:	4798      	blx	r3
10010b58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10010b5a:	46c0      	nop			; (mov r8, r8)
10010b5c:	1001a574 	.word	0x1001a574
10010b60:	1001a204 	.word	0x1001a204
10010b64:	10017796 	.word	0x10017796
10010b68:	10012207 	.word	0x10012207
10010b6c:	1001a588 	.word	0x1001a588
10010b70:	1000f62d 	.word	0x1000f62d

10010b74 <gattc_event_cfm_handler>:
10010b74:	220e      	movs	r2, #14
10010b76:	b508      	push	{r3, lr}
10010b78:	4b0b      	ldr	r3, [pc, #44]	; (10010ba8 <gattc_event_cfm_handler+0x34>)
10010b7a:	701a      	strb	r2, [r3, #0]
10010b7c:	3a02      	subs	r2, #2
10010b7e:	705a      	strb	r2, [r3, #1]
10010b80:	709a      	strb	r2, [r3, #2]
10010b82:	4a0a      	ldr	r2, [pc, #40]	; (10010bac <gattc_event_cfm_handler+0x38>)
10010b84:	70d8      	strb	r0, [r3, #3]
10010b86:	8810      	ldrh	r0, [r2, #0]
10010b88:	8812      	ldrh	r2, [r2, #0]
10010b8a:	7219      	strb	r1, [r3, #8]
10010b8c:	0a12      	lsrs	r2, r2, #8
10010b8e:	715a      	strb	r2, [r3, #5]
10010b90:	2202      	movs	r2, #2
10010b92:	719a      	strb	r2, [r3, #6]
10010b94:	2200      	movs	r2, #0
10010b96:	0a09      	lsrs	r1, r1, #8
10010b98:	7118      	strb	r0, [r3, #4]
10010b9a:	7259      	strb	r1, [r3, #9]
10010b9c:	71da      	strb	r2, [r3, #7]
10010b9e:	1c18      	adds	r0, r3, #0
10010ba0:	210a      	movs	r1, #10
10010ba2:	4b03      	ldr	r3, [pc, #12]	; (10010bb0 <gattc_event_cfm_handler+0x3c>)
10010ba4:	4798      	blx	r3
10010ba6:	bd08      	pop	{r3, pc}
10010ba8:	1001a574 	.word	0x1001a574
10010bac:	1001a204 	.word	0x1001a204
10010bb0:	1000f62d 	.word	0x1000f62d

10010bb4 <gattc_disc_svc_ind_parser>:
10010bb4:	b570      	push	{r4, r5, r6, lr}
10010bb6:	1c15      	adds	r5, r2, #0
10010bb8:	0a00      	lsrs	r0, r0, #8
10010bba:	8010      	strh	r0, [r2, #0]
10010bbc:	784b      	ldrb	r3, [r1, #1]
10010bbe:	780a      	ldrb	r2, [r1, #0]
10010bc0:	021b      	lsls	r3, r3, #8
10010bc2:	4313      	orrs	r3, r2
10010bc4:	806b      	strh	r3, [r5, #2]
10010bc6:	78cb      	ldrb	r3, [r1, #3]
10010bc8:	788a      	ldrb	r2, [r1, #2]
10010bca:	021b      	lsls	r3, r3, #8
10010bcc:	4313      	orrs	r3, r2
10010bce:	80ab      	strh	r3, [r5, #4]
10010bd0:	790e      	ldrb	r6, [r1, #4]
10010bd2:	4b05      	ldr	r3, [pc, #20]	; (10010be8 <gattc_disc_svc_ind_parser+0x34>)
10010bd4:	1c30      	adds	r0, r6, #0
10010bd6:	1c0c      	adds	r4, r1, #0
10010bd8:	4798      	blx	r3
10010bda:	1c32      	adds	r2, r6, #0
10010bdc:	71a8      	strb	r0, [r5, #6]
10010bde:	1d61      	adds	r1, r4, #5
10010be0:	1de8      	adds	r0, r5, #7
10010be2:	4b02      	ldr	r3, [pc, #8]	; (10010bec <gattc_disc_svc_ind_parser+0x38>)
10010be4:	4798      	blx	r3
10010be6:	bd70      	pop	{r4, r5, r6, pc}
10010be8:	1000e879 	.word	0x1000e879
10010bec:	10012207 	.word	0x10012207

10010bf0 <gattc_disc_svc_incl_ind_parser>:
10010bf0:	b570      	push	{r4, r5, r6, lr}
10010bf2:	1c15      	adds	r5, r2, #0
10010bf4:	0a00      	lsrs	r0, r0, #8
10010bf6:	8010      	strh	r0, [r2, #0]
10010bf8:	784b      	ldrb	r3, [r1, #1]
10010bfa:	780a      	ldrb	r2, [r1, #0]
10010bfc:	021b      	lsls	r3, r3, #8
10010bfe:	4313      	orrs	r3, r2
10010c00:	806b      	strh	r3, [r5, #2]
10010c02:	78cb      	ldrb	r3, [r1, #3]
10010c04:	788a      	ldrb	r2, [r1, #2]
10010c06:	021b      	lsls	r3, r3, #8
10010c08:	4313      	orrs	r3, r2
10010c0a:	80ab      	strh	r3, [r5, #4]
10010c0c:	794b      	ldrb	r3, [r1, #5]
10010c0e:	790a      	ldrb	r2, [r1, #4]
10010c10:	021b      	lsls	r3, r3, #8
10010c12:	4313      	orrs	r3, r2
10010c14:	80eb      	strh	r3, [r5, #6]
10010c16:	798e      	ldrb	r6, [r1, #6]
10010c18:	4b05      	ldr	r3, [pc, #20]	; (10010c30 <gattc_disc_svc_incl_ind_parser+0x40>)
10010c1a:	1c30      	adds	r0, r6, #0
10010c1c:	1c0c      	adds	r4, r1, #0
10010c1e:	4798      	blx	r3
10010c20:	7228      	strb	r0, [r5, #8]
10010c22:	1c28      	adds	r0, r5, #0
10010c24:	1c32      	adds	r2, r6, #0
10010c26:	1de1      	adds	r1, r4, #7
10010c28:	4b02      	ldr	r3, [pc, #8]	; (10010c34 <gattc_disc_svc_incl_ind_parser+0x44>)
10010c2a:	3009      	adds	r0, #9
10010c2c:	4798      	blx	r3
10010c2e:	bd70      	pop	{r4, r5, r6, pc}
10010c30:	1000e879 	.word	0x1000e879
10010c34:	10012207 	.word	0x10012207

10010c38 <gattc_disc_char_ind_parser>:
10010c38:	b570      	push	{r4, r5, r6, lr}
10010c3a:	1c15      	adds	r5, r2, #0
10010c3c:	0a00      	lsrs	r0, r0, #8
10010c3e:	8010      	strh	r0, [r2, #0]
10010c40:	784b      	ldrb	r3, [r1, #1]
10010c42:	780a      	ldrb	r2, [r1, #0]
10010c44:	021b      	lsls	r3, r3, #8
10010c46:	4313      	orrs	r3, r2
10010c48:	806b      	strh	r3, [r5, #2]
10010c4a:	78cb      	ldrb	r3, [r1, #3]
10010c4c:	788a      	ldrb	r2, [r1, #2]
10010c4e:	021b      	lsls	r3, r3, #8
10010c50:	4313      	orrs	r3, r2
10010c52:	80ab      	strh	r3, [r5, #4]
10010c54:	790b      	ldrb	r3, [r1, #4]
10010c56:	1c0c      	adds	r4, r1, #0
10010c58:	71ab      	strb	r3, [r5, #6]
10010c5a:	794e      	ldrb	r6, [r1, #5]
10010c5c:	4b05      	ldr	r3, [pc, #20]	; (10010c74 <gattc_disc_char_ind_parser+0x3c>)
10010c5e:	1c30      	adds	r0, r6, #0
10010c60:	4798      	blx	r3
10010c62:	71e8      	strb	r0, [r5, #7]
10010c64:	1c28      	adds	r0, r5, #0
10010c66:	1c32      	adds	r2, r6, #0
10010c68:	1da1      	adds	r1, r4, #6
10010c6a:	4b03      	ldr	r3, [pc, #12]	; (10010c78 <gattc_disc_char_ind_parser+0x40>)
10010c6c:	3008      	adds	r0, #8
10010c6e:	4798      	blx	r3
10010c70:	bd70      	pop	{r4, r5, r6, pc}
10010c72:	46c0      	nop			; (mov r8, r8)
10010c74:	1000e879 	.word	0x1000e879
10010c78:	10012207 	.word	0x10012207

10010c7c <gattc_disc_char_desc_ind_parser>:
10010c7c:	b570      	push	{r4, r5, r6, lr}
10010c7e:	1c15      	adds	r5, r2, #0
10010c80:	0a00      	lsrs	r0, r0, #8
10010c82:	8010      	strh	r0, [r2, #0]
10010c84:	784b      	ldrb	r3, [r1, #1]
10010c86:	780a      	ldrb	r2, [r1, #0]
10010c88:	021b      	lsls	r3, r3, #8
10010c8a:	4313      	orrs	r3, r2
10010c8c:	806b      	strh	r3, [r5, #2]
10010c8e:	788e      	ldrb	r6, [r1, #2]
10010c90:	4b05      	ldr	r3, [pc, #20]	; (10010ca8 <gattc_disc_char_desc_ind_parser+0x2c>)
10010c92:	1c30      	adds	r0, r6, #0
10010c94:	1c0c      	adds	r4, r1, #0
10010c96:	4798      	blx	r3
10010c98:	1c32      	adds	r2, r6, #0
10010c9a:	7128      	strb	r0, [r5, #4]
10010c9c:	1ce1      	adds	r1, r4, #3
10010c9e:	1d68      	adds	r0, r5, #5
10010ca0:	4b02      	ldr	r3, [pc, #8]	; (10010cac <gattc_disc_char_desc_ind_parser+0x30>)
10010ca2:	4798      	blx	r3
10010ca4:	bd70      	pop	{r4, r5, r6, pc}
10010ca6:	46c0      	nop			; (mov r8, r8)
10010ca8:	1000e879 	.word	0x1000e879
10010cac:	10012207 	.word	0x10012207

10010cb0 <gattc_event_ind_and_notification_parser>:
10010cb0:	b510      	push	{r4, lr}
10010cb2:	780c      	ldrb	r4, [r1, #0]
10010cb4:	1c13      	adds	r3, r2, #0
10010cb6:	2c12      	cmp	r4, #18
10010cb8:	d10e      	bne.n	10010cd8 <gattc_event_ind_and_notification_parser+0x28>
10010cba:	0a00      	lsrs	r0, r0, #8
10010cbc:	8010      	strh	r0, [r2, #0]
10010cbe:	788a      	ldrb	r2, [r1, #2]
10010cc0:	709a      	strb	r2, [r3, #2]
10010cc2:	7948      	ldrb	r0, [r1, #5]
10010cc4:	790c      	ldrb	r4, [r1, #4]
10010cc6:	0200      	lsls	r0, r0, #8
10010cc8:	4320      	orrs	r0, r4
10010cca:	8098      	strh	r0, [r3, #4]
10010ccc:	3106      	adds	r1, #6
10010cce:	1d98      	adds	r0, r3, #6
10010cd0:	4b0b      	ldr	r3, [pc, #44]	; (10010d00 <gattc_event_ind_and_notification_parser+0x50>)
10010cd2:	4798      	blx	r3
10010cd4:	221b      	movs	r2, #27
10010cd6:	e010      	b.n	10010cfa <gattc_event_ind_and_notification_parser+0x4a>
10010cd8:	2200      	movs	r2, #0
10010cda:	2c13      	cmp	r4, #19
10010cdc:	d10d      	bne.n	10010cfa <gattc_event_ind_and_notification_parser+0x4a>
10010cde:	0a00      	lsrs	r0, r0, #8
10010ce0:	8018      	strh	r0, [r3, #0]
10010ce2:	788a      	ldrb	r2, [r1, #2]
10010ce4:	709a      	strb	r2, [r3, #2]
10010ce6:	7908      	ldrb	r0, [r1, #4]
10010ce8:	78cc      	ldrb	r4, [r1, #3]
10010cea:	0200      	lsls	r0, r0, #8
10010cec:	4320      	orrs	r0, r4
10010cee:	8098      	strh	r0, [r3, #4]
10010cf0:	3106      	adds	r1, #6
10010cf2:	1d98      	adds	r0, r3, #6
10010cf4:	4b02      	ldr	r3, [pc, #8]	; (10010d00 <gattc_event_ind_and_notification_parser+0x50>)
10010cf6:	4798      	blx	r3
10010cf8:	221c      	movs	r2, #28
10010cfa:	1c10      	adds	r0, r2, #0
10010cfc:	bd10      	pop	{r4, pc}
10010cfe:	46c0      	nop			; (mov r8, r8)
10010d00:	10012207 	.word	0x10012207

10010d04 <gattc_complete_evt_handler>:
10010d04:	b500      	push	{lr}
10010d06:	0a00      	lsrs	r0, r0, #8
10010d08:	8010      	strh	r0, [r2, #0]
10010d0a:	7808      	ldrb	r0, [r1, #0]
10010d0c:	7090      	strb	r0, [r2, #2]
10010d0e:	784b      	ldrb	r3, [r1, #1]
10010d10:	3801      	subs	r0, #1
10010d12:	70d3      	strb	r3, [r2, #3]
10010d14:	2813      	cmp	r0, #19
10010d16:	d82c      	bhi.n	10010d72 <gattc_complete_evt_handler+0x6e>
10010d18:	f000 f9dc 	bl	100110d4 <__gnu_thumb1_case_uqi>
10010d1c:	0a0a0a0c 	.word	0x0a0a0a0c
10010d20:	210a0a0a 	.word	0x210a0a0a
10010d24:	111f2121 	.word	0x111f2121
10010d28:	2b111111 	.word	0x2b111111
10010d2c:	2919132b 	.word	0x2919132b
10010d30:	2017      	movs	r0, #23
10010d32:	e01f      	b.n	10010d74 <gattc_complete_evt_handler+0x70>
10010d34:	2024      	movs	r0, #36	; 0x24
10010d36:	2b00      	cmp	r3, #0
10010d38:	d11c      	bne.n	10010d74 <gattc_complete_evt_handler+0x70>
10010d3a:	3017      	adds	r0, #23
10010d3c:	e01a      	b.n	10010d74 <gattc_complete_evt_handler+0x70>
10010d3e:	2025      	movs	r0, #37	; 0x25
10010d40:	e018      	b.n	10010d74 <gattc_complete_evt_handler+0x70>
10010d42:	4a0d      	ldr	r2, [pc, #52]	; (10010d78 <gattc_complete_evt_handler+0x74>)
10010d44:	201d      	movs	r0, #29
10010d46:	6813      	ldr	r3, [r2, #0]
10010d48:	3b01      	subs	r3, #1
10010d4a:	6013      	str	r3, [r2, #0]
10010d4c:	e012      	b.n	10010d74 <gattc_complete_evt_handler+0x70>
10010d4e:	4a0a      	ldr	r2, [pc, #40]	; (10010d78 <gattc_complete_evt_handler+0x74>)
10010d50:	201e      	movs	r0, #30
10010d52:	6813      	ldr	r3, [r2, #0]
10010d54:	3b01      	subs	r3, #1
10010d56:	6013      	str	r3, [r2, #0]
10010d58:	e00c      	b.n	10010d74 <gattc_complete_evt_handler+0x70>
10010d5a:	2019      	movs	r0, #25
10010d5c:	e00a      	b.n	10010d74 <gattc_complete_evt_handler+0x70>
10010d5e:	203b      	movs	r0, #59	; 0x3b
10010d60:	2b00      	cmp	r3, #0
10010d62:	d007      	beq.n	10010d74 <gattc_complete_evt_handler+0x70>
10010d64:	2182      	movs	r1, #130	; 0x82
10010d66:	0089      	lsls	r1, r1, #2
10010d68:	5453      	strb	r3, [r2, r1]
10010d6a:	3823      	subs	r0, #35	; 0x23
10010d6c:	e002      	b.n	10010d74 <gattc_complete_evt_handler+0x70>
10010d6e:	2021      	movs	r0, #33	; 0x21
10010d70:	e000      	b.n	10010d74 <gattc_complete_evt_handler+0x70>
10010d72:	2000      	movs	r0, #0
10010d74:	bd00      	pop	{pc}
10010d76:	46c0      	nop			; (mov r8, r8)
10010d78:	1001779c 	.word	0x1001779c

10010d7c <gattc_event_mtu_changed_ind_parser>:
10010d7c:	0a00      	lsrs	r0, r0, #8
10010d7e:	8010      	strh	r0, [r2, #0]
10010d80:	784b      	ldrb	r3, [r1, #1]
10010d82:	7809      	ldrb	r1, [r1, #0]
10010d84:	021b      	lsls	r3, r3, #8
10010d86:	430b      	orrs	r3, r1
10010d88:	8053      	strh	r3, [r2, #2]
10010d8a:	4770      	bx	lr

10010d8c <gattc_read_ind_parser>:
10010d8c:	0a00      	lsrs	r0, r0, #8
10010d8e:	b508      	push	{r3, lr}
10010d90:	8010      	strh	r0, [r2, #0]
10010d92:	1c13      	adds	r3, r2, #0
10010d94:	2282      	movs	r2, #130	; 0x82
10010d96:	2000      	movs	r0, #0
10010d98:	0092      	lsls	r2, r2, #2
10010d9a:	5498      	strb	r0, [r3, r2]
10010d9c:	784a      	ldrb	r2, [r1, #1]
10010d9e:	7808      	ldrb	r0, [r1, #0]
10010da0:	0212      	lsls	r2, r2, #8
10010da2:	4302      	orrs	r2, r0
10010da4:	805a      	strh	r2, [r3, #2]
10010da6:	78ca      	ldrb	r2, [r1, #3]
10010da8:	7888      	ldrb	r0, [r1, #2]
10010daa:	0212      	lsls	r2, r2, #8
10010dac:	4302      	orrs	r2, r0
10010dae:	80da      	strh	r2, [r3, #6]
10010db0:	794a      	ldrb	r2, [r1, #5]
10010db2:	7908      	ldrb	r0, [r1, #4]
10010db4:	0212      	lsls	r2, r2, #8
10010db6:	4302      	orrs	r2, r0
10010db8:	809a      	strh	r2, [r3, #4]
10010dba:	3308      	adds	r3, #8
10010dbc:	1c18      	adds	r0, r3, #0
10010dbe:	3106      	adds	r1, #6
10010dc0:	4b01      	ldr	r3, [pc, #4]	; (10010dc8 <gattc_read_ind_parser+0x3c>)
10010dc2:	4798      	blx	r3
10010dc4:	bd08      	pop	{r3, pc}
10010dc6:	46c0      	nop			; (mov r8, r8)
10010dc8:	10012207 	.word	0x10012207

10010dcc <gattc_svc_changed_cfg_ind_parser>:
10010dcc:	0a00      	lsrs	r0, r0, #8
10010dce:	8010      	strh	r0, [r2, #0]
10010dd0:	784b      	ldrb	r3, [r1, #1]
10010dd2:	7809      	ldrb	r1, [r1, #0]
10010dd4:	021b      	lsls	r3, r3, #8
10010dd6:	430b      	orrs	r3, r1
10010dd8:	8053      	strh	r3, [r2, #2]
10010dda:	4770      	bx	lr

10010ddc <init_gattc_task_module>:
10010ddc:	2300      	movs	r3, #0
10010dde:	4a02      	ldr	r2, [pc, #8]	; (10010de8 <init_gattc_task_module+0xc>)
10010de0:	8013      	strh	r3, [r2, #0]
10010de2:	4a02      	ldr	r2, [pc, #8]	; (10010dec <init_gattc_task_module+0x10>)
10010de4:	8013      	strh	r3, [r2, #0]
10010de6:	4770      	bx	lr
10010de8:	10017796 	.word	0x10017796
10010dec:	10017798 	.word	0x10017798

10010df0 <gattm_add_svc_req_handler>:
10010df0:	2200      	movs	r2, #0
10010df2:	210b      	movs	r1, #11
10010df4:	b5f0      	push	{r4, r5, r6, r7, lr}
10010df6:	1c04      	adds	r4, r0, #0
10010df8:	7943      	ldrb	r3, [r0, #5]
10010dfa:	b085      	sub	sp, #20
10010dfc:	9301      	str	r3, [sp, #4]
10010dfe:	ab02      	add	r3, sp, #8
10010e00:	71da      	strb	r2, [r3, #7]
10010e02:	4b37      	ldr	r3, [pc, #220]	; (10010ee0 <gattm_add_svc_req_handler+0xf0>)
10010e04:	7059      	strb	r1, [r3, #1]
10010e06:	7099      	strb	r1, [r3, #2]
10010e08:	4936      	ldr	r1, [pc, #216]	; (10010ee4 <gattm_add_svc_req_handler+0xf4>)
10010e0a:	701a      	strb	r2, [r3, #0]
10010e0c:	8808      	ldrh	r0, [r1, #0]
10010e0e:	8809      	ldrh	r1, [r1, #0]
10010e10:	70da      	strb	r2, [r3, #3]
10010e12:	0a09      	lsrs	r1, r1, #8
10010e14:	7118      	strb	r0, [r3, #4]
10010e16:	7159      	strb	r1, [r3, #5]
10010e18:	8821      	ldrh	r1, [r4, #0]
10010e1a:	7219      	strb	r1, [r3, #8]
10010e1c:	8821      	ldrh	r1, [r4, #0]
10010e1e:	0a09      	lsrs	r1, r1, #8
10010e20:	7259      	strb	r1, [r3, #9]
10010e22:	8861      	ldrh	r1, [r4, #2]
10010e24:	7299      	strb	r1, [r3, #10]
10010e26:	8861      	ldrh	r1, [r4, #2]
10010e28:	0a09      	lsrs	r1, r1, #8
10010e2a:	72d9      	strb	r1, [r3, #11]
10010e2c:	7921      	ldrb	r1, [r4, #4]
10010e2e:	7319      	strb	r1, [r3, #12]
10010e30:	4669      	mov	r1, sp
10010e32:	7909      	ldrb	r1, [r1, #4]
10010e34:	7359      	strb	r1, [r3, #13]
10010e36:	18a1      	adds	r1, r4, r2
10010e38:	7988      	ldrb	r0, [r1, #6]
10010e3a:	1899      	adds	r1, r3, r2
10010e3c:	3201      	adds	r2, #1
10010e3e:	7388      	strb	r0, [r1, #14]
10010e40:	2a10      	cmp	r2, #16
10010e42:	d1f8      	bne.n	10010e36 <gattm_add_svc_req_handler+0x46>
10010e44:	1c27      	adds	r7, r4, #0
10010e46:	2300      	movs	r3, #0
10010e48:	251e      	movs	r5, #30
10010e4a:	3716      	adds	r7, #22
10010e4c:	9300      	str	r3, [sp, #0]
10010e4e:	9b00      	ldr	r3, [sp, #0]
10010e50:	9a01      	ldr	r2, [sp, #4]
10010e52:	4e23      	ldr	r6, [pc, #140]	; (10010ee0 <gattm_add_svc_req_handler+0xf0>)
10010e54:	4293      	cmp	r3, r2
10010e56:	da21      	bge.n	10010e9c <gattm_add_svc_req_handler+0xac>
10010e58:	1c39      	adds	r1, r7, #0
10010e5a:	1970      	adds	r0, r6, r5
10010e5c:	2210      	movs	r2, #16
10010e5e:	4b22      	ldr	r3, [pc, #136]	; (10010ee8 <gattm_add_svc_req_handler+0xf8>)
10010e60:	4798      	blx	r3
10010e62:	1c2b      	adds	r3, r5, #0
10010e64:	8a3a      	ldrh	r2, [r7, #16]
10010e66:	3310      	adds	r3, #16
10010e68:	b29b      	uxth	r3, r3
10010e6a:	54f2      	strb	r2, [r6, r3]
10010e6c:	1c2b      	adds	r3, r5, #0
10010e6e:	8a3a      	ldrh	r2, [r7, #16]
10010e70:	3311      	adds	r3, #17
10010e72:	b29b      	uxth	r3, r3
10010e74:	0a12      	lsrs	r2, r2, #8
10010e76:	54f2      	strb	r2, [r6, r3]
10010e78:	1c2a      	adds	r2, r5, #0
10010e7a:	1c2b      	adds	r3, r5, #0
10010e7c:	8a79      	ldrh	r1, [r7, #18]
10010e7e:	3212      	adds	r2, #18
10010e80:	b292      	uxth	r2, r2
10010e82:	54b1      	strb	r1, [r6, r2]
10010e84:	8a7a      	ldrh	r2, [r7, #18]
10010e86:	3313      	adds	r3, #19
10010e88:	b29b      	uxth	r3, r3
10010e8a:	0a12      	lsrs	r2, r2, #8
10010e8c:	54f2      	strb	r2, [r6, r3]
10010e8e:	9b00      	ldr	r3, [sp, #0]
10010e90:	3514      	adds	r5, #20
10010e92:	3301      	adds	r3, #1
10010e94:	b2ad      	uxth	r5, r5
10010e96:	9300      	str	r3, [sp, #0]
10010e98:	3714      	adds	r7, #20
10010e9a:	e7d8      	b.n	10010e4e <gattm_add_svc_req_handler+0x5e>
10010e9c:	2114      	movs	r1, #20
10010e9e:	4d13      	ldr	r5, [pc, #76]	; (10010eec <gattm_add_svc_req_handler+0xfc>)
10010ea0:	4b13      	ldr	r3, [pc, #76]	; (10010ef0 <gattm_add_svc_req_handler+0x100>)
10010ea2:	4351      	muls	r1, r2
10010ea4:	802b      	strh	r3, [r5, #0]
10010ea6:	230b      	movs	r3, #11
10010ea8:	311e      	adds	r1, #30
10010eaa:	80ab      	strh	r3, [r5, #4]
10010eac:	1c0b      	adds	r3, r1, #0
10010eae:	3b08      	subs	r3, #8
10010eb0:	71b3      	strb	r3, [r6, #6]
10010eb2:	121b      	asrs	r3, r3, #8
10010eb4:	71f3      	strb	r3, [r6, #7]
10010eb6:	1c30      	adds	r0, r6, #0
10010eb8:	4b0e      	ldr	r3, [pc, #56]	; (10010ef4 <gattm_add_svc_req_handler+0x104>)
10010eba:	4798      	blx	r3
10010ebc:	ab02      	add	r3, sp, #8
10010ebe:	1dde      	adds	r6, r3, #7
10010ec0:	1c30      	adds	r0, r6, #0
10010ec2:	4b0d      	ldr	r3, [pc, #52]	; (10010ef8 <gattm_add_svc_req_handler+0x108>)
10010ec4:	4798      	blx	r3
10010ec6:	7833      	ldrb	r3, [r6, #0]
10010ec8:	20e2      	movs	r0, #226	; 0xe2
10010eca:	2b00      	cmp	r3, #0
10010ecc:	d106      	bne.n	10010edc <gattm_add_svc_req_handler+0xec>
10010ece:	68aa      	ldr	r2, [r5, #8]
10010ed0:	7853      	ldrb	r3, [r2, #1]
10010ed2:	7811      	ldrb	r1, [r2, #0]
10010ed4:	021b      	lsls	r3, r3, #8
10010ed6:	430b      	orrs	r3, r1
10010ed8:	8023      	strh	r3, [r4, #0]
10010eda:	7890      	ldrb	r0, [r2, #2]
10010edc:	b005      	add	sp, #20
10010ede:	bdf0      	pop	{r4, r5, r6, r7, pc}
10010ee0:	1001a574 	.word	0x1001a574
10010ee4:	1001a204 	.word	0x1001a204
10010ee8:	10012207 	.word	0x10012207
10010eec:	1001a1f8 	.word	0x1001a1f8
10010ef0:	00000b01 	.word	0x00000b01
10010ef4:	1000f62d 	.word	0x1000f62d
10010ef8:	1000f691 	.word	0x1000f691

10010efc <gattm_add_attribute_req_handler>:
10010efc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10010efe:	1c1f      	adds	r7, r3, #0
10010f00:	4b16      	ldr	r3, [pc, #88]	; (10010f5c <gattm_add_attribute_req_handler+0x60>)
10010f02:	9100      	str	r1, [sp, #0]
10010f04:	9201      	str	r2, [sp, #4]
10010f06:	1c05      	adds	r5, r0, #0
10010f08:	7946      	ldrb	r6, [r0, #5]
10010f0a:	6818      	ldr	r0, [r3, #0]
10010f0c:	2114      	movs	r1, #20
10010f0e:	4b14      	ldr	r3, [pc, #80]	; (10010f60 <gattm_add_attribute_req_handler+0x64>)
10010f10:	382a      	subs	r0, #42	; 0x2a
10010f12:	4798      	blx	r3
10010f14:	2311      	movs	r3, #17
10010f16:	4286      	cmp	r6, r0
10010f18:	d21e      	bcs.n	10010f58 <gattm_add_attribute_req_handler+0x5c>
10010f1a:	2414      	movs	r4, #20
10010f1c:	4366      	muls	r6, r4
10010f1e:	19a8      	adds	r0, r5, r6
10010f20:	2100      	movs	r1, #0
10010f22:	2210      	movs	r2, #16
10010f24:	4b0f      	ldr	r3, [pc, #60]	; (10010f64 <gattm_add_attribute_req_handler+0x68>)
10010f26:	3016      	adds	r0, #22
10010f28:	4798      	blx	r3
10010f2a:	7968      	ldrb	r0, [r5, #5]
10010f2c:	1c3a      	adds	r2, r7, #0
10010f2e:	4360      	muls	r0, r4
10010f30:	1828      	adds	r0, r5, r0
10010f32:	4b0d      	ldr	r3, [pc, #52]	; (10010f68 <gattm_add_attribute_req_handler+0x6c>)
10010f34:	3016      	adds	r0, #22
10010f36:	9908      	ldr	r1, [sp, #32]
10010f38:	4798      	blx	r3
10010f3a:	466a      	mov	r2, sp
10010f3c:	796b      	ldrb	r3, [r5, #5]
10010f3e:	8812      	ldrh	r2, [r2, #0]
10010f40:	435c      	muls	r4, r3
10010f42:	192c      	adds	r4, r5, r4
10010f44:	8522      	strh	r2, [r4, #40]	; 0x28
10010f46:	466a      	mov	r2, sp
10010f48:	8892      	ldrh	r2, [r2, #4]
10010f4a:	84e2      	strh	r2, [r4, #38]	; 0x26
10010f4c:	9a09      	ldr	r2, [sp, #36]	; 0x24
10010f4e:	8013      	strh	r3, [r2, #0]
10010f50:	796b      	ldrb	r3, [r5, #5]
10010f52:	3301      	adds	r3, #1
10010f54:	716b      	strb	r3, [r5, #5]
10010f56:	2300      	movs	r3, #0
10010f58:	1c18      	adds	r0, r3, #0
10010f5a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10010f5c:	1001770c 	.word	0x1001770c
10010f60:	100110e9 	.word	0x100110e9
10010f64:	10012219 	.word	0x10012219
10010f68:	10012207 	.word	0x10012207

10010f6c <gattm_att_set_value_req_handler>:
10010f6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10010f6e:	466b      	mov	r3, sp
10010f70:	1dde      	adds	r6, r3, #7
10010f72:	2300      	movs	r3, #0
10010f74:	1c0d      	adds	r5, r1, #0
10010f76:	210c      	movs	r1, #12
10010f78:	270b      	movs	r7, #11
10010f7a:	4c17      	ldr	r4, [pc, #92]	; (10010fd8 <gattm_att_set_value_req_handler+0x6c>)
10010f7c:	7033      	strb	r3, [r6, #0]
10010f7e:	70e3      	strb	r3, [r4, #3]
10010f80:	4b16      	ldr	r3, [pc, #88]	; (10010fdc <gattm_att_set_value_req_handler+0x70>)
10010f82:	7021      	strb	r1, [r4, #0]
10010f84:	8819      	ldrh	r1, [r3, #0]
10010f86:	881b      	ldrh	r3, [r3, #0]
10010f88:	7220      	strb	r0, [r4, #8]
10010f8a:	0a1b      	lsrs	r3, r3, #8
10010f8c:	7163      	strb	r3, [r4, #5]
10010f8e:	0a00      	lsrs	r0, r0, #8
10010f90:	0a2b      	lsrs	r3, r5, #8
10010f92:	7121      	strb	r1, [r4, #4]
10010f94:	7260      	strb	r0, [r4, #9]
10010f96:	1c11      	adds	r1, r2, #0
10010f98:	72a5      	strb	r5, [r4, #10]
10010f9a:	1c2a      	adds	r2, r5, #0
10010f9c:	72e3      	strb	r3, [r4, #11]
10010f9e:	350c      	adds	r5, #12
10010fa0:	4b0f      	ldr	r3, [pc, #60]	; (10010fe0 <gattm_att_set_value_req_handler+0x74>)
10010fa2:	4810      	ldr	r0, [pc, #64]	; (10010fe4 <gattm_att_set_value_req_handler+0x78>)
10010fa4:	7067      	strb	r7, [r4, #1]
10010fa6:	70a7      	strb	r7, [r4, #2]
10010fa8:	4798      	blx	r3
10010faa:	b2a9      	uxth	r1, r5
10010fac:	4b0e      	ldr	r3, [pc, #56]	; (10010fe8 <gattm_att_set_value_req_handler+0x7c>)
10010fae:	4d0f      	ldr	r5, [pc, #60]	; (10010fec <gattm_att_set_value_req_handler+0x80>)
10010fb0:	1c20      	adds	r0, r4, #0
10010fb2:	802b      	strh	r3, [r5, #0]
10010fb4:	1c0b      	adds	r3, r1, #0
10010fb6:	3b08      	subs	r3, #8
10010fb8:	71a3      	strb	r3, [r4, #6]
10010fba:	121b      	asrs	r3, r3, #8
10010fbc:	71e3      	strb	r3, [r4, #7]
10010fbe:	4b0c      	ldr	r3, [pc, #48]	; (10010ff0 <gattm_att_set_value_req_handler+0x84>)
10010fc0:	80af      	strh	r7, [r5, #4]
10010fc2:	4798      	blx	r3
10010fc4:	1c30      	adds	r0, r6, #0
10010fc6:	4b0b      	ldr	r3, [pc, #44]	; (10010ff4 <gattm_att_set_value_req_handler+0x88>)
10010fc8:	4798      	blx	r3
10010fca:	7833      	ldrb	r3, [r6, #0]
10010fcc:	20e2      	movs	r0, #226	; 0xe2
10010fce:	2b00      	cmp	r3, #0
10010fd0:	d101      	bne.n	10010fd6 <gattm_att_set_value_req_handler+0x6a>
10010fd2:	68ab      	ldr	r3, [r5, #8]
10010fd4:	7898      	ldrb	r0, [r3, #2]
10010fd6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10010fd8:	1001a574 	.word	0x1001a574
10010fdc:	1001a204 	.word	0x1001a204
10010fe0:	10012207 	.word	0x10012207
10010fe4:	1001a580 	.word	0x1001a580
10010fe8:	00000b0d 	.word	0x00000b0d
10010fec:	1001a1f8 	.word	0x1001a1f8
10010ff0:	1000f62d 	.word	0x1000f62d
10010ff4:	1000f691 	.word	0x1000f691

10010ff8 <gattm_att_get_value_req_handler>:
10010ff8:	b5f0      	push	{r4, r5, r6, r7, lr}
10010ffa:	b085      	sub	sp, #20
10010ffc:	9201      	str	r2, [sp, #4]
10010ffe:	220a      	movs	r2, #10
10011000:	1c04      	adds	r4, r0, #0
10011002:	481d      	ldr	r0, [pc, #116]	; (10011078 <gattm_att_get_value_req_handler+0x80>)
10011004:	ab02      	add	r3, sp, #8
10011006:	1dde      	adds	r6, r3, #7
10011008:	7002      	strb	r2, [r0, #0]
1001100a:	2300      	movs	r3, #0
1001100c:	220b      	movs	r2, #11
1001100e:	4d1b      	ldr	r5, [pc, #108]	; (1001107c <gattm_att_get_value_req_handler+0x84>)
10011010:	1c0f      	adds	r7, r1, #0
10011012:	8829      	ldrh	r1, [r5, #0]
10011014:	882d      	ldrh	r5, [r5, #0]
10011016:	7101      	strb	r1, [r0, #4]
10011018:	0a2d      	lsrs	r5, r5, #8
1001101a:	7145      	strb	r5, [r0, #5]
1001101c:	0a25      	lsrs	r5, r4, #8
1001101e:	7245      	strb	r5, [r0, #9]
10011020:	4917      	ldr	r1, [pc, #92]	; (10011080 <gattm_att_get_value_req_handler+0x88>)
10011022:	4d18      	ldr	r5, [pc, #96]	; (10011084 <gattm_att_get_value_req_handler+0x8c>)
10011024:	7033      	strb	r3, [r6, #0]
10011026:	7042      	strb	r2, [r0, #1]
10011028:	7082      	strb	r2, [r0, #2]
1001102a:	70c3      	strb	r3, [r0, #3]
1001102c:	8029      	strh	r1, [r5, #0]
1001102e:	80aa      	strh	r2, [r5, #4]
10011030:	71c3      	strb	r3, [r0, #7]
10011032:	3a09      	subs	r2, #9
10011034:	210a      	movs	r1, #10
10011036:	4b14      	ldr	r3, [pc, #80]	; (10011088 <gattm_att_get_value_req_handler+0x90>)
10011038:	7182      	strb	r2, [r0, #6]
1001103a:	7204      	strb	r4, [r0, #8]
1001103c:	4798      	blx	r3
1001103e:	1c30      	adds	r0, r6, #0
10011040:	4b12      	ldr	r3, [pc, #72]	; (1001108c <gattm_att_get_value_req_handler+0x94>)
10011042:	4798      	blx	r3
10011044:	7833      	ldrb	r3, [r6, #0]
10011046:	20e2      	movs	r0, #226	; 0xe2
10011048:	2b00      	cmp	r3, #0
1001104a:	d112      	bne.n	10011072 <gattm_att_get_value_req_handler+0x7a>
1001104c:	68a9      	ldr	r1, [r5, #8]
1001104e:	9801      	ldr	r0, [sp, #4]
10011050:	784d      	ldrb	r5, [r1, #1]
10011052:	780b      	ldrb	r3, [r1, #0]
10011054:	78ca      	ldrb	r2, [r1, #3]
10011056:	022d      	lsls	r5, r5, #8
10011058:	431d      	orrs	r5, r3
1001105a:	788b      	ldrb	r3, [r1, #2]
1001105c:	0212      	lsls	r2, r2, #8
1001105e:	431a      	orrs	r2, r3
10011060:	803a      	strh	r2, [r7, #0]
10011062:	790e      	ldrb	r6, [r1, #4]
10011064:	4b0a      	ldr	r3, [pc, #40]	; (10011090 <gattm_att_get_value_req_handler+0x98>)
10011066:	3105      	adds	r1, #5
10011068:	4798      	blx	r3
1001106a:	20e2      	movs	r0, #226	; 0xe2
1001106c:	42ac      	cmp	r4, r5
1001106e:	d100      	bne.n	10011072 <gattm_att_get_value_req_handler+0x7a>
10011070:	1c30      	adds	r0, r6, #0
10011072:	b005      	add	sp, #20
10011074:	bdf0      	pop	{r4, r5, r6, r7, pc}
10011076:	46c0      	nop			; (mov r8, r8)
10011078:	1001a574 	.word	0x1001a574
1001107c:	1001a204 	.word	0x1001a204
10011080:	00000b0b 	.word	0x00000b0b
10011084:	1001a1f8 	.word	0x1001a1f8
10011088:	1000f62d 	.word	0x1000f62d
1001108c:	1000f691 	.word	0x1000f691
10011090:	10012207 	.word	0x10012207

10011094 <htpt_enable_rsp_handler>:
10011094:	780b      	ldrb	r3, [r1, #0]
10011096:	7013      	strb	r3, [r2, #0]
10011098:	784b      	ldrb	r3, [r1, #1]
1001109a:	7053      	strb	r3, [r2, #1]
1001109c:	4770      	bx	lr

1001109e <htpt_temp_send_rsp_handler>:
1001109e:	780b      	ldrb	r3, [r1, #0]
100110a0:	7013      	strb	r3, [r2, #0]
100110a2:	4770      	bx	lr

100110a4 <htpt_meas_intv_upd_rsp_handler>:
100110a4:	780b      	ldrb	r3, [r1, #0]
100110a6:	7013      	strb	r3, [r2, #0]
100110a8:	4770      	bx	lr

100110aa <htpt_meas_intv_chg_req_ind_handler>:
100110aa:	78cb      	ldrb	r3, [r1, #3]
100110ac:	7889      	ldrb	r1, [r1, #2]
100110ae:	021b      	lsls	r3, r3, #8
100110b0:	430b      	orrs	r3, r1
100110b2:	8013      	strh	r3, [r2, #0]
100110b4:	4770      	bx	lr

100110b6 <htpt_cfg_indntf_ind_handler>:
100110b6:	780b      	ldrb	r3, [r1, #0]
100110b8:	7013      	strb	r3, [r2, #0]
100110ba:	784b      	ldrb	r3, [r1, #1]
100110bc:	7053      	strb	r3, [r2, #1]
100110be:	4770      	bx	lr

100110c0 <__gnu_thumb1_case_sqi>:
100110c0:	b402      	push	{r1}
100110c2:	4671      	mov	r1, lr
100110c4:	0849      	lsrs	r1, r1, #1
100110c6:	0049      	lsls	r1, r1, #1
100110c8:	5609      	ldrsb	r1, [r1, r0]
100110ca:	0049      	lsls	r1, r1, #1
100110cc:	448e      	add	lr, r1
100110ce:	bc02      	pop	{r1}
100110d0:	4770      	bx	lr
100110d2:	46c0      	nop			; (mov r8, r8)

100110d4 <__gnu_thumb1_case_uqi>:
100110d4:	b402      	push	{r1}
100110d6:	4671      	mov	r1, lr
100110d8:	0849      	lsrs	r1, r1, #1
100110da:	0049      	lsls	r1, r1, #1
100110dc:	5c09      	ldrb	r1, [r1, r0]
100110de:	0049      	lsls	r1, r1, #1
100110e0:	448e      	add	lr, r1
100110e2:	bc02      	pop	{r1}
100110e4:	4770      	bx	lr
100110e6:	46c0      	nop			; (mov r8, r8)

100110e8 <__aeabi_uidiv>:
100110e8:	2200      	movs	r2, #0
100110ea:	0843      	lsrs	r3, r0, #1
100110ec:	428b      	cmp	r3, r1
100110ee:	d374      	bcc.n	100111da <__aeabi_uidiv+0xf2>
100110f0:	0903      	lsrs	r3, r0, #4
100110f2:	428b      	cmp	r3, r1
100110f4:	d35f      	bcc.n	100111b6 <__aeabi_uidiv+0xce>
100110f6:	0a03      	lsrs	r3, r0, #8
100110f8:	428b      	cmp	r3, r1
100110fa:	d344      	bcc.n	10011186 <__aeabi_uidiv+0x9e>
100110fc:	0b03      	lsrs	r3, r0, #12
100110fe:	428b      	cmp	r3, r1
10011100:	d328      	bcc.n	10011154 <__aeabi_uidiv+0x6c>
10011102:	0c03      	lsrs	r3, r0, #16
10011104:	428b      	cmp	r3, r1
10011106:	d30d      	bcc.n	10011124 <__aeabi_uidiv+0x3c>
10011108:	22ff      	movs	r2, #255	; 0xff
1001110a:	0209      	lsls	r1, r1, #8
1001110c:	ba12      	rev	r2, r2
1001110e:	0c03      	lsrs	r3, r0, #16
10011110:	428b      	cmp	r3, r1
10011112:	d302      	bcc.n	1001111a <__aeabi_uidiv+0x32>
10011114:	1212      	asrs	r2, r2, #8
10011116:	0209      	lsls	r1, r1, #8
10011118:	d065      	beq.n	100111e6 <__aeabi_uidiv+0xfe>
1001111a:	0b03      	lsrs	r3, r0, #12
1001111c:	428b      	cmp	r3, r1
1001111e:	d319      	bcc.n	10011154 <__aeabi_uidiv+0x6c>
10011120:	e000      	b.n	10011124 <__aeabi_uidiv+0x3c>
10011122:	0a09      	lsrs	r1, r1, #8
10011124:	0bc3      	lsrs	r3, r0, #15
10011126:	428b      	cmp	r3, r1
10011128:	d301      	bcc.n	1001112e <__aeabi_uidiv+0x46>
1001112a:	03cb      	lsls	r3, r1, #15
1001112c:	1ac0      	subs	r0, r0, r3
1001112e:	4152      	adcs	r2, r2
10011130:	0b83      	lsrs	r3, r0, #14
10011132:	428b      	cmp	r3, r1
10011134:	d301      	bcc.n	1001113a <__aeabi_uidiv+0x52>
10011136:	038b      	lsls	r3, r1, #14
10011138:	1ac0      	subs	r0, r0, r3
1001113a:	4152      	adcs	r2, r2
1001113c:	0b43      	lsrs	r3, r0, #13
1001113e:	428b      	cmp	r3, r1
10011140:	d301      	bcc.n	10011146 <__aeabi_uidiv+0x5e>
10011142:	034b      	lsls	r3, r1, #13
10011144:	1ac0      	subs	r0, r0, r3
10011146:	4152      	adcs	r2, r2
10011148:	0b03      	lsrs	r3, r0, #12
1001114a:	428b      	cmp	r3, r1
1001114c:	d301      	bcc.n	10011152 <__aeabi_uidiv+0x6a>
1001114e:	030b      	lsls	r3, r1, #12
10011150:	1ac0      	subs	r0, r0, r3
10011152:	4152      	adcs	r2, r2
10011154:	0ac3      	lsrs	r3, r0, #11
10011156:	428b      	cmp	r3, r1
10011158:	d301      	bcc.n	1001115e <__aeabi_uidiv+0x76>
1001115a:	02cb      	lsls	r3, r1, #11
1001115c:	1ac0      	subs	r0, r0, r3
1001115e:	4152      	adcs	r2, r2
10011160:	0a83      	lsrs	r3, r0, #10
10011162:	428b      	cmp	r3, r1
10011164:	d301      	bcc.n	1001116a <__aeabi_uidiv+0x82>
10011166:	028b      	lsls	r3, r1, #10
10011168:	1ac0      	subs	r0, r0, r3
1001116a:	4152      	adcs	r2, r2
1001116c:	0a43      	lsrs	r3, r0, #9
1001116e:	428b      	cmp	r3, r1
10011170:	d301      	bcc.n	10011176 <__aeabi_uidiv+0x8e>
10011172:	024b      	lsls	r3, r1, #9
10011174:	1ac0      	subs	r0, r0, r3
10011176:	4152      	adcs	r2, r2
10011178:	0a03      	lsrs	r3, r0, #8
1001117a:	428b      	cmp	r3, r1
1001117c:	d301      	bcc.n	10011182 <__aeabi_uidiv+0x9a>
1001117e:	020b      	lsls	r3, r1, #8
10011180:	1ac0      	subs	r0, r0, r3
10011182:	4152      	adcs	r2, r2
10011184:	d2cd      	bcs.n	10011122 <__aeabi_uidiv+0x3a>
10011186:	09c3      	lsrs	r3, r0, #7
10011188:	428b      	cmp	r3, r1
1001118a:	d301      	bcc.n	10011190 <__aeabi_uidiv+0xa8>
1001118c:	01cb      	lsls	r3, r1, #7
1001118e:	1ac0      	subs	r0, r0, r3
10011190:	4152      	adcs	r2, r2
10011192:	0983      	lsrs	r3, r0, #6
10011194:	428b      	cmp	r3, r1
10011196:	d301      	bcc.n	1001119c <__aeabi_uidiv+0xb4>
10011198:	018b      	lsls	r3, r1, #6
1001119a:	1ac0      	subs	r0, r0, r3
1001119c:	4152      	adcs	r2, r2
1001119e:	0943      	lsrs	r3, r0, #5
100111a0:	428b      	cmp	r3, r1
100111a2:	d301      	bcc.n	100111a8 <__aeabi_uidiv+0xc0>
100111a4:	014b      	lsls	r3, r1, #5
100111a6:	1ac0      	subs	r0, r0, r3
100111a8:	4152      	adcs	r2, r2
100111aa:	0903      	lsrs	r3, r0, #4
100111ac:	428b      	cmp	r3, r1
100111ae:	d301      	bcc.n	100111b4 <__aeabi_uidiv+0xcc>
100111b0:	010b      	lsls	r3, r1, #4
100111b2:	1ac0      	subs	r0, r0, r3
100111b4:	4152      	adcs	r2, r2
100111b6:	08c3      	lsrs	r3, r0, #3
100111b8:	428b      	cmp	r3, r1
100111ba:	d301      	bcc.n	100111c0 <__aeabi_uidiv+0xd8>
100111bc:	00cb      	lsls	r3, r1, #3
100111be:	1ac0      	subs	r0, r0, r3
100111c0:	4152      	adcs	r2, r2
100111c2:	0883      	lsrs	r3, r0, #2
100111c4:	428b      	cmp	r3, r1
100111c6:	d301      	bcc.n	100111cc <__aeabi_uidiv+0xe4>
100111c8:	008b      	lsls	r3, r1, #2
100111ca:	1ac0      	subs	r0, r0, r3
100111cc:	4152      	adcs	r2, r2
100111ce:	0843      	lsrs	r3, r0, #1
100111d0:	428b      	cmp	r3, r1
100111d2:	d301      	bcc.n	100111d8 <__aeabi_uidiv+0xf0>
100111d4:	004b      	lsls	r3, r1, #1
100111d6:	1ac0      	subs	r0, r0, r3
100111d8:	4152      	adcs	r2, r2
100111da:	1a41      	subs	r1, r0, r1
100111dc:	d200      	bcs.n	100111e0 <__aeabi_uidiv+0xf8>
100111de:	4601      	mov	r1, r0
100111e0:	4152      	adcs	r2, r2
100111e2:	4610      	mov	r0, r2
100111e4:	4770      	bx	lr
100111e6:	e7ff      	b.n	100111e8 <__aeabi_uidiv+0x100>
100111e8:	b501      	push	{r0, lr}
100111ea:	2000      	movs	r0, #0
100111ec:	f000 f806 	bl	100111fc <__aeabi_idiv0>
100111f0:	bd02      	pop	{r1, pc}
100111f2:	46c0      	nop			; (mov r8, r8)

100111f4 <__aeabi_uidivmod>:
100111f4:	2900      	cmp	r1, #0
100111f6:	d0f7      	beq.n	100111e8 <__aeabi_uidiv+0x100>
100111f8:	e776      	b.n	100110e8 <__aeabi_uidiv>
100111fa:	4770      	bx	lr

100111fc <__aeabi_idiv0>:
100111fc:	4770      	bx	lr
100111fe:	46c0      	nop			; (mov r8, r8)

10011200 <__aeabi_d2uiz>:
10011200:	b570      	push	{r4, r5, r6, lr}
10011202:	2200      	movs	r2, #0
10011204:	4b0c      	ldr	r3, [pc, #48]	; (10011238 <__aeabi_d2uiz+0x38>)
10011206:	0004      	movs	r4, r0
10011208:	000d      	movs	r5, r1
1001120a:	f000 fe87 	bl	10011f1c <__aeabi_dcmpge>
1001120e:	2800      	cmp	r0, #0
10011210:	d104      	bne.n	1001121c <__aeabi_d2uiz+0x1c>
10011212:	0020      	movs	r0, r4
10011214:	0029      	movs	r1, r5
10011216:	f000 fddf 	bl	10011dd8 <__aeabi_d2iz>
1001121a:	bd70      	pop	{r4, r5, r6, pc}
1001121c:	4b06      	ldr	r3, [pc, #24]	; (10011238 <__aeabi_d2uiz+0x38>)
1001121e:	2200      	movs	r2, #0
10011220:	0020      	movs	r0, r4
10011222:	0029      	movs	r1, r5
10011224:	f000 fa84 	bl	10011730 <__aeabi_dsub>
10011228:	f000 fdd6 	bl	10011dd8 <__aeabi_d2iz>
1001122c:	2380      	movs	r3, #128	; 0x80
1001122e:	061b      	lsls	r3, r3, #24
10011230:	469c      	mov	ip, r3
10011232:	4460      	add	r0, ip
10011234:	e7f1      	b.n	1001121a <__aeabi_d2uiz+0x1a>
10011236:	46c0      	nop			; (mov r8, r8)
10011238:	41e00000 	.word	0x41e00000

1001123c <__aeabi_dmul>:
1001123c:	b5f0      	push	{r4, r5, r6, r7, lr}
1001123e:	465f      	mov	r7, fp
10011240:	4656      	mov	r6, sl
10011242:	464d      	mov	r5, r9
10011244:	4644      	mov	r4, r8
10011246:	b4f0      	push	{r4, r5, r6, r7}
10011248:	030d      	lsls	r5, r1, #12
1001124a:	4699      	mov	r9, r3
1001124c:	004e      	lsls	r6, r1, #1
1001124e:	0b2b      	lsrs	r3, r5, #12
10011250:	b087      	sub	sp, #28
10011252:	0007      	movs	r7, r0
10011254:	4692      	mov	sl, r2
10011256:	4680      	mov	r8, r0
10011258:	469b      	mov	fp, r3
1001125a:	0d76      	lsrs	r6, r6, #21
1001125c:	0fcc      	lsrs	r4, r1, #31
1001125e:	2e00      	cmp	r6, #0
10011260:	d069      	beq.n	10011336 <__aeabi_dmul+0xfa>
10011262:	4b6d      	ldr	r3, [pc, #436]	; (10011418 <__aeabi_dmul+0x1dc>)
10011264:	429e      	cmp	r6, r3
10011266:	d035      	beq.n	100112d4 <__aeabi_dmul+0x98>
10011268:	465b      	mov	r3, fp
1001126a:	2280      	movs	r2, #128	; 0x80
1001126c:	00dd      	lsls	r5, r3, #3
1001126e:	0412      	lsls	r2, r2, #16
10011270:	0f43      	lsrs	r3, r0, #29
10011272:	4313      	orrs	r3, r2
10011274:	432b      	orrs	r3, r5
10011276:	469b      	mov	fp, r3
10011278:	00c3      	lsls	r3, r0, #3
1001127a:	4698      	mov	r8, r3
1001127c:	4b67      	ldr	r3, [pc, #412]	; (1001141c <__aeabi_dmul+0x1e0>)
1001127e:	2700      	movs	r7, #0
10011280:	469c      	mov	ip, r3
10011282:	2300      	movs	r3, #0
10011284:	4466      	add	r6, ip
10011286:	9301      	str	r3, [sp, #4]
10011288:	464a      	mov	r2, r9
1001128a:	0315      	lsls	r5, r2, #12
1001128c:	0050      	lsls	r0, r2, #1
1001128e:	0fd2      	lsrs	r2, r2, #31
10011290:	4653      	mov	r3, sl
10011292:	0b2d      	lsrs	r5, r5, #12
10011294:	0d40      	lsrs	r0, r0, #21
10011296:	4691      	mov	r9, r2
10011298:	d100      	bne.n	1001129c <__aeabi_dmul+0x60>
1001129a:	e076      	b.n	1001138a <__aeabi_dmul+0x14e>
1001129c:	4a5e      	ldr	r2, [pc, #376]	; (10011418 <__aeabi_dmul+0x1dc>)
1001129e:	4290      	cmp	r0, r2
100112a0:	d06c      	beq.n	1001137c <__aeabi_dmul+0x140>
100112a2:	2280      	movs	r2, #128	; 0x80
100112a4:	0f5b      	lsrs	r3, r3, #29
100112a6:	0412      	lsls	r2, r2, #16
100112a8:	4313      	orrs	r3, r2
100112aa:	4a5c      	ldr	r2, [pc, #368]	; (1001141c <__aeabi_dmul+0x1e0>)
100112ac:	00ed      	lsls	r5, r5, #3
100112ae:	4694      	mov	ip, r2
100112b0:	431d      	orrs	r5, r3
100112b2:	4653      	mov	r3, sl
100112b4:	2200      	movs	r2, #0
100112b6:	00db      	lsls	r3, r3, #3
100112b8:	4460      	add	r0, ip
100112ba:	4649      	mov	r1, r9
100112bc:	1836      	adds	r6, r6, r0
100112be:	1c70      	adds	r0, r6, #1
100112c0:	4061      	eors	r1, r4
100112c2:	9002      	str	r0, [sp, #8]
100112c4:	4317      	orrs	r7, r2
100112c6:	2f0f      	cmp	r7, #15
100112c8:	d900      	bls.n	100112cc <__aeabi_dmul+0x90>
100112ca:	e0af      	b.n	1001142c <__aeabi_dmul+0x1f0>
100112cc:	4854      	ldr	r0, [pc, #336]	; (10011420 <__aeabi_dmul+0x1e4>)
100112ce:	00bf      	lsls	r7, r7, #2
100112d0:	59c7      	ldr	r7, [r0, r7]
100112d2:	46bf      	mov	pc, r7
100112d4:	465b      	mov	r3, fp
100112d6:	431f      	orrs	r7, r3
100112d8:	d000      	beq.n	100112dc <__aeabi_dmul+0xa0>
100112da:	e088      	b.n	100113ee <__aeabi_dmul+0x1b2>
100112dc:	2300      	movs	r3, #0
100112de:	469b      	mov	fp, r3
100112e0:	4698      	mov	r8, r3
100112e2:	3302      	adds	r3, #2
100112e4:	2708      	movs	r7, #8
100112e6:	9301      	str	r3, [sp, #4]
100112e8:	e7ce      	b.n	10011288 <__aeabi_dmul+0x4c>
100112ea:	4649      	mov	r1, r9
100112ec:	2a02      	cmp	r2, #2
100112ee:	d06a      	beq.n	100113c6 <__aeabi_dmul+0x18a>
100112f0:	2a03      	cmp	r2, #3
100112f2:	d100      	bne.n	100112f6 <__aeabi_dmul+0xba>
100112f4:	e209      	b.n	1001170a <__aeabi_dmul+0x4ce>
100112f6:	2a01      	cmp	r2, #1
100112f8:	d000      	beq.n	100112fc <__aeabi_dmul+0xc0>
100112fa:	e1bb      	b.n	10011674 <__aeabi_dmul+0x438>
100112fc:	4011      	ands	r1, r2
100112fe:	2200      	movs	r2, #0
10011300:	2300      	movs	r3, #0
10011302:	2500      	movs	r5, #0
10011304:	4690      	mov	r8, r2
10011306:	b2cc      	uxtb	r4, r1
10011308:	2100      	movs	r1, #0
1001130a:	032d      	lsls	r5, r5, #12
1001130c:	0d0a      	lsrs	r2, r1, #20
1001130e:	0512      	lsls	r2, r2, #20
10011310:	0b2d      	lsrs	r5, r5, #12
10011312:	4315      	orrs	r5, r2
10011314:	4a43      	ldr	r2, [pc, #268]	; (10011424 <__aeabi_dmul+0x1e8>)
10011316:	051b      	lsls	r3, r3, #20
10011318:	4015      	ands	r5, r2
1001131a:	431d      	orrs	r5, r3
1001131c:	006d      	lsls	r5, r5, #1
1001131e:	07e4      	lsls	r4, r4, #31
10011320:	086d      	lsrs	r5, r5, #1
10011322:	4325      	orrs	r5, r4
10011324:	4640      	mov	r0, r8
10011326:	0029      	movs	r1, r5
10011328:	b007      	add	sp, #28
1001132a:	bc3c      	pop	{r2, r3, r4, r5}
1001132c:	4690      	mov	r8, r2
1001132e:	4699      	mov	r9, r3
10011330:	46a2      	mov	sl, r4
10011332:	46ab      	mov	fp, r5
10011334:	bdf0      	pop	{r4, r5, r6, r7, pc}
10011336:	4303      	orrs	r3, r0
10011338:	d052      	beq.n	100113e0 <__aeabi_dmul+0x1a4>
1001133a:	465b      	mov	r3, fp
1001133c:	2b00      	cmp	r3, #0
1001133e:	d100      	bne.n	10011342 <__aeabi_dmul+0x106>
10011340:	e18a      	b.n	10011658 <__aeabi_dmul+0x41c>
10011342:	4658      	mov	r0, fp
10011344:	f000 fdf4 	bl	10011f30 <__clzsi2>
10011348:	0003      	movs	r3, r0
1001134a:	3b0b      	subs	r3, #11
1001134c:	2b1c      	cmp	r3, #28
1001134e:	dd00      	ble.n	10011352 <__aeabi_dmul+0x116>
10011350:	e17b      	b.n	1001164a <__aeabi_dmul+0x40e>
10011352:	221d      	movs	r2, #29
10011354:	1ad3      	subs	r3, r2, r3
10011356:	003a      	movs	r2, r7
10011358:	0001      	movs	r1, r0
1001135a:	465d      	mov	r5, fp
1001135c:	40da      	lsrs	r2, r3
1001135e:	3908      	subs	r1, #8
10011360:	408d      	lsls	r5, r1
10011362:	0013      	movs	r3, r2
10011364:	408f      	lsls	r7, r1
10011366:	432b      	orrs	r3, r5
10011368:	469b      	mov	fp, r3
1001136a:	46b8      	mov	r8, r7
1001136c:	4b2e      	ldr	r3, [pc, #184]	; (10011428 <__aeabi_dmul+0x1ec>)
1001136e:	2700      	movs	r7, #0
10011370:	469c      	mov	ip, r3
10011372:	2300      	movs	r3, #0
10011374:	4460      	add	r0, ip
10011376:	4246      	negs	r6, r0
10011378:	9301      	str	r3, [sp, #4]
1001137a:	e785      	b.n	10011288 <__aeabi_dmul+0x4c>
1001137c:	4652      	mov	r2, sl
1001137e:	432a      	orrs	r2, r5
10011380:	d12c      	bne.n	100113dc <__aeabi_dmul+0x1a0>
10011382:	2500      	movs	r5, #0
10011384:	2300      	movs	r3, #0
10011386:	2202      	movs	r2, #2
10011388:	e797      	b.n	100112ba <__aeabi_dmul+0x7e>
1001138a:	4652      	mov	r2, sl
1001138c:	432a      	orrs	r2, r5
1001138e:	d021      	beq.n	100113d4 <__aeabi_dmul+0x198>
10011390:	2d00      	cmp	r5, #0
10011392:	d100      	bne.n	10011396 <__aeabi_dmul+0x15a>
10011394:	e154      	b.n	10011640 <__aeabi_dmul+0x404>
10011396:	0028      	movs	r0, r5
10011398:	f000 fdca 	bl	10011f30 <__clzsi2>
1001139c:	0003      	movs	r3, r0
1001139e:	3b0b      	subs	r3, #11
100113a0:	2b1c      	cmp	r3, #28
100113a2:	dd00      	ble.n	100113a6 <__aeabi_dmul+0x16a>
100113a4:	e146      	b.n	10011634 <__aeabi_dmul+0x3f8>
100113a6:	211d      	movs	r1, #29
100113a8:	1acb      	subs	r3, r1, r3
100113aa:	4651      	mov	r1, sl
100113ac:	0002      	movs	r2, r0
100113ae:	40d9      	lsrs	r1, r3
100113b0:	4653      	mov	r3, sl
100113b2:	3a08      	subs	r2, #8
100113b4:	4095      	lsls	r5, r2
100113b6:	4093      	lsls	r3, r2
100113b8:	430d      	orrs	r5, r1
100113ba:	4a1b      	ldr	r2, [pc, #108]	; (10011428 <__aeabi_dmul+0x1ec>)
100113bc:	4694      	mov	ip, r2
100113be:	4460      	add	r0, ip
100113c0:	4240      	negs	r0, r0
100113c2:	2200      	movs	r2, #0
100113c4:	e779      	b.n	100112ba <__aeabi_dmul+0x7e>
100113c6:	2401      	movs	r4, #1
100113c8:	2200      	movs	r2, #0
100113ca:	400c      	ands	r4, r1
100113cc:	4b12      	ldr	r3, [pc, #72]	; (10011418 <__aeabi_dmul+0x1dc>)
100113ce:	2500      	movs	r5, #0
100113d0:	4690      	mov	r8, r2
100113d2:	e799      	b.n	10011308 <__aeabi_dmul+0xcc>
100113d4:	2500      	movs	r5, #0
100113d6:	2300      	movs	r3, #0
100113d8:	2201      	movs	r2, #1
100113da:	e76e      	b.n	100112ba <__aeabi_dmul+0x7e>
100113dc:	2203      	movs	r2, #3
100113de:	e76c      	b.n	100112ba <__aeabi_dmul+0x7e>
100113e0:	2300      	movs	r3, #0
100113e2:	469b      	mov	fp, r3
100113e4:	4698      	mov	r8, r3
100113e6:	3301      	adds	r3, #1
100113e8:	2704      	movs	r7, #4
100113ea:	9301      	str	r3, [sp, #4]
100113ec:	e74c      	b.n	10011288 <__aeabi_dmul+0x4c>
100113ee:	2303      	movs	r3, #3
100113f0:	270c      	movs	r7, #12
100113f2:	9301      	str	r3, [sp, #4]
100113f4:	e748      	b.n	10011288 <__aeabi_dmul+0x4c>
100113f6:	2300      	movs	r3, #0
100113f8:	2580      	movs	r5, #128	; 0x80
100113fa:	4698      	mov	r8, r3
100113fc:	2400      	movs	r4, #0
100113fe:	032d      	lsls	r5, r5, #12
10011400:	4b05      	ldr	r3, [pc, #20]	; (10011418 <__aeabi_dmul+0x1dc>)
10011402:	e781      	b.n	10011308 <__aeabi_dmul+0xcc>
10011404:	465d      	mov	r5, fp
10011406:	4643      	mov	r3, r8
10011408:	9a01      	ldr	r2, [sp, #4]
1001140a:	e76f      	b.n	100112ec <__aeabi_dmul+0xb0>
1001140c:	465d      	mov	r5, fp
1001140e:	4643      	mov	r3, r8
10011410:	0021      	movs	r1, r4
10011412:	9a01      	ldr	r2, [sp, #4]
10011414:	e76a      	b.n	100112ec <__aeabi_dmul+0xb0>
10011416:	46c0      	nop			; (mov r8, r8)
10011418:	000007ff 	.word	0x000007ff
1001141c:	fffffc01 	.word	0xfffffc01
10011420:	10015b60 	.word	0x10015b60
10011424:	800fffff 	.word	0x800fffff
10011428:	000003f3 	.word	0x000003f3
1001142c:	4642      	mov	r2, r8
1001142e:	0c12      	lsrs	r2, r2, #16
10011430:	4691      	mov	r9, r2
10011432:	0c1a      	lsrs	r2, r3, #16
10011434:	4694      	mov	ip, r2
10011436:	4642      	mov	r2, r8
10011438:	0417      	lsls	r7, r2, #16
1001143a:	464a      	mov	r2, r9
1001143c:	041b      	lsls	r3, r3, #16
1001143e:	0c1b      	lsrs	r3, r3, #16
10011440:	435a      	muls	r2, r3
10011442:	4660      	mov	r0, ip
10011444:	4690      	mov	r8, r2
10011446:	464a      	mov	r2, r9
10011448:	4342      	muls	r2, r0
1001144a:	0010      	movs	r0, r2
1001144c:	9203      	str	r2, [sp, #12]
1001144e:	4662      	mov	r2, ip
10011450:	001c      	movs	r4, r3
10011452:	0c3f      	lsrs	r7, r7, #16
10011454:	437a      	muls	r2, r7
10011456:	437c      	muls	r4, r7
10011458:	4442      	add	r2, r8
1001145a:	9201      	str	r2, [sp, #4]
1001145c:	0c22      	lsrs	r2, r4, #16
1001145e:	4692      	mov	sl, r2
10011460:	9a01      	ldr	r2, [sp, #4]
10011462:	4452      	add	r2, sl
10011464:	4590      	cmp	r8, r2
10011466:	d906      	bls.n	10011476 <__aeabi_dmul+0x23a>
10011468:	4682      	mov	sl, r0
1001146a:	2080      	movs	r0, #128	; 0x80
1001146c:	0240      	lsls	r0, r0, #9
1001146e:	4680      	mov	r8, r0
10011470:	44c2      	add	sl, r8
10011472:	4650      	mov	r0, sl
10011474:	9003      	str	r0, [sp, #12]
10011476:	0c10      	lsrs	r0, r2, #16
10011478:	9004      	str	r0, [sp, #16]
1001147a:	4648      	mov	r0, r9
1001147c:	0424      	lsls	r4, r4, #16
1001147e:	0c24      	lsrs	r4, r4, #16
10011480:	0412      	lsls	r2, r2, #16
10011482:	1912      	adds	r2, r2, r4
10011484:	9205      	str	r2, [sp, #20]
10011486:	0c2a      	lsrs	r2, r5, #16
10011488:	042d      	lsls	r5, r5, #16
1001148a:	0c2d      	lsrs	r5, r5, #16
1001148c:	4368      	muls	r0, r5
1001148e:	002c      	movs	r4, r5
10011490:	4682      	mov	sl, r0
10011492:	4648      	mov	r0, r9
10011494:	437c      	muls	r4, r7
10011496:	4350      	muls	r0, r2
10011498:	4681      	mov	r9, r0
1001149a:	0c20      	lsrs	r0, r4, #16
1001149c:	4680      	mov	r8, r0
1001149e:	4357      	muls	r7, r2
100114a0:	4457      	add	r7, sl
100114a2:	4447      	add	r7, r8
100114a4:	45ba      	cmp	sl, r7
100114a6:	d903      	bls.n	100114b0 <__aeabi_dmul+0x274>
100114a8:	2080      	movs	r0, #128	; 0x80
100114aa:	0240      	lsls	r0, r0, #9
100114ac:	4680      	mov	r8, r0
100114ae:	44c1      	add	r9, r8
100114b0:	0c38      	lsrs	r0, r7, #16
100114b2:	043f      	lsls	r7, r7, #16
100114b4:	46b8      	mov	r8, r7
100114b6:	4448      	add	r0, r9
100114b8:	0424      	lsls	r4, r4, #16
100114ba:	0c24      	lsrs	r4, r4, #16
100114bc:	9001      	str	r0, [sp, #4]
100114be:	9804      	ldr	r0, [sp, #16]
100114c0:	44a0      	add	r8, r4
100114c2:	4440      	add	r0, r8
100114c4:	9004      	str	r0, [sp, #16]
100114c6:	4658      	mov	r0, fp
100114c8:	0c00      	lsrs	r0, r0, #16
100114ca:	4681      	mov	r9, r0
100114cc:	4658      	mov	r0, fp
100114ce:	0404      	lsls	r4, r0, #16
100114d0:	0c20      	lsrs	r0, r4, #16
100114d2:	4682      	mov	sl, r0
100114d4:	0007      	movs	r7, r0
100114d6:	4648      	mov	r0, r9
100114d8:	435f      	muls	r7, r3
100114da:	464c      	mov	r4, r9
100114dc:	4343      	muls	r3, r0
100114de:	4660      	mov	r0, ip
100114e0:	4360      	muls	r0, r4
100114e2:	4664      	mov	r4, ip
100114e4:	4683      	mov	fp, r0
100114e6:	4650      	mov	r0, sl
100114e8:	4344      	muls	r4, r0
100114ea:	0c38      	lsrs	r0, r7, #16
100114ec:	4684      	mov	ip, r0
100114ee:	18e4      	adds	r4, r4, r3
100114f0:	4464      	add	r4, ip
100114f2:	42a3      	cmp	r3, r4
100114f4:	d903      	bls.n	100114fe <__aeabi_dmul+0x2c2>
100114f6:	2380      	movs	r3, #128	; 0x80
100114f8:	025b      	lsls	r3, r3, #9
100114fa:	469c      	mov	ip, r3
100114fc:	44e3      	add	fp, ip
100114fe:	4648      	mov	r0, r9
10011500:	043f      	lsls	r7, r7, #16
10011502:	0c23      	lsrs	r3, r4, #16
10011504:	0c3f      	lsrs	r7, r7, #16
10011506:	0424      	lsls	r4, r4, #16
10011508:	19e4      	adds	r4, r4, r7
1001150a:	4657      	mov	r7, sl
1001150c:	4368      	muls	r0, r5
1001150e:	436f      	muls	r7, r5
10011510:	4684      	mov	ip, r0
10011512:	464d      	mov	r5, r9
10011514:	4650      	mov	r0, sl
10011516:	4355      	muls	r5, r2
10011518:	4342      	muls	r2, r0
1001151a:	0c38      	lsrs	r0, r7, #16
1001151c:	4681      	mov	r9, r0
1001151e:	4462      	add	r2, ip
10011520:	444a      	add	r2, r9
10011522:	445b      	add	r3, fp
10011524:	4594      	cmp	ip, r2
10011526:	d903      	bls.n	10011530 <__aeabi_dmul+0x2f4>
10011528:	2080      	movs	r0, #128	; 0x80
1001152a:	0240      	lsls	r0, r0, #9
1001152c:	4684      	mov	ip, r0
1001152e:	4465      	add	r5, ip
10011530:	9803      	ldr	r0, [sp, #12]
10011532:	043f      	lsls	r7, r7, #16
10011534:	4683      	mov	fp, r0
10011536:	9804      	ldr	r0, [sp, #16]
10011538:	0c3f      	lsrs	r7, r7, #16
1001153a:	4684      	mov	ip, r0
1001153c:	44e3      	add	fp, ip
1001153e:	45c3      	cmp	fp, r8
10011540:	4180      	sbcs	r0, r0
10011542:	4240      	negs	r0, r0
10011544:	4682      	mov	sl, r0
10011546:	0410      	lsls	r0, r2, #16
10011548:	4684      	mov	ip, r0
1001154a:	9801      	ldr	r0, [sp, #4]
1001154c:	4467      	add	r7, ip
1001154e:	4684      	mov	ip, r0
10011550:	4467      	add	r7, ip
10011552:	44a3      	add	fp, r4
10011554:	46bc      	mov	ip, r7
10011556:	45a3      	cmp	fp, r4
10011558:	41a4      	sbcs	r4, r4
1001155a:	4699      	mov	r9, r3
1001155c:	44d4      	add	ip, sl
1001155e:	4264      	negs	r4, r4
10011560:	4287      	cmp	r7, r0
10011562:	41bf      	sbcs	r7, r7
10011564:	45d4      	cmp	ip, sl
10011566:	4180      	sbcs	r0, r0
10011568:	44e1      	add	r9, ip
1001156a:	46a0      	mov	r8, r4
1001156c:	4599      	cmp	r9, r3
1001156e:	419b      	sbcs	r3, r3
10011570:	427f      	negs	r7, r7
10011572:	4240      	negs	r0, r0
10011574:	44c8      	add	r8, r9
10011576:	4307      	orrs	r7, r0
10011578:	0c12      	lsrs	r2, r2, #16
1001157a:	18ba      	adds	r2, r7, r2
1001157c:	45a0      	cmp	r8, r4
1001157e:	41a4      	sbcs	r4, r4
10011580:	425f      	negs	r7, r3
10011582:	003b      	movs	r3, r7
10011584:	4264      	negs	r4, r4
10011586:	4323      	orrs	r3, r4
10011588:	18d7      	adds	r7, r2, r3
1001158a:	4643      	mov	r3, r8
1001158c:	197d      	adds	r5, r7, r5
1001158e:	0ddb      	lsrs	r3, r3, #23
10011590:	026d      	lsls	r5, r5, #9
10011592:	431d      	orrs	r5, r3
10011594:	465b      	mov	r3, fp
10011596:	025a      	lsls	r2, r3, #9
10011598:	9b05      	ldr	r3, [sp, #20]
1001159a:	431a      	orrs	r2, r3
1001159c:	1e53      	subs	r3, r2, #1
1001159e:	419a      	sbcs	r2, r3
100115a0:	465b      	mov	r3, fp
100115a2:	0ddb      	lsrs	r3, r3, #23
100115a4:	431a      	orrs	r2, r3
100115a6:	4643      	mov	r3, r8
100115a8:	025b      	lsls	r3, r3, #9
100115aa:	4313      	orrs	r3, r2
100115ac:	01ea      	lsls	r2, r5, #7
100115ae:	d507      	bpl.n	100115c0 <__aeabi_dmul+0x384>
100115b0:	2201      	movs	r2, #1
100115b2:	085c      	lsrs	r4, r3, #1
100115b4:	4013      	ands	r3, r2
100115b6:	4323      	orrs	r3, r4
100115b8:	07ea      	lsls	r2, r5, #31
100115ba:	9e02      	ldr	r6, [sp, #8]
100115bc:	4313      	orrs	r3, r2
100115be:	086d      	lsrs	r5, r5, #1
100115c0:	4a57      	ldr	r2, [pc, #348]	; (10011720 <__aeabi_dmul+0x4e4>)
100115c2:	18b2      	adds	r2, r6, r2
100115c4:	2a00      	cmp	r2, #0
100115c6:	dd4b      	ble.n	10011660 <__aeabi_dmul+0x424>
100115c8:	0758      	lsls	r0, r3, #29
100115ca:	d009      	beq.n	100115e0 <__aeabi_dmul+0x3a4>
100115cc:	200f      	movs	r0, #15
100115ce:	4018      	ands	r0, r3
100115d0:	2804      	cmp	r0, #4
100115d2:	d005      	beq.n	100115e0 <__aeabi_dmul+0x3a4>
100115d4:	1d18      	adds	r0, r3, #4
100115d6:	4298      	cmp	r0, r3
100115d8:	419b      	sbcs	r3, r3
100115da:	425b      	negs	r3, r3
100115dc:	18ed      	adds	r5, r5, r3
100115de:	0003      	movs	r3, r0
100115e0:	01e8      	lsls	r0, r5, #7
100115e2:	d504      	bpl.n	100115ee <__aeabi_dmul+0x3b2>
100115e4:	4a4f      	ldr	r2, [pc, #316]	; (10011724 <__aeabi_dmul+0x4e8>)
100115e6:	4015      	ands	r5, r2
100115e8:	2280      	movs	r2, #128	; 0x80
100115ea:	00d2      	lsls	r2, r2, #3
100115ec:	18b2      	adds	r2, r6, r2
100115ee:	484e      	ldr	r0, [pc, #312]	; (10011728 <__aeabi_dmul+0x4ec>)
100115f0:	4282      	cmp	r2, r0
100115f2:	dd00      	ble.n	100115f6 <__aeabi_dmul+0x3ba>
100115f4:	e6e7      	b.n	100113c6 <__aeabi_dmul+0x18a>
100115f6:	2401      	movs	r4, #1
100115f8:	08db      	lsrs	r3, r3, #3
100115fa:	0768      	lsls	r0, r5, #29
100115fc:	4318      	orrs	r0, r3
100115fe:	026d      	lsls	r5, r5, #9
10011600:	0553      	lsls	r3, r2, #21
10011602:	4680      	mov	r8, r0
10011604:	0b2d      	lsrs	r5, r5, #12
10011606:	0d5b      	lsrs	r3, r3, #21
10011608:	400c      	ands	r4, r1
1001160a:	e67d      	b.n	10011308 <__aeabi_dmul+0xcc>
1001160c:	2280      	movs	r2, #128	; 0x80
1001160e:	4659      	mov	r1, fp
10011610:	0312      	lsls	r2, r2, #12
10011612:	4211      	tst	r1, r2
10011614:	d008      	beq.n	10011628 <__aeabi_dmul+0x3ec>
10011616:	4215      	tst	r5, r2
10011618:	d106      	bne.n	10011628 <__aeabi_dmul+0x3ec>
1001161a:	4315      	orrs	r5, r2
1001161c:	032d      	lsls	r5, r5, #12
1001161e:	4698      	mov	r8, r3
10011620:	0b2d      	lsrs	r5, r5, #12
10011622:	464c      	mov	r4, r9
10011624:	4b41      	ldr	r3, [pc, #260]	; (1001172c <__aeabi_dmul+0x4f0>)
10011626:	e66f      	b.n	10011308 <__aeabi_dmul+0xcc>
10011628:	465d      	mov	r5, fp
1001162a:	4315      	orrs	r5, r2
1001162c:	032d      	lsls	r5, r5, #12
1001162e:	0b2d      	lsrs	r5, r5, #12
10011630:	4b3e      	ldr	r3, [pc, #248]	; (1001172c <__aeabi_dmul+0x4f0>)
10011632:	e669      	b.n	10011308 <__aeabi_dmul+0xcc>
10011634:	0003      	movs	r3, r0
10011636:	4655      	mov	r5, sl
10011638:	3b28      	subs	r3, #40	; 0x28
1001163a:	409d      	lsls	r5, r3
1001163c:	2300      	movs	r3, #0
1001163e:	e6bc      	b.n	100113ba <__aeabi_dmul+0x17e>
10011640:	4650      	mov	r0, sl
10011642:	f000 fc75 	bl	10011f30 <__clzsi2>
10011646:	3020      	adds	r0, #32
10011648:	e6a8      	b.n	1001139c <__aeabi_dmul+0x160>
1001164a:	0003      	movs	r3, r0
1001164c:	3b28      	subs	r3, #40	; 0x28
1001164e:	409f      	lsls	r7, r3
10011650:	2300      	movs	r3, #0
10011652:	46bb      	mov	fp, r7
10011654:	4698      	mov	r8, r3
10011656:	e689      	b.n	1001136c <__aeabi_dmul+0x130>
10011658:	f000 fc6a 	bl	10011f30 <__clzsi2>
1001165c:	3020      	adds	r0, #32
1001165e:	e673      	b.n	10011348 <__aeabi_dmul+0x10c>
10011660:	2401      	movs	r4, #1
10011662:	1aa6      	subs	r6, r4, r2
10011664:	2e38      	cmp	r6, #56	; 0x38
10011666:	dd07      	ble.n	10011678 <__aeabi_dmul+0x43c>
10011668:	2200      	movs	r2, #0
1001166a:	400c      	ands	r4, r1
1001166c:	2300      	movs	r3, #0
1001166e:	2500      	movs	r5, #0
10011670:	4690      	mov	r8, r2
10011672:	e649      	b.n	10011308 <__aeabi_dmul+0xcc>
10011674:	9e02      	ldr	r6, [sp, #8]
10011676:	e7a3      	b.n	100115c0 <__aeabi_dmul+0x384>
10011678:	2e1f      	cmp	r6, #31
1001167a:	dc20      	bgt.n	100116be <__aeabi_dmul+0x482>
1001167c:	2220      	movs	r2, #32
1001167e:	002c      	movs	r4, r5
10011680:	0018      	movs	r0, r3
10011682:	1b92      	subs	r2, r2, r6
10011684:	40f0      	lsrs	r0, r6
10011686:	4094      	lsls	r4, r2
10011688:	4093      	lsls	r3, r2
1001168a:	4304      	orrs	r4, r0
1001168c:	1e58      	subs	r0, r3, #1
1001168e:	4183      	sbcs	r3, r0
10011690:	431c      	orrs	r4, r3
10011692:	40f5      	lsrs	r5, r6
10011694:	0763      	lsls	r3, r4, #29
10011696:	d009      	beq.n	100116ac <__aeabi_dmul+0x470>
10011698:	230f      	movs	r3, #15
1001169a:	4023      	ands	r3, r4
1001169c:	2b04      	cmp	r3, #4
1001169e:	d005      	beq.n	100116ac <__aeabi_dmul+0x470>
100116a0:	0023      	movs	r3, r4
100116a2:	1d1c      	adds	r4, r3, #4
100116a4:	429c      	cmp	r4, r3
100116a6:	4192      	sbcs	r2, r2
100116a8:	4252      	negs	r2, r2
100116aa:	18ad      	adds	r5, r5, r2
100116ac:	022b      	lsls	r3, r5, #8
100116ae:	d51f      	bpl.n	100116f0 <__aeabi_dmul+0x4b4>
100116b0:	2401      	movs	r4, #1
100116b2:	2200      	movs	r2, #0
100116b4:	400c      	ands	r4, r1
100116b6:	2301      	movs	r3, #1
100116b8:	2500      	movs	r5, #0
100116ba:	4690      	mov	r8, r2
100116bc:	e624      	b.n	10011308 <__aeabi_dmul+0xcc>
100116be:	201f      	movs	r0, #31
100116c0:	002c      	movs	r4, r5
100116c2:	4240      	negs	r0, r0
100116c4:	1a82      	subs	r2, r0, r2
100116c6:	40d4      	lsrs	r4, r2
100116c8:	2e20      	cmp	r6, #32
100116ca:	d01c      	beq.n	10011706 <__aeabi_dmul+0x4ca>
100116cc:	2240      	movs	r2, #64	; 0x40
100116ce:	1b96      	subs	r6, r2, r6
100116d0:	40b5      	lsls	r5, r6
100116d2:	432b      	orrs	r3, r5
100116d4:	1e58      	subs	r0, r3, #1
100116d6:	4183      	sbcs	r3, r0
100116d8:	2007      	movs	r0, #7
100116da:	4323      	orrs	r3, r4
100116dc:	4018      	ands	r0, r3
100116de:	2500      	movs	r5, #0
100116e0:	2800      	cmp	r0, #0
100116e2:	d009      	beq.n	100116f8 <__aeabi_dmul+0x4bc>
100116e4:	220f      	movs	r2, #15
100116e6:	2500      	movs	r5, #0
100116e8:	401a      	ands	r2, r3
100116ea:	001c      	movs	r4, r3
100116ec:	2a04      	cmp	r2, #4
100116ee:	d1d8      	bne.n	100116a2 <__aeabi_dmul+0x466>
100116f0:	0023      	movs	r3, r4
100116f2:	0768      	lsls	r0, r5, #29
100116f4:	026d      	lsls	r5, r5, #9
100116f6:	0b2d      	lsrs	r5, r5, #12
100116f8:	2401      	movs	r4, #1
100116fa:	08db      	lsrs	r3, r3, #3
100116fc:	4303      	orrs	r3, r0
100116fe:	4698      	mov	r8, r3
10011700:	400c      	ands	r4, r1
10011702:	2300      	movs	r3, #0
10011704:	e600      	b.n	10011308 <__aeabi_dmul+0xcc>
10011706:	2500      	movs	r5, #0
10011708:	e7e3      	b.n	100116d2 <__aeabi_dmul+0x496>
1001170a:	2280      	movs	r2, #128	; 0x80
1001170c:	2401      	movs	r4, #1
1001170e:	0312      	lsls	r2, r2, #12
10011710:	4315      	orrs	r5, r2
10011712:	032d      	lsls	r5, r5, #12
10011714:	4698      	mov	r8, r3
10011716:	0b2d      	lsrs	r5, r5, #12
10011718:	400c      	ands	r4, r1
1001171a:	4b04      	ldr	r3, [pc, #16]	; (1001172c <__aeabi_dmul+0x4f0>)
1001171c:	e5f4      	b.n	10011308 <__aeabi_dmul+0xcc>
1001171e:	46c0      	nop			; (mov r8, r8)
10011720:	000003ff 	.word	0x000003ff
10011724:	feffffff 	.word	0xfeffffff
10011728:	000007fe 	.word	0x000007fe
1001172c:	000007ff 	.word	0x000007ff

10011730 <__aeabi_dsub>:
10011730:	b5f0      	push	{r4, r5, r6, r7, lr}
10011732:	4657      	mov	r7, sl
10011734:	464e      	mov	r6, r9
10011736:	4645      	mov	r5, r8
10011738:	b4e0      	push	{r5, r6, r7}
1001173a:	000e      	movs	r6, r1
1001173c:	0011      	movs	r1, r2
1001173e:	0ff2      	lsrs	r2, r6, #31
10011740:	4692      	mov	sl, r2
10011742:	00c5      	lsls	r5, r0, #3
10011744:	0f42      	lsrs	r2, r0, #29
10011746:	0318      	lsls	r0, r3, #12
10011748:	0337      	lsls	r7, r6, #12
1001174a:	0074      	lsls	r4, r6, #1
1001174c:	0a40      	lsrs	r0, r0, #9
1001174e:	0f4e      	lsrs	r6, r1, #29
10011750:	0a7f      	lsrs	r7, r7, #9
10011752:	4330      	orrs	r0, r6
10011754:	4ecf      	ldr	r6, [pc, #828]	; (10011a94 <__aeabi_dsub+0x364>)
10011756:	4317      	orrs	r7, r2
10011758:	005a      	lsls	r2, r3, #1
1001175a:	0d64      	lsrs	r4, r4, #21
1001175c:	0d52      	lsrs	r2, r2, #21
1001175e:	0fdb      	lsrs	r3, r3, #31
10011760:	00c9      	lsls	r1, r1, #3
10011762:	42b2      	cmp	r2, r6
10011764:	d100      	bne.n	10011768 <__aeabi_dsub+0x38>
10011766:	e0e5      	b.n	10011934 <__aeabi_dsub+0x204>
10011768:	2601      	movs	r6, #1
1001176a:	4073      	eors	r3, r6
1001176c:	1aa6      	subs	r6, r4, r2
1001176e:	46b4      	mov	ip, r6
10011770:	4553      	cmp	r3, sl
10011772:	d100      	bne.n	10011776 <__aeabi_dsub+0x46>
10011774:	e0af      	b.n	100118d6 <__aeabi_dsub+0x1a6>
10011776:	2e00      	cmp	r6, #0
10011778:	dc00      	bgt.n	1001177c <__aeabi_dsub+0x4c>
1001177a:	e10d      	b.n	10011998 <__aeabi_dsub+0x268>
1001177c:	2a00      	cmp	r2, #0
1001177e:	d13a      	bne.n	100117f6 <__aeabi_dsub+0xc6>
10011780:	0003      	movs	r3, r0
10011782:	430b      	orrs	r3, r1
10011784:	d000      	beq.n	10011788 <__aeabi_dsub+0x58>
10011786:	e0e4      	b.n	10011952 <__aeabi_dsub+0x222>
10011788:	076b      	lsls	r3, r5, #29
1001178a:	d009      	beq.n	100117a0 <__aeabi_dsub+0x70>
1001178c:	230f      	movs	r3, #15
1001178e:	402b      	ands	r3, r5
10011790:	2b04      	cmp	r3, #4
10011792:	d005      	beq.n	100117a0 <__aeabi_dsub+0x70>
10011794:	1d2b      	adds	r3, r5, #4
10011796:	42ab      	cmp	r3, r5
10011798:	41ad      	sbcs	r5, r5
1001179a:	426d      	negs	r5, r5
1001179c:	197f      	adds	r7, r7, r5
1001179e:	001d      	movs	r5, r3
100117a0:	023b      	lsls	r3, r7, #8
100117a2:	d400      	bmi.n	100117a6 <__aeabi_dsub+0x76>
100117a4:	e088      	b.n	100118b8 <__aeabi_dsub+0x188>
100117a6:	4bbb      	ldr	r3, [pc, #748]	; (10011a94 <__aeabi_dsub+0x364>)
100117a8:	3401      	adds	r4, #1
100117aa:	429c      	cmp	r4, r3
100117ac:	d100      	bne.n	100117b0 <__aeabi_dsub+0x80>
100117ae:	e110      	b.n	100119d2 <__aeabi_dsub+0x2a2>
100117b0:	003a      	movs	r2, r7
100117b2:	4bb9      	ldr	r3, [pc, #740]	; (10011a98 <__aeabi_dsub+0x368>)
100117b4:	4651      	mov	r1, sl
100117b6:	401a      	ands	r2, r3
100117b8:	2301      	movs	r3, #1
100117ba:	0750      	lsls	r0, r2, #29
100117bc:	08ed      	lsrs	r5, r5, #3
100117be:	0252      	lsls	r2, r2, #9
100117c0:	0564      	lsls	r4, r4, #21
100117c2:	4305      	orrs	r5, r0
100117c4:	0b12      	lsrs	r2, r2, #12
100117c6:	0d64      	lsrs	r4, r4, #21
100117c8:	400b      	ands	r3, r1
100117ca:	2100      	movs	r1, #0
100117cc:	0028      	movs	r0, r5
100117ce:	0312      	lsls	r2, r2, #12
100117d0:	0d0d      	lsrs	r5, r1, #20
100117d2:	0b12      	lsrs	r2, r2, #12
100117d4:	0564      	lsls	r4, r4, #21
100117d6:	052d      	lsls	r5, r5, #20
100117d8:	4315      	orrs	r5, r2
100117da:	0862      	lsrs	r2, r4, #1
100117dc:	4caf      	ldr	r4, [pc, #700]	; (10011a9c <__aeabi_dsub+0x36c>)
100117de:	07db      	lsls	r3, r3, #31
100117e0:	402c      	ands	r4, r5
100117e2:	4314      	orrs	r4, r2
100117e4:	0064      	lsls	r4, r4, #1
100117e6:	0864      	lsrs	r4, r4, #1
100117e8:	431c      	orrs	r4, r3
100117ea:	0021      	movs	r1, r4
100117ec:	bc1c      	pop	{r2, r3, r4}
100117ee:	4690      	mov	r8, r2
100117f0:	4699      	mov	r9, r3
100117f2:	46a2      	mov	sl, r4
100117f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
100117f6:	4ba7      	ldr	r3, [pc, #668]	; (10011a94 <__aeabi_dsub+0x364>)
100117f8:	429c      	cmp	r4, r3
100117fa:	d0c5      	beq.n	10011788 <__aeabi_dsub+0x58>
100117fc:	2380      	movs	r3, #128	; 0x80
100117fe:	041b      	lsls	r3, r3, #16
10011800:	4318      	orrs	r0, r3
10011802:	4663      	mov	r3, ip
10011804:	2b38      	cmp	r3, #56	; 0x38
10011806:	dd00      	ble.n	1001180a <__aeabi_dsub+0xda>
10011808:	e0fd      	b.n	10011a06 <__aeabi_dsub+0x2d6>
1001180a:	2b1f      	cmp	r3, #31
1001180c:	dd00      	ble.n	10011810 <__aeabi_dsub+0xe0>
1001180e:	e130      	b.n	10011a72 <__aeabi_dsub+0x342>
10011810:	4662      	mov	r2, ip
10011812:	2320      	movs	r3, #32
10011814:	1a9b      	subs	r3, r3, r2
10011816:	0002      	movs	r2, r0
10011818:	409a      	lsls	r2, r3
1001181a:	4666      	mov	r6, ip
1001181c:	4690      	mov	r8, r2
1001181e:	000a      	movs	r2, r1
10011820:	4099      	lsls	r1, r3
10011822:	40f2      	lsrs	r2, r6
10011824:	4646      	mov	r6, r8
10011826:	1e4b      	subs	r3, r1, #1
10011828:	4199      	sbcs	r1, r3
1001182a:	4332      	orrs	r2, r6
1001182c:	4311      	orrs	r1, r2
1001182e:	4663      	mov	r3, ip
10011830:	0002      	movs	r2, r0
10011832:	40da      	lsrs	r2, r3
10011834:	1a69      	subs	r1, r5, r1
10011836:	428d      	cmp	r5, r1
10011838:	419b      	sbcs	r3, r3
1001183a:	000d      	movs	r5, r1
1001183c:	1aba      	subs	r2, r7, r2
1001183e:	425b      	negs	r3, r3
10011840:	1ad7      	subs	r7, r2, r3
10011842:	023b      	lsls	r3, r7, #8
10011844:	d535      	bpl.n	100118b2 <__aeabi_dsub+0x182>
10011846:	027a      	lsls	r2, r7, #9
10011848:	0a53      	lsrs	r3, r2, #9
1001184a:	4698      	mov	r8, r3
1001184c:	4643      	mov	r3, r8
1001184e:	2b00      	cmp	r3, #0
10011850:	d100      	bne.n	10011854 <__aeabi_dsub+0x124>
10011852:	e0c4      	b.n	100119de <__aeabi_dsub+0x2ae>
10011854:	4640      	mov	r0, r8
10011856:	f000 fb6b 	bl	10011f30 <__clzsi2>
1001185a:	0003      	movs	r3, r0
1001185c:	3b08      	subs	r3, #8
1001185e:	2b1f      	cmp	r3, #31
10011860:	dd00      	ble.n	10011864 <__aeabi_dsub+0x134>
10011862:	e0c5      	b.n	100119f0 <__aeabi_dsub+0x2c0>
10011864:	2220      	movs	r2, #32
10011866:	0029      	movs	r1, r5
10011868:	1ad2      	subs	r2, r2, r3
1001186a:	4647      	mov	r7, r8
1001186c:	40d1      	lsrs	r1, r2
1001186e:	409f      	lsls	r7, r3
10011870:	000a      	movs	r2, r1
10011872:	409d      	lsls	r5, r3
10011874:	433a      	orrs	r2, r7
10011876:	429c      	cmp	r4, r3
10011878:	dd00      	ble.n	1001187c <__aeabi_dsub+0x14c>
1001187a:	e0c0      	b.n	100119fe <__aeabi_dsub+0x2ce>
1001187c:	1b1c      	subs	r4, r3, r4
1001187e:	1c63      	adds	r3, r4, #1
10011880:	2b1f      	cmp	r3, #31
10011882:	dd00      	ble.n	10011886 <__aeabi_dsub+0x156>
10011884:	e0e4      	b.n	10011a50 <__aeabi_dsub+0x320>
10011886:	2120      	movs	r1, #32
10011888:	0014      	movs	r4, r2
1001188a:	0028      	movs	r0, r5
1001188c:	1ac9      	subs	r1, r1, r3
1001188e:	40d8      	lsrs	r0, r3
10011890:	408c      	lsls	r4, r1
10011892:	408d      	lsls	r5, r1
10011894:	4304      	orrs	r4, r0
10011896:	40da      	lsrs	r2, r3
10011898:	1e68      	subs	r0, r5, #1
1001189a:	4185      	sbcs	r5, r0
1001189c:	0017      	movs	r7, r2
1001189e:	4325      	orrs	r5, r4
100118a0:	2400      	movs	r4, #0
100118a2:	e771      	b.n	10011788 <__aeabi_dsub+0x58>
100118a4:	4642      	mov	r2, r8
100118a6:	4663      	mov	r3, ip
100118a8:	431a      	orrs	r2, r3
100118aa:	d100      	bne.n	100118ae <__aeabi_dsub+0x17e>
100118ac:	e24c      	b.n	10011d48 <__aeabi_dsub+0x618>
100118ae:	4667      	mov	r7, ip
100118b0:	4645      	mov	r5, r8
100118b2:	076b      	lsls	r3, r5, #29
100118b4:	d000      	beq.n	100118b8 <__aeabi_dsub+0x188>
100118b6:	e769      	b.n	1001178c <__aeabi_dsub+0x5c>
100118b8:	2301      	movs	r3, #1
100118ba:	4651      	mov	r1, sl
100118bc:	0778      	lsls	r0, r7, #29
100118be:	08ed      	lsrs	r5, r5, #3
100118c0:	08fa      	lsrs	r2, r7, #3
100118c2:	400b      	ands	r3, r1
100118c4:	4305      	orrs	r5, r0
100118c6:	4973      	ldr	r1, [pc, #460]	; (10011a94 <__aeabi_dsub+0x364>)
100118c8:	428c      	cmp	r4, r1
100118ca:	d038      	beq.n	1001193e <__aeabi_dsub+0x20e>
100118cc:	0312      	lsls	r2, r2, #12
100118ce:	0564      	lsls	r4, r4, #21
100118d0:	0b12      	lsrs	r2, r2, #12
100118d2:	0d64      	lsrs	r4, r4, #21
100118d4:	e779      	b.n	100117ca <__aeabi_dsub+0x9a>
100118d6:	2e00      	cmp	r6, #0
100118d8:	dc00      	bgt.n	100118dc <__aeabi_dsub+0x1ac>
100118da:	e09a      	b.n	10011a12 <__aeabi_dsub+0x2e2>
100118dc:	2a00      	cmp	r2, #0
100118de:	d047      	beq.n	10011970 <__aeabi_dsub+0x240>
100118e0:	4a6c      	ldr	r2, [pc, #432]	; (10011a94 <__aeabi_dsub+0x364>)
100118e2:	4294      	cmp	r4, r2
100118e4:	d100      	bne.n	100118e8 <__aeabi_dsub+0x1b8>
100118e6:	e74f      	b.n	10011788 <__aeabi_dsub+0x58>
100118e8:	2280      	movs	r2, #128	; 0x80
100118ea:	0412      	lsls	r2, r2, #16
100118ec:	4310      	orrs	r0, r2
100118ee:	4662      	mov	r2, ip
100118f0:	2a38      	cmp	r2, #56	; 0x38
100118f2:	dc00      	bgt.n	100118f6 <__aeabi_dsub+0x1c6>
100118f4:	e108      	b.n	10011b08 <__aeabi_dsub+0x3d8>
100118f6:	4301      	orrs	r1, r0
100118f8:	1e48      	subs	r0, r1, #1
100118fa:	4181      	sbcs	r1, r0
100118fc:	2200      	movs	r2, #0
100118fe:	b2c9      	uxtb	r1, r1
10011900:	1949      	adds	r1, r1, r5
10011902:	19d2      	adds	r2, r2, r7
10011904:	42a9      	cmp	r1, r5
10011906:	41bf      	sbcs	r7, r7
10011908:	000d      	movs	r5, r1
1001190a:	427f      	negs	r7, r7
1001190c:	18bf      	adds	r7, r7, r2
1001190e:	023a      	lsls	r2, r7, #8
10011910:	d400      	bmi.n	10011914 <__aeabi_dsub+0x1e4>
10011912:	e142      	b.n	10011b9a <__aeabi_dsub+0x46a>
10011914:	4a5f      	ldr	r2, [pc, #380]	; (10011a94 <__aeabi_dsub+0x364>)
10011916:	3401      	adds	r4, #1
10011918:	4294      	cmp	r4, r2
1001191a:	d100      	bne.n	1001191e <__aeabi_dsub+0x1ee>
1001191c:	e14e      	b.n	10011bbc <__aeabi_dsub+0x48c>
1001191e:	2001      	movs	r0, #1
10011920:	4a5d      	ldr	r2, [pc, #372]	; (10011a98 <__aeabi_dsub+0x368>)
10011922:	0869      	lsrs	r1, r5, #1
10011924:	403a      	ands	r2, r7
10011926:	4028      	ands	r0, r5
10011928:	4308      	orrs	r0, r1
1001192a:	07d5      	lsls	r5, r2, #31
1001192c:	4305      	orrs	r5, r0
1001192e:	0857      	lsrs	r7, r2, #1
10011930:	469a      	mov	sl, r3
10011932:	e729      	b.n	10011788 <__aeabi_dsub+0x58>
10011934:	0006      	movs	r6, r0
10011936:	430e      	orrs	r6, r1
10011938:	d000      	beq.n	1001193c <__aeabi_dsub+0x20c>
1001193a:	e717      	b.n	1001176c <__aeabi_dsub+0x3c>
1001193c:	e714      	b.n	10011768 <__aeabi_dsub+0x38>
1001193e:	0029      	movs	r1, r5
10011940:	4311      	orrs	r1, r2
10011942:	d100      	bne.n	10011946 <__aeabi_dsub+0x216>
10011944:	e1f9      	b.n	10011d3a <__aeabi_dsub+0x60a>
10011946:	2180      	movs	r1, #128	; 0x80
10011948:	0309      	lsls	r1, r1, #12
1001194a:	430a      	orrs	r2, r1
1001194c:	0312      	lsls	r2, r2, #12
1001194e:	0b12      	lsrs	r2, r2, #12
10011950:	e73b      	b.n	100117ca <__aeabi_dsub+0x9a>
10011952:	2301      	movs	r3, #1
10011954:	425b      	negs	r3, r3
10011956:	4698      	mov	r8, r3
10011958:	44c4      	add	ip, r8
1001195a:	4663      	mov	r3, ip
1001195c:	2b00      	cmp	r3, #0
1001195e:	d172      	bne.n	10011a46 <__aeabi_dsub+0x316>
10011960:	1a69      	subs	r1, r5, r1
10011962:	428d      	cmp	r5, r1
10011964:	419b      	sbcs	r3, r3
10011966:	1a3f      	subs	r7, r7, r0
10011968:	425b      	negs	r3, r3
1001196a:	1aff      	subs	r7, r7, r3
1001196c:	000d      	movs	r5, r1
1001196e:	e768      	b.n	10011842 <__aeabi_dsub+0x112>
10011970:	0002      	movs	r2, r0
10011972:	430a      	orrs	r2, r1
10011974:	d100      	bne.n	10011978 <__aeabi_dsub+0x248>
10011976:	e707      	b.n	10011788 <__aeabi_dsub+0x58>
10011978:	2201      	movs	r2, #1
1001197a:	4252      	negs	r2, r2
1001197c:	4690      	mov	r8, r2
1001197e:	44c4      	add	ip, r8
10011980:	4662      	mov	r2, ip
10011982:	2a00      	cmp	r2, #0
10011984:	d000      	beq.n	10011988 <__aeabi_dsub+0x258>
10011986:	e0e6      	b.n	10011b56 <__aeabi_dsub+0x426>
10011988:	1869      	adds	r1, r5, r1
1001198a:	42a9      	cmp	r1, r5
1001198c:	41b6      	sbcs	r6, r6
1001198e:	183f      	adds	r7, r7, r0
10011990:	4276      	negs	r6, r6
10011992:	19f7      	adds	r7, r6, r7
10011994:	000d      	movs	r5, r1
10011996:	e7ba      	b.n	1001190e <__aeabi_dsub+0x1de>
10011998:	2e00      	cmp	r6, #0
1001199a:	d000      	beq.n	1001199e <__aeabi_dsub+0x26e>
1001199c:	e080      	b.n	10011aa0 <__aeabi_dsub+0x370>
1001199e:	1c62      	adds	r2, r4, #1
100119a0:	0552      	lsls	r2, r2, #21
100119a2:	0d52      	lsrs	r2, r2, #21
100119a4:	2a01      	cmp	r2, #1
100119a6:	dc00      	bgt.n	100119aa <__aeabi_dsub+0x27a>
100119a8:	e0f9      	b.n	10011b9e <__aeabi_dsub+0x46e>
100119aa:	1a6a      	subs	r2, r5, r1
100119ac:	4691      	mov	r9, r2
100119ae:	454d      	cmp	r5, r9
100119b0:	41b6      	sbcs	r6, r6
100119b2:	1a3a      	subs	r2, r7, r0
100119b4:	4276      	negs	r6, r6
100119b6:	1b92      	subs	r2, r2, r6
100119b8:	4690      	mov	r8, r2
100119ba:	0212      	lsls	r2, r2, #8
100119bc:	d400      	bmi.n	100119c0 <__aeabi_dsub+0x290>
100119be:	e099      	b.n	10011af4 <__aeabi_dsub+0x3c4>
100119c0:	1b4d      	subs	r5, r1, r5
100119c2:	42a9      	cmp	r1, r5
100119c4:	4189      	sbcs	r1, r1
100119c6:	1bc7      	subs	r7, r0, r7
100119c8:	4249      	negs	r1, r1
100119ca:	1a7a      	subs	r2, r7, r1
100119cc:	4690      	mov	r8, r2
100119ce:	469a      	mov	sl, r3
100119d0:	e73c      	b.n	1001184c <__aeabi_dsub+0x11c>
100119d2:	4652      	mov	r2, sl
100119d4:	2301      	movs	r3, #1
100119d6:	2500      	movs	r5, #0
100119d8:	4013      	ands	r3, r2
100119da:	2200      	movs	r2, #0
100119dc:	e6f5      	b.n	100117ca <__aeabi_dsub+0x9a>
100119de:	0028      	movs	r0, r5
100119e0:	f000 faa6 	bl	10011f30 <__clzsi2>
100119e4:	3020      	adds	r0, #32
100119e6:	0003      	movs	r3, r0
100119e8:	3b08      	subs	r3, #8
100119ea:	2b1f      	cmp	r3, #31
100119ec:	dc00      	bgt.n	100119f0 <__aeabi_dsub+0x2c0>
100119ee:	e739      	b.n	10011864 <__aeabi_dsub+0x134>
100119f0:	002a      	movs	r2, r5
100119f2:	3828      	subs	r0, #40	; 0x28
100119f4:	4082      	lsls	r2, r0
100119f6:	2500      	movs	r5, #0
100119f8:	429c      	cmp	r4, r3
100119fa:	dc00      	bgt.n	100119fe <__aeabi_dsub+0x2ce>
100119fc:	e73e      	b.n	1001187c <__aeabi_dsub+0x14c>
100119fe:	4f26      	ldr	r7, [pc, #152]	; (10011a98 <__aeabi_dsub+0x368>)
10011a00:	1ae4      	subs	r4, r4, r3
10011a02:	4017      	ands	r7, r2
10011a04:	e6c0      	b.n	10011788 <__aeabi_dsub+0x58>
10011a06:	4301      	orrs	r1, r0
10011a08:	1e48      	subs	r0, r1, #1
10011a0a:	4181      	sbcs	r1, r0
10011a0c:	2200      	movs	r2, #0
10011a0e:	b2c9      	uxtb	r1, r1
10011a10:	e710      	b.n	10011834 <__aeabi_dsub+0x104>
10011a12:	2e00      	cmp	r6, #0
10011a14:	d000      	beq.n	10011a18 <__aeabi_dsub+0x2e8>
10011a16:	e0f1      	b.n	10011bfc <__aeabi_dsub+0x4cc>
10011a18:	1c62      	adds	r2, r4, #1
10011a1a:	4694      	mov	ip, r2
10011a1c:	0552      	lsls	r2, r2, #21
10011a1e:	0d52      	lsrs	r2, r2, #21
10011a20:	2a01      	cmp	r2, #1
10011a22:	dc00      	bgt.n	10011a26 <__aeabi_dsub+0x2f6>
10011a24:	e0a0      	b.n	10011b68 <__aeabi_dsub+0x438>
10011a26:	4a1b      	ldr	r2, [pc, #108]	; (10011a94 <__aeabi_dsub+0x364>)
10011a28:	4594      	cmp	ip, r2
10011a2a:	d100      	bne.n	10011a2e <__aeabi_dsub+0x2fe>
10011a2c:	e0c5      	b.n	10011bba <__aeabi_dsub+0x48a>
10011a2e:	1869      	adds	r1, r5, r1
10011a30:	42a9      	cmp	r1, r5
10011a32:	4192      	sbcs	r2, r2
10011a34:	183f      	adds	r7, r7, r0
10011a36:	4252      	negs	r2, r2
10011a38:	19d2      	adds	r2, r2, r7
10011a3a:	0849      	lsrs	r1, r1, #1
10011a3c:	07d5      	lsls	r5, r2, #31
10011a3e:	430d      	orrs	r5, r1
10011a40:	0857      	lsrs	r7, r2, #1
10011a42:	4664      	mov	r4, ip
10011a44:	e6a0      	b.n	10011788 <__aeabi_dsub+0x58>
10011a46:	4b13      	ldr	r3, [pc, #76]	; (10011a94 <__aeabi_dsub+0x364>)
10011a48:	429c      	cmp	r4, r3
10011a4a:	d000      	beq.n	10011a4e <__aeabi_dsub+0x31e>
10011a4c:	e6d9      	b.n	10011802 <__aeabi_dsub+0xd2>
10011a4e:	e69b      	b.n	10011788 <__aeabi_dsub+0x58>
10011a50:	0011      	movs	r1, r2
10011a52:	3c1f      	subs	r4, #31
10011a54:	40e1      	lsrs	r1, r4
10011a56:	000c      	movs	r4, r1
10011a58:	2b20      	cmp	r3, #32
10011a5a:	d100      	bne.n	10011a5e <__aeabi_dsub+0x32e>
10011a5c:	e080      	b.n	10011b60 <__aeabi_dsub+0x430>
10011a5e:	2140      	movs	r1, #64	; 0x40
10011a60:	1acb      	subs	r3, r1, r3
10011a62:	409a      	lsls	r2, r3
10011a64:	4315      	orrs	r5, r2
10011a66:	1e6a      	subs	r2, r5, #1
10011a68:	4195      	sbcs	r5, r2
10011a6a:	2700      	movs	r7, #0
10011a6c:	4325      	orrs	r5, r4
10011a6e:	2400      	movs	r4, #0
10011a70:	e71f      	b.n	100118b2 <__aeabi_dsub+0x182>
10011a72:	4663      	mov	r3, ip
10011a74:	0002      	movs	r2, r0
10011a76:	3b20      	subs	r3, #32
10011a78:	40da      	lsrs	r2, r3
10011a7a:	4663      	mov	r3, ip
10011a7c:	2b20      	cmp	r3, #32
10011a7e:	d071      	beq.n	10011b64 <__aeabi_dsub+0x434>
10011a80:	2340      	movs	r3, #64	; 0x40
10011a82:	4666      	mov	r6, ip
10011a84:	1b9b      	subs	r3, r3, r6
10011a86:	4098      	lsls	r0, r3
10011a88:	4301      	orrs	r1, r0
10011a8a:	1e48      	subs	r0, r1, #1
10011a8c:	4181      	sbcs	r1, r0
10011a8e:	4311      	orrs	r1, r2
10011a90:	2200      	movs	r2, #0
10011a92:	e6cf      	b.n	10011834 <__aeabi_dsub+0x104>
10011a94:	000007ff 	.word	0x000007ff
10011a98:	ff7fffff 	.word	0xff7fffff
10011a9c:	800fffff 	.word	0x800fffff
10011aa0:	2c00      	cmp	r4, #0
10011aa2:	d048      	beq.n	10011b36 <__aeabi_dsub+0x406>
10011aa4:	4cca      	ldr	r4, [pc, #808]	; (10011dd0 <__aeabi_dsub+0x6a0>)
10011aa6:	42a2      	cmp	r2, r4
10011aa8:	d100      	bne.n	10011aac <__aeabi_dsub+0x37c>
10011aaa:	e0a2      	b.n	10011bf2 <__aeabi_dsub+0x4c2>
10011aac:	4274      	negs	r4, r6
10011aae:	46a1      	mov	r9, r4
10011ab0:	2480      	movs	r4, #128	; 0x80
10011ab2:	0424      	lsls	r4, r4, #16
10011ab4:	4327      	orrs	r7, r4
10011ab6:	464c      	mov	r4, r9
10011ab8:	2c38      	cmp	r4, #56	; 0x38
10011aba:	dd00      	ble.n	10011abe <__aeabi_dsub+0x38e>
10011abc:	e0db      	b.n	10011c76 <__aeabi_dsub+0x546>
10011abe:	2c1f      	cmp	r4, #31
10011ac0:	dd00      	ble.n	10011ac4 <__aeabi_dsub+0x394>
10011ac2:	e144      	b.n	10011d4e <__aeabi_dsub+0x61e>
10011ac4:	464e      	mov	r6, r9
10011ac6:	2420      	movs	r4, #32
10011ac8:	1ba4      	subs	r4, r4, r6
10011aca:	003e      	movs	r6, r7
10011acc:	40a6      	lsls	r6, r4
10011ace:	46a2      	mov	sl, r4
10011ad0:	46b0      	mov	r8, r6
10011ad2:	464c      	mov	r4, r9
10011ad4:	002e      	movs	r6, r5
10011ad6:	40e6      	lsrs	r6, r4
10011ad8:	46b4      	mov	ip, r6
10011ada:	4646      	mov	r6, r8
10011adc:	4664      	mov	r4, ip
10011ade:	4326      	orrs	r6, r4
10011ae0:	4654      	mov	r4, sl
10011ae2:	40a5      	lsls	r5, r4
10011ae4:	1e6c      	subs	r4, r5, #1
10011ae6:	41a5      	sbcs	r5, r4
10011ae8:	0034      	movs	r4, r6
10011aea:	432c      	orrs	r4, r5
10011aec:	464d      	mov	r5, r9
10011aee:	40ef      	lsrs	r7, r5
10011af0:	1b0d      	subs	r5, r1, r4
10011af2:	e028      	b.n	10011b46 <__aeabi_dsub+0x416>
10011af4:	464a      	mov	r2, r9
10011af6:	4643      	mov	r3, r8
10011af8:	464d      	mov	r5, r9
10011afa:	431a      	orrs	r2, r3
10011afc:	d000      	beq.n	10011b00 <__aeabi_dsub+0x3d0>
10011afe:	e6a5      	b.n	1001184c <__aeabi_dsub+0x11c>
10011b00:	2300      	movs	r3, #0
10011b02:	2400      	movs	r4, #0
10011b04:	2500      	movs	r5, #0
10011b06:	e6de      	b.n	100118c6 <__aeabi_dsub+0x196>
10011b08:	2a1f      	cmp	r2, #31
10011b0a:	dc5a      	bgt.n	10011bc2 <__aeabi_dsub+0x492>
10011b0c:	4666      	mov	r6, ip
10011b0e:	2220      	movs	r2, #32
10011b10:	1b92      	subs	r2, r2, r6
10011b12:	0006      	movs	r6, r0
10011b14:	4096      	lsls	r6, r2
10011b16:	4691      	mov	r9, r2
10011b18:	46b0      	mov	r8, r6
10011b1a:	4662      	mov	r2, ip
10011b1c:	000e      	movs	r6, r1
10011b1e:	40d6      	lsrs	r6, r2
10011b20:	4642      	mov	r2, r8
10011b22:	4316      	orrs	r6, r2
10011b24:	464a      	mov	r2, r9
10011b26:	4091      	lsls	r1, r2
10011b28:	1e4a      	subs	r2, r1, #1
10011b2a:	4191      	sbcs	r1, r2
10011b2c:	0002      	movs	r2, r0
10011b2e:	4660      	mov	r0, ip
10011b30:	4331      	orrs	r1, r6
10011b32:	40c2      	lsrs	r2, r0
10011b34:	e6e4      	b.n	10011900 <__aeabi_dsub+0x1d0>
10011b36:	003c      	movs	r4, r7
10011b38:	432c      	orrs	r4, r5
10011b3a:	d05a      	beq.n	10011bf2 <__aeabi_dsub+0x4c2>
10011b3c:	43f4      	mvns	r4, r6
10011b3e:	46a1      	mov	r9, r4
10011b40:	2c00      	cmp	r4, #0
10011b42:	d152      	bne.n	10011bea <__aeabi_dsub+0x4ba>
10011b44:	1b4d      	subs	r5, r1, r5
10011b46:	42a9      	cmp	r1, r5
10011b48:	4189      	sbcs	r1, r1
10011b4a:	1bc7      	subs	r7, r0, r7
10011b4c:	4249      	negs	r1, r1
10011b4e:	1a7f      	subs	r7, r7, r1
10011b50:	0014      	movs	r4, r2
10011b52:	469a      	mov	sl, r3
10011b54:	e675      	b.n	10011842 <__aeabi_dsub+0x112>
10011b56:	4a9e      	ldr	r2, [pc, #632]	; (10011dd0 <__aeabi_dsub+0x6a0>)
10011b58:	4294      	cmp	r4, r2
10011b5a:	d000      	beq.n	10011b5e <__aeabi_dsub+0x42e>
10011b5c:	e6c7      	b.n	100118ee <__aeabi_dsub+0x1be>
10011b5e:	e613      	b.n	10011788 <__aeabi_dsub+0x58>
10011b60:	2200      	movs	r2, #0
10011b62:	e77f      	b.n	10011a64 <__aeabi_dsub+0x334>
10011b64:	2000      	movs	r0, #0
10011b66:	e78f      	b.n	10011a88 <__aeabi_dsub+0x358>
10011b68:	2c00      	cmp	r4, #0
10011b6a:	d000      	beq.n	10011b6e <__aeabi_dsub+0x43e>
10011b6c:	e0c8      	b.n	10011d00 <__aeabi_dsub+0x5d0>
10011b6e:	003b      	movs	r3, r7
10011b70:	432b      	orrs	r3, r5
10011b72:	d100      	bne.n	10011b76 <__aeabi_dsub+0x446>
10011b74:	e10f      	b.n	10011d96 <__aeabi_dsub+0x666>
10011b76:	0003      	movs	r3, r0
10011b78:	430b      	orrs	r3, r1
10011b7a:	d100      	bne.n	10011b7e <__aeabi_dsub+0x44e>
10011b7c:	e604      	b.n	10011788 <__aeabi_dsub+0x58>
10011b7e:	1869      	adds	r1, r5, r1
10011b80:	42a9      	cmp	r1, r5
10011b82:	419b      	sbcs	r3, r3
10011b84:	183f      	adds	r7, r7, r0
10011b86:	425b      	negs	r3, r3
10011b88:	19df      	adds	r7, r3, r7
10011b8a:	023b      	lsls	r3, r7, #8
10011b8c:	d400      	bmi.n	10011b90 <__aeabi_dsub+0x460>
10011b8e:	e11a      	b.n	10011dc6 <__aeabi_dsub+0x696>
10011b90:	4b90      	ldr	r3, [pc, #576]	; (10011dd4 <__aeabi_dsub+0x6a4>)
10011b92:	000d      	movs	r5, r1
10011b94:	401f      	ands	r7, r3
10011b96:	4664      	mov	r4, ip
10011b98:	e5f6      	b.n	10011788 <__aeabi_dsub+0x58>
10011b9a:	469a      	mov	sl, r3
10011b9c:	e689      	b.n	100118b2 <__aeabi_dsub+0x182>
10011b9e:	003a      	movs	r2, r7
10011ba0:	432a      	orrs	r2, r5
10011ba2:	2c00      	cmp	r4, #0
10011ba4:	d15c      	bne.n	10011c60 <__aeabi_dsub+0x530>
10011ba6:	2a00      	cmp	r2, #0
10011ba8:	d175      	bne.n	10011c96 <__aeabi_dsub+0x566>
10011baa:	0002      	movs	r2, r0
10011bac:	430a      	orrs	r2, r1
10011bae:	d100      	bne.n	10011bb2 <__aeabi_dsub+0x482>
10011bb0:	e0ca      	b.n	10011d48 <__aeabi_dsub+0x618>
10011bb2:	0007      	movs	r7, r0
10011bb4:	000d      	movs	r5, r1
10011bb6:	469a      	mov	sl, r3
10011bb8:	e5e6      	b.n	10011788 <__aeabi_dsub+0x58>
10011bba:	4664      	mov	r4, ip
10011bbc:	2200      	movs	r2, #0
10011bbe:	2500      	movs	r5, #0
10011bc0:	e681      	b.n	100118c6 <__aeabi_dsub+0x196>
10011bc2:	4662      	mov	r2, ip
10011bc4:	0006      	movs	r6, r0
10011bc6:	3a20      	subs	r2, #32
10011bc8:	40d6      	lsrs	r6, r2
10011bca:	4662      	mov	r2, ip
10011bcc:	46b0      	mov	r8, r6
10011bce:	2a20      	cmp	r2, #32
10011bd0:	d100      	bne.n	10011bd4 <__aeabi_dsub+0x4a4>
10011bd2:	e0b7      	b.n	10011d44 <__aeabi_dsub+0x614>
10011bd4:	2240      	movs	r2, #64	; 0x40
10011bd6:	4666      	mov	r6, ip
10011bd8:	1b92      	subs	r2, r2, r6
10011bda:	4090      	lsls	r0, r2
10011bdc:	4301      	orrs	r1, r0
10011bde:	4642      	mov	r2, r8
10011be0:	1e48      	subs	r0, r1, #1
10011be2:	4181      	sbcs	r1, r0
10011be4:	4311      	orrs	r1, r2
10011be6:	2200      	movs	r2, #0
10011be8:	e68a      	b.n	10011900 <__aeabi_dsub+0x1d0>
10011bea:	4c79      	ldr	r4, [pc, #484]	; (10011dd0 <__aeabi_dsub+0x6a0>)
10011bec:	42a2      	cmp	r2, r4
10011bee:	d000      	beq.n	10011bf2 <__aeabi_dsub+0x4c2>
10011bf0:	e761      	b.n	10011ab6 <__aeabi_dsub+0x386>
10011bf2:	0007      	movs	r7, r0
10011bf4:	000d      	movs	r5, r1
10011bf6:	0014      	movs	r4, r2
10011bf8:	469a      	mov	sl, r3
10011bfa:	e5c5      	b.n	10011788 <__aeabi_dsub+0x58>
10011bfc:	2c00      	cmp	r4, #0
10011bfe:	d141      	bne.n	10011c84 <__aeabi_dsub+0x554>
10011c00:	003c      	movs	r4, r7
10011c02:	432c      	orrs	r4, r5
10011c04:	d078      	beq.n	10011cf8 <__aeabi_dsub+0x5c8>
10011c06:	43f4      	mvns	r4, r6
10011c08:	46a1      	mov	r9, r4
10011c0a:	2c00      	cmp	r4, #0
10011c0c:	d020      	beq.n	10011c50 <__aeabi_dsub+0x520>
10011c0e:	4c70      	ldr	r4, [pc, #448]	; (10011dd0 <__aeabi_dsub+0x6a0>)
10011c10:	42a2      	cmp	r2, r4
10011c12:	d071      	beq.n	10011cf8 <__aeabi_dsub+0x5c8>
10011c14:	464c      	mov	r4, r9
10011c16:	2c38      	cmp	r4, #56	; 0x38
10011c18:	dd00      	ble.n	10011c1c <__aeabi_dsub+0x4ec>
10011c1a:	e0b2      	b.n	10011d82 <__aeabi_dsub+0x652>
10011c1c:	2c1f      	cmp	r4, #31
10011c1e:	dd00      	ble.n	10011c22 <__aeabi_dsub+0x4f2>
10011c20:	e0bc      	b.n	10011d9c <__aeabi_dsub+0x66c>
10011c22:	2620      	movs	r6, #32
10011c24:	1b34      	subs	r4, r6, r4
10011c26:	46a2      	mov	sl, r4
10011c28:	003c      	movs	r4, r7
10011c2a:	4656      	mov	r6, sl
10011c2c:	40b4      	lsls	r4, r6
10011c2e:	464e      	mov	r6, r9
10011c30:	46a0      	mov	r8, r4
10011c32:	002c      	movs	r4, r5
10011c34:	40f4      	lsrs	r4, r6
10011c36:	46a4      	mov	ip, r4
10011c38:	4644      	mov	r4, r8
10011c3a:	4666      	mov	r6, ip
10011c3c:	4334      	orrs	r4, r6
10011c3e:	46a4      	mov	ip, r4
10011c40:	4654      	mov	r4, sl
10011c42:	40a5      	lsls	r5, r4
10011c44:	4664      	mov	r4, ip
10011c46:	1e6e      	subs	r6, r5, #1
10011c48:	41b5      	sbcs	r5, r6
10011c4a:	4325      	orrs	r5, r4
10011c4c:	464c      	mov	r4, r9
10011c4e:	40e7      	lsrs	r7, r4
10011c50:	186d      	adds	r5, r5, r1
10011c52:	428d      	cmp	r5, r1
10011c54:	4189      	sbcs	r1, r1
10011c56:	183f      	adds	r7, r7, r0
10011c58:	4249      	negs	r1, r1
10011c5a:	19cf      	adds	r7, r1, r7
10011c5c:	0014      	movs	r4, r2
10011c5e:	e656      	b.n	1001190e <__aeabi_dsub+0x1de>
10011c60:	2a00      	cmp	r2, #0
10011c62:	d12f      	bne.n	10011cc4 <__aeabi_dsub+0x594>
10011c64:	0002      	movs	r2, r0
10011c66:	430a      	orrs	r2, r1
10011c68:	d100      	bne.n	10011c6c <__aeabi_dsub+0x53c>
10011c6a:	e084      	b.n	10011d76 <__aeabi_dsub+0x646>
10011c6c:	0007      	movs	r7, r0
10011c6e:	000d      	movs	r5, r1
10011c70:	469a      	mov	sl, r3
10011c72:	4c57      	ldr	r4, [pc, #348]	; (10011dd0 <__aeabi_dsub+0x6a0>)
10011c74:	e588      	b.n	10011788 <__aeabi_dsub+0x58>
10011c76:	433d      	orrs	r5, r7
10011c78:	1e6f      	subs	r7, r5, #1
10011c7a:	41bd      	sbcs	r5, r7
10011c7c:	b2ec      	uxtb	r4, r5
10011c7e:	2700      	movs	r7, #0
10011c80:	1b0d      	subs	r5, r1, r4
10011c82:	e760      	b.n	10011b46 <__aeabi_dsub+0x416>
10011c84:	4c52      	ldr	r4, [pc, #328]	; (10011dd0 <__aeabi_dsub+0x6a0>)
10011c86:	42a2      	cmp	r2, r4
10011c88:	d036      	beq.n	10011cf8 <__aeabi_dsub+0x5c8>
10011c8a:	4274      	negs	r4, r6
10011c8c:	2680      	movs	r6, #128	; 0x80
10011c8e:	0436      	lsls	r6, r6, #16
10011c90:	46a1      	mov	r9, r4
10011c92:	4337      	orrs	r7, r6
10011c94:	e7be      	b.n	10011c14 <__aeabi_dsub+0x4e4>
10011c96:	0002      	movs	r2, r0
10011c98:	430a      	orrs	r2, r1
10011c9a:	d100      	bne.n	10011c9e <__aeabi_dsub+0x56e>
10011c9c:	e574      	b.n	10011788 <__aeabi_dsub+0x58>
10011c9e:	1a6a      	subs	r2, r5, r1
10011ca0:	4690      	mov	r8, r2
10011ca2:	4545      	cmp	r5, r8
10011ca4:	41b6      	sbcs	r6, r6
10011ca6:	1a3a      	subs	r2, r7, r0
10011ca8:	4276      	negs	r6, r6
10011caa:	1b92      	subs	r2, r2, r6
10011cac:	4694      	mov	ip, r2
10011cae:	0212      	lsls	r2, r2, #8
10011cb0:	d400      	bmi.n	10011cb4 <__aeabi_dsub+0x584>
10011cb2:	e5f7      	b.n	100118a4 <__aeabi_dsub+0x174>
10011cb4:	1b4d      	subs	r5, r1, r5
10011cb6:	42a9      	cmp	r1, r5
10011cb8:	4189      	sbcs	r1, r1
10011cba:	1bc7      	subs	r7, r0, r7
10011cbc:	4249      	negs	r1, r1
10011cbe:	1a7f      	subs	r7, r7, r1
10011cc0:	469a      	mov	sl, r3
10011cc2:	e561      	b.n	10011788 <__aeabi_dsub+0x58>
10011cc4:	0002      	movs	r2, r0
10011cc6:	430a      	orrs	r2, r1
10011cc8:	d03a      	beq.n	10011d40 <__aeabi_dsub+0x610>
10011cca:	08ed      	lsrs	r5, r5, #3
10011ccc:	077c      	lsls	r4, r7, #29
10011cce:	432c      	orrs	r4, r5
10011cd0:	2580      	movs	r5, #128	; 0x80
10011cd2:	08fa      	lsrs	r2, r7, #3
10011cd4:	032d      	lsls	r5, r5, #12
10011cd6:	422a      	tst	r2, r5
10011cd8:	d008      	beq.n	10011cec <__aeabi_dsub+0x5bc>
10011cda:	08c7      	lsrs	r7, r0, #3
10011cdc:	422f      	tst	r7, r5
10011cde:	d105      	bne.n	10011cec <__aeabi_dsub+0x5bc>
10011ce0:	0745      	lsls	r5, r0, #29
10011ce2:	002c      	movs	r4, r5
10011ce4:	003a      	movs	r2, r7
10011ce6:	469a      	mov	sl, r3
10011ce8:	08c9      	lsrs	r1, r1, #3
10011cea:	430c      	orrs	r4, r1
10011cec:	0f67      	lsrs	r7, r4, #29
10011cee:	00d2      	lsls	r2, r2, #3
10011cf0:	00e5      	lsls	r5, r4, #3
10011cf2:	4317      	orrs	r7, r2
10011cf4:	4c36      	ldr	r4, [pc, #216]	; (10011dd0 <__aeabi_dsub+0x6a0>)
10011cf6:	e547      	b.n	10011788 <__aeabi_dsub+0x58>
10011cf8:	0007      	movs	r7, r0
10011cfa:	000d      	movs	r5, r1
10011cfc:	0014      	movs	r4, r2
10011cfe:	e543      	b.n	10011788 <__aeabi_dsub+0x58>
10011d00:	003a      	movs	r2, r7
10011d02:	432a      	orrs	r2, r5
10011d04:	d043      	beq.n	10011d8e <__aeabi_dsub+0x65e>
10011d06:	0002      	movs	r2, r0
10011d08:	430a      	orrs	r2, r1
10011d0a:	d019      	beq.n	10011d40 <__aeabi_dsub+0x610>
10011d0c:	08ed      	lsrs	r5, r5, #3
10011d0e:	077c      	lsls	r4, r7, #29
10011d10:	432c      	orrs	r4, r5
10011d12:	2580      	movs	r5, #128	; 0x80
10011d14:	08fa      	lsrs	r2, r7, #3
10011d16:	032d      	lsls	r5, r5, #12
10011d18:	422a      	tst	r2, r5
10011d1a:	d007      	beq.n	10011d2c <__aeabi_dsub+0x5fc>
10011d1c:	08c6      	lsrs	r6, r0, #3
10011d1e:	422e      	tst	r6, r5
10011d20:	d104      	bne.n	10011d2c <__aeabi_dsub+0x5fc>
10011d22:	0747      	lsls	r7, r0, #29
10011d24:	003c      	movs	r4, r7
10011d26:	0032      	movs	r2, r6
10011d28:	08c9      	lsrs	r1, r1, #3
10011d2a:	430c      	orrs	r4, r1
10011d2c:	00d7      	lsls	r7, r2, #3
10011d2e:	0f62      	lsrs	r2, r4, #29
10011d30:	00e5      	lsls	r5, r4, #3
10011d32:	4317      	orrs	r7, r2
10011d34:	469a      	mov	sl, r3
10011d36:	4c26      	ldr	r4, [pc, #152]	; (10011dd0 <__aeabi_dsub+0x6a0>)
10011d38:	e526      	b.n	10011788 <__aeabi_dsub+0x58>
10011d3a:	2200      	movs	r2, #0
10011d3c:	2500      	movs	r5, #0
10011d3e:	e544      	b.n	100117ca <__aeabi_dsub+0x9a>
10011d40:	4c23      	ldr	r4, [pc, #140]	; (10011dd0 <__aeabi_dsub+0x6a0>)
10011d42:	e521      	b.n	10011788 <__aeabi_dsub+0x58>
10011d44:	2000      	movs	r0, #0
10011d46:	e749      	b.n	10011bdc <__aeabi_dsub+0x4ac>
10011d48:	2300      	movs	r3, #0
10011d4a:	2500      	movs	r5, #0
10011d4c:	e5bb      	b.n	100118c6 <__aeabi_dsub+0x196>
10011d4e:	464c      	mov	r4, r9
10011d50:	003e      	movs	r6, r7
10011d52:	3c20      	subs	r4, #32
10011d54:	40e6      	lsrs	r6, r4
10011d56:	464c      	mov	r4, r9
10011d58:	46b4      	mov	ip, r6
10011d5a:	2c20      	cmp	r4, #32
10011d5c:	d031      	beq.n	10011dc2 <__aeabi_dsub+0x692>
10011d5e:	2440      	movs	r4, #64	; 0x40
10011d60:	464e      	mov	r6, r9
10011d62:	1ba6      	subs	r6, r4, r6
10011d64:	40b7      	lsls	r7, r6
10011d66:	433d      	orrs	r5, r7
10011d68:	1e6c      	subs	r4, r5, #1
10011d6a:	41a5      	sbcs	r5, r4
10011d6c:	4664      	mov	r4, ip
10011d6e:	432c      	orrs	r4, r5
10011d70:	2700      	movs	r7, #0
10011d72:	1b0d      	subs	r5, r1, r4
10011d74:	e6e7      	b.n	10011b46 <__aeabi_dsub+0x416>
10011d76:	2280      	movs	r2, #128	; 0x80
10011d78:	2300      	movs	r3, #0
10011d7a:	0312      	lsls	r2, r2, #12
10011d7c:	4c14      	ldr	r4, [pc, #80]	; (10011dd0 <__aeabi_dsub+0x6a0>)
10011d7e:	2500      	movs	r5, #0
10011d80:	e5a1      	b.n	100118c6 <__aeabi_dsub+0x196>
10011d82:	433d      	orrs	r5, r7
10011d84:	1e6f      	subs	r7, r5, #1
10011d86:	41bd      	sbcs	r5, r7
10011d88:	2700      	movs	r7, #0
10011d8a:	b2ed      	uxtb	r5, r5
10011d8c:	e760      	b.n	10011c50 <__aeabi_dsub+0x520>
10011d8e:	0007      	movs	r7, r0
10011d90:	000d      	movs	r5, r1
10011d92:	4c0f      	ldr	r4, [pc, #60]	; (10011dd0 <__aeabi_dsub+0x6a0>)
10011d94:	e4f8      	b.n	10011788 <__aeabi_dsub+0x58>
10011d96:	0007      	movs	r7, r0
10011d98:	000d      	movs	r5, r1
10011d9a:	e4f5      	b.n	10011788 <__aeabi_dsub+0x58>
10011d9c:	464e      	mov	r6, r9
10011d9e:	003c      	movs	r4, r7
10011da0:	3e20      	subs	r6, #32
10011da2:	40f4      	lsrs	r4, r6
10011da4:	46a0      	mov	r8, r4
10011da6:	464c      	mov	r4, r9
10011da8:	2c20      	cmp	r4, #32
10011daa:	d00e      	beq.n	10011dca <__aeabi_dsub+0x69a>
10011dac:	2440      	movs	r4, #64	; 0x40
10011dae:	464e      	mov	r6, r9
10011db0:	1ba4      	subs	r4, r4, r6
10011db2:	40a7      	lsls	r7, r4
10011db4:	433d      	orrs	r5, r7
10011db6:	1e6f      	subs	r7, r5, #1
10011db8:	41bd      	sbcs	r5, r7
10011dba:	4644      	mov	r4, r8
10011dbc:	2700      	movs	r7, #0
10011dbe:	4325      	orrs	r5, r4
10011dc0:	e746      	b.n	10011c50 <__aeabi_dsub+0x520>
10011dc2:	2700      	movs	r7, #0
10011dc4:	e7cf      	b.n	10011d66 <__aeabi_dsub+0x636>
10011dc6:	000d      	movs	r5, r1
10011dc8:	e573      	b.n	100118b2 <__aeabi_dsub+0x182>
10011dca:	2700      	movs	r7, #0
10011dcc:	e7f2      	b.n	10011db4 <__aeabi_dsub+0x684>
10011dce:	46c0      	nop			; (mov r8, r8)
10011dd0:	000007ff 	.word	0x000007ff
10011dd4:	ff7fffff 	.word	0xff7fffff

10011dd8 <__aeabi_d2iz>:
10011dd8:	030b      	lsls	r3, r1, #12
10011dda:	b530      	push	{r4, r5, lr}
10011ddc:	4d13      	ldr	r5, [pc, #76]	; (10011e2c <__aeabi_d2iz+0x54>)
10011dde:	0b1a      	lsrs	r2, r3, #12
10011de0:	004b      	lsls	r3, r1, #1
10011de2:	0d5b      	lsrs	r3, r3, #21
10011de4:	0fc9      	lsrs	r1, r1, #31
10011de6:	2400      	movs	r4, #0
10011de8:	42ab      	cmp	r3, r5
10011dea:	dd11      	ble.n	10011e10 <__aeabi_d2iz+0x38>
10011dec:	4c10      	ldr	r4, [pc, #64]	; (10011e30 <__aeabi_d2iz+0x58>)
10011dee:	42a3      	cmp	r3, r4
10011df0:	dc10      	bgt.n	10011e14 <__aeabi_d2iz+0x3c>
10011df2:	2480      	movs	r4, #128	; 0x80
10011df4:	0364      	lsls	r4, r4, #13
10011df6:	4322      	orrs	r2, r4
10011df8:	4c0e      	ldr	r4, [pc, #56]	; (10011e34 <__aeabi_d2iz+0x5c>)
10011dfa:	1ae4      	subs	r4, r4, r3
10011dfc:	2c1f      	cmp	r4, #31
10011dfe:	dd0c      	ble.n	10011e1a <__aeabi_d2iz+0x42>
10011e00:	480d      	ldr	r0, [pc, #52]	; (10011e38 <__aeabi_d2iz+0x60>)
10011e02:	1ac3      	subs	r3, r0, r3
10011e04:	40da      	lsrs	r2, r3
10011e06:	0013      	movs	r3, r2
10011e08:	425c      	negs	r4, r3
10011e0a:	2900      	cmp	r1, #0
10011e0c:	d100      	bne.n	10011e10 <__aeabi_d2iz+0x38>
10011e0e:	001c      	movs	r4, r3
10011e10:	0020      	movs	r0, r4
10011e12:	bd30      	pop	{r4, r5, pc}
10011e14:	4b09      	ldr	r3, [pc, #36]	; (10011e3c <__aeabi_d2iz+0x64>)
10011e16:	18cc      	adds	r4, r1, r3
10011e18:	e7fa      	b.n	10011e10 <__aeabi_d2iz+0x38>
10011e1a:	40e0      	lsrs	r0, r4
10011e1c:	4c08      	ldr	r4, [pc, #32]	; (10011e40 <__aeabi_d2iz+0x68>)
10011e1e:	46a4      	mov	ip, r4
10011e20:	4463      	add	r3, ip
10011e22:	409a      	lsls	r2, r3
10011e24:	0013      	movs	r3, r2
10011e26:	4303      	orrs	r3, r0
10011e28:	e7ee      	b.n	10011e08 <__aeabi_d2iz+0x30>
10011e2a:	46c0      	nop			; (mov r8, r8)
10011e2c:	000003fe 	.word	0x000003fe
10011e30:	0000041d 	.word	0x0000041d
10011e34:	00000433 	.word	0x00000433
10011e38:	00000413 	.word	0x00000413
10011e3c:	7fffffff 	.word	0x7fffffff
10011e40:	fffffbed 	.word	0xfffffbed

10011e44 <__aeabi_ui2d>:
10011e44:	b570      	push	{r4, r5, r6, lr}
10011e46:	1e05      	subs	r5, r0, #0
10011e48:	d028      	beq.n	10011e9c <__aeabi_ui2d+0x58>
10011e4a:	f000 f871 	bl	10011f30 <__clzsi2>
10011e4e:	4b15      	ldr	r3, [pc, #84]	; (10011ea4 <__aeabi_ui2d+0x60>)
10011e50:	4a15      	ldr	r2, [pc, #84]	; (10011ea8 <__aeabi_ui2d+0x64>)
10011e52:	1a1b      	subs	r3, r3, r0
10011e54:	1ad2      	subs	r2, r2, r3
10011e56:	2a1f      	cmp	r2, #31
10011e58:	dd16      	ble.n	10011e88 <__aeabi_ui2d+0x44>
10011e5a:	002c      	movs	r4, r5
10011e5c:	4a13      	ldr	r2, [pc, #76]	; (10011eac <__aeabi_ui2d+0x68>)
10011e5e:	2500      	movs	r5, #0
10011e60:	1ad2      	subs	r2, r2, r3
10011e62:	4094      	lsls	r4, r2
10011e64:	055a      	lsls	r2, r3, #21
10011e66:	0324      	lsls	r4, r4, #12
10011e68:	0b24      	lsrs	r4, r4, #12
10011e6a:	0d52      	lsrs	r2, r2, #21
10011e6c:	2100      	movs	r1, #0
10011e6e:	0324      	lsls	r4, r4, #12
10011e70:	0d0b      	lsrs	r3, r1, #20
10011e72:	0b24      	lsrs	r4, r4, #12
10011e74:	051b      	lsls	r3, r3, #20
10011e76:	4323      	orrs	r3, r4
10011e78:	4c0d      	ldr	r4, [pc, #52]	; (10011eb0 <__aeabi_ui2d+0x6c>)
10011e7a:	0512      	lsls	r2, r2, #20
10011e7c:	4023      	ands	r3, r4
10011e7e:	4313      	orrs	r3, r2
10011e80:	005b      	lsls	r3, r3, #1
10011e82:	0028      	movs	r0, r5
10011e84:	0859      	lsrs	r1, r3, #1
10011e86:	bd70      	pop	{r4, r5, r6, pc}
10011e88:	210b      	movs	r1, #11
10011e8a:	002c      	movs	r4, r5
10011e8c:	1a08      	subs	r0, r1, r0
10011e8e:	40c4      	lsrs	r4, r0
10011e90:	4095      	lsls	r5, r2
10011e92:	0324      	lsls	r4, r4, #12
10011e94:	055a      	lsls	r2, r3, #21
10011e96:	0b24      	lsrs	r4, r4, #12
10011e98:	0d52      	lsrs	r2, r2, #21
10011e9a:	e7e7      	b.n	10011e6c <__aeabi_ui2d+0x28>
10011e9c:	2200      	movs	r2, #0
10011e9e:	2400      	movs	r4, #0
10011ea0:	e7e4      	b.n	10011e6c <__aeabi_ui2d+0x28>
10011ea2:	46c0      	nop			; (mov r8, r8)
10011ea4:	0000041e 	.word	0x0000041e
10011ea8:	00000433 	.word	0x00000433
10011eac:	00000413 	.word	0x00000413
10011eb0:	800fffff 	.word	0x800fffff

10011eb4 <__aeabi_cdrcmple>:
10011eb4:	4684      	mov	ip, r0
10011eb6:	1c10      	adds	r0, r2, #0
10011eb8:	4662      	mov	r2, ip
10011eba:	468c      	mov	ip, r1
10011ebc:	1c19      	adds	r1, r3, #0
10011ebe:	4663      	mov	r3, ip
10011ec0:	e000      	b.n	10011ec4 <__aeabi_cdcmpeq>
10011ec2:	46c0      	nop			; (mov r8, r8)

10011ec4 <__aeabi_cdcmpeq>:
10011ec4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
10011ec6:	f000 f8f5 	bl	100120b4 <__ledf2>
10011eca:	2800      	cmp	r0, #0
10011ecc:	d401      	bmi.n	10011ed2 <__aeabi_cdcmpeq+0xe>
10011ece:	2100      	movs	r1, #0
10011ed0:	42c8      	cmn	r0, r1
10011ed2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

10011ed4 <__aeabi_dcmpeq>:
10011ed4:	b510      	push	{r4, lr}
10011ed6:	f000 f849 	bl	10011f6c <__eqdf2>
10011eda:	4240      	negs	r0, r0
10011edc:	3001      	adds	r0, #1
10011ede:	bd10      	pop	{r4, pc}

10011ee0 <__aeabi_dcmplt>:
10011ee0:	b510      	push	{r4, lr}
10011ee2:	f000 f8e7 	bl	100120b4 <__ledf2>
10011ee6:	2800      	cmp	r0, #0
10011ee8:	db01      	blt.n	10011eee <__aeabi_dcmplt+0xe>
10011eea:	2000      	movs	r0, #0
10011eec:	bd10      	pop	{r4, pc}
10011eee:	2001      	movs	r0, #1
10011ef0:	bd10      	pop	{r4, pc}
10011ef2:	46c0      	nop			; (mov r8, r8)

10011ef4 <__aeabi_dcmple>:
10011ef4:	b510      	push	{r4, lr}
10011ef6:	f000 f8dd 	bl	100120b4 <__ledf2>
10011efa:	2800      	cmp	r0, #0
10011efc:	dd01      	ble.n	10011f02 <__aeabi_dcmple+0xe>
10011efe:	2000      	movs	r0, #0
10011f00:	bd10      	pop	{r4, pc}
10011f02:	2001      	movs	r0, #1
10011f04:	bd10      	pop	{r4, pc}
10011f06:	46c0      	nop			; (mov r8, r8)

10011f08 <__aeabi_dcmpgt>:
10011f08:	b510      	push	{r4, lr}
10011f0a:	f000 f86f 	bl	10011fec <__gedf2>
10011f0e:	2800      	cmp	r0, #0
10011f10:	dc01      	bgt.n	10011f16 <__aeabi_dcmpgt+0xe>
10011f12:	2000      	movs	r0, #0
10011f14:	bd10      	pop	{r4, pc}
10011f16:	2001      	movs	r0, #1
10011f18:	bd10      	pop	{r4, pc}
10011f1a:	46c0      	nop			; (mov r8, r8)

10011f1c <__aeabi_dcmpge>:
10011f1c:	b510      	push	{r4, lr}
10011f1e:	f000 f865 	bl	10011fec <__gedf2>
10011f22:	2800      	cmp	r0, #0
10011f24:	da01      	bge.n	10011f2a <__aeabi_dcmpge+0xe>
10011f26:	2000      	movs	r0, #0
10011f28:	bd10      	pop	{r4, pc}
10011f2a:	2001      	movs	r0, #1
10011f2c:	bd10      	pop	{r4, pc}
10011f2e:	46c0      	nop			; (mov r8, r8)

10011f30 <__clzsi2>:
10011f30:	211c      	movs	r1, #28
10011f32:	2301      	movs	r3, #1
10011f34:	041b      	lsls	r3, r3, #16
10011f36:	4298      	cmp	r0, r3
10011f38:	d301      	bcc.n	10011f3e <__clzsi2+0xe>
10011f3a:	0c00      	lsrs	r0, r0, #16
10011f3c:	3910      	subs	r1, #16
10011f3e:	0a1b      	lsrs	r3, r3, #8
10011f40:	4298      	cmp	r0, r3
10011f42:	d301      	bcc.n	10011f48 <__clzsi2+0x18>
10011f44:	0a00      	lsrs	r0, r0, #8
10011f46:	3908      	subs	r1, #8
10011f48:	091b      	lsrs	r3, r3, #4
10011f4a:	4298      	cmp	r0, r3
10011f4c:	d301      	bcc.n	10011f52 <__clzsi2+0x22>
10011f4e:	0900      	lsrs	r0, r0, #4
10011f50:	3904      	subs	r1, #4
10011f52:	a202      	add	r2, pc, #8	; (adr r2, 10011f5c <__clzsi2+0x2c>)
10011f54:	5c10      	ldrb	r0, [r2, r0]
10011f56:	1840      	adds	r0, r0, r1
10011f58:	4770      	bx	lr
10011f5a:	46c0      	nop			; (mov r8, r8)
10011f5c:	02020304 	.word	0x02020304
10011f60:	01010101 	.word	0x01010101
	...

10011f6c <__eqdf2>:
10011f6c:	b5f0      	push	{r4, r5, r6, r7, lr}
10011f6e:	465f      	mov	r7, fp
10011f70:	4656      	mov	r6, sl
10011f72:	464d      	mov	r5, r9
10011f74:	4644      	mov	r4, r8
10011f76:	b4f0      	push	{r4, r5, r6, r7}
10011f78:	031f      	lsls	r7, r3, #12
10011f7a:	005c      	lsls	r4, r3, #1
10011f7c:	0fdb      	lsrs	r3, r3, #31
10011f7e:	469a      	mov	sl, r3
10011f80:	4b19      	ldr	r3, [pc, #100]	; (10011fe8 <__eqdf2+0x7c>)
10011f82:	030e      	lsls	r6, r1, #12
10011f84:	004d      	lsls	r5, r1, #1
10011f86:	0fc9      	lsrs	r1, r1, #31
10011f88:	4680      	mov	r8, r0
10011f8a:	0b36      	lsrs	r6, r6, #12
10011f8c:	0d6d      	lsrs	r5, r5, #21
10011f8e:	468b      	mov	fp, r1
10011f90:	4691      	mov	r9, r2
10011f92:	0b3f      	lsrs	r7, r7, #12
10011f94:	0d64      	lsrs	r4, r4, #21
10011f96:	429d      	cmp	r5, r3
10011f98:	d019      	beq.n	10011fce <__eqdf2+0x62>
10011f9a:	4b13      	ldr	r3, [pc, #76]	; (10011fe8 <__eqdf2+0x7c>)
10011f9c:	429c      	cmp	r4, r3
10011f9e:	d01b      	beq.n	10011fd8 <__eqdf2+0x6c>
10011fa0:	2301      	movs	r3, #1
10011fa2:	42a5      	cmp	r5, r4
10011fa4:	d006      	beq.n	10011fb4 <__eqdf2+0x48>
10011fa6:	0018      	movs	r0, r3
10011fa8:	bc3c      	pop	{r2, r3, r4, r5}
10011faa:	4690      	mov	r8, r2
10011fac:	4699      	mov	r9, r3
10011fae:	46a2      	mov	sl, r4
10011fb0:	46ab      	mov	fp, r5
10011fb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
10011fb4:	42be      	cmp	r6, r7
10011fb6:	d1f6      	bne.n	10011fa6 <__eqdf2+0x3a>
10011fb8:	45c8      	cmp	r8, r9
10011fba:	d1f4      	bne.n	10011fa6 <__eqdf2+0x3a>
10011fbc:	45d3      	cmp	fp, sl
10011fbe:	d010      	beq.n	10011fe2 <__eqdf2+0x76>
10011fc0:	2d00      	cmp	r5, #0
10011fc2:	d1f0      	bne.n	10011fa6 <__eqdf2+0x3a>
10011fc4:	4330      	orrs	r0, r6
10011fc6:	0003      	movs	r3, r0
10011fc8:	1e5a      	subs	r2, r3, #1
10011fca:	4193      	sbcs	r3, r2
10011fcc:	e7eb      	b.n	10011fa6 <__eqdf2+0x3a>
10011fce:	0031      	movs	r1, r6
10011fd0:	2301      	movs	r3, #1
10011fd2:	4301      	orrs	r1, r0
10011fd4:	d1e7      	bne.n	10011fa6 <__eqdf2+0x3a>
10011fd6:	e7e0      	b.n	10011f9a <__eqdf2+0x2e>
10011fd8:	433a      	orrs	r2, r7
10011fda:	2301      	movs	r3, #1
10011fdc:	2a00      	cmp	r2, #0
10011fde:	d1e2      	bne.n	10011fa6 <__eqdf2+0x3a>
10011fe0:	e7de      	b.n	10011fa0 <__eqdf2+0x34>
10011fe2:	2300      	movs	r3, #0
10011fe4:	e7df      	b.n	10011fa6 <__eqdf2+0x3a>
10011fe6:	46c0      	nop			; (mov r8, r8)
10011fe8:	000007ff 	.word	0x000007ff

10011fec <__gedf2>:
10011fec:	b5f0      	push	{r4, r5, r6, r7, lr}
10011fee:	465f      	mov	r7, fp
10011ff0:	4644      	mov	r4, r8
10011ff2:	4656      	mov	r6, sl
10011ff4:	464d      	mov	r5, r9
10011ff6:	b4f0      	push	{r4, r5, r6, r7}
10011ff8:	031f      	lsls	r7, r3, #12
10011ffa:	0b3c      	lsrs	r4, r7, #12
10011ffc:	4f2c      	ldr	r7, [pc, #176]	; (100120b0 <__gedf2+0xc4>)
10011ffe:	030e      	lsls	r6, r1, #12
10012000:	004d      	lsls	r5, r1, #1
10012002:	46a3      	mov	fp, r4
10012004:	005c      	lsls	r4, r3, #1
10012006:	4684      	mov	ip, r0
10012008:	0b36      	lsrs	r6, r6, #12
1001200a:	0d6d      	lsrs	r5, r5, #21
1001200c:	0fc9      	lsrs	r1, r1, #31
1001200e:	4690      	mov	r8, r2
10012010:	0d64      	lsrs	r4, r4, #21
10012012:	0fdb      	lsrs	r3, r3, #31
10012014:	42bd      	cmp	r5, r7
10012016:	d02b      	beq.n	10012070 <__gedf2+0x84>
10012018:	4f25      	ldr	r7, [pc, #148]	; (100120b0 <__gedf2+0xc4>)
1001201a:	42bc      	cmp	r4, r7
1001201c:	d02e      	beq.n	1001207c <__gedf2+0x90>
1001201e:	2d00      	cmp	r5, #0
10012020:	d10e      	bne.n	10012040 <__gedf2+0x54>
10012022:	4330      	orrs	r0, r6
10012024:	0007      	movs	r7, r0
10012026:	4681      	mov	r9, r0
10012028:	4278      	negs	r0, r7
1001202a:	4178      	adcs	r0, r7
1001202c:	2c00      	cmp	r4, #0
1001202e:	d117      	bne.n	10012060 <__gedf2+0x74>
10012030:	465f      	mov	r7, fp
10012032:	433a      	orrs	r2, r7
10012034:	d114      	bne.n	10012060 <__gedf2+0x74>
10012036:	464b      	mov	r3, r9
10012038:	2000      	movs	r0, #0
1001203a:	2b00      	cmp	r3, #0
1001203c:	d00a      	beq.n	10012054 <__gedf2+0x68>
1001203e:	e006      	b.n	1001204e <__gedf2+0x62>
10012040:	2c00      	cmp	r4, #0
10012042:	d102      	bne.n	1001204a <__gedf2+0x5e>
10012044:	4658      	mov	r0, fp
10012046:	4302      	orrs	r2, r0
10012048:	d001      	beq.n	1001204e <__gedf2+0x62>
1001204a:	4299      	cmp	r1, r3
1001204c:	d01a      	beq.n	10012084 <__gedf2+0x98>
1001204e:	2301      	movs	r3, #1
10012050:	4248      	negs	r0, r1
10012052:	4318      	orrs	r0, r3
10012054:	bc3c      	pop	{r2, r3, r4, r5}
10012056:	4690      	mov	r8, r2
10012058:	4699      	mov	r9, r3
1001205a:	46a2      	mov	sl, r4
1001205c:	46ab      	mov	fp, r5
1001205e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10012060:	2800      	cmp	r0, #0
10012062:	d0f2      	beq.n	1001204a <__gedf2+0x5e>
10012064:	4258      	negs	r0, r3
10012066:	4158      	adcs	r0, r3
10012068:	2201      	movs	r2, #1
1001206a:	4240      	negs	r0, r0
1001206c:	4310      	orrs	r0, r2
1001206e:	e7f1      	b.n	10012054 <__gedf2+0x68>
10012070:	0037      	movs	r7, r6
10012072:	4307      	orrs	r7, r0
10012074:	d0d0      	beq.n	10012018 <__gedf2+0x2c>
10012076:	2002      	movs	r0, #2
10012078:	4240      	negs	r0, r0
1001207a:	e7eb      	b.n	10012054 <__gedf2+0x68>
1001207c:	465f      	mov	r7, fp
1001207e:	4317      	orrs	r7, r2
10012080:	d0cd      	beq.n	1001201e <__gedf2+0x32>
10012082:	e7f8      	b.n	10012076 <__gedf2+0x8a>
10012084:	42a5      	cmp	r5, r4
10012086:	dce2      	bgt.n	1001204e <__gedf2+0x62>
10012088:	db05      	blt.n	10012096 <__gedf2+0xaa>
1001208a:	455e      	cmp	r6, fp
1001208c:	d8df      	bhi.n	1001204e <__gedf2+0x62>
1001208e:	d008      	beq.n	100120a2 <__gedf2+0xb6>
10012090:	2000      	movs	r0, #0
10012092:	455e      	cmp	r6, fp
10012094:	d2de      	bcs.n	10012054 <__gedf2+0x68>
10012096:	4248      	negs	r0, r1
10012098:	4148      	adcs	r0, r1
1001209a:	2301      	movs	r3, #1
1001209c:	4240      	negs	r0, r0
1001209e:	4318      	orrs	r0, r3
100120a0:	e7d8      	b.n	10012054 <__gedf2+0x68>
100120a2:	45c4      	cmp	ip, r8
100120a4:	d8d3      	bhi.n	1001204e <__gedf2+0x62>
100120a6:	2000      	movs	r0, #0
100120a8:	45c4      	cmp	ip, r8
100120aa:	d3f4      	bcc.n	10012096 <__gedf2+0xaa>
100120ac:	e7d2      	b.n	10012054 <__gedf2+0x68>
100120ae:	46c0      	nop			; (mov r8, r8)
100120b0:	000007ff 	.word	0x000007ff

100120b4 <__ledf2>:
100120b4:	b5f0      	push	{r4, r5, r6, r7, lr}
100120b6:	465f      	mov	r7, fp
100120b8:	464d      	mov	r5, r9
100120ba:	4644      	mov	r4, r8
100120bc:	4656      	mov	r6, sl
100120be:	b4f0      	push	{r4, r5, r6, r7}
100120c0:	031c      	lsls	r4, r3, #12
100120c2:	0b24      	lsrs	r4, r4, #12
100120c4:	46a4      	mov	ip, r4
100120c6:	4c2f      	ldr	r4, [pc, #188]	; (10012184 <__ledf2+0xd0>)
100120c8:	030f      	lsls	r7, r1, #12
100120ca:	004d      	lsls	r5, r1, #1
100120cc:	005e      	lsls	r6, r3, #1
100120ce:	0fc9      	lsrs	r1, r1, #31
100120d0:	4680      	mov	r8, r0
100120d2:	0b3f      	lsrs	r7, r7, #12
100120d4:	0d6d      	lsrs	r5, r5, #21
100120d6:	468b      	mov	fp, r1
100120d8:	4691      	mov	r9, r2
100120da:	0d76      	lsrs	r6, r6, #21
100120dc:	0fdb      	lsrs	r3, r3, #31
100120de:	42a5      	cmp	r5, r4
100120e0:	d020      	beq.n	10012124 <__ledf2+0x70>
100120e2:	4c28      	ldr	r4, [pc, #160]	; (10012184 <__ledf2+0xd0>)
100120e4:	42a6      	cmp	r6, r4
100120e6:	d022      	beq.n	1001212e <__ledf2+0x7a>
100120e8:	2d00      	cmp	r5, #0
100120ea:	d112      	bne.n	10012112 <__ledf2+0x5e>
100120ec:	4338      	orrs	r0, r7
100120ee:	4244      	negs	r4, r0
100120f0:	4144      	adcs	r4, r0
100120f2:	2e00      	cmp	r6, #0
100120f4:	d020      	beq.n	10012138 <__ledf2+0x84>
100120f6:	2c00      	cmp	r4, #0
100120f8:	d00d      	beq.n	10012116 <__ledf2+0x62>
100120fa:	425c      	negs	r4, r3
100120fc:	4163      	adcs	r3, r4
100120fe:	2401      	movs	r4, #1
10012100:	425b      	negs	r3, r3
10012102:	431c      	orrs	r4, r3
10012104:	0020      	movs	r0, r4
10012106:	bc3c      	pop	{r2, r3, r4, r5}
10012108:	4690      	mov	r8, r2
1001210a:	4699      	mov	r9, r3
1001210c:	46a2      	mov	sl, r4
1001210e:	46ab      	mov	fp, r5
10012110:	bdf0      	pop	{r4, r5, r6, r7, pc}
10012112:	2e00      	cmp	r6, #0
10012114:	d017      	beq.n	10012146 <__ledf2+0x92>
10012116:	455b      	cmp	r3, fp
10012118:	d019      	beq.n	1001214e <__ledf2+0x9a>
1001211a:	465b      	mov	r3, fp
1001211c:	425c      	negs	r4, r3
1001211e:	2301      	movs	r3, #1
10012120:	431c      	orrs	r4, r3
10012122:	e7ef      	b.n	10012104 <__ledf2+0x50>
10012124:	0039      	movs	r1, r7
10012126:	2402      	movs	r4, #2
10012128:	4301      	orrs	r1, r0
1001212a:	d1eb      	bne.n	10012104 <__ledf2+0x50>
1001212c:	e7d9      	b.n	100120e2 <__ledf2+0x2e>
1001212e:	4661      	mov	r1, ip
10012130:	2402      	movs	r4, #2
10012132:	4311      	orrs	r1, r2
10012134:	d1e6      	bne.n	10012104 <__ledf2+0x50>
10012136:	e7d7      	b.n	100120e8 <__ledf2+0x34>
10012138:	4661      	mov	r1, ip
1001213a:	430a      	orrs	r2, r1
1001213c:	d1db      	bne.n	100120f6 <__ledf2+0x42>
1001213e:	2400      	movs	r4, #0
10012140:	2800      	cmp	r0, #0
10012142:	d0df      	beq.n	10012104 <__ledf2+0x50>
10012144:	e7e9      	b.n	1001211a <__ledf2+0x66>
10012146:	4661      	mov	r1, ip
10012148:	430a      	orrs	r2, r1
1001214a:	d1e4      	bne.n	10012116 <__ledf2+0x62>
1001214c:	e7e5      	b.n	1001211a <__ledf2+0x66>
1001214e:	42b5      	cmp	r5, r6
10012150:	dd03      	ble.n	1001215a <__ledf2+0xa6>
10012152:	2201      	movs	r2, #1
10012154:	425c      	negs	r4, r3
10012156:	4314      	orrs	r4, r2
10012158:	e7d4      	b.n	10012104 <__ledf2+0x50>
1001215a:	42b5      	cmp	r5, r6
1001215c:	dbcd      	blt.n	100120fa <__ledf2+0x46>
1001215e:	4567      	cmp	r7, ip
10012160:	d8db      	bhi.n	1001211a <__ledf2+0x66>
10012162:	d009      	beq.n	10012178 <__ledf2+0xc4>
10012164:	2400      	movs	r4, #0
10012166:	4567      	cmp	r7, ip
10012168:	d2cc      	bcs.n	10012104 <__ledf2+0x50>
1001216a:	4659      	mov	r1, fp
1001216c:	424c      	negs	r4, r1
1001216e:	4161      	adcs	r1, r4
10012170:	2401      	movs	r4, #1
10012172:	4249      	negs	r1, r1
10012174:	430c      	orrs	r4, r1
10012176:	e7c5      	b.n	10012104 <__ledf2+0x50>
10012178:	45c8      	cmp	r8, r9
1001217a:	d8ce      	bhi.n	1001211a <__ledf2+0x66>
1001217c:	2400      	movs	r4, #0
1001217e:	45c8      	cmp	r8, r9
10012180:	d3f3      	bcc.n	1001216a <__ledf2+0xb6>
10012182:	e7bf      	b.n	10012104 <__ledf2+0x50>
10012184:	000007ff 	.word	0x000007ff

10012188 <__libc_init_array>:
10012188:	4b0e      	ldr	r3, [pc, #56]	; (100121c4 <__libc_init_array+0x3c>)
1001218a:	b570      	push	{r4, r5, r6, lr}
1001218c:	2500      	movs	r5, #0
1001218e:	001e      	movs	r6, r3
10012190:	4c0d      	ldr	r4, [pc, #52]	; (100121c8 <__libc_init_array+0x40>)
10012192:	1ae4      	subs	r4, r4, r3
10012194:	10a4      	asrs	r4, r4, #2
10012196:	42a5      	cmp	r5, r4
10012198:	d004      	beq.n	100121a4 <__libc_init_array+0x1c>
1001219a:	00ab      	lsls	r3, r5, #2
1001219c:	58f3      	ldr	r3, [r6, r3]
1001219e:	4798      	blx	r3
100121a0:	3501      	adds	r5, #1
100121a2:	e7f8      	b.n	10012196 <__libc_init_array+0xe>
100121a4:	f003 fd4a 	bl	10015c3c <_init>
100121a8:	4b08      	ldr	r3, [pc, #32]	; (100121cc <__libc_init_array+0x44>)
100121aa:	2500      	movs	r5, #0
100121ac:	001e      	movs	r6, r3
100121ae:	4c08      	ldr	r4, [pc, #32]	; (100121d0 <__libc_init_array+0x48>)
100121b0:	1ae4      	subs	r4, r4, r3
100121b2:	10a4      	asrs	r4, r4, #2
100121b4:	42a5      	cmp	r5, r4
100121b6:	d004      	beq.n	100121c2 <__libc_init_array+0x3a>
100121b8:	00ab      	lsls	r3, r5, #2
100121ba:	58f3      	ldr	r3, [r6, r3]
100121bc:	4798      	blx	r3
100121be:	3501      	adds	r5, #1
100121c0:	e7f8      	b.n	100121b4 <__libc_init_array+0x2c>
100121c2:	bd70      	pop	{r4, r5, r6, pc}
100121c4:	10015c48 	.word	0x10015c48
100121c8:	10015c48 	.word	0x10015c48
100121cc:	10015c48 	.word	0x10015c48
100121d0:	10015c4c 	.word	0x10015c4c

100121d4 <malloc>:
100121d4:	b510      	push	{r4, lr}
100121d6:	4b03      	ldr	r3, [pc, #12]	; (100121e4 <malloc+0x10>)
100121d8:	0001      	movs	r1, r0
100121da:	6818      	ldr	r0, [r3, #0]
100121dc:	f000 f86a 	bl	100122b4 <_malloc_r>
100121e0:	bd10      	pop	{r4, pc}
100121e2:	46c0      	nop			; (mov r8, r8)
100121e4:	10015cd4 	.word	0x10015cd4

100121e8 <memcmp>:
100121e8:	b530      	push	{r4, r5, lr}
100121ea:	2400      	movs	r4, #0
100121ec:	42a2      	cmp	r2, r4
100121ee:	d008      	beq.n	10012202 <memcmp+0x1a>
100121f0:	5d03      	ldrb	r3, [r0, r4]
100121f2:	1c65      	adds	r5, r4, #1
100121f4:	5d0c      	ldrb	r4, [r1, r4]
100121f6:	42a3      	cmp	r3, r4
100121f8:	d001      	beq.n	100121fe <memcmp+0x16>
100121fa:	1b18      	subs	r0, r3, r4
100121fc:	e002      	b.n	10012204 <memcmp+0x1c>
100121fe:	002c      	movs	r4, r5
10012200:	e7f4      	b.n	100121ec <memcmp+0x4>
10012202:	2000      	movs	r0, #0
10012204:	bd30      	pop	{r4, r5, pc}

10012206 <memcpy>:
10012206:	2300      	movs	r3, #0
10012208:	b510      	push	{r4, lr}
1001220a:	429a      	cmp	r2, r3
1001220c:	d003      	beq.n	10012216 <memcpy+0x10>
1001220e:	5ccc      	ldrb	r4, [r1, r3]
10012210:	54c4      	strb	r4, [r0, r3]
10012212:	3301      	adds	r3, #1
10012214:	e7f9      	b.n	1001220a <memcpy+0x4>
10012216:	bd10      	pop	{r4, pc}

10012218 <memset>:
10012218:	0003      	movs	r3, r0
1001221a:	1882      	adds	r2, r0, r2
1001221c:	4293      	cmp	r3, r2
1001221e:	d002      	beq.n	10012226 <memset+0xe>
10012220:	7019      	strb	r1, [r3, #0]
10012222:	3301      	adds	r3, #1
10012224:	e7fa      	b.n	1001221c <memset+0x4>
10012226:	4770      	bx	lr

10012228 <_free_r>:
10012228:	b530      	push	{r4, r5, lr}
1001222a:	2900      	cmp	r1, #0
1001222c:	d03e      	beq.n	100122ac <_free_r+0x84>
1001222e:	3904      	subs	r1, #4
10012230:	680b      	ldr	r3, [r1, #0]
10012232:	2b00      	cmp	r3, #0
10012234:	da00      	bge.n	10012238 <_free_r+0x10>
10012236:	18c9      	adds	r1, r1, r3
10012238:	4a1d      	ldr	r2, [pc, #116]	; (100122b0 <_free_r+0x88>)
1001223a:	6813      	ldr	r3, [r2, #0]
1001223c:	0014      	movs	r4, r2
1001223e:	2b00      	cmp	r3, #0
10012240:	d102      	bne.n	10012248 <_free_r+0x20>
10012242:	604b      	str	r3, [r1, #4]
10012244:	6011      	str	r1, [r2, #0]
10012246:	e031      	b.n	100122ac <_free_r+0x84>
10012248:	428b      	cmp	r3, r1
1001224a:	d90d      	bls.n	10012268 <_free_r+0x40>
1001224c:	680a      	ldr	r2, [r1, #0]
1001224e:	1888      	adds	r0, r1, r2
10012250:	4283      	cmp	r3, r0
10012252:	d103      	bne.n	1001225c <_free_r+0x34>
10012254:	6818      	ldr	r0, [r3, #0]
10012256:	685b      	ldr	r3, [r3, #4]
10012258:	1882      	adds	r2, r0, r2
1001225a:	600a      	str	r2, [r1, #0]
1001225c:	604b      	str	r3, [r1, #4]
1001225e:	6021      	str	r1, [r4, #0]
10012260:	e024      	b.n	100122ac <_free_r+0x84>
10012262:	428a      	cmp	r2, r1
10012264:	d803      	bhi.n	1001226e <_free_r+0x46>
10012266:	0013      	movs	r3, r2
10012268:	685a      	ldr	r2, [r3, #4]
1001226a:	2a00      	cmp	r2, #0
1001226c:	d1f9      	bne.n	10012262 <_free_r+0x3a>
1001226e:	681d      	ldr	r5, [r3, #0]
10012270:	195c      	adds	r4, r3, r5
10012272:	428c      	cmp	r4, r1
10012274:	d10b      	bne.n	1001228e <_free_r+0x66>
10012276:	6809      	ldr	r1, [r1, #0]
10012278:	1869      	adds	r1, r5, r1
1001227a:	1858      	adds	r0, r3, r1
1001227c:	6019      	str	r1, [r3, #0]
1001227e:	4282      	cmp	r2, r0
10012280:	d114      	bne.n	100122ac <_free_r+0x84>
10012282:	6810      	ldr	r0, [r2, #0]
10012284:	6852      	ldr	r2, [r2, #4]
10012286:	1841      	adds	r1, r0, r1
10012288:	6019      	str	r1, [r3, #0]
1001228a:	605a      	str	r2, [r3, #4]
1001228c:	e00e      	b.n	100122ac <_free_r+0x84>
1001228e:	428c      	cmp	r4, r1
10012290:	d902      	bls.n	10012298 <_free_r+0x70>
10012292:	230c      	movs	r3, #12
10012294:	6003      	str	r3, [r0, #0]
10012296:	e009      	b.n	100122ac <_free_r+0x84>
10012298:	6808      	ldr	r0, [r1, #0]
1001229a:	180c      	adds	r4, r1, r0
1001229c:	42a2      	cmp	r2, r4
1001229e:	d103      	bne.n	100122a8 <_free_r+0x80>
100122a0:	6814      	ldr	r4, [r2, #0]
100122a2:	6852      	ldr	r2, [r2, #4]
100122a4:	1820      	adds	r0, r4, r0
100122a6:	6008      	str	r0, [r1, #0]
100122a8:	604a      	str	r2, [r1, #4]
100122aa:	6059      	str	r1, [r3, #4]
100122ac:	bd30      	pop	{r4, r5, pc}
100122ae:	46c0      	nop			; (mov r8, r8)
100122b0:	100177a4 	.word	0x100177a4

100122b4 <_malloc_r>:
100122b4:	2303      	movs	r3, #3
100122b6:	b570      	push	{r4, r5, r6, lr}
100122b8:	1ccd      	adds	r5, r1, #3
100122ba:	439d      	bics	r5, r3
100122bc:	3508      	adds	r5, #8
100122be:	0006      	movs	r6, r0
100122c0:	2d0c      	cmp	r5, #12
100122c2:	d201      	bcs.n	100122c8 <_malloc_r+0x14>
100122c4:	250c      	movs	r5, #12
100122c6:	e005      	b.n	100122d4 <_malloc_r+0x20>
100122c8:	2d00      	cmp	r5, #0
100122ca:	da03      	bge.n	100122d4 <_malloc_r+0x20>
100122cc:	230c      	movs	r3, #12
100122ce:	2000      	movs	r0, #0
100122d0:	6033      	str	r3, [r6, #0]
100122d2:	e040      	b.n	10012356 <_malloc_r+0xa2>
100122d4:	42a9      	cmp	r1, r5
100122d6:	d8f9      	bhi.n	100122cc <_malloc_r+0x18>
100122d8:	4b1f      	ldr	r3, [pc, #124]	; (10012358 <_malloc_r+0xa4>)
100122da:	681c      	ldr	r4, [r3, #0]
100122dc:	001a      	movs	r2, r3
100122de:	0021      	movs	r1, r4
100122e0:	2900      	cmp	r1, #0
100122e2:	d013      	beq.n	1001230c <_malloc_r+0x58>
100122e4:	680b      	ldr	r3, [r1, #0]
100122e6:	1b5b      	subs	r3, r3, r5
100122e8:	d40d      	bmi.n	10012306 <_malloc_r+0x52>
100122ea:	2b0b      	cmp	r3, #11
100122ec:	d902      	bls.n	100122f4 <_malloc_r+0x40>
100122ee:	600b      	str	r3, [r1, #0]
100122f0:	18cc      	adds	r4, r1, r3
100122f2:	e01e      	b.n	10012332 <_malloc_r+0x7e>
100122f4:	428c      	cmp	r4, r1
100122f6:	d102      	bne.n	100122fe <_malloc_r+0x4a>
100122f8:	6863      	ldr	r3, [r4, #4]
100122fa:	6013      	str	r3, [r2, #0]
100122fc:	e01a      	b.n	10012334 <_malloc_r+0x80>
100122fe:	684b      	ldr	r3, [r1, #4]
10012300:	6063      	str	r3, [r4, #4]
10012302:	000c      	movs	r4, r1
10012304:	e016      	b.n	10012334 <_malloc_r+0x80>
10012306:	000c      	movs	r4, r1
10012308:	6849      	ldr	r1, [r1, #4]
1001230a:	e7e9      	b.n	100122e0 <_malloc_r+0x2c>
1001230c:	4c13      	ldr	r4, [pc, #76]	; (1001235c <_malloc_r+0xa8>)
1001230e:	6823      	ldr	r3, [r4, #0]
10012310:	2b00      	cmp	r3, #0
10012312:	d103      	bne.n	1001231c <_malloc_r+0x68>
10012314:	0030      	movs	r0, r6
10012316:	f000 f8f9 	bl	1001250c <_sbrk_r>
1001231a:	6020      	str	r0, [r4, #0]
1001231c:	0029      	movs	r1, r5
1001231e:	0030      	movs	r0, r6
10012320:	f000 f8f4 	bl	1001250c <_sbrk_r>
10012324:	1c43      	adds	r3, r0, #1
10012326:	d0d1      	beq.n	100122cc <_malloc_r+0x18>
10012328:	2303      	movs	r3, #3
1001232a:	1cc4      	adds	r4, r0, #3
1001232c:	439c      	bics	r4, r3
1001232e:	42a0      	cmp	r0, r4
10012330:	d10a      	bne.n	10012348 <_malloc_r+0x94>
10012332:	6025      	str	r5, [r4, #0]
10012334:	0020      	movs	r0, r4
10012336:	2207      	movs	r2, #7
10012338:	300b      	adds	r0, #11
1001233a:	1d23      	adds	r3, r4, #4
1001233c:	4390      	bics	r0, r2
1001233e:	1ac3      	subs	r3, r0, r3
10012340:	d009      	beq.n	10012356 <_malloc_r+0xa2>
10012342:	425a      	negs	r2, r3
10012344:	50e2      	str	r2, [r4, r3]
10012346:	e006      	b.n	10012356 <_malloc_r+0xa2>
10012348:	1a21      	subs	r1, r4, r0
1001234a:	0030      	movs	r0, r6
1001234c:	f000 f8de 	bl	1001250c <_sbrk_r>
10012350:	1c43      	adds	r3, r0, #1
10012352:	d1ee      	bne.n	10012332 <_malloc_r+0x7e>
10012354:	e7ba      	b.n	100122cc <_malloc_r+0x18>
10012356:	bd70      	pop	{r4, r5, r6, pc}
10012358:	100177a4 	.word	0x100177a4
1001235c:	100177a0 	.word	0x100177a0

10012360 <iprintf>:
10012360:	b40f      	push	{r0, r1, r2, r3}
10012362:	4b0b      	ldr	r3, [pc, #44]	; (10012390 <iprintf+0x30>)
10012364:	b513      	push	{r0, r1, r4, lr}
10012366:	681c      	ldr	r4, [r3, #0]
10012368:	2c00      	cmp	r4, #0
1001236a:	d005      	beq.n	10012378 <iprintf+0x18>
1001236c:	69a3      	ldr	r3, [r4, #24]
1001236e:	2b00      	cmp	r3, #0
10012370:	d102      	bne.n	10012378 <iprintf+0x18>
10012372:	0020      	movs	r0, r4
10012374:	f000 fb94 	bl	10012aa0 <__sinit>
10012378:	ab05      	add	r3, sp, #20
1001237a:	9a04      	ldr	r2, [sp, #16]
1001237c:	68a1      	ldr	r1, [r4, #8]
1001237e:	0020      	movs	r0, r4
10012380:	9301      	str	r3, [sp, #4]
10012382:	f000 fe0d 	bl	10012fa0 <_vfiprintf_r>
10012386:	bc16      	pop	{r1, r2, r4}
10012388:	bc08      	pop	{r3}
1001238a:	b004      	add	sp, #16
1001238c:	4718      	bx	r3
1001238e:	46c0      	nop			; (mov r8, r8)
10012390:	10015cd4 	.word	0x10015cd4

10012394 <putchar>:
10012394:	4b08      	ldr	r3, [pc, #32]	; (100123b8 <putchar+0x24>)
10012396:	b570      	push	{r4, r5, r6, lr}
10012398:	681c      	ldr	r4, [r3, #0]
1001239a:	0005      	movs	r5, r0
1001239c:	2c00      	cmp	r4, #0
1001239e:	d005      	beq.n	100123ac <putchar+0x18>
100123a0:	69a3      	ldr	r3, [r4, #24]
100123a2:	2b00      	cmp	r3, #0
100123a4:	d102      	bne.n	100123ac <putchar+0x18>
100123a6:	0020      	movs	r0, r4
100123a8:	f000 fb7a 	bl	10012aa0 <__sinit>
100123ac:	0029      	movs	r1, r5
100123ae:	68a2      	ldr	r2, [r4, #8]
100123b0:	0020      	movs	r0, r4
100123b2:	f001 f8a1 	bl	100134f8 <_putc_r>
100123b6:	bd70      	pop	{r4, r5, r6, pc}
100123b8:	10015cd4 	.word	0x10015cd4

100123bc <_puts_r>:
100123bc:	b570      	push	{r4, r5, r6, lr}
100123be:	0005      	movs	r5, r0
100123c0:	000e      	movs	r6, r1
100123c2:	2800      	cmp	r0, #0
100123c4:	d004      	beq.n	100123d0 <_puts_r+0x14>
100123c6:	6983      	ldr	r3, [r0, #24]
100123c8:	2b00      	cmp	r3, #0
100123ca:	d101      	bne.n	100123d0 <_puts_r+0x14>
100123cc:	f000 fb68 	bl	10012aa0 <__sinit>
100123d0:	69ab      	ldr	r3, [r5, #24]
100123d2:	68ac      	ldr	r4, [r5, #8]
100123d4:	2b00      	cmp	r3, #0
100123d6:	d102      	bne.n	100123de <_puts_r+0x22>
100123d8:	0028      	movs	r0, r5
100123da:	f000 fb61 	bl	10012aa0 <__sinit>
100123de:	4b25      	ldr	r3, [pc, #148]	; (10012474 <_puts_r+0xb8>)
100123e0:	429c      	cmp	r4, r3
100123e2:	d101      	bne.n	100123e8 <_puts_r+0x2c>
100123e4:	686c      	ldr	r4, [r5, #4]
100123e6:	e008      	b.n	100123fa <_puts_r+0x3e>
100123e8:	4b23      	ldr	r3, [pc, #140]	; (10012478 <_puts_r+0xbc>)
100123ea:	429c      	cmp	r4, r3
100123ec:	d101      	bne.n	100123f2 <_puts_r+0x36>
100123ee:	68ac      	ldr	r4, [r5, #8]
100123f0:	e003      	b.n	100123fa <_puts_r+0x3e>
100123f2:	4b22      	ldr	r3, [pc, #136]	; (1001247c <_puts_r+0xc0>)
100123f4:	429c      	cmp	r4, r3
100123f6:	d100      	bne.n	100123fa <_puts_r+0x3e>
100123f8:	68ec      	ldr	r4, [r5, #12]
100123fa:	89a3      	ldrh	r3, [r4, #12]
100123fc:	071b      	lsls	r3, r3, #28
100123fe:	d502      	bpl.n	10012406 <_puts_r+0x4a>
10012400:	6923      	ldr	r3, [r4, #16]
10012402:	2b00      	cmp	r3, #0
10012404:	d111      	bne.n	1001242a <_puts_r+0x6e>
10012406:	0021      	movs	r1, r4
10012408:	0028      	movs	r0, r5
1001240a:	f000 f9df 	bl	100127cc <__swsetup_r>
1001240e:	2800      	cmp	r0, #0
10012410:	d00b      	beq.n	1001242a <_puts_r+0x6e>
10012412:	2001      	movs	r0, #1
10012414:	4240      	negs	r0, r0
10012416:	e02b      	b.n	10012470 <_puts_r+0xb4>
10012418:	3b01      	subs	r3, #1
1001241a:	3601      	adds	r6, #1
1001241c:	60a3      	str	r3, [r4, #8]
1001241e:	2b00      	cmp	r3, #0
10012420:	db08      	blt.n	10012434 <_puts_r+0x78>
10012422:	6823      	ldr	r3, [r4, #0]
10012424:	1c5a      	adds	r2, r3, #1
10012426:	6022      	str	r2, [r4, #0]
10012428:	7019      	strb	r1, [r3, #0]
1001242a:	7831      	ldrb	r1, [r6, #0]
1001242c:	68a3      	ldr	r3, [r4, #8]
1001242e:	2900      	cmp	r1, #0
10012430:	d1f2      	bne.n	10012418 <_puts_r+0x5c>
10012432:	e00b      	b.n	1001244c <_puts_r+0x90>
10012434:	69a2      	ldr	r2, [r4, #24]
10012436:	4293      	cmp	r3, r2
10012438:	db01      	blt.n	1001243e <_puts_r+0x82>
1001243a:	290a      	cmp	r1, #10
1001243c:	d1f1      	bne.n	10012422 <_puts_r+0x66>
1001243e:	0022      	movs	r2, r4
10012440:	0028      	movs	r0, r5
10012442:	f000 f96b 	bl	1001271c <__swbuf_r>
10012446:	1c43      	adds	r3, r0, #1
10012448:	d1ef      	bne.n	1001242a <_puts_r+0x6e>
1001244a:	e7e2      	b.n	10012412 <_puts_r+0x56>
1001244c:	3b01      	subs	r3, #1
1001244e:	60a3      	str	r3, [r4, #8]
10012450:	2b00      	cmp	r3, #0
10012452:	da08      	bge.n	10012466 <_puts_r+0xaa>
10012454:	0022      	movs	r2, r4
10012456:	310a      	adds	r1, #10
10012458:	0028      	movs	r0, r5
1001245a:	f000 f95f 	bl	1001271c <__swbuf_r>
1001245e:	1c43      	adds	r3, r0, #1
10012460:	d0d7      	beq.n	10012412 <_puts_r+0x56>
10012462:	200a      	movs	r0, #10
10012464:	e004      	b.n	10012470 <_puts_r+0xb4>
10012466:	200a      	movs	r0, #10
10012468:	6823      	ldr	r3, [r4, #0]
1001246a:	1c5a      	adds	r2, r3, #1
1001246c:	6022      	str	r2, [r4, #0]
1001246e:	7018      	strb	r0, [r3, #0]
10012470:	bd70      	pop	{r4, r5, r6, pc}
10012472:	46c0      	nop			; (mov r8, r8)
10012474:	10015ba8 	.word	0x10015ba8
10012478:	10015bc8 	.word	0x10015bc8
1001247c:	10015be8 	.word	0x10015be8

10012480 <puts>:
10012480:	b510      	push	{r4, lr}
10012482:	4b03      	ldr	r3, [pc, #12]	; (10012490 <puts+0x10>)
10012484:	0001      	movs	r1, r0
10012486:	6818      	ldr	r0, [r3, #0]
10012488:	f7ff ff98 	bl	100123bc <_puts_r>
1001248c:	bd10      	pop	{r4, pc}
1001248e:	46c0      	nop			; (mov r8, r8)
10012490:	10015cd4 	.word	0x10015cd4

10012494 <rand>:
10012494:	4b15      	ldr	r3, [pc, #84]	; (100124ec <rand+0x58>)
10012496:	b510      	push	{r4, lr}
10012498:	681c      	ldr	r4, [r3, #0]
1001249a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
1001249c:	2b00      	cmp	r3, #0
1001249e:	d115      	bne.n	100124cc <rand+0x38>
100124a0:	2018      	movs	r0, #24
100124a2:	f7ff fe97 	bl	100121d4 <malloc>
100124a6:	4b12      	ldr	r3, [pc, #72]	; (100124f0 <rand+0x5c>)
100124a8:	63a0      	str	r0, [r4, #56]	; 0x38
100124aa:	8003      	strh	r3, [r0, #0]
100124ac:	4b11      	ldr	r3, [pc, #68]	; (100124f4 <rand+0x60>)
100124ae:	2201      	movs	r2, #1
100124b0:	8043      	strh	r3, [r0, #2]
100124b2:	4b11      	ldr	r3, [pc, #68]	; (100124f8 <rand+0x64>)
100124b4:	8083      	strh	r3, [r0, #4]
100124b6:	4b11      	ldr	r3, [pc, #68]	; (100124fc <rand+0x68>)
100124b8:	80c3      	strh	r3, [r0, #6]
100124ba:	4b11      	ldr	r3, [pc, #68]	; (10012500 <rand+0x6c>)
100124bc:	8103      	strh	r3, [r0, #8]
100124be:	2305      	movs	r3, #5
100124c0:	8143      	strh	r3, [r0, #10]
100124c2:	3306      	adds	r3, #6
100124c4:	8183      	strh	r3, [r0, #12]
100124c6:	2300      	movs	r3, #0
100124c8:	6102      	str	r2, [r0, #16]
100124ca:	6143      	str	r3, [r0, #20]
100124cc:	6ba4      	ldr	r4, [r4, #56]	; 0x38
100124ce:	4a0d      	ldr	r2, [pc, #52]	; (10012504 <rand+0x70>)
100124d0:	6920      	ldr	r0, [r4, #16]
100124d2:	6961      	ldr	r1, [r4, #20]
100124d4:	4b0c      	ldr	r3, [pc, #48]	; (10012508 <rand+0x74>)
100124d6:	f001 f955 	bl	10013784 <__aeabi_lmul>
100124da:	2201      	movs	r2, #1
100124dc:	2300      	movs	r3, #0
100124de:	1880      	adds	r0, r0, r2
100124e0:	4159      	adcs	r1, r3
100124e2:	6120      	str	r0, [r4, #16]
100124e4:	6161      	str	r1, [r4, #20]
100124e6:	0048      	lsls	r0, r1, #1
100124e8:	0840      	lsrs	r0, r0, #1
100124ea:	bd10      	pop	{r4, pc}
100124ec:	10015cd4 	.word	0x10015cd4
100124f0:	0000330e 	.word	0x0000330e
100124f4:	ffffabcd 	.word	0xffffabcd
100124f8:	00001234 	.word	0x00001234
100124fc:	ffffe66d 	.word	0xffffe66d
10012500:	ffffdeec 	.word	0xffffdeec
10012504:	4c957f2d 	.word	0x4c957f2d
10012508:	5851f42d 	.word	0x5851f42d

1001250c <_sbrk_r>:
1001250c:	2300      	movs	r3, #0
1001250e:	b570      	push	{r4, r5, r6, lr}
10012510:	4c06      	ldr	r4, [pc, #24]	; (1001252c <_sbrk_r+0x20>)
10012512:	0005      	movs	r5, r0
10012514:	0008      	movs	r0, r1
10012516:	6023      	str	r3, [r4, #0]
10012518:	f7f8 fe84 	bl	1000b224 <_sbrk>
1001251c:	1c43      	adds	r3, r0, #1
1001251e:	d103      	bne.n	10012528 <_sbrk_r+0x1c>
10012520:	6823      	ldr	r3, [r4, #0]
10012522:	2b00      	cmp	r3, #0
10012524:	d000      	beq.n	10012528 <_sbrk_r+0x1c>
10012526:	602b      	str	r3, [r5, #0]
10012528:	bd70      	pop	{r4, r5, r6, pc}
1001252a:	46c0      	nop			; (mov r8, r8)
1001252c:	1001a774 	.word	0x1001a774

10012530 <setbuf>:
10012530:	424a      	negs	r2, r1
10012532:	414a      	adcs	r2, r1
10012534:	2380      	movs	r3, #128	; 0x80
10012536:	b510      	push	{r4, lr}
10012538:	0052      	lsls	r2, r2, #1
1001253a:	00db      	lsls	r3, r3, #3
1001253c:	f000 f802 	bl	10012544 <setvbuf>
10012540:	bd10      	pop	{r4, pc}
	...

10012544 <setvbuf>:
10012544:	b5f0      	push	{r4, r5, r6, r7, lr}
10012546:	001d      	movs	r5, r3
10012548:	4b51      	ldr	r3, [pc, #324]	; (10012690 <setvbuf+0x14c>)
1001254a:	b085      	sub	sp, #20
1001254c:	681e      	ldr	r6, [r3, #0]
1001254e:	0004      	movs	r4, r0
10012550:	000f      	movs	r7, r1
10012552:	9200      	str	r2, [sp, #0]
10012554:	2e00      	cmp	r6, #0
10012556:	d005      	beq.n	10012564 <setvbuf+0x20>
10012558:	69b3      	ldr	r3, [r6, #24]
1001255a:	2b00      	cmp	r3, #0
1001255c:	d102      	bne.n	10012564 <setvbuf+0x20>
1001255e:	0030      	movs	r0, r6
10012560:	f000 fa9e 	bl	10012aa0 <__sinit>
10012564:	4b4b      	ldr	r3, [pc, #300]	; (10012694 <setvbuf+0x150>)
10012566:	429c      	cmp	r4, r3
10012568:	d101      	bne.n	1001256e <setvbuf+0x2a>
1001256a:	6874      	ldr	r4, [r6, #4]
1001256c:	e008      	b.n	10012580 <setvbuf+0x3c>
1001256e:	4b4a      	ldr	r3, [pc, #296]	; (10012698 <setvbuf+0x154>)
10012570:	429c      	cmp	r4, r3
10012572:	d101      	bne.n	10012578 <setvbuf+0x34>
10012574:	68b4      	ldr	r4, [r6, #8]
10012576:	e003      	b.n	10012580 <setvbuf+0x3c>
10012578:	4b48      	ldr	r3, [pc, #288]	; (1001269c <setvbuf+0x158>)
1001257a:	429c      	cmp	r4, r3
1001257c:	d100      	bne.n	10012580 <setvbuf+0x3c>
1001257e:	68f4      	ldr	r4, [r6, #12]
10012580:	9b00      	ldr	r3, [sp, #0]
10012582:	2b02      	cmp	r3, #2
10012584:	d005      	beq.n	10012592 <setvbuf+0x4e>
10012586:	2b01      	cmp	r3, #1
10012588:	d900      	bls.n	1001258c <setvbuf+0x48>
1001258a:	e07c      	b.n	10012686 <setvbuf+0x142>
1001258c:	2d00      	cmp	r5, #0
1001258e:	da00      	bge.n	10012592 <setvbuf+0x4e>
10012590:	e079      	b.n	10012686 <setvbuf+0x142>
10012592:	0021      	movs	r1, r4
10012594:	0030      	movs	r0, r6
10012596:	f000 fa15 	bl	100129c4 <_fflush_r>
1001259a:	6b61      	ldr	r1, [r4, #52]	; 0x34
1001259c:	2900      	cmp	r1, #0
1001259e:	d008      	beq.n	100125b2 <setvbuf+0x6e>
100125a0:	0023      	movs	r3, r4
100125a2:	3344      	adds	r3, #68	; 0x44
100125a4:	4299      	cmp	r1, r3
100125a6:	d002      	beq.n	100125ae <setvbuf+0x6a>
100125a8:	0030      	movs	r0, r6
100125aa:	f7ff fe3d 	bl	10012228 <_free_r>
100125ae:	2300      	movs	r3, #0
100125b0:	6363      	str	r3, [r4, #52]	; 0x34
100125b2:	2300      	movs	r3, #0
100125b4:	61a3      	str	r3, [r4, #24]
100125b6:	6063      	str	r3, [r4, #4]
100125b8:	89a3      	ldrh	r3, [r4, #12]
100125ba:	061b      	lsls	r3, r3, #24
100125bc:	d503      	bpl.n	100125c6 <setvbuf+0x82>
100125be:	6921      	ldr	r1, [r4, #16]
100125c0:	0030      	movs	r0, r6
100125c2:	f7ff fe31 	bl	10012228 <_free_r>
100125c6:	89a2      	ldrh	r2, [r4, #12]
100125c8:	4b35      	ldr	r3, [pc, #212]	; (100126a0 <setvbuf+0x15c>)
100125ca:	4013      	ands	r3, r2
100125cc:	81a3      	strh	r3, [r4, #12]
100125ce:	9b00      	ldr	r3, [sp, #0]
100125d0:	2b02      	cmp	r3, #2
100125d2:	d021      	beq.n	10012618 <setvbuf+0xd4>
100125d4:	ab03      	add	r3, sp, #12
100125d6:	aa02      	add	r2, sp, #8
100125d8:	0021      	movs	r1, r4
100125da:	0030      	movs	r0, r6
100125dc:	f000 faf4 	bl	10012bc8 <__swhatbuf_r>
100125e0:	89a3      	ldrh	r3, [r4, #12]
100125e2:	4318      	orrs	r0, r3
100125e4:	81a0      	strh	r0, [r4, #12]
100125e6:	2d00      	cmp	r5, #0
100125e8:	d101      	bne.n	100125ee <setvbuf+0xaa>
100125ea:	9d02      	ldr	r5, [sp, #8]
100125ec:	e001      	b.n	100125f2 <setvbuf+0xae>
100125ee:	2f00      	cmp	r7, #0
100125f0:	d125      	bne.n	1001263e <setvbuf+0xfa>
100125f2:	0028      	movs	r0, r5
100125f4:	f7ff fdee 	bl	100121d4 <malloc>
100125f8:	9501      	str	r5, [sp, #4]
100125fa:	1e07      	subs	r7, r0, #0
100125fc:	d11a      	bne.n	10012634 <setvbuf+0xf0>
100125fe:	9b02      	ldr	r3, [sp, #8]
10012600:	9301      	str	r3, [sp, #4]
10012602:	42ab      	cmp	r3, r5
10012604:	d102      	bne.n	1001260c <setvbuf+0xc8>
10012606:	2001      	movs	r0, #1
10012608:	4240      	negs	r0, r0
1001260a:	e006      	b.n	1001261a <setvbuf+0xd6>
1001260c:	9801      	ldr	r0, [sp, #4]
1001260e:	f7ff fde1 	bl	100121d4 <malloc>
10012612:	1e07      	subs	r7, r0, #0
10012614:	d10e      	bne.n	10012634 <setvbuf+0xf0>
10012616:	e7f6      	b.n	10012606 <setvbuf+0xc2>
10012618:	2000      	movs	r0, #0
1001261a:	2202      	movs	r2, #2
1001261c:	89a3      	ldrh	r3, [r4, #12]
1001261e:	4313      	orrs	r3, r2
10012620:	81a3      	strh	r3, [r4, #12]
10012622:	2300      	movs	r3, #0
10012624:	60a3      	str	r3, [r4, #8]
10012626:	0023      	movs	r3, r4
10012628:	3347      	adds	r3, #71	; 0x47
1001262a:	6023      	str	r3, [r4, #0]
1001262c:	6123      	str	r3, [r4, #16]
1001262e:	2301      	movs	r3, #1
10012630:	6163      	str	r3, [r4, #20]
10012632:	e02a      	b.n	1001268a <setvbuf+0x146>
10012634:	2280      	movs	r2, #128	; 0x80
10012636:	89a3      	ldrh	r3, [r4, #12]
10012638:	9d01      	ldr	r5, [sp, #4]
1001263a:	4313      	orrs	r3, r2
1001263c:	81a3      	strh	r3, [r4, #12]
1001263e:	69b3      	ldr	r3, [r6, #24]
10012640:	2b00      	cmp	r3, #0
10012642:	d102      	bne.n	1001264a <setvbuf+0x106>
10012644:	0030      	movs	r0, r6
10012646:	f000 fa2b 	bl	10012aa0 <__sinit>
1001264a:	9b00      	ldr	r3, [sp, #0]
1001264c:	2b01      	cmp	r3, #1
1001264e:	d103      	bne.n	10012658 <setvbuf+0x114>
10012650:	89a3      	ldrh	r3, [r4, #12]
10012652:	9a00      	ldr	r2, [sp, #0]
10012654:	431a      	orrs	r2, r3
10012656:	81a2      	strh	r2, [r4, #12]
10012658:	2308      	movs	r3, #8
1001265a:	89a2      	ldrh	r2, [r4, #12]
1001265c:	6027      	str	r7, [r4, #0]
1001265e:	4013      	ands	r3, r2
10012660:	6127      	str	r7, [r4, #16]
10012662:	6165      	str	r5, [r4, #20]
10012664:	1e18      	subs	r0, r3, #0
10012666:	d00c      	beq.n	10012682 <setvbuf+0x13e>
10012668:	2301      	movs	r3, #1
1001266a:	401a      	ands	r2, r3
1001266c:	2300      	movs	r3, #0
1001266e:	1e10      	subs	r0, r2, #0
10012670:	4298      	cmp	r0, r3
10012672:	d004      	beq.n	1001267e <setvbuf+0x13a>
10012674:	426d      	negs	r5, r5
10012676:	60a3      	str	r3, [r4, #8]
10012678:	61a5      	str	r5, [r4, #24]
1001267a:	0018      	movs	r0, r3
1001267c:	e005      	b.n	1001268a <setvbuf+0x146>
1001267e:	60a5      	str	r5, [r4, #8]
10012680:	e003      	b.n	1001268a <setvbuf+0x146>
10012682:	60a3      	str	r3, [r4, #8]
10012684:	e001      	b.n	1001268a <setvbuf+0x146>
10012686:	2001      	movs	r0, #1
10012688:	4240      	negs	r0, r0
1001268a:	b005      	add	sp, #20
1001268c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001268e:	46c0      	nop			; (mov r8, r8)
10012690:	10015cd4 	.word	0x10015cd4
10012694:	10015ba8 	.word	0x10015ba8
10012698:	10015bc8 	.word	0x10015bc8
1001269c:	10015be8 	.word	0x10015be8
100126a0:	fffff35c 	.word	0xfffff35c

100126a4 <siprintf>:
100126a4:	b40e      	push	{r1, r2, r3}
100126a6:	b510      	push	{r4, lr}
100126a8:	b09d      	sub	sp, #116	; 0x74
100126aa:	a902      	add	r1, sp, #8
100126ac:	9002      	str	r0, [sp, #8]
100126ae:	6108      	str	r0, [r1, #16]
100126b0:	480b      	ldr	r0, [pc, #44]	; (100126e0 <siprintf+0x3c>)
100126b2:	2482      	movs	r4, #130	; 0x82
100126b4:	6088      	str	r0, [r1, #8]
100126b6:	6148      	str	r0, [r1, #20]
100126b8:	2001      	movs	r0, #1
100126ba:	4240      	negs	r0, r0
100126bc:	ab1f      	add	r3, sp, #124	; 0x7c
100126be:	81c8      	strh	r0, [r1, #14]
100126c0:	4808      	ldr	r0, [pc, #32]	; (100126e4 <siprintf+0x40>)
100126c2:	cb04      	ldmia	r3!, {r2}
100126c4:	00a4      	lsls	r4, r4, #2
100126c6:	6800      	ldr	r0, [r0, #0]
100126c8:	9301      	str	r3, [sp, #4]
100126ca:	818c      	strh	r4, [r1, #12]
100126cc:	f000 fb42 	bl	10012d54 <_svfiprintf_r>
100126d0:	2300      	movs	r3, #0
100126d2:	9a02      	ldr	r2, [sp, #8]
100126d4:	7013      	strb	r3, [r2, #0]
100126d6:	b01d      	add	sp, #116	; 0x74
100126d8:	bc10      	pop	{r4}
100126da:	bc08      	pop	{r3}
100126dc:	b003      	add	sp, #12
100126de:	4718      	bx	r3
100126e0:	7fffffff 	.word	0x7fffffff
100126e4:	10015cd4 	.word	0x10015cd4

100126e8 <strlen>:
100126e8:	2300      	movs	r3, #0
100126ea:	5cc2      	ldrb	r2, [r0, r3]
100126ec:	3301      	adds	r3, #1
100126ee:	2a00      	cmp	r2, #0
100126f0:	d1fb      	bne.n	100126ea <strlen+0x2>
100126f2:	1e58      	subs	r0, r3, #1
100126f4:	4770      	bx	lr

100126f6 <strncpy>:
100126f6:	0003      	movs	r3, r0
100126f8:	b530      	push	{r4, r5, lr}
100126fa:	2a00      	cmp	r2, #0
100126fc:	d00d      	beq.n	1001271a <strncpy+0x24>
100126fe:	780c      	ldrb	r4, [r1, #0]
10012700:	3301      	adds	r3, #1
10012702:	1e5d      	subs	r5, r3, #1
10012704:	3a01      	subs	r2, #1
10012706:	702c      	strb	r4, [r5, #0]
10012708:	3101      	adds	r1, #1
1001270a:	2c00      	cmp	r4, #0
1001270c:	d1f5      	bne.n	100126fa <strncpy+0x4>
1001270e:	189a      	adds	r2, r3, r2
10012710:	429a      	cmp	r2, r3
10012712:	d002      	beq.n	1001271a <strncpy+0x24>
10012714:	701c      	strb	r4, [r3, #0]
10012716:	3301      	adds	r3, #1
10012718:	e7fa      	b.n	10012710 <strncpy+0x1a>
1001271a:	bd30      	pop	{r4, r5, pc}

1001271c <__swbuf_r>:
1001271c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001271e:	0005      	movs	r5, r0
10012720:	000f      	movs	r7, r1
10012722:	0014      	movs	r4, r2
10012724:	2800      	cmp	r0, #0
10012726:	d004      	beq.n	10012732 <__swbuf_r+0x16>
10012728:	6983      	ldr	r3, [r0, #24]
1001272a:	2b00      	cmp	r3, #0
1001272c:	d101      	bne.n	10012732 <__swbuf_r+0x16>
1001272e:	f000 f9b7 	bl	10012aa0 <__sinit>
10012732:	4b23      	ldr	r3, [pc, #140]	; (100127c0 <__swbuf_r+0xa4>)
10012734:	429c      	cmp	r4, r3
10012736:	d101      	bne.n	1001273c <__swbuf_r+0x20>
10012738:	686c      	ldr	r4, [r5, #4]
1001273a:	e008      	b.n	1001274e <__swbuf_r+0x32>
1001273c:	4b21      	ldr	r3, [pc, #132]	; (100127c4 <__swbuf_r+0xa8>)
1001273e:	429c      	cmp	r4, r3
10012740:	d101      	bne.n	10012746 <__swbuf_r+0x2a>
10012742:	68ac      	ldr	r4, [r5, #8]
10012744:	e003      	b.n	1001274e <__swbuf_r+0x32>
10012746:	4b20      	ldr	r3, [pc, #128]	; (100127c8 <__swbuf_r+0xac>)
10012748:	429c      	cmp	r4, r3
1001274a:	d100      	bne.n	1001274e <__swbuf_r+0x32>
1001274c:	68ec      	ldr	r4, [r5, #12]
1001274e:	69a3      	ldr	r3, [r4, #24]
10012750:	60a3      	str	r3, [r4, #8]
10012752:	89a3      	ldrh	r3, [r4, #12]
10012754:	071b      	lsls	r3, r3, #28
10012756:	d50a      	bpl.n	1001276e <__swbuf_r+0x52>
10012758:	6923      	ldr	r3, [r4, #16]
1001275a:	2b00      	cmp	r3, #0
1001275c:	d007      	beq.n	1001276e <__swbuf_r+0x52>
1001275e:	6823      	ldr	r3, [r4, #0]
10012760:	6922      	ldr	r2, [r4, #16]
10012762:	b2fe      	uxtb	r6, r7
10012764:	1a98      	subs	r0, r3, r2
10012766:	6963      	ldr	r3, [r4, #20]
10012768:	4298      	cmp	r0, r3
1001276a:	db0f      	blt.n	1001278c <__swbuf_r+0x70>
1001276c:	e008      	b.n	10012780 <__swbuf_r+0x64>
1001276e:	0021      	movs	r1, r4
10012770:	0028      	movs	r0, r5
10012772:	f000 f82b 	bl	100127cc <__swsetup_r>
10012776:	2800      	cmp	r0, #0
10012778:	d0f1      	beq.n	1001275e <__swbuf_r+0x42>
1001277a:	2001      	movs	r0, #1
1001277c:	4240      	negs	r0, r0
1001277e:	e01d      	b.n	100127bc <__swbuf_r+0xa0>
10012780:	0021      	movs	r1, r4
10012782:	0028      	movs	r0, r5
10012784:	f000 f91e 	bl	100129c4 <_fflush_r>
10012788:	2800      	cmp	r0, #0
1001278a:	d1f6      	bne.n	1001277a <__swbuf_r+0x5e>
1001278c:	68a3      	ldr	r3, [r4, #8]
1001278e:	3001      	adds	r0, #1
10012790:	3b01      	subs	r3, #1
10012792:	60a3      	str	r3, [r4, #8]
10012794:	6823      	ldr	r3, [r4, #0]
10012796:	1c5a      	adds	r2, r3, #1
10012798:	6022      	str	r2, [r4, #0]
1001279a:	701f      	strb	r7, [r3, #0]
1001279c:	6963      	ldr	r3, [r4, #20]
1001279e:	4298      	cmp	r0, r3
100127a0:	d005      	beq.n	100127ae <__swbuf_r+0x92>
100127a2:	89a3      	ldrh	r3, [r4, #12]
100127a4:	0030      	movs	r0, r6
100127a6:	07db      	lsls	r3, r3, #31
100127a8:	d508      	bpl.n	100127bc <__swbuf_r+0xa0>
100127aa:	2e0a      	cmp	r6, #10
100127ac:	d106      	bne.n	100127bc <__swbuf_r+0xa0>
100127ae:	0021      	movs	r1, r4
100127b0:	0028      	movs	r0, r5
100127b2:	f000 f907 	bl	100129c4 <_fflush_r>
100127b6:	2800      	cmp	r0, #0
100127b8:	d1df      	bne.n	1001277a <__swbuf_r+0x5e>
100127ba:	0030      	movs	r0, r6
100127bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100127be:	46c0      	nop			; (mov r8, r8)
100127c0:	10015ba8 	.word	0x10015ba8
100127c4:	10015bc8 	.word	0x10015bc8
100127c8:	10015be8 	.word	0x10015be8

100127cc <__swsetup_r>:
100127cc:	4b36      	ldr	r3, [pc, #216]	; (100128a8 <__swsetup_r+0xdc>)
100127ce:	b570      	push	{r4, r5, r6, lr}
100127d0:	681d      	ldr	r5, [r3, #0]
100127d2:	0006      	movs	r6, r0
100127d4:	000c      	movs	r4, r1
100127d6:	2d00      	cmp	r5, #0
100127d8:	d005      	beq.n	100127e6 <__swsetup_r+0x1a>
100127da:	69ab      	ldr	r3, [r5, #24]
100127dc:	2b00      	cmp	r3, #0
100127de:	d102      	bne.n	100127e6 <__swsetup_r+0x1a>
100127e0:	0028      	movs	r0, r5
100127e2:	f000 f95d 	bl	10012aa0 <__sinit>
100127e6:	4b31      	ldr	r3, [pc, #196]	; (100128ac <__swsetup_r+0xe0>)
100127e8:	429c      	cmp	r4, r3
100127ea:	d101      	bne.n	100127f0 <__swsetup_r+0x24>
100127ec:	686c      	ldr	r4, [r5, #4]
100127ee:	e008      	b.n	10012802 <__swsetup_r+0x36>
100127f0:	4b2f      	ldr	r3, [pc, #188]	; (100128b0 <__swsetup_r+0xe4>)
100127f2:	429c      	cmp	r4, r3
100127f4:	d101      	bne.n	100127fa <__swsetup_r+0x2e>
100127f6:	68ac      	ldr	r4, [r5, #8]
100127f8:	e003      	b.n	10012802 <__swsetup_r+0x36>
100127fa:	4b2e      	ldr	r3, [pc, #184]	; (100128b4 <__swsetup_r+0xe8>)
100127fc:	429c      	cmp	r4, r3
100127fe:	d100      	bne.n	10012802 <__swsetup_r+0x36>
10012800:	68ec      	ldr	r4, [r5, #12]
10012802:	220c      	movs	r2, #12
10012804:	5ea3      	ldrsh	r3, [r4, r2]
10012806:	b29a      	uxth	r2, r3
10012808:	0711      	lsls	r1, r2, #28
1001280a:	d423      	bmi.n	10012854 <__swsetup_r+0x88>
1001280c:	06d1      	lsls	r1, r2, #27
1001280e:	d407      	bmi.n	10012820 <__swsetup_r+0x54>
10012810:	2209      	movs	r2, #9
10012812:	2001      	movs	r0, #1
10012814:	6032      	str	r2, [r6, #0]
10012816:	3237      	adds	r2, #55	; 0x37
10012818:	4313      	orrs	r3, r2
1001281a:	81a3      	strh	r3, [r4, #12]
1001281c:	4240      	negs	r0, r0
1001281e:	e042      	b.n	100128a6 <__swsetup_r+0xda>
10012820:	0753      	lsls	r3, r2, #29
10012822:	d513      	bpl.n	1001284c <__swsetup_r+0x80>
10012824:	6b61      	ldr	r1, [r4, #52]	; 0x34
10012826:	2900      	cmp	r1, #0
10012828:	d008      	beq.n	1001283c <__swsetup_r+0x70>
1001282a:	0023      	movs	r3, r4
1001282c:	3344      	adds	r3, #68	; 0x44
1001282e:	4299      	cmp	r1, r3
10012830:	d002      	beq.n	10012838 <__swsetup_r+0x6c>
10012832:	0030      	movs	r0, r6
10012834:	f7ff fcf8 	bl	10012228 <_free_r>
10012838:	2300      	movs	r3, #0
1001283a:	6363      	str	r3, [r4, #52]	; 0x34
1001283c:	2224      	movs	r2, #36	; 0x24
1001283e:	89a3      	ldrh	r3, [r4, #12]
10012840:	4393      	bics	r3, r2
10012842:	81a3      	strh	r3, [r4, #12]
10012844:	2300      	movs	r3, #0
10012846:	6063      	str	r3, [r4, #4]
10012848:	6923      	ldr	r3, [r4, #16]
1001284a:	6023      	str	r3, [r4, #0]
1001284c:	2208      	movs	r2, #8
1001284e:	89a3      	ldrh	r3, [r4, #12]
10012850:	4313      	orrs	r3, r2
10012852:	81a3      	strh	r3, [r4, #12]
10012854:	6923      	ldr	r3, [r4, #16]
10012856:	2b00      	cmp	r3, #0
10012858:	d10b      	bne.n	10012872 <__swsetup_r+0xa6>
1001285a:	23a0      	movs	r3, #160	; 0xa0
1001285c:	89a2      	ldrh	r2, [r4, #12]
1001285e:	009b      	lsls	r3, r3, #2
10012860:	4013      	ands	r3, r2
10012862:	2280      	movs	r2, #128	; 0x80
10012864:	0092      	lsls	r2, r2, #2
10012866:	4293      	cmp	r3, r2
10012868:	d003      	beq.n	10012872 <__swsetup_r+0xa6>
1001286a:	0021      	movs	r1, r4
1001286c:	0030      	movs	r0, r6
1001286e:	f000 f9d1 	bl	10012c14 <__smakebuf_r>
10012872:	2301      	movs	r3, #1
10012874:	89a2      	ldrh	r2, [r4, #12]
10012876:	4013      	ands	r3, r2
10012878:	d005      	beq.n	10012886 <__swsetup_r+0xba>
1001287a:	2300      	movs	r3, #0
1001287c:	60a3      	str	r3, [r4, #8]
1001287e:	6963      	ldr	r3, [r4, #20]
10012880:	425b      	negs	r3, r3
10012882:	61a3      	str	r3, [r4, #24]
10012884:	e003      	b.n	1001288e <__swsetup_r+0xc2>
10012886:	0792      	lsls	r2, r2, #30
10012888:	d400      	bmi.n	1001288c <__swsetup_r+0xc0>
1001288a:	6963      	ldr	r3, [r4, #20]
1001288c:	60a3      	str	r3, [r4, #8]
1001288e:	2000      	movs	r0, #0
10012890:	6923      	ldr	r3, [r4, #16]
10012892:	4283      	cmp	r3, r0
10012894:	d107      	bne.n	100128a6 <__swsetup_r+0xda>
10012896:	220c      	movs	r2, #12
10012898:	5ea3      	ldrsh	r3, [r4, r2]
1001289a:	061a      	lsls	r2, r3, #24
1001289c:	d503      	bpl.n	100128a6 <__swsetup_r+0xda>
1001289e:	2240      	movs	r2, #64	; 0x40
100128a0:	4313      	orrs	r3, r2
100128a2:	81a3      	strh	r3, [r4, #12]
100128a4:	3801      	subs	r0, #1
100128a6:	bd70      	pop	{r4, r5, r6, pc}
100128a8:	10015cd4 	.word	0x10015cd4
100128ac:	10015ba8 	.word	0x10015ba8
100128b0:	10015bc8 	.word	0x10015bc8
100128b4:	10015be8 	.word	0x10015be8

100128b8 <__sflush_r>:
100128b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100128ba:	898a      	ldrh	r2, [r1, #12]
100128bc:	0005      	movs	r5, r0
100128be:	000c      	movs	r4, r1
100128c0:	0713      	lsls	r3, r2, #28
100128c2:	d45a      	bmi.n	1001297a <__sflush_r+0xc2>
100128c4:	684b      	ldr	r3, [r1, #4]
100128c6:	2b00      	cmp	r3, #0
100128c8:	dc02      	bgt.n	100128d0 <__sflush_r+0x18>
100128ca:	6c0b      	ldr	r3, [r1, #64]	; 0x40
100128cc:	2b00      	cmp	r3, #0
100128ce:	dd19      	ble.n	10012904 <__sflush_r+0x4c>
100128d0:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
100128d2:	2f00      	cmp	r7, #0
100128d4:	d016      	beq.n	10012904 <__sflush_r+0x4c>
100128d6:	2300      	movs	r3, #0
100128d8:	682e      	ldr	r6, [r5, #0]
100128da:	602b      	str	r3, [r5, #0]
100128dc:	2380      	movs	r3, #128	; 0x80
100128de:	015b      	lsls	r3, r3, #5
100128e0:	401a      	ands	r2, r3
100128e2:	d001      	beq.n	100128e8 <__sflush_r+0x30>
100128e4:	6d60      	ldr	r0, [r4, #84]	; 0x54
100128e6:	e014      	b.n	10012912 <__sflush_r+0x5a>
100128e8:	2301      	movs	r3, #1
100128ea:	6a21      	ldr	r1, [r4, #32]
100128ec:	0028      	movs	r0, r5
100128ee:	47b8      	blx	r7
100128f0:	1c43      	adds	r3, r0, #1
100128f2:	d10e      	bne.n	10012912 <__sflush_r+0x5a>
100128f4:	682b      	ldr	r3, [r5, #0]
100128f6:	2b00      	cmp	r3, #0
100128f8:	d00b      	beq.n	10012912 <__sflush_r+0x5a>
100128fa:	2b1d      	cmp	r3, #29
100128fc:	d001      	beq.n	10012902 <__sflush_r+0x4a>
100128fe:	2b16      	cmp	r3, #22
10012900:	d102      	bne.n	10012908 <__sflush_r+0x50>
10012902:	602e      	str	r6, [r5, #0]
10012904:	2000      	movs	r0, #0
10012906:	e05a      	b.n	100129be <__sflush_r+0x106>
10012908:	2240      	movs	r2, #64	; 0x40
1001290a:	89a3      	ldrh	r3, [r4, #12]
1001290c:	4313      	orrs	r3, r2
1001290e:	81a3      	strh	r3, [r4, #12]
10012910:	e055      	b.n	100129be <__sflush_r+0x106>
10012912:	89a3      	ldrh	r3, [r4, #12]
10012914:	075b      	lsls	r3, r3, #29
10012916:	d506      	bpl.n	10012926 <__sflush_r+0x6e>
10012918:	6863      	ldr	r3, [r4, #4]
1001291a:	1ac0      	subs	r0, r0, r3
1001291c:	6b63      	ldr	r3, [r4, #52]	; 0x34
1001291e:	2b00      	cmp	r3, #0
10012920:	d001      	beq.n	10012926 <__sflush_r+0x6e>
10012922:	6c23      	ldr	r3, [r4, #64]	; 0x40
10012924:	1ac0      	subs	r0, r0, r3
10012926:	2300      	movs	r3, #0
10012928:	0002      	movs	r2, r0
1001292a:	6a21      	ldr	r1, [r4, #32]
1001292c:	0028      	movs	r0, r5
1001292e:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
10012930:	47b8      	blx	r7
10012932:	89a3      	ldrh	r3, [r4, #12]
10012934:	1c42      	adds	r2, r0, #1
10012936:	d106      	bne.n	10012946 <__sflush_r+0x8e>
10012938:	6829      	ldr	r1, [r5, #0]
1001293a:	291d      	cmp	r1, #29
1001293c:	d83a      	bhi.n	100129b4 <__sflush_r+0xfc>
1001293e:	4a20      	ldr	r2, [pc, #128]	; (100129c0 <__sflush_r+0x108>)
10012940:	40ca      	lsrs	r2, r1
10012942:	07d2      	lsls	r2, r2, #31
10012944:	d536      	bpl.n	100129b4 <__sflush_r+0xfc>
10012946:	2200      	movs	r2, #0
10012948:	6062      	str	r2, [r4, #4]
1001294a:	6922      	ldr	r2, [r4, #16]
1001294c:	6022      	str	r2, [r4, #0]
1001294e:	04db      	lsls	r3, r3, #19
10012950:	d505      	bpl.n	1001295e <__sflush_r+0xa6>
10012952:	1c43      	adds	r3, r0, #1
10012954:	d102      	bne.n	1001295c <__sflush_r+0xa4>
10012956:	682b      	ldr	r3, [r5, #0]
10012958:	2b00      	cmp	r3, #0
1001295a:	d100      	bne.n	1001295e <__sflush_r+0xa6>
1001295c:	6560      	str	r0, [r4, #84]	; 0x54
1001295e:	6b61      	ldr	r1, [r4, #52]	; 0x34
10012960:	602e      	str	r6, [r5, #0]
10012962:	2900      	cmp	r1, #0
10012964:	d0ce      	beq.n	10012904 <__sflush_r+0x4c>
10012966:	0023      	movs	r3, r4
10012968:	3344      	adds	r3, #68	; 0x44
1001296a:	4299      	cmp	r1, r3
1001296c:	d002      	beq.n	10012974 <__sflush_r+0xbc>
1001296e:	0028      	movs	r0, r5
10012970:	f7ff fc5a 	bl	10012228 <_free_r>
10012974:	2000      	movs	r0, #0
10012976:	6360      	str	r0, [r4, #52]	; 0x34
10012978:	e021      	b.n	100129be <__sflush_r+0x106>
1001297a:	690f      	ldr	r7, [r1, #16]
1001297c:	2f00      	cmp	r7, #0
1001297e:	d0c1      	beq.n	10012904 <__sflush_r+0x4c>
10012980:	680b      	ldr	r3, [r1, #0]
10012982:	600f      	str	r7, [r1, #0]
10012984:	1bdb      	subs	r3, r3, r7
10012986:	9301      	str	r3, [sp, #4]
10012988:	2300      	movs	r3, #0
1001298a:	0792      	lsls	r2, r2, #30
1001298c:	d100      	bne.n	10012990 <__sflush_r+0xd8>
1001298e:	694b      	ldr	r3, [r1, #20]
10012990:	60a3      	str	r3, [r4, #8]
10012992:	e003      	b.n	1001299c <__sflush_r+0xe4>
10012994:	9b01      	ldr	r3, [sp, #4]
10012996:	183f      	adds	r7, r7, r0
10012998:	1a1b      	subs	r3, r3, r0
1001299a:	9301      	str	r3, [sp, #4]
1001299c:	9b01      	ldr	r3, [sp, #4]
1001299e:	2b00      	cmp	r3, #0
100129a0:	ddb0      	ble.n	10012904 <__sflush_r+0x4c>
100129a2:	9b01      	ldr	r3, [sp, #4]
100129a4:	003a      	movs	r2, r7
100129a6:	6a21      	ldr	r1, [r4, #32]
100129a8:	0028      	movs	r0, r5
100129aa:	6aa6      	ldr	r6, [r4, #40]	; 0x28
100129ac:	47b0      	blx	r6
100129ae:	2800      	cmp	r0, #0
100129b0:	dcf0      	bgt.n	10012994 <__sflush_r+0xdc>
100129b2:	89a3      	ldrh	r3, [r4, #12]
100129b4:	2240      	movs	r2, #64	; 0x40
100129b6:	2001      	movs	r0, #1
100129b8:	4313      	orrs	r3, r2
100129ba:	81a3      	strh	r3, [r4, #12]
100129bc:	4240      	negs	r0, r0
100129be:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100129c0:	20400001 	.word	0x20400001

100129c4 <_fflush_r>:
100129c4:	690b      	ldr	r3, [r1, #16]
100129c6:	b570      	push	{r4, r5, r6, lr}
100129c8:	0005      	movs	r5, r0
100129ca:	000c      	movs	r4, r1
100129cc:	2b00      	cmp	r3, #0
100129ce:	d101      	bne.n	100129d4 <_fflush_r+0x10>
100129d0:	2000      	movs	r0, #0
100129d2:	e01c      	b.n	10012a0e <_fflush_r+0x4a>
100129d4:	2800      	cmp	r0, #0
100129d6:	d004      	beq.n	100129e2 <_fflush_r+0x1e>
100129d8:	6983      	ldr	r3, [r0, #24]
100129da:	2b00      	cmp	r3, #0
100129dc:	d101      	bne.n	100129e2 <_fflush_r+0x1e>
100129de:	f000 f85f 	bl	10012aa0 <__sinit>
100129e2:	4b0b      	ldr	r3, [pc, #44]	; (10012a10 <_fflush_r+0x4c>)
100129e4:	429c      	cmp	r4, r3
100129e6:	d101      	bne.n	100129ec <_fflush_r+0x28>
100129e8:	686c      	ldr	r4, [r5, #4]
100129ea:	e008      	b.n	100129fe <_fflush_r+0x3a>
100129ec:	4b09      	ldr	r3, [pc, #36]	; (10012a14 <_fflush_r+0x50>)
100129ee:	429c      	cmp	r4, r3
100129f0:	d101      	bne.n	100129f6 <_fflush_r+0x32>
100129f2:	68ac      	ldr	r4, [r5, #8]
100129f4:	e003      	b.n	100129fe <_fflush_r+0x3a>
100129f6:	4b08      	ldr	r3, [pc, #32]	; (10012a18 <_fflush_r+0x54>)
100129f8:	429c      	cmp	r4, r3
100129fa:	d100      	bne.n	100129fe <_fflush_r+0x3a>
100129fc:	68ec      	ldr	r4, [r5, #12]
100129fe:	220c      	movs	r2, #12
10012a00:	5ea3      	ldrsh	r3, [r4, r2]
10012a02:	2b00      	cmp	r3, #0
10012a04:	d0e4      	beq.n	100129d0 <_fflush_r+0xc>
10012a06:	0021      	movs	r1, r4
10012a08:	0028      	movs	r0, r5
10012a0a:	f7ff ff55 	bl	100128b8 <__sflush_r>
10012a0e:	bd70      	pop	{r4, r5, r6, pc}
10012a10:	10015ba8 	.word	0x10015ba8
10012a14:	10015bc8 	.word	0x10015bc8
10012a18:	10015be8 	.word	0x10015be8

10012a1c <_cleanup_r>:
10012a1c:	b510      	push	{r4, lr}
10012a1e:	4902      	ldr	r1, [pc, #8]	; (10012a28 <_cleanup_r+0xc>)
10012a20:	f000 f8b0 	bl	10012b84 <_fwalk_reent>
10012a24:	bd10      	pop	{r4, pc}
10012a26:	46c0      	nop			; (mov r8, r8)
10012a28:	100129c5 	.word	0x100129c5

10012a2c <std.isra.0>:
10012a2c:	2300      	movs	r3, #0
10012a2e:	b510      	push	{r4, lr}
10012a30:	0004      	movs	r4, r0
10012a32:	6003      	str	r3, [r0, #0]
10012a34:	6043      	str	r3, [r0, #4]
10012a36:	6083      	str	r3, [r0, #8]
10012a38:	8181      	strh	r1, [r0, #12]
10012a3a:	6643      	str	r3, [r0, #100]	; 0x64
10012a3c:	81c2      	strh	r2, [r0, #14]
10012a3e:	6103      	str	r3, [r0, #16]
10012a40:	6143      	str	r3, [r0, #20]
10012a42:	6183      	str	r3, [r0, #24]
10012a44:	0019      	movs	r1, r3
10012a46:	2208      	movs	r2, #8
10012a48:	305c      	adds	r0, #92	; 0x5c
10012a4a:	f7ff fbe5 	bl	10012218 <memset>
10012a4e:	4b05      	ldr	r3, [pc, #20]	; (10012a64 <std.isra.0+0x38>)
10012a50:	6224      	str	r4, [r4, #32]
10012a52:	6263      	str	r3, [r4, #36]	; 0x24
10012a54:	4b04      	ldr	r3, [pc, #16]	; (10012a68 <std.isra.0+0x3c>)
10012a56:	62a3      	str	r3, [r4, #40]	; 0x28
10012a58:	4b04      	ldr	r3, [pc, #16]	; (10012a6c <std.isra.0+0x40>)
10012a5a:	62e3      	str	r3, [r4, #44]	; 0x2c
10012a5c:	4b04      	ldr	r3, [pc, #16]	; (10012a70 <std.isra.0+0x44>)
10012a5e:	6323      	str	r3, [r4, #48]	; 0x30
10012a60:	bd10      	pop	{r4, pc}
10012a62:	46c0      	nop			; (mov r8, r8)
10012a64:	10013565 	.word	0x10013565
10012a68:	1001358d 	.word	0x1001358d
10012a6c:	100135c5 	.word	0x100135c5
10012a70:	100135f1 	.word	0x100135f1

10012a74 <__sfmoreglue>:
10012a74:	b570      	push	{r4, r5, r6, lr}
10012a76:	2568      	movs	r5, #104	; 0x68
10012a78:	1e4b      	subs	r3, r1, #1
10012a7a:	435d      	muls	r5, r3
10012a7c:	000e      	movs	r6, r1
10012a7e:	0029      	movs	r1, r5
10012a80:	3174      	adds	r1, #116	; 0x74
10012a82:	f7ff fc17 	bl	100122b4 <_malloc_r>
10012a86:	1e04      	subs	r4, r0, #0
10012a88:	d008      	beq.n	10012a9c <__sfmoreglue+0x28>
10012a8a:	2100      	movs	r1, #0
10012a8c:	002a      	movs	r2, r5
10012a8e:	6001      	str	r1, [r0, #0]
10012a90:	6046      	str	r6, [r0, #4]
10012a92:	300c      	adds	r0, #12
10012a94:	60a0      	str	r0, [r4, #8]
10012a96:	3268      	adds	r2, #104	; 0x68
10012a98:	f7ff fbbe 	bl	10012218 <memset>
10012a9c:	0020      	movs	r0, r4
10012a9e:	bd70      	pop	{r4, r5, r6, pc}

10012aa0 <__sinit>:
10012aa0:	6983      	ldr	r3, [r0, #24]
10012aa2:	b513      	push	{r0, r1, r4, lr}
10012aa4:	0004      	movs	r4, r0
10012aa6:	2b00      	cmp	r3, #0
10012aa8:	d128      	bne.n	10012afc <__sinit+0x5c>
10012aaa:	6483      	str	r3, [r0, #72]	; 0x48
10012aac:	64c3      	str	r3, [r0, #76]	; 0x4c
10012aae:	6503      	str	r3, [r0, #80]	; 0x50
10012ab0:	4b13      	ldr	r3, [pc, #76]	; (10012b00 <__sinit+0x60>)
10012ab2:	4a14      	ldr	r2, [pc, #80]	; (10012b04 <__sinit+0x64>)
10012ab4:	681b      	ldr	r3, [r3, #0]
10012ab6:	6282      	str	r2, [r0, #40]	; 0x28
10012ab8:	9301      	str	r3, [sp, #4]
10012aba:	4298      	cmp	r0, r3
10012abc:	d101      	bne.n	10012ac2 <__sinit+0x22>
10012abe:	2301      	movs	r3, #1
10012ac0:	6183      	str	r3, [r0, #24]
10012ac2:	0020      	movs	r0, r4
10012ac4:	f000 f820 	bl	10012b08 <__sfp>
10012ac8:	6060      	str	r0, [r4, #4]
10012aca:	0020      	movs	r0, r4
10012acc:	f000 f81c 	bl	10012b08 <__sfp>
10012ad0:	60a0      	str	r0, [r4, #8]
10012ad2:	0020      	movs	r0, r4
10012ad4:	f000 f818 	bl	10012b08 <__sfp>
10012ad8:	2200      	movs	r2, #0
10012ada:	60e0      	str	r0, [r4, #12]
10012adc:	2104      	movs	r1, #4
10012ade:	6860      	ldr	r0, [r4, #4]
10012ae0:	f7ff ffa4 	bl	10012a2c <std.isra.0>
10012ae4:	2201      	movs	r2, #1
10012ae6:	2109      	movs	r1, #9
10012ae8:	68a0      	ldr	r0, [r4, #8]
10012aea:	f7ff ff9f 	bl	10012a2c <std.isra.0>
10012aee:	2202      	movs	r2, #2
10012af0:	2112      	movs	r1, #18
10012af2:	68e0      	ldr	r0, [r4, #12]
10012af4:	f7ff ff9a 	bl	10012a2c <std.isra.0>
10012af8:	2301      	movs	r3, #1
10012afa:	61a3      	str	r3, [r4, #24]
10012afc:	bd13      	pop	{r0, r1, r4, pc}
10012afe:	46c0      	nop			; (mov r8, r8)
10012b00:	10015ba4 	.word	0x10015ba4
10012b04:	10012a1d 	.word	0x10012a1d

10012b08 <__sfp>:
10012b08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10012b0a:	4b1d      	ldr	r3, [pc, #116]	; (10012b80 <__sfp+0x78>)
10012b0c:	0006      	movs	r6, r0
10012b0e:	681d      	ldr	r5, [r3, #0]
10012b10:	69ab      	ldr	r3, [r5, #24]
10012b12:	2b00      	cmp	r3, #0
10012b14:	d102      	bne.n	10012b1c <__sfp+0x14>
10012b16:	0028      	movs	r0, r5
10012b18:	f7ff ffc2 	bl	10012aa0 <__sinit>
10012b1c:	3548      	adds	r5, #72	; 0x48
10012b1e:	68ac      	ldr	r4, [r5, #8]
10012b20:	686b      	ldr	r3, [r5, #4]
10012b22:	3b01      	subs	r3, #1
10012b24:	d405      	bmi.n	10012b32 <__sfp+0x2a>
10012b26:	220c      	movs	r2, #12
10012b28:	5ea7      	ldrsh	r7, [r4, r2]
10012b2a:	2f00      	cmp	r7, #0
10012b2c:	d010      	beq.n	10012b50 <__sfp+0x48>
10012b2e:	3468      	adds	r4, #104	; 0x68
10012b30:	e7f7      	b.n	10012b22 <__sfp+0x1a>
10012b32:	682b      	ldr	r3, [r5, #0]
10012b34:	2b00      	cmp	r3, #0
10012b36:	d001      	beq.n	10012b3c <__sfp+0x34>
10012b38:	682d      	ldr	r5, [r5, #0]
10012b3a:	e7f0      	b.n	10012b1e <__sfp+0x16>
10012b3c:	2104      	movs	r1, #4
10012b3e:	0030      	movs	r0, r6
10012b40:	f7ff ff98 	bl	10012a74 <__sfmoreglue>
10012b44:	6028      	str	r0, [r5, #0]
10012b46:	2800      	cmp	r0, #0
10012b48:	d1f6      	bne.n	10012b38 <__sfp+0x30>
10012b4a:	230c      	movs	r3, #12
10012b4c:	6033      	str	r3, [r6, #0]
10012b4e:	e016      	b.n	10012b7e <__sfp+0x76>
10012b50:	2301      	movs	r3, #1
10012b52:	0020      	movs	r0, r4
10012b54:	425b      	negs	r3, r3
10012b56:	81e3      	strh	r3, [r4, #14]
10012b58:	3302      	adds	r3, #2
10012b5a:	81a3      	strh	r3, [r4, #12]
10012b5c:	6667      	str	r7, [r4, #100]	; 0x64
10012b5e:	6027      	str	r7, [r4, #0]
10012b60:	60a7      	str	r7, [r4, #8]
10012b62:	6067      	str	r7, [r4, #4]
10012b64:	6127      	str	r7, [r4, #16]
10012b66:	6167      	str	r7, [r4, #20]
10012b68:	61a7      	str	r7, [r4, #24]
10012b6a:	305c      	adds	r0, #92	; 0x5c
10012b6c:	2208      	movs	r2, #8
10012b6e:	0039      	movs	r1, r7
10012b70:	f7ff fb52 	bl	10012218 <memset>
10012b74:	0020      	movs	r0, r4
10012b76:	6367      	str	r7, [r4, #52]	; 0x34
10012b78:	63a7      	str	r7, [r4, #56]	; 0x38
10012b7a:	64a7      	str	r7, [r4, #72]	; 0x48
10012b7c:	64e7      	str	r7, [r4, #76]	; 0x4c
10012b7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10012b80:	10015ba4 	.word	0x10015ba4

10012b84 <_fwalk_reent>:
10012b84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10012b86:	0004      	movs	r4, r0
10012b88:	0007      	movs	r7, r0
10012b8a:	2600      	movs	r6, #0
10012b8c:	9101      	str	r1, [sp, #4]
10012b8e:	3448      	adds	r4, #72	; 0x48
10012b90:	2c00      	cmp	r4, #0
10012b92:	d016      	beq.n	10012bc2 <_fwalk_reent+0x3e>
10012b94:	6863      	ldr	r3, [r4, #4]
10012b96:	68a5      	ldr	r5, [r4, #8]
10012b98:	9300      	str	r3, [sp, #0]
10012b9a:	9b00      	ldr	r3, [sp, #0]
10012b9c:	3b01      	subs	r3, #1
10012b9e:	9300      	str	r3, [sp, #0]
10012ba0:	d40d      	bmi.n	10012bbe <_fwalk_reent+0x3a>
10012ba2:	89ab      	ldrh	r3, [r5, #12]
10012ba4:	2b01      	cmp	r3, #1
10012ba6:	d908      	bls.n	10012bba <_fwalk_reent+0x36>
10012ba8:	220e      	movs	r2, #14
10012baa:	5eab      	ldrsh	r3, [r5, r2]
10012bac:	3301      	adds	r3, #1
10012bae:	d004      	beq.n	10012bba <_fwalk_reent+0x36>
10012bb0:	0029      	movs	r1, r5
10012bb2:	0038      	movs	r0, r7
10012bb4:	9b01      	ldr	r3, [sp, #4]
10012bb6:	4798      	blx	r3
10012bb8:	4306      	orrs	r6, r0
10012bba:	3568      	adds	r5, #104	; 0x68
10012bbc:	e7ed      	b.n	10012b9a <_fwalk_reent+0x16>
10012bbe:	6824      	ldr	r4, [r4, #0]
10012bc0:	e7e6      	b.n	10012b90 <_fwalk_reent+0xc>
10012bc2:	0030      	movs	r0, r6
10012bc4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

10012bc8 <__swhatbuf_r>:
10012bc8:	b570      	push	{r4, r5, r6, lr}
10012bca:	000e      	movs	r6, r1
10012bcc:	001d      	movs	r5, r3
10012bce:	230e      	movs	r3, #14
10012bd0:	5ec9      	ldrsh	r1, [r1, r3]
10012bd2:	b090      	sub	sp, #64	; 0x40
10012bd4:	0014      	movs	r4, r2
10012bd6:	2900      	cmp	r1, #0
10012bd8:	da06      	bge.n	10012be8 <__swhatbuf_r+0x20>
10012bda:	2300      	movs	r3, #0
10012bdc:	602b      	str	r3, [r5, #0]
10012bde:	89b3      	ldrh	r3, [r6, #12]
10012be0:	061b      	lsls	r3, r3, #24
10012be2:	d50f      	bpl.n	10012c04 <__swhatbuf_r+0x3c>
10012be4:	2340      	movs	r3, #64	; 0x40
10012be6:	e00f      	b.n	10012c08 <__swhatbuf_r+0x40>
10012be8:	aa01      	add	r2, sp, #4
10012bea:	f000 fd2d 	bl	10013648 <_fstat_r>
10012bee:	2800      	cmp	r0, #0
10012bf0:	dbf3      	blt.n	10012bda <__swhatbuf_r+0x12>
10012bf2:	23f0      	movs	r3, #240	; 0xf0
10012bf4:	9a02      	ldr	r2, [sp, #8]
10012bf6:	021b      	lsls	r3, r3, #8
10012bf8:	4013      	ands	r3, r2
10012bfa:	4a05      	ldr	r2, [pc, #20]	; (10012c10 <__swhatbuf_r+0x48>)
10012bfc:	189b      	adds	r3, r3, r2
10012bfe:	425a      	negs	r2, r3
10012c00:	4153      	adcs	r3, r2
10012c02:	602b      	str	r3, [r5, #0]
10012c04:	2380      	movs	r3, #128	; 0x80
10012c06:	00db      	lsls	r3, r3, #3
10012c08:	2000      	movs	r0, #0
10012c0a:	6023      	str	r3, [r4, #0]
10012c0c:	b010      	add	sp, #64	; 0x40
10012c0e:	bd70      	pop	{r4, r5, r6, pc}
10012c10:	ffffe000 	.word	0xffffe000

10012c14 <__smakebuf_r>:
10012c14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10012c16:	2602      	movs	r6, #2
10012c18:	898b      	ldrh	r3, [r1, #12]
10012c1a:	0005      	movs	r5, r0
10012c1c:	000c      	movs	r4, r1
10012c1e:	4233      	tst	r3, r6
10012c20:	d110      	bne.n	10012c44 <__smakebuf_r+0x30>
10012c22:	ab01      	add	r3, sp, #4
10012c24:	466a      	mov	r2, sp
10012c26:	f7ff ffcf 	bl	10012bc8 <__swhatbuf_r>
10012c2a:	9900      	ldr	r1, [sp, #0]
10012c2c:	0007      	movs	r7, r0
10012c2e:	0028      	movs	r0, r5
10012c30:	f7ff fb40 	bl	100122b4 <_malloc_r>
10012c34:	2800      	cmp	r0, #0
10012c36:	d10c      	bne.n	10012c52 <__smakebuf_r+0x3e>
10012c38:	220c      	movs	r2, #12
10012c3a:	5ea3      	ldrsh	r3, [r4, r2]
10012c3c:	059a      	lsls	r2, r3, #22
10012c3e:	d423      	bmi.n	10012c88 <__smakebuf_r+0x74>
10012c40:	4333      	orrs	r3, r6
10012c42:	81a3      	strh	r3, [r4, #12]
10012c44:	0023      	movs	r3, r4
10012c46:	3347      	adds	r3, #71	; 0x47
10012c48:	6023      	str	r3, [r4, #0]
10012c4a:	6123      	str	r3, [r4, #16]
10012c4c:	2301      	movs	r3, #1
10012c4e:	6163      	str	r3, [r4, #20]
10012c50:	e01a      	b.n	10012c88 <__smakebuf_r+0x74>
10012c52:	2280      	movs	r2, #128	; 0x80
10012c54:	4b0d      	ldr	r3, [pc, #52]	; (10012c8c <__smakebuf_r+0x78>)
10012c56:	62ab      	str	r3, [r5, #40]	; 0x28
10012c58:	89a3      	ldrh	r3, [r4, #12]
10012c5a:	6020      	str	r0, [r4, #0]
10012c5c:	4313      	orrs	r3, r2
10012c5e:	81a3      	strh	r3, [r4, #12]
10012c60:	9b00      	ldr	r3, [sp, #0]
10012c62:	6120      	str	r0, [r4, #16]
10012c64:	6163      	str	r3, [r4, #20]
10012c66:	9b01      	ldr	r3, [sp, #4]
10012c68:	2b00      	cmp	r3, #0
10012c6a:	d00a      	beq.n	10012c82 <__smakebuf_r+0x6e>
10012c6c:	230e      	movs	r3, #14
10012c6e:	5ee1      	ldrsh	r1, [r4, r3]
10012c70:	0028      	movs	r0, r5
10012c72:	f000 fcfb 	bl	1001366c <_isatty_r>
10012c76:	2800      	cmp	r0, #0
10012c78:	d003      	beq.n	10012c82 <__smakebuf_r+0x6e>
10012c7a:	2201      	movs	r2, #1
10012c7c:	89a3      	ldrh	r3, [r4, #12]
10012c7e:	4313      	orrs	r3, r2
10012c80:	81a3      	strh	r3, [r4, #12]
10012c82:	89a3      	ldrh	r3, [r4, #12]
10012c84:	431f      	orrs	r7, r3
10012c86:	81a7      	strh	r7, [r4, #12]
10012c88:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
10012c8a:	46c0      	nop			; (mov r8, r8)
10012c8c:	10012a1d 	.word	0x10012a1d

10012c90 <__ssputs_r>:
10012c90:	b5f0      	push	{r4, r5, r6, r7, lr}
10012c92:	688e      	ldr	r6, [r1, #8]
10012c94:	b085      	sub	sp, #20
10012c96:	0007      	movs	r7, r0
10012c98:	000c      	movs	r4, r1
10012c9a:	9203      	str	r2, [sp, #12]
10012c9c:	9301      	str	r3, [sp, #4]
10012c9e:	429e      	cmp	r6, r3
10012ca0:	d843      	bhi.n	10012d2a <__ssputs_r+0x9a>
10012ca2:	2390      	movs	r3, #144	; 0x90
10012ca4:	898a      	ldrh	r2, [r1, #12]
10012ca6:	00db      	lsls	r3, r3, #3
10012ca8:	421a      	tst	r2, r3
10012caa:	d03e      	beq.n	10012d2a <__ssputs_r+0x9a>
10012cac:	2503      	movs	r5, #3
10012cae:	6909      	ldr	r1, [r1, #16]
10012cb0:	6823      	ldr	r3, [r4, #0]
10012cb2:	9801      	ldr	r0, [sp, #4]
10012cb4:	1a5b      	subs	r3, r3, r1
10012cb6:	9302      	str	r3, [sp, #8]
10012cb8:	6963      	ldr	r3, [r4, #20]
10012cba:	435d      	muls	r5, r3
10012cbc:	0feb      	lsrs	r3, r5, #31
10012cbe:	195d      	adds	r5, r3, r5
10012cc0:	9b02      	ldr	r3, [sp, #8]
10012cc2:	106d      	asrs	r5, r5, #1
10012cc4:	3301      	adds	r3, #1
10012cc6:	181b      	adds	r3, r3, r0
10012cc8:	42ab      	cmp	r3, r5
10012cca:	d900      	bls.n	10012cce <__ssputs_r+0x3e>
10012ccc:	001d      	movs	r5, r3
10012cce:	0553      	lsls	r3, r2, #21
10012cd0:	d510      	bpl.n	10012cf4 <__ssputs_r+0x64>
10012cd2:	0029      	movs	r1, r5
10012cd4:	0038      	movs	r0, r7
10012cd6:	f7ff faed 	bl	100122b4 <_malloc_r>
10012cda:	1e06      	subs	r6, r0, #0
10012cdc:	d014      	beq.n	10012d08 <__ssputs_r+0x78>
10012cde:	9a02      	ldr	r2, [sp, #8]
10012ce0:	6921      	ldr	r1, [r4, #16]
10012ce2:	f7ff fa90 	bl	10012206 <memcpy>
10012ce6:	89a2      	ldrh	r2, [r4, #12]
10012ce8:	4b19      	ldr	r3, [pc, #100]	; (10012d50 <__ssputs_r+0xc0>)
10012cea:	4013      	ands	r3, r2
10012cec:	2280      	movs	r2, #128	; 0x80
10012cee:	4313      	orrs	r3, r2
10012cf0:	81a3      	strh	r3, [r4, #12]
10012cf2:	e012      	b.n	10012d1a <__ssputs_r+0x8a>
10012cf4:	002a      	movs	r2, r5
10012cf6:	0038      	movs	r0, r7
10012cf8:	f000 fcfe 	bl	100136f8 <_realloc_r>
10012cfc:	1e06      	subs	r6, r0, #0
10012cfe:	d10c      	bne.n	10012d1a <__ssputs_r+0x8a>
10012d00:	6921      	ldr	r1, [r4, #16]
10012d02:	0038      	movs	r0, r7
10012d04:	f7ff fa90 	bl	10012228 <_free_r>
10012d08:	230c      	movs	r3, #12
10012d0a:	2240      	movs	r2, #64	; 0x40
10012d0c:	2001      	movs	r0, #1
10012d0e:	603b      	str	r3, [r7, #0]
10012d10:	89a3      	ldrh	r3, [r4, #12]
10012d12:	4240      	negs	r0, r0
10012d14:	4313      	orrs	r3, r2
10012d16:	81a3      	strh	r3, [r4, #12]
10012d18:	e017      	b.n	10012d4a <__ssputs_r+0xba>
10012d1a:	9b02      	ldr	r3, [sp, #8]
10012d1c:	6126      	str	r6, [r4, #16]
10012d1e:	18f6      	adds	r6, r6, r3
10012d20:	6026      	str	r6, [r4, #0]
10012d22:	6165      	str	r5, [r4, #20]
10012d24:	9e01      	ldr	r6, [sp, #4]
10012d26:	1aed      	subs	r5, r5, r3
10012d28:	60a5      	str	r5, [r4, #8]
10012d2a:	9b01      	ldr	r3, [sp, #4]
10012d2c:	42b3      	cmp	r3, r6
10012d2e:	d200      	bcs.n	10012d32 <__ssputs_r+0xa2>
10012d30:	001e      	movs	r6, r3
10012d32:	0032      	movs	r2, r6
10012d34:	9903      	ldr	r1, [sp, #12]
10012d36:	6820      	ldr	r0, [r4, #0]
10012d38:	f000 fcc9 	bl	100136ce <memmove>
10012d3c:	2000      	movs	r0, #0
10012d3e:	68a3      	ldr	r3, [r4, #8]
10012d40:	1b9b      	subs	r3, r3, r6
10012d42:	60a3      	str	r3, [r4, #8]
10012d44:	6823      	ldr	r3, [r4, #0]
10012d46:	199e      	adds	r6, r3, r6
10012d48:	6026      	str	r6, [r4, #0]
10012d4a:	b005      	add	sp, #20
10012d4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
10012d4e:	46c0      	nop			; (mov r8, r8)
10012d50:	fffffb7f 	.word	0xfffffb7f

10012d54 <_svfiprintf_r>:
10012d54:	b5f0      	push	{r4, r5, r6, r7, lr}
10012d56:	b09f      	sub	sp, #124	; 0x7c
10012d58:	9002      	str	r0, [sp, #8]
10012d5a:	9305      	str	r3, [sp, #20]
10012d5c:	898b      	ldrh	r3, [r1, #12]
10012d5e:	000f      	movs	r7, r1
10012d60:	0016      	movs	r6, r2
10012d62:	061b      	lsls	r3, r3, #24
10012d64:	d510      	bpl.n	10012d88 <_svfiprintf_r+0x34>
10012d66:	690b      	ldr	r3, [r1, #16]
10012d68:	2b00      	cmp	r3, #0
10012d6a:	d10d      	bne.n	10012d88 <_svfiprintf_r+0x34>
10012d6c:	2140      	movs	r1, #64	; 0x40
10012d6e:	f7ff faa1 	bl	100122b4 <_malloc_r>
10012d72:	6038      	str	r0, [r7, #0]
10012d74:	6138      	str	r0, [r7, #16]
10012d76:	2800      	cmp	r0, #0
10012d78:	d104      	bne.n	10012d84 <_svfiprintf_r+0x30>
10012d7a:	230c      	movs	r3, #12
10012d7c:	9a02      	ldr	r2, [sp, #8]
10012d7e:	3801      	subs	r0, #1
10012d80:	6013      	str	r3, [r2, #0]
10012d82:	e0d8      	b.n	10012f36 <_svfiprintf_r+0x1e2>
10012d84:	2340      	movs	r3, #64	; 0x40
10012d86:	617b      	str	r3, [r7, #20]
10012d88:	2300      	movs	r3, #0
10012d8a:	ad06      	add	r5, sp, #24
10012d8c:	616b      	str	r3, [r5, #20]
10012d8e:	3320      	adds	r3, #32
10012d90:	766b      	strb	r3, [r5, #25]
10012d92:	3310      	adds	r3, #16
10012d94:	76ab      	strb	r3, [r5, #26]
10012d96:	0034      	movs	r4, r6
10012d98:	7823      	ldrb	r3, [r4, #0]
10012d9a:	2b00      	cmp	r3, #0
10012d9c:	d103      	bne.n	10012da6 <_svfiprintf_r+0x52>
10012d9e:	1ba3      	subs	r3, r4, r6
10012da0:	9304      	str	r3, [sp, #16]
10012da2:	d012      	beq.n	10012dca <_svfiprintf_r+0x76>
10012da4:	e003      	b.n	10012dae <_svfiprintf_r+0x5a>
10012da6:	2b25      	cmp	r3, #37	; 0x25
10012da8:	d0f9      	beq.n	10012d9e <_svfiprintf_r+0x4a>
10012daa:	3401      	adds	r4, #1
10012dac:	e7f4      	b.n	10012d98 <_svfiprintf_r+0x44>
10012dae:	1ba3      	subs	r3, r4, r6
10012db0:	0032      	movs	r2, r6
10012db2:	0039      	movs	r1, r7
10012db4:	9802      	ldr	r0, [sp, #8]
10012db6:	f7ff ff6b 	bl	10012c90 <__ssputs_r>
10012dba:	1c43      	adds	r3, r0, #1
10012dbc:	d100      	bne.n	10012dc0 <_svfiprintf_r+0x6c>
10012dbe:	e0b4      	b.n	10012f2a <_svfiprintf_r+0x1d6>
10012dc0:	696a      	ldr	r2, [r5, #20]
10012dc2:	9b04      	ldr	r3, [sp, #16]
10012dc4:	4694      	mov	ip, r2
10012dc6:	4463      	add	r3, ip
10012dc8:	616b      	str	r3, [r5, #20]
10012dca:	7823      	ldrb	r3, [r4, #0]
10012dcc:	2b00      	cmp	r3, #0
10012dce:	d100      	bne.n	10012dd2 <_svfiprintf_r+0x7e>
10012dd0:	e0ab      	b.n	10012f2a <_svfiprintf_r+0x1d6>
10012dd2:	2201      	movs	r2, #1
10012dd4:	2300      	movs	r3, #0
10012dd6:	4252      	negs	r2, r2
10012dd8:	606a      	str	r2, [r5, #4]
10012dda:	a902      	add	r1, sp, #8
10012ddc:	3254      	adds	r2, #84	; 0x54
10012dde:	1852      	adds	r2, r2, r1
10012de0:	3401      	adds	r4, #1
10012de2:	602b      	str	r3, [r5, #0]
10012de4:	60eb      	str	r3, [r5, #12]
10012de6:	60ab      	str	r3, [r5, #8]
10012de8:	7013      	strb	r3, [r2, #0]
10012dea:	65ab      	str	r3, [r5, #88]	; 0x58
10012dec:	4e53      	ldr	r6, [pc, #332]	; (10012f3c <_svfiprintf_r+0x1e8>)
10012dee:	7821      	ldrb	r1, [r4, #0]
10012df0:	2205      	movs	r2, #5
10012df2:	0030      	movs	r0, r6
10012df4:	f000 fc60 	bl	100136b8 <memchr>
10012df8:	2800      	cmp	r0, #0
10012dfa:	d007      	beq.n	10012e0c <_svfiprintf_r+0xb8>
10012dfc:	2301      	movs	r3, #1
10012dfe:	1b80      	subs	r0, r0, r6
10012e00:	4083      	lsls	r3, r0
10012e02:	682a      	ldr	r2, [r5, #0]
10012e04:	3401      	adds	r4, #1
10012e06:	4313      	orrs	r3, r2
10012e08:	602b      	str	r3, [r5, #0]
10012e0a:	e7ef      	b.n	10012dec <_svfiprintf_r+0x98>
10012e0c:	682b      	ldr	r3, [r5, #0]
10012e0e:	06da      	lsls	r2, r3, #27
10012e10:	d504      	bpl.n	10012e1c <_svfiprintf_r+0xc8>
10012e12:	2253      	movs	r2, #83	; 0x53
10012e14:	2120      	movs	r1, #32
10012e16:	a802      	add	r0, sp, #8
10012e18:	1812      	adds	r2, r2, r0
10012e1a:	7011      	strb	r1, [r2, #0]
10012e1c:	071a      	lsls	r2, r3, #28
10012e1e:	d504      	bpl.n	10012e2a <_svfiprintf_r+0xd6>
10012e20:	2253      	movs	r2, #83	; 0x53
10012e22:	212b      	movs	r1, #43	; 0x2b
10012e24:	a802      	add	r0, sp, #8
10012e26:	1812      	adds	r2, r2, r0
10012e28:	7011      	strb	r1, [r2, #0]
10012e2a:	7822      	ldrb	r2, [r4, #0]
10012e2c:	2a2a      	cmp	r2, #42	; 0x2a
10012e2e:	d003      	beq.n	10012e38 <_svfiprintf_r+0xe4>
10012e30:	9b09      	ldr	r3, [sp, #36]	; 0x24
10012e32:	2000      	movs	r0, #0
10012e34:	210a      	movs	r1, #10
10012e36:	e00e      	b.n	10012e56 <_svfiprintf_r+0x102>
10012e38:	9a05      	ldr	r2, [sp, #20]
10012e3a:	1d11      	adds	r1, r2, #4
10012e3c:	6812      	ldr	r2, [r2, #0]
10012e3e:	9105      	str	r1, [sp, #20]
10012e40:	2a00      	cmp	r2, #0
10012e42:	db01      	blt.n	10012e48 <_svfiprintf_r+0xf4>
10012e44:	9209      	str	r2, [sp, #36]	; 0x24
10012e46:	e004      	b.n	10012e52 <_svfiprintf_r+0xfe>
10012e48:	4252      	negs	r2, r2
10012e4a:	60ea      	str	r2, [r5, #12]
10012e4c:	2202      	movs	r2, #2
10012e4e:	4313      	orrs	r3, r2
10012e50:	602b      	str	r3, [r5, #0]
10012e52:	3401      	adds	r4, #1
10012e54:	e00b      	b.n	10012e6e <_svfiprintf_r+0x11a>
10012e56:	7822      	ldrb	r2, [r4, #0]
10012e58:	3a30      	subs	r2, #48	; 0x30
10012e5a:	2a09      	cmp	r2, #9
10012e5c:	d804      	bhi.n	10012e68 <_svfiprintf_r+0x114>
10012e5e:	434b      	muls	r3, r1
10012e60:	3401      	adds	r4, #1
10012e62:	189b      	adds	r3, r3, r2
10012e64:	2001      	movs	r0, #1
10012e66:	e7f6      	b.n	10012e56 <_svfiprintf_r+0x102>
10012e68:	2800      	cmp	r0, #0
10012e6a:	d000      	beq.n	10012e6e <_svfiprintf_r+0x11a>
10012e6c:	9309      	str	r3, [sp, #36]	; 0x24
10012e6e:	7823      	ldrb	r3, [r4, #0]
10012e70:	2b2e      	cmp	r3, #46	; 0x2e
10012e72:	d11e      	bne.n	10012eb2 <_svfiprintf_r+0x15e>
10012e74:	7863      	ldrb	r3, [r4, #1]
10012e76:	2b2a      	cmp	r3, #42	; 0x2a
10012e78:	d10a      	bne.n	10012e90 <_svfiprintf_r+0x13c>
10012e7a:	9b05      	ldr	r3, [sp, #20]
10012e7c:	3402      	adds	r4, #2
10012e7e:	1d1a      	adds	r2, r3, #4
10012e80:	681b      	ldr	r3, [r3, #0]
10012e82:	9205      	str	r2, [sp, #20]
10012e84:	2b00      	cmp	r3, #0
10012e86:	da01      	bge.n	10012e8c <_svfiprintf_r+0x138>
10012e88:	2301      	movs	r3, #1
10012e8a:	425b      	negs	r3, r3
10012e8c:	9307      	str	r3, [sp, #28]
10012e8e:	e010      	b.n	10012eb2 <_svfiprintf_r+0x15e>
10012e90:	2300      	movs	r3, #0
10012e92:	200a      	movs	r0, #10
10012e94:	001a      	movs	r2, r3
10012e96:	3401      	adds	r4, #1
10012e98:	606b      	str	r3, [r5, #4]
10012e9a:	7821      	ldrb	r1, [r4, #0]
10012e9c:	3930      	subs	r1, #48	; 0x30
10012e9e:	2909      	cmp	r1, #9
10012ea0:	d804      	bhi.n	10012eac <_svfiprintf_r+0x158>
10012ea2:	4342      	muls	r2, r0
10012ea4:	3401      	adds	r4, #1
10012ea6:	1852      	adds	r2, r2, r1
10012ea8:	2301      	movs	r3, #1
10012eaa:	e7f6      	b.n	10012e9a <_svfiprintf_r+0x146>
10012eac:	2b00      	cmp	r3, #0
10012eae:	d000      	beq.n	10012eb2 <_svfiprintf_r+0x15e>
10012eb0:	9207      	str	r2, [sp, #28]
10012eb2:	4e23      	ldr	r6, [pc, #140]	; (10012f40 <_svfiprintf_r+0x1ec>)
10012eb4:	7821      	ldrb	r1, [r4, #0]
10012eb6:	2203      	movs	r2, #3
10012eb8:	0030      	movs	r0, r6
10012eba:	f000 fbfd 	bl	100136b8 <memchr>
10012ebe:	2800      	cmp	r0, #0
10012ec0:	d006      	beq.n	10012ed0 <_svfiprintf_r+0x17c>
10012ec2:	2340      	movs	r3, #64	; 0x40
10012ec4:	1b80      	subs	r0, r0, r6
10012ec6:	4083      	lsls	r3, r0
10012ec8:	682a      	ldr	r2, [r5, #0]
10012eca:	3401      	adds	r4, #1
10012ecc:	4313      	orrs	r3, r2
10012ece:	602b      	str	r3, [r5, #0]
10012ed0:	7821      	ldrb	r1, [r4, #0]
10012ed2:	2206      	movs	r2, #6
10012ed4:	481b      	ldr	r0, [pc, #108]	; (10012f44 <_svfiprintf_r+0x1f0>)
10012ed6:	1c66      	adds	r6, r4, #1
10012ed8:	7629      	strb	r1, [r5, #24]
10012eda:	f000 fbed 	bl	100136b8 <memchr>
10012ede:	2800      	cmp	r0, #0
10012ee0:	d012      	beq.n	10012f08 <_svfiprintf_r+0x1b4>
10012ee2:	4b19      	ldr	r3, [pc, #100]	; (10012f48 <_svfiprintf_r+0x1f4>)
10012ee4:	2b00      	cmp	r3, #0
10012ee6:	d106      	bne.n	10012ef6 <_svfiprintf_r+0x1a2>
10012ee8:	2207      	movs	r2, #7
10012eea:	9b05      	ldr	r3, [sp, #20]
10012eec:	3307      	adds	r3, #7
10012eee:	4393      	bics	r3, r2
10012ef0:	3308      	adds	r3, #8
10012ef2:	9305      	str	r3, [sp, #20]
10012ef4:	e014      	b.n	10012f20 <_svfiprintf_r+0x1cc>
10012ef6:	ab05      	add	r3, sp, #20
10012ef8:	9300      	str	r3, [sp, #0]
10012efa:	003a      	movs	r2, r7
10012efc:	4b13      	ldr	r3, [pc, #76]	; (10012f4c <_svfiprintf_r+0x1f8>)
10012efe:	0029      	movs	r1, r5
10012f00:	9802      	ldr	r0, [sp, #8]
10012f02:	e000      	b.n	10012f06 <_svfiprintf_r+0x1b2>
10012f04:	bf00      	nop
10012f06:	e007      	b.n	10012f18 <_svfiprintf_r+0x1c4>
10012f08:	ab05      	add	r3, sp, #20
10012f0a:	9300      	str	r3, [sp, #0]
10012f0c:	003a      	movs	r2, r7
10012f0e:	4b0f      	ldr	r3, [pc, #60]	; (10012f4c <_svfiprintf_r+0x1f8>)
10012f10:	0029      	movs	r1, r5
10012f12:	9802      	ldr	r0, [sp, #8]
10012f14:	f000 f9ce 	bl	100132b4 <_printf_i>
10012f18:	9003      	str	r0, [sp, #12]
10012f1a:	9b03      	ldr	r3, [sp, #12]
10012f1c:	3301      	adds	r3, #1
10012f1e:	d004      	beq.n	10012f2a <_svfiprintf_r+0x1d6>
10012f20:	696b      	ldr	r3, [r5, #20]
10012f22:	9a03      	ldr	r2, [sp, #12]
10012f24:	189b      	adds	r3, r3, r2
10012f26:	616b      	str	r3, [r5, #20]
10012f28:	e735      	b.n	10012d96 <_svfiprintf_r+0x42>
10012f2a:	89bb      	ldrh	r3, [r7, #12]
10012f2c:	980b      	ldr	r0, [sp, #44]	; 0x2c
10012f2e:	065b      	lsls	r3, r3, #25
10012f30:	d501      	bpl.n	10012f36 <_svfiprintf_r+0x1e2>
10012f32:	2001      	movs	r0, #1
10012f34:	4240      	negs	r0, r0
10012f36:	b01f      	add	sp, #124	; 0x7c
10012f38:	bdf0      	pop	{r4, r5, r6, r7, pc}
10012f3a:	46c0      	nop			; (mov r8, r8)
10012f3c:	10015c08 	.word	0x10015c08
10012f40:	10015c0e 	.word	0x10015c0e
10012f44:	10015c12 	.word	0x10015c12
10012f48:	00000000 	.word	0x00000000
10012f4c:	10012c91 	.word	0x10012c91

10012f50 <__sfputc_r>:
10012f50:	6893      	ldr	r3, [r2, #8]
10012f52:	b510      	push	{r4, lr}
10012f54:	3b01      	subs	r3, #1
10012f56:	6093      	str	r3, [r2, #8]
10012f58:	2b00      	cmp	r3, #0
10012f5a:	da05      	bge.n	10012f68 <__sfputc_r+0x18>
10012f5c:	6994      	ldr	r4, [r2, #24]
10012f5e:	42a3      	cmp	r3, r4
10012f60:	db08      	blt.n	10012f74 <__sfputc_r+0x24>
10012f62:	b2cb      	uxtb	r3, r1
10012f64:	2b0a      	cmp	r3, #10
10012f66:	d005      	beq.n	10012f74 <__sfputc_r+0x24>
10012f68:	6813      	ldr	r3, [r2, #0]
10012f6a:	1c58      	adds	r0, r3, #1
10012f6c:	6010      	str	r0, [r2, #0]
10012f6e:	7019      	strb	r1, [r3, #0]
10012f70:	b2c8      	uxtb	r0, r1
10012f72:	e001      	b.n	10012f78 <__sfputc_r+0x28>
10012f74:	f7ff fbd2 	bl	1001271c <__swbuf_r>
10012f78:	bd10      	pop	{r4, pc}

10012f7a <__sfputs_r>:
10012f7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10012f7c:	0006      	movs	r6, r0
10012f7e:	000f      	movs	r7, r1
10012f80:	0014      	movs	r4, r2
10012f82:	18d5      	adds	r5, r2, r3
10012f84:	42ac      	cmp	r4, r5
10012f86:	d008      	beq.n	10012f9a <__sfputs_r+0x20>
10012f88:	7821      	ldrb	r1, [r4, #0]
10012f8a:	003a      	movs	r2, r7
10012f8c:	0030      	movs	r0, r6
10012f8e:	f7ff ffdf 	bl	10012f50 <__sfputc_r>
10012f92:	3401      	adds	r4, #1
10012f94:	1c43      	adds	r3, r0, #1
10012f96:	d1f5      	bne.n	10012f84 <__sfputs_r+0xa>
10012f98:	e000      	b.n	10012f9c <__sfputs_r+0x22>
10012f9a:	2000      	movs	r0, #0
10012f9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

10012fa0 <_vfiprintf_r>:
10012fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
10012fa2:	b09f      	sub	sp, #124	; 0x7c
10012fa4:	0006      	movs	r6, r0
10012fa6:	000f      	movs	r7, r1
10012fa8:	9202      	str	r2, [sp, #8]
10012faa:	9305      	str	r3, [sp, #20]
10012fac:	2800      	cmp	r0, #0
10012fae:	d004      	beq.n	10012fba <_vfiprintf_r+0x1a>
10012fb0:	6983      	ldr	r3, [r0, #24]
10012fb2:	2b00      	cmp	r3, #0
10012fb4:	d101      	bne.n	10012fba <_vfiprintf_r+0x1a>
10012fb6:	f7ff fd73 	bl	10012aa0 <__sinit>
10012fba:	4b7f      	ldr	r3, [pc, #508]	; (100131b8 <_vfiprintf_r+0x218>)
10012fbc:	429f      	cmp	r7, r3
10012fbe:	d101      	bne.n	10012fc4 <_vfiprintf_r+0x24>
10012fc0:	6877      	ldr	r7, [r6, #4]
10012fc2:	e008      	b.n	10012fd6 <_vfiprintf_r+0x36>
10012fc4:	4b7d      	ldr	r3, [pc, #500]	; (100131bc <_vfiprintf_r+0x21c>)
10012fc6:	429f      	cmp	r7, r3
10012fc8:	d101      	bne.n	10012fce <_vfiprintf_r+0x2e>
10012fca:	68b7      	ldr	r7, [r6, #8]
10012fcc:	e003      	b.n	10012fd6 <_vfiprintf_r+0x36>
10012fce:	4b7c      	ldr	r3, [pc, #496]	; (100131c0 <_vfiprintf_r+0x220>)
10012fd0:	429f      	cmp	r7, r3
10012fd2:	d100      	bne.n	10012fd6 <_vfiprintf_r+0x36>
10012fd4:	68f7      	ldr	r7, [r6, #12]
10012fd6:	89bb      	ldrh	r3, [r7, #12]
10012fd8:	071b      	lsls	r3, r3, #28
10012fda:	d50a      	bpl.n	10012ff2 <_vfiprintf_r+0x52>
10012fdc:	693b      	ldr	r3, [r7, #16]
10012fde:	2b00      	cmp	r3, #0
10012fe0:	d007      	beq.n	10012ff2 <_vfiprintf_r+0x52>
10012fe2:	2300      	movs	r3, #0
10012fe4:	ad06      	add	r5, sp, #24
10012fe6:	616b      	str	r3, [r5, #20]
10012fe8:	3320      	adds	r3, #32
10012fea:	766b      	strb	r3, [r5, #25]
10012fec:	3310      	adds	r3, #16
10012fee:	76ab      	strb	r3, [r5, #26]
10012ff0:	e03d      	b.n	1001306e <_vfiprintf_r+0xce>
10012ff2:	0039      	movs	r1, r7
10012ff4:	0030      	movs	r0, r6
10012ff6:	f7ff fbe9 	bl	100127cc <__swsetup_r>
10012ffa:	2800      	cmp	r0, #0
10012ffc:	d0f1      	beq.n	10012fe2 <_vfiprintf_r+0x42>
10012ffe:	2001      	movs	r0, #1
10013000:	4240      	negs	r0, r0
10013002:	e0d6      	b.n	100131b2 <_vfiprintf_r+0x212>
10013004:	9a05      	ldr	r2, [sp, #20]
10013006:	1d11      	adds	r1, r2, #4
10013008:	6812      	ldr	r2, [r2, #0]
1001300a:	9105      	str	r1, [sp, #20]
1001300c:	2a00      	cmp	r2, #0
1001300e:	da00      	bge.n	10013012 <_vfiprintf_r+0x72>
10013010:	e07f      	b.n	10013112 <_vfiprintf_r+0x172>
10013012:	9209      	str	r2, [sp, #36]	; 0x24
10013014:	3401      	adds	r4, #1
10013016:	7823      	ldrb	r3, [r4, #0]
10013018:	2b2e      	cmp	r3, #46	; 0x2e
1001301a:	d100      	bne.n	1001301e <_vfiprintf_r+0x7e>
1001301c:	e08d      	b.n	1001313a <_vfiprintf_r+0x19a>
1001301e:	7821      	ldrb	r1, [r4, #0]
10013020:	2203      	movs	r2, #3
10013022:	4868      	ldr	r0, [pc, #416]	; (100131c4 <_vfiprintf_r+0x224>)
10013024:	f000 fb48 	bl	100136b8 <memchr>
10013028:	2800      	cmp	r0, #0
1001302a:	d007      	beq.n	1001303c <_vfiprintf_r+0x9c>
1001302c:	4b65      	ldr	r3, [pc, #404]	; (100131c4 <_vfiprintf_r+0x224>)
1001302e:	682a      	ldr	r2, [r5, #0]
10013030:	1ac0      	subs	r0, r0, r3
10013032:	2340      	movs	r3, #64	; 0x40
10013034:	4083      	lsls	r3, r0
10013036:	4313      	orrs	r3, r2
10013038:	602b      	str	r3, [r5, #0]
1001303a:	3401      	adds	r4, #1
1001303c:	7821      	ldrb	r1, [r4, #0]
1001303e:	1c63      	adds	r3, r4, #1
10013040:	2206      	movs	r2, #6
10013042:	4861      	ldr	r0, [pc, #388]	; (100131c8 <_vfiprintf_r+0x228>)
10013044:	9302      	str	r3, [sp, #8]
10013046:	7629      	strb	r1, [r5, #24]
10013048:	f000 fb36 	bl	100136b8 <memchr>
1001304c:	2800      	cmp	r0, #0
1001304e:	d100      	bne.n	10013052 <_vfiprintf_r+0xb2>
10013050:	e09d      	b.n	1001318e <_vfiprintf_r+0x1ee>
10013052:	4b5e      	ldr	r3, [pc, #376]	; (100131cc <_vfiprintf_r+0x22c>)
10013054:	2b00      	cmp	r3, #0
10013056:	d000      	beq.n	1001305a <_vfiprintf_r+0xba>
10013058:	e090      	b.n	1001317c <_vfiprintf_r+0x1dc>
1001305a:	2207      	movs	r2, #7
1001305c:	9b05      	ldr	r3, [sp, #20]
1001305e:	3307      	adds	r3, #7
10013060:	4393      	bics	r3, r2
10013062:	3308      	adds	r3, #8
10013064:	9305      	str	r3, [sp, #20]
10013066:	696b      	ldr	r3, [r5, #20]
10013068:	9a03      	ldr	r2, [sp, #12]
1001306a:	189b      	adds	r3, r3, r2
1001306c:	616b      	str	r3, [r5, #20]
1001306e:	9c02      	ldr	r4, [sp, #8]
10013070:	7823      	ldrb	r3, [r4, #0]
10013072:	2b00      	cmp	r3, #0
10013074:	d104      	bne.n	10013080 <_vfiprintf_r+0xe0>
10013076:	9b02      	ldr	r3, [sp, #8]
10013078:	1ae3      	subs	r3, r4, r3
1001307a:	9304      	str	r3, [sp, #16]
1001307c:	d012      	beq.n	100130a4 <_vfiprintf_r+0x104>
1001307e:	e003      	b.n	10013088 <_vfiprintf_r+0xe8>
10013080:	2b25      	cmp	r3, #37	; 0x25
10013082:	d0f8      	beq.n	10013076 <_vfiprintf_r+0xd6>
10013084:	3401      	adds	r4, #1
10013086:	e7f3      	b.n	10013070 <_vfiprintf_r+0xd0>
10013088:	9b04      	ldr	r3, [sp, #16]
1001308a:	9a02      	ldr	r2, [sp, #8]
1001308c:	0039      	movs	r1, r7
1001308e:	0030      	movs	r0, r6
10013090:	f7ff ff73 	bl	10012f7a <__sfputs_r>
10013094:	1c43      	adds	r3, r0, #1
10013096:	d100      	bne.n	1001309a <_vfiprintf_r+0xfa>
10013098:	e086      	b.n	100131a8 <_vfiprintf_r+0x208>
1001309a:	696a      	ldr	r2, [r5, #20]
1001309c:	9b04      	ldr	r3, [sp, #16]
1001309e:	4694      	mov	ip, r2
100130a0:	4463      	add	r3, ip
100130a2:	616b      	str	r3, [r5, #20]
100130a4:	7823      	ldrb	r3, [r4, #0]
100130a6:	2b00      	cmp	r3, #0
100130a8:	d07e      	beq.n	100131a8 <_vfiprintf_r+0x208>
100130aa:	2201      	movs	r2, #1
100130ac:	2300      	movs	r3, #0
100130ae:	4252      	negs	r2, r2
100130b0:	606a      	str	r2, [r5, #4]
100130b2:	a902      	add	r1, sp, #8
100130b4:	3254      	adds	r2, #84	; 0x54
100130b6:	1852      	adds	r2, r2, r1
100130b8:	3401      	adds	r4, #1
100130ba:	602b      	str	r3, [r5, #0]
100130bc:	60eb      	str	r3, [r5, #12]
100130be:	60ab      	str	r3, [r5, #8]
100130c0:	7013      	strb	r3, [r2, #0]
100130c2:	65ab      	str	r3, [r5, #88]	; 0x58
100130c4:	7821      	ldrb	r1, [r4, #0]
100130c6:	2205      	movs	r2, #5
100130c8:	4841      	ldr	r0, [pc, #260]	; (100131d0 <_vfiprintf_r+0x230>)
100130ca:	f000 faf5 	bl	100136b8 <memchr>
100130ce:	2800      	cmp	r0, #0
100130d0:	d008      	beq.n	100130e4 <_vfiprintf_r+0x144>
100130d2:	4b3f      	ldr	r3, [pc, #252]	; (100131d0 <_vfiprintf_r+0x230>)
100130d4:	682a      	ldr	r2, [r5, #0]
100130d6:	1ac0      	subs	r0, r0, r3
100130d8:	2301      	movs	r3, #1
100130da:	4083      	lsls	r3, r0
100130dc:	4313      	orrs	r3, r2
100130de:	602b      	str	r3, [r5, #0]
100130e0:	3401      	adds	r4, #1
100130e2:	e7ef      	b.n	100130c4 <_vfiprintf_r+0x124>
100130e4:	682b      	ldr	r3, [r5, #0]
100130e6:	06da      	lsls	r2, r3, #27
100130e8:	d504      	bpl.n	100130f4 <_vfiprintf_r+0x154>
100130ea:	2253      	movs	r2, #83	; 0x53
100130ec:	2120      	movs	r1, #32
100130ee:	a802      	add	r0, sp, #8
100130f0:	1812      	adds	r2, r2, r0
100130f2:	7011      	strb	r1, [r2, #0]
100130f4:	071a      	lsls	r2, r3, #28
100130f6:	d504      	bpl.n	10013102 <_vfiprintf_r+0x162>
100130f8:	2253      	movs	r2, #83	; 0x53
100130fa:	212b      	movs	r1, #43	; 0x2b
100130fc:	a802      	add	r0, sp, #8
100130fe:	1812      	adds	r2, r2, r0
10013100:	7011      	strb	r1, [r2, #0]
10013102:	7822      	ldrb	r2, [r4, #0]
10013104:	2a2a      	cmp	r2, #42	; 0x2a
10013106:	d100      	bne.n	1001310a <_vfiprintf_r+0x16a>
10013108:	e77c      	b.n	10013004 <_vfiprintf_r+0x64>
1001310a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1001310c:	2000      	movs	r0, #0
1001310e:	210a      	movs	r1, #10
10013110:	e005      	b.n	1001311e <_vfiprintf_r+0x17e>
10013112:	4252      	negs	r2, r2
10013114:	60ea      	str	r2, [r5, #12]
10013116:	2202      	movs	r2, #2
10013118:	4313      	orrs	r3, r2
1001311a:	602b      	str	r3, [r5, #0]
1001311c:	e77a      	b.n	10013014 <_vfiprintf_r+0x74>
1001311e:	7822      	ldrb	r2, [r4, #0]
10013120:	3a30      	subs	r2, #48	; 0x30
10013122:	2a09      	cmp	r2, #9
10013124:	d804      	bhi.n	10013130 <_vfiprintf_r+0x190>
10013126:	434b      	muls	r3, r1
10013128:	3401      	adds	r4, #1
1001312a:	189b      	adds	r3, r3, r2
1001312c:	2001      	movs	r0, #1
1001312e:	e7f6      	b.n	1001311e <_vfiprintf_r+0x17e>
10013130:	2800      	cmp	r0, #0
10013132:	d100      	bne.n	10013136 <_vfiprintf_r+0x196>
10013134:	e76f      	b.n	10013016 <_vfiprintf_r+0x76>
10013136:	9309      	str	r3, [sp, #36]	; 0x24
10013138:	e76d      	b.n	10013016 <_vfiprintf_r+0x76>
1001313a:	7863      	ldrb	r3, [r4, #1]
1001313c:	2b2a      	cmp	r3, #42	; 0x2a
1001313e:	d10a      	bne.n	10013156 <_vfiprintf_r+0x1b6>
10013140:	9b05      	ldr	r3, [sp, #20]
10013142:	3402      	adds	r4, #2
10013144:	1d1a      	adds	r2, r3, #4
10013146:	681b      	ldr	r3, [r3, #0]
10013148:	9205      	str	r2, [sp, #20]
1001314a:	2b00      	cmp	r3, #0
1001314c:	da01      	bge.n	10013152 <_vfiprintf_r+0x1b2>
1001314e:	2301      	movs	r3, #1
10013150:	425b      	negs	r3, r3
10013152:	9307      	str	r3, [sp, #28]
10013154:	e763      	b.n	1001301e <_vfiprintf_r+0x7e>
10013156:	2300      	movs	r3, #0
10013158:	200a      	movs	r0, #10
1001315a:	001a      	movs	r2, r3
1001315c:	3401      	adds	r4, #1
1001315e:	606b      	str	r3, [r5, #4]
10013160:	7821      	ldrb	r1, [r4, #0]
10013162:	3930      	subs	r1, #48	; 0x30
10013164:	2909      	cmp	r1, #9
10013166:	d804      	bhi.n	10013172 <_vfiprintf_r+0x1d2>
10013168:	4342      	muls	r2, r0
1001316a:	3401      	adds	r4, #1
1001316c:	1852      	adds	r2, r2, r1
1001316e:	2301      	movs	r3, #1
10013170:	e7f6      	b.n	10013160 <_vfiprintf_r+0x1c0>
10013172:	2b00      	cmp	r3, #0
10013174:	d100      	bne.n	10013178 <_vfiprintf_r+0x1d8>
10013176:	e752      	b.n	1001301e <_vfiprintf_r+0x7e>
10013178:	9207      	str	r2, [sp, #28]
1001317a:	e750      	b.n	1001301e <_vfiprintf_r+0x7e>
1001317c:	ab05      	add	r3, sp, #20
1001317e:	9300      	str	r3, [sp, #0]
10013180:	003a      	movs	r2, r7
10013182:	4b14      	ldr	r3, [pc, #80]	; (100131d4 <_vfiprintf_r+0x234>)
10013184:	0029      	movs	r1, r5
10013186:	0030      	movs	r0, r6
10013188:	e000      	b.n	1001318c <_vfiprintf_r+0x1ec>
1001318a:	bf00      	nop
1001318c:	e007      	b.n	1001319e <_vfiprintf_r+0x1fe>
1001318e:	ab05      	add	r3, sp, #20
10013190:	9300      	str	r3, [sp, #0]
10013192:	003a      	movs	r2, r7
10013194:	4b0f      	ldr	r3, [pc, #60]	; (100131d4 <_vfiprintf_r+0x234>)
10013196:	0029      	movs	r1, r5
10013198:	0030      	movs	r0, r6
1001319a:	f000 f88b 	bl	100132b4 <_printf_i>
1001319e:	9003      	str	r0, [sp, #12]
100131a0:	9b03      	ldr	r3, [sp, #12]
100131a2:	3301      	adds	r3, #1
100131a4:	d000      	beq.n	100131a8 <_vfiprintf_r+0x208>
100131a6:	e75e      	b.n	10013066 <_vfiprintf_r+0xc6>
100131a8:	89bb      	ldrh	r3, [r7, #12]
100131aa:	065b      	lsls	r3, r3, #25
100131ac:	d500      	bpl.n	100131b0 <_vfiprintf_r+0x210>
100131ae:	e726      	b.n	10012ffe <_vfiprintf_r+0x5e>
100131b0:	980b      	ldr	r0, [sp, #44]	; 0x2c
100131b2:	b01f      	add	sp, #124	; 0x7c
100131b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
100131b6:	46c0      	nop			; (mov r8, r8)
100131b8:	10015ba8 	.word	0x10015ba8
100131bc:	10015bc8 	.word	0x10015bc8
100131c0:	10015be8 	.word	0x10015be8
100131c4:	10015c0e 	.word	0x10015c0e
100131c8:	10015c12 	.word	0x10015c12
100131cc:	00000000 	.word	0x00000000
100131d0:	10015c08 	.word	0x10015c08
100131d4:	10012f7b 	.word	0x10012f7b

100131d8 <_printf_common>:
100131d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100131da:	0017      	movs	r7, r2
100131dc:	9301      	str	r3, [sp, #4]
100131de:	688a      	ldr	r2, [r1, #8]
100131e0:	690b      	ldr	r3, [r1, #16]
100131e2:	9000      	str	r0, [sp, #0]
100131e4:	000c      	movs	r4, r1
100131e6:	4293      	cmp	r3, r2
100131e8:	da00      	bge.n	100131ec <_printf_common+0x14>
100131ea:	0013      	movs	r3, r2
100131ec:	0022      	movs	r2, r4
100131ee:	603b      	str	r3, [r7, #0]
100131f0:	3243      	adds	r2, #67	; 0x43
100131f2:	7812      	ldrb	r2, [r2, #0]
100131f4:	2a00      	cmp	r2, #0
100131f6:	d001      	beq.n	100131fc <_printf_common+0x24>
100131f8:	3301      	adds	r3, #1
100131fa:	603b      	str	r3, [r7, #0]
100131fc:	6823      	ldr	r3, [r4, #0]
100131fe:	069b      	lsls	r3, r3, #26
10013200:	d502      	bpl.n	10013208 <_printf_common+0x30>
10013202:	683b      	ldr	r3, [r7, #0]
10013204:	3302      	adds	r3, #2
10013206:	603b      	str	r3, [r7, #0]
10013208:	2506      	movs	r5, #6
1001320a:	6823      	ldr	r3, [r4, #0]
1001320c:	401d      	ands	r5, r3
1001320e:	d01e      	beq.n	1001324e <_printf_common+0x76>
10013210:	0023      	movs	r3, r4
10013212:	3343      	adds	r3, #67	; 0x43
10013214:	781b      	ldrb	r3, [r3, #0]
10013216:	1e5a      	subs	r2, r3, #1
10013218:	4193      	sbcs	r3, r2
1001321a:	6822      	ldr	r2, [r4, #0]
1001321c:	0692      	lsls	r2, r2, #26
1001321e:	d51c      	bpl.n	1001325a <_printf_common+0x82>
10013220:	2030      	movs	r0, #48	; 0x30
10013222:	18e1      	adds	r1, r4, r3
10013224:	3143      	adds	r1, #67	; 0x43
10013226:	7008      	strb	r0, [r1, #0]
10013228:	0021      	movs	r1, r4
1001322a:	1c5a      	adds	r2, r3, #1
1001322c:	3145      	adds	r1, #69	; 0x45
1001322e:	7809      	ldrb	r1, [r1, #0]
10013230:	18a2      	adds	r2, r4, r2
10013232:	3243      	adds	r2, #67	; 0x43
10013234:	3302      	adds	r3, #2
10013236:	7011      	strb	r1, [r2, #0]
10013238:	e00f      	b.n	1001325a <_printf_common+0x82>
1001323a:	0022      	movs	r2, r4
1001323c:	2301      	movs	r3, #1
1001323e:	3219      	adds	r2, #25
10013240:	9901      	ldr	r1, [sp, #4]
10013242:	9800      	ldr	r0, [sp, #0]
10013244:	9e08      	ldr	r6, [sp, #32]
10013246:	47b0      	blx	r6
10013248:	1c43      	adds	r3, r0, #1
1001324a:	d00e      	beq.n	1001326a <_printf_common+0x92>
1001324c:	3501      	adds	r5, #1
1001324e:	68e3      	ldr	r3, [r4, #12]
10013250:	683a      	ldr	r2, [r7, #0]
10013252:	1a9b      	subs	r3, r3, r2
10013254:	429d      	cmp	r5, r3
10013256:	dbf0      	blt.n	1001323a <_printf_common+0x62>
10013258:	e7da      	b.n	10013210 <_printf_common+0x38>
1001325a:	0022      	movs	r2, r4
1001325c:	9901      	ldr	r1, [sp, #4]
1001325e:	3243      	adds	r2, #67	; 0x43
10013260:	9800      	ldr	r0, [sp, #0]
10013262:	9d08      	ldr	r5, [sp, #32]
10013264:	47a8      	blx	r5
10013266:	1c43      	adds	r3, r0, #1
10013268:	d102      	bne.n	10013270 <_printf_common+0x98>
1001326a:	2001      	movs	r0, #1
1001326c:	4240      	negs	r0, r0
1001326e:	e020      	b.n	100132b2 <_printf_common+0xda>
10013270:	2306      	movs	r3, #6
10013272:	6820      	ldr	r0, [r4, #0]
10013274:	68e1      	ldr	r1, [r4, #12]
10013276:	683a      	ldr	r2, [r7, #0]
10013278:	4003      	ands	r3, r0
1001327a:	2500      	movs	r5, #0
1001327c:	2b04      	cmp	r3, #4
1001327e:	d103      	bne.n	10013288 <_printf_common+0xb0>
10013280:	1a8d      	subs	r5, r1, r2
10013282:	43eb      	mvns	r3, r5
10013284:	17db      	asrs	r3, r3, #31
10013286:	401d      	ands	r5, r3
10013288:	68a3      	ldr	r3, [r4, #8]
1001328a:	6922      	ldr	r2, [r4, #16]
1001328c:	4293      	cmp	r3, r2
1001328e:	dd01      	ble.n	10013294 <_printf_common+0xbc>
10013290:	1a9b      	subs	r3, r3, r2
10013292:	18ed      	adds	r5, r5, r3
10013294:	2700      	movs	r7, #0
10013296:	42bd      	cmp	r5, r7
10013298:	d00a      	beq.n	100132b0 <_printf_common+0xd8>
1001329a:	0022      	movs	r2, r4
1001329c:	2301      	movs	r3, #1
1001329e:	321a      	adds	r2, #26
100132a0:	9901      	ldr	r1, [sp, #4]
100132a2:	9800      	ldr	r0, [sp, #0]
100132a4:	9e08      	ldr	r6, [sp, #32]
100132a6:	47b0      	blx	r6
100132a8:	1c43      	adds	r3, r0, #1
100132aa:	d0de      	beq.n	1001326a <_printf_common+0x92>
100132ac:	3701      	adds	r7, #1
100132ae:	e7f2      	b.n	10013296 <_printf_common+0xbe>
100132b0:	2000      	movs	r0, #0
100132b2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100132b4 <_printf_i>:
100132b4:	b5f0      	push	{r4, r5, r6, r7, lr}
100132b6:	b08b      	sub	sp, #44	; 0x2c
100132b8:	9206      	str	r2, [sp, #24]
100132ba:	000a      	movs	r2, r1
100132bc:	3243      	adds	r2, #67	; 0x43
100132be:	9307      	str	r3, [sp, #28]
100132c0:	9005      	str	r0, [sp, #20]
100132c2:	9204      	str	r2, [sp, #16]
100132c4:	7e0a      	ldrb	r2, [r1, #24]
100132c6:	000c      	movs	r4, r1
100132c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
100132ca:	2a6e      	cmp	r2, #110	; 0x6e
100132cc:	d100      	bne.n	100132d0 <_printf_i+0x1c>
100132ce:	e0ab      	b.n	10013428 <_printf_i+0x174>
100132d0:	d811      	bhi.n	100132f6 <_printf_i+0x42>
100132d2:	2a63      	cmp	r2, #99	; 0x63
100132d4:	d022      	beq.n	1001331c <_printf_i+0x68>
100132d6:	d809      	bhi.n	100132ec <_printf_i+0x38>
100132d8:	2a00      	cmp	r2, #0
100132da:	d100      	bne.n	100132de <_printf_i+0x2a>
100132dc:	e0b5      	b.n	1001344a <_printf_i+0x196>
100132de:	2a58      	cmp	r2, #88	; 0x58
100132e0:	d000      	beq.n	100132e4 <_printf_i+0x30>
100132e2:	e0c5      	b.n	10013470 <_printf_i+0x1bc>
100132e4:	3145      	adds	r1, #69	; 0x45
100132e6:	700a      	strb	r2, [r1, #0]
100132e8:	4a81      	ldr	r2, [pc, #516]	; (100134f0 <_printf_i+0x23c>)
100132ea:	e04f      	b.n	1001338c <_printf_i+0xd8>
100132ec:	2a64      	cmp	r2, #100	; 0x64
100132ee:	d01d      	beq.n	1001332c <_printf_i+0x78>
100132f0:	2a69      	cmp	r2, #105	; 0x69
100132f2:	d01b      	beq.n	1001332c <_printf_i+0x78>
100132f4:	e0bc      	b.n	10013470 <_printf_i+0x1bc>
100132f6:	2a73      	cmp	r2, #115	; 0x73
100132f8:	d100      	bne.n	100132fc <_printf_i+0x48>
100132fa:	e0aa      	b.n	10013452 <_printf_i+0x19e>
100132fc:	d809      	bhi.n	10013312 <_printf_i+0x5e>
100132fe:	2a6f      	cmp	r2, #111	; 0x6f
10013300:	d029      	beq.n	10013356 <_printf_i+0xa2>
10013302:	2a70      	cmp	r2, #112	; 0x70
10013304:	d000      	beq.n	10013308 <_printf_i+0x54>
10013306:	e0b3      	b.n	10013470 <_printf_i+0x1bc>
10013308:	2220      	movs	r2, #32
1001330a:	6809      	ldr	r1, [r1, #0]
1001330c:	430a      	orrs	r2, r1
1001330e:	6022      	str	r2, [r4, #0]
10013310:	e037      	b.n	10013382 <_printf_i+0xce>
10013312:	2a75      	cmp	r2, #117	; 0x75
10013314:	d01f      	beq.n	10013356 <_printf_i+0xa2>
10013316:	2a78      	cmp	r2, #120	; 0x78
10013318:	d033      	beq.n	10013382 <_printf_i+0xce>
1001331a:	e0a9      	b.n	10013470 <_printf_i+0x1bc>
1001331c:	000e      	movs	r6, r1
1001331e:	681a      	ldr	r2, [r3, #0]
10013320:	3642      	adds	r6, #66	; 0x42
10013322:	1d11      	adds	r1, r2, #4
10013324:	6019      	str	r1, [r3, #0]
10013326:	6813      	ldr	r3, [r2, #0]
10013328:	7033      	strb	r3, [r6, #0]
1001332a:	e0a4      	b.n	10013476 <_printf_i+0x1c2>
1001332c:	6821      	ldr	r1, [r4, #0]
1001332e:	681a      	ldr	r2, [r3, #0]
10013330:	0608      	lsls	r0, r1, #24
10013332:	d406      	bmi.n	10013342 <_printf_i+0x8e>
10013334:	0649      	lsls	r1, r1, #25
10013336:	d504      	bpl.n	10013342 <_printf_i+0x8e>
10013338:	1d11      	adds	r1, r2, #4
1001333a:	6019      	str	r1, [r3, #0]
1001333c:	2300      	movs	r3, #0
1001333e:	5ed5      	ldrsh	r5, [r2, r3]
10013340:	e002      	b.n	10013348 <_printf_i+0x94>
10013342:	1d11      	adds	r1, r2, #4
10013344:	6019      	str	r1, [r3, #0]
10013346:	6815      	ldr	r5, [r2, #0]
10013348:	2d00      	cmp	r5, #0
1001334a:	da3b      	bge.n	100133c4 <_printf_i+0x110>
1001334c:	232d      	movs	r3, #45	; 0x2d
1001334e:	9a04      	ldr	r2, [sp, #16]
10013350:	426d      	negs	r5, r5
10013352:	7013      	strb	r3, [r2, #0]
10013354:	e036      	b.n	100133c4 <_printf_i+0x110>
10013356:	6821      	ldr	r1, [r4, #0]
10013358:	681a      	ldr	r2, [r3, #0]
1001335a:	0608      	lsls	r0, r1, #24
1001335c:	d406      	bmi.n	1001336c <_printf_i+0xb8>
1001335e:	0649      	lsls	r1, r1, #25
10013360:	d504      	bpl.n	1001336c <_printf_i+0xb8>
10013362:	6815      	ldr	r5, [r2, #0]
10013364:	1d11      	adds	r1, r2, #4
10013366:	6019      	str	r1, [r3, #0]
10013368:	b2ad      	uxth	r5, r5
1001336a:	e002      	b.n	10013372 <_printf_i+0xbe>
1001336c:	1d11      	adds	r1, r2, #4
1001336e:	6019      	str	r1, [r3, #0]
10013370:	6815      	ldr	r5, [r2, #0]
10013372:	4b5f      	ldr	r3, [pc, #380]	; (100134f0 <_printf_i+0x23c>)
10013374:	7e22      	ldrb	r2, [r4, #24]
10013376:	9303      	str	r3, [sp, #12]
10013378:	2708      	movs	r7, #8
1001337a:	2a6f      	cmp	r2, #111	; 0x6f
1001337c:	d01d      	beq.n	100133ba <_printf_i+0x106>
1001337e:	270a      	movs	r7, #10
10013380:	e01b      	b.n	100133ba <_printf_i+0x106>
10013382:	0022      	movs	r2, r4
10013384:	2178      	movs	r1, #120	; 0x78
10013386:	3245      	adds	r2, #69	; 0x45
10013388:	7011      	strb	r1, [r2, #0]
1001338a:	4a5a      	ldr	r2, [pc, #360]	; (100134f4 <_printf_i+0x240>)
1001338c:	6819      	ldr	r1, [r3, #0]
1001338e:	9203      	str	r2, [sp, #12]
10013390:	1d08      	adds	r0, r1, #4
10013392:	6822      	ldr	r2, [r4, #0]
10013394:	6018      	str	r0, [r3, #0]
10013396:	680d      	ldr	r5, [r1, #0]
10013398:	0610      	lsls	r0, r2, #24
1001339a:	d402      	bmi.n	100133a2 <_printf_i+0xee>
1001339c:	0650      	lsls	r0, r2, #25
1001339e:	d500      	bpl.n	100133a2 <_printf_i+0xee>
100133a0:	b2ad      	uxth	r5, r5
100133a2:	07d3      	lsls	r3, r2, #31
100133a4:	d502      	bpl.n	100133ac <_printf_i+0xf8>
100133a6:	2320      	movs	r3, #32
100133a8:	431a      	orrs	r2, r3
100133aa:	6022      	str	r2, [r4, #0]
100133ac:	2710      	movs	r7, #16
100133ae:	2d00      	cmp	r5, #0
100133b0:	d103      	bne.n	100133ba <_printf_i+0x106>
100133b2:	2320      	movs	r3, #32
100133b4:	6822      	ldr	r2, [r4, #0]
100133b6:	439a      	bics	r2, r3
100133b8:	6022      	str	r2, [r4, #0]
100133ba:	0023      	movs	r3, r4
100133bc:	2200      	movs	r2, #0
100133be:	3343      	adds	r3, #67	; 0x43
100133c0:	701a      	strb	r2, [r3, #0]
100133c2:	e002      	b.n	100133ca <_printf_i+0x116>
100133c4:	270a      	movs	r7, #10
100133c6:	4b4a      	ldr	r3, [pc, #296]	; (100134f0 <_printf_i+0x23c>)
100133c8:	9303      	str	r3, [sp, #12]
100133ca:	6863      	ldr	r3, [r4, #4]
100133cc:	60a3      	str	r3, [r4, #8]
100133ce:	2b00      	cmp	r3, #0
100133d0:	db09      	blt.n	100133e6 <_printf_i+0x132>
100133d2:	2204      	movs	r2, #4
100133d4:	6821      	ldr	r1, [r4, #0]
100133d6:	4391      	bics	r1, r2
100133d8:	6021      	str	r1, [r4, #0]
100133da:	2d00      	cmp	r5, #0
100133dc:	d105      	bne.n	100133ea <_printf_i+0x136>
100133de:	9e04      	ldr	r6, [sp, #16]
100133e0:	2b00      	cmp	r3, #0
100133e2:	d011      	beq.n	10013408 <_printf_i+0x154>
100133e4:	e07b      	b.n	100134de <_printf_i+0x22a>
100133e6:	2d00      	cmp	r5, #0
100133e8:	d079      	beq.n	100134de <_printf_i+0x22a>
100133ea:	9e04      	ldr	r6, [sp, #16]
100133ec:	0028      	movs	r0, r5
100133ee:	0039      	movs	r1, r7
100133f0:	f7fd ff00 	bl	100111f4 <__aeabi_uidivmod>
100133f4:	9b03      	ldr	r3, [sp, #12]
100133f6:	3e01      	subs	r6, #1
100133f8:	5c5b      	ldrb	r3, [r3, r1]
100133fa:	0028      	movs	r0, r5
100133fc:	7033      	strb	r3, [r6, #0]
100133fe:	0039      	movs	r1, r7
10013400:	f7fd fe72 	bl	100110e8 <__aeabi_uidiv>
10013404:	1e05      	subs	r5, r0, #0
10013406:	d1f1      	bne.n	100133ec <_printf_i+0x138>
10013408:	2f08      	cmp	r7, #8
1001340a:	d109      	bne.n	10013420 <_printf_i+0x16c>
1001340c:	6823      	ldr	r3, [r4, #0]
1001340e:	07db      	lsls	r3, r3, #31
10013410:	d506      	bpl.n	10013420 <_printf_i+0x16c>
10013412:	6863      	ldr	r3, [r4, #4]
10013414:	6922      	ldr	r2, [r4, #16]
10013416:	4293      	cmp	r3, r2
10013418:	dc02      	bgt.n	10013420 <_printf_i+0x16c>
1001341a:	2330      	movs	r3, #48	; 0x30
1001341c:	3e01      	subs	r6, #1
1001341e:	7033      	strb	r3, [r6, #0]
10013420:	9b04      	ldr	r3, [sp, #16]
10013422:	1b9b      	subs	r3, r3, r6
10013424:	6123      	str	r3, [r4, #16]
10013426:	e02b      	b.n	10013480 <_printf_i+0x1cc>
10013428:	6809      	ldr	r1, [r1, #0]
1001342a:	681a      	ldr	r2, [r3, #0]
1001342c:	0608      	lsls	r0, r1, #24
1001342e:	d407      	bmi.n	10013440 <_printf_i+0x18c>
10013430:	0649      	lsls	r1, r1, #25
10013432:	d505      	bpl.n	10013440 <_printf_i+0x18c>
10013434:	1d11      	adds	r1, r2, #4
10013436:	6019      	str	r1, [r3, #0]
10013438:	6813      	ldr	r3, [r2, #0]
1001343a:	8aa2      	ldrh	r2, [r4, #20]
1001343c:	801a      	strh	r2, [r3, #0]
1001343e:	e004      	b.n	1001344a <_printf_i+0x196>
10013440:	1d11      	adds	r1, r2, #4
10013442:	6019      	str	r1, [r3, #0]
10013444:	6813      	ldr	r3, [r2, #0]
10013446:	6962      	ldr	r2, [r4, #20]
10013448:	601a      	str	r2, [r3, #0]
1001344a:	2300      	movs	r3, #0
1001344c:	9e04      	ldr	r6, [sp, #16]
1001344e:	6123      	str	r3, [r4, #16]
10013450:	e016      	b.n	10013480 <_printf_i+0x1cc>
10013452:	681a      	ldr	r2, [r3, #0]
10013454:	1d11      	adds	r1, r2, #4
10013456:	6019      	str	r1, [r3, #0]
10013458:	6816      	ldr	r6, [r2, #0]
1001345a:	2100      	movs	r1, #0
1001345c:	6862      	ldr	r2, [r4, #4]
1001345e:	0030      	movs	r0, r6
10013460:	f000 f92a 	bl	100136b8 <memchr>
10013464:	2800      	cmp	r0, #0
10013466:	d001      	beq.n	1001346c <_printf_i+0x1b8>
10013468:	1b80      	subs	r0, r0, r6
1001346a:	6060      	str	r0, [r4, #4]
1001346c:	6863      	ldr	r3, [r4, #4]
1001346e:	e003      	b.n	10013478 <_printf_i+0x1c4>
10013470:	0026      	movs	r6, r4
10013472:	3642      	adds	r6, #66	; 0x42
10013474:	7032      	strb	r2, [r6, #0]
10013476:	2301      	movs	r3, #1
10013478:	6123      	str	r3, [r4, #16]
1001347a:	2300      	movs	r3, #0
1001347c:	9a04      	ldr	r2, [sp, #16]
1001347e:	7013      	strb	r3, [r2, #0]
10013480:	9b07      	ldr	r3, [sp, #28]
10013482:	aa09      	add	r2, sp, #36	; 0x24
10013484:	9300      	str	r3, [sp, #0]
10013486:	0021      	movs	r1, r4
10013488:	9b06      	ldr	r3, [sp, #24]
1001348a:	9805      	ldr	r0, [sp, #20]
1001348c:	f7ff fea4 	bl	100131d8 <_printf_common>
10013490:	1c43      	adds	r3, r0, #1
10013492:	d102      	bne.n	1001349a <_printf_i+0x1e6>
10013494:	2001      	movs	r0, #1
10013496:	4240      	negs	r0, r0
10013498:	e027      	b.n	100134ea <_printf_i+0x236>
1001349a:	6923      	ldr	r3, [r4, #16]
1001349c:	0032      	movs	r2, r6
1001349e:	9906      	ldr	r1, [sp, #24]
100134a0:	9805      	ldr	r0, [sp, #20]
100134a2:	9d07      	ldr	r5, [sp, #28]
100134a4:	47a8      	blx	r5
100134a6:	1c43      	adds	r3, r0, #1
100134a8:	d0f4      	beq.n	10013494 <_printf_i+0x1e0>
100134aa:	6823      	ldr	r3, [r4, #0]
100134ac:	2500      	movs	r5, #0
100134ae:	079b      	lsls	r3, r3, #30
100134b0:	d40f      	bmi.n	100134d2 <_printf_i+0x21e>
100134b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
100134b4:	68e0      	ldr	r0, [r4, #12]
100134b6:	4298      	cmp	r0, r3
100134b8:	da17      	bge.n	100134ea <_printf_i+0x236>
100134ba:	0018      	movs	r0, r3
100134bc:	e015      	b.n	100134ea <_printf_i+0x236>
100134be:	0022      	movs	r2, r4
100134c0:	2301      	movs	r3, #1
100134c2:	3219      	adds	r2, #25
100134c4:	9906      	ldr	r1, [sp, #24]
100134c6:	9805      	ldr	r0, [sp, #20]
100134c8:	9e07      	ldr	r6, [sp, #28]
100134ca:	47b0      	blx	r6
100134cc:	1c43      	adds	r3, r0, #1
100134ce:	d0e1      	beq.n	10013494 <_printf_i+0x1e0>
100134d0:	3501      	adds	r5, #1
100134d2:	68e3      	ldr	r3, [r4, #12]
100134d4:	9a09      	ldr	r2, [sp, #36]	; 0x24
100134d6:	1a9b      	subs	r3, r3, r2
100134d8:	429d      	cmp	r5, r3
100134da:	dbf0      	blt.n	100134be <_printf_i+0x20a>
100134dc:	e7e9      	b.n	100134b2 <_printf_i+0x1fe>
100134de:	0026      	movs	r6, r4
100134e0:	9b03      	ldr	r3, [sp, #12]
100134e2:	3642      	adds	r6, #66	; 0x42
100134e4:	781b      	ldrb	r3, [r3, #0]
100134e6:	7033      	strb	r3, [r6, #0]
100134e8:	e78e      	b.n	10013408 <_printf_i+0x154>
100134ea:	b00b      	add	sp, #44	; 0x2c
100134ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
100134ee:	46c0      	nop			; (mov r8, r8)
100134f0:	10015c19 	.word	0x10015c19
100134f4:	10015c2a 	.word	0x10015c2a

100134f8 <_putc_r>:
100134f8:	b570      	push	{r4, r5, r6, lr}
100134fa:	0006      	movs	r6, r0
100134fc:	000d      	movs	r5, r1
100134fe:	0014      	movs	r4, r2
10013500:	2800      	cmp	r0, #0
10013502:	d004      	beq.n	1001350e <_putc_r+0x16>
10013504:	6983      	ldr	r3, [r0, #24]
10013506:	2b00      	cmp	r3, #0
10013508:	d101      	bne.n	1001350e <_putc_r+0x16>
1001350a:	f7ff fac9 	bl	10012aa0 <__sinit>
1001350e:	4b12      	ldr	r3, [pc, #72]	; (10013558 <_putc_r+0x60>)
10013510:	429c      	cmp	r4, r3
10013512:	d101      	bne.n	10013518 <_putc_r+0x20>
10013514:	6874      	ldr	r4, [r6, #4]
10013516:	e008      	b.n	1001352a <_putc_r+0x32>
10013518:	4b10      	ldr	r3, [pc, #64]	; (1001355c <_putc_r+0x64>)
1001351a:	429c      	cmp	r4, r3
1001351c:	d101      	bne.n	10013522 <_putc_r+0x2a>
1001351e:	68b4      	ldr	r4, [r6, #8]
10013520:	e003      	b.n	1001352a <_putc_r+0x32>
10013522:	4b0f      	ldr	r3, [pc, #60]	; (10013560 <_putc_r+0x68>)
10013524:	429c      	cmp	r4, r3
10013526:	d100      	bne.n	1001352a <_putc_r+0x32>
10013528:	68f4      	ldr	r4, [r6, #12]
1001352a:	68a3      	ldr	r3, [r4, #8]
1001352c:	3b01      	subs	r3, #1
1001352e:	60a3      	str	r3, [r4, #8]
10013530:	2b00      	cmp	r3, #0
10013532:	da05      	bge.n	10013540 <_putc_r+0x48>
10013534:	69a2      	ldr	r2, [r4, #24]
10013536:	4293      	cmp	r3, r2
10013538:	db08      	blt.n	1001354c <_putc_r+0x54>
1001353a:	b2eb      	uxtb	r3, r5
1001353c:	2b0a      	cmp	r3, #10
1001353e:	d005      	beq.n	1001354c <_putc_r+0x54>
10013540:	6823      	ldr	r3, [r4, #0]
10013542:	b2e8      	uxtb	r0, r5
10013544:	1c5a      	adds	r2, r3, #1
10013546:	6022      	str	r2, [r4, #0]
10013548:	701d      	strb	r5, [r3, #0]
1001354a:	e004      	b.n	10013556 <_putc_r+0x5e>
1001354c:	0022      	movs	r2, r4
1001354e:	0029      	movs	r1, r5
10013550:	0030      	movs	r0, r6
10013552:	f7ff f8e3 	bl	1001271c <__swbuf_r>
10013556:	bd70      	pop	{r4, r5, r6, pc}
10013558:	10015ba8 	.word	0x10015ba8
1001355c:	10015bc8 	.word	0x10015bc8
10013560:	10015be8 	.word	0x10015be8

10013564 <__sread>:
10013564:	b570      	push	{r4, r5, r6, lr}
10013566:	000c      	movs	r4, r1
10013568:	250e      	movs	r5, #14
1001356a:	5f49      	ldrsh	r1, [r1, r5]
1001356c:	f000 f8ea 	bl	10013744 <_read_r>
10013570:	2800      	cmp	r0, #0
10013572:	db03      	blt.n	1001357c <__sread+0x18>
10013574:	6d63      	ldr	r3, [r4, #84]	; 0x54
10013576:	181b      	adds	r3, r3, r0
10013578:	6563      	str	r3, [r4, #84]	; 0x54
1001357a:	e003      	b.n	10013584 <__sread+0x20>
1001357c:	89a2      	ldrh	r2, [r4, #12]
1001357e:	4b02      	ldr	r3, [pc, #8]	; (10013588 <__sread+0x24>)
10013580:	4013      	ands	r3, r2
10013582:	81a3      	strh	r3, [r4, #12]
10013584:	bd70      	pop	{r4, r5, r6, pc}
10013586:	46c0      	nop			; (mov r8, r8)
10013588:	ffffefff 	.word	0xffffefff

1001358c <__swrite>:
1001358c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001358e:	001f      	movs	r7, r3
10013590:	898b      	ldrh	r3, [r1, #12]
10013592:	0005      	movs	r5, r0
10013594:	000c      	movs	r4, r1
10013596:	0016      	movs	r6, r2
10013598:	05db      	lsls	r3, r3, #23
1001359a:	d505      	bpl.n	100135a8 <__swrite+0x1c>
1001359c:	230e      	movs	r3, #14
1001359e:	5ec9      	ldrsh	r1, [r1, r3]
100135a0:	2200      	movs	r2, #0
100135a2:	2302      	movs	r3, #2
100135a4:	f000 f874 	bl	10013690 <_lseek_r>
100135a8:	89a2      	ldrh	r2, [r4, #12]
100135aa:	4b05      	ldr	r3, [pc, #20]	; (100135c0 <__swrite+0x34>)
100135ac:	0028      	movs	r0, r5
100135ae:	4013      	ands	r3, r2
100135b0:	81a3      	strh	r3, [r4, #12]
100135b2:	0032      	movs	r2, r6
100135b4:	230e      	movs	r3, #14
100135b6:	5ee1      	ldrsh	r1, [r4, r3]
100135b8:	003b      	movs	r3, r7
100135ba:	f000 f81f 	bl	100135fc <_write_r>
100135be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100135c0:	ffffefff 	.word	0xffffefff

100135c4 <__sseek>:
100135c4:	b570      	push	{r4, r5, r6, lr}
100135c6:	000c      	movs	r4, r1
100135c8:	250e      	movs	r5, #14
100135ca:	5f49      	ldrsh	r1, [r1, r5]
100135cc:	f000 f860 	bl	10013690 <_lseek_r>
100135d0:	89a3      	ldrh	r3, [r4, #12]
100135d2:	1c42      	adds	r2, r0, #1
100135d4:	d103      	bne.n	100135de <__sseek+0x1a>
100135d6:	4a05      	ldr	r2, [pc, #20]	; (100135ec <__sseek+0x28>)
100135d8:	4013      	ands	r3, r2
100135da:	81a3      	strh	r3, [r4, #12]
100135dc:	e004      	b.n	100135e8 <__sseek+0x24>
100135de:	2280      	movs	r2, #128	; 0x80
100135e0:	0152      	lsls	r2, r2, #5
100135e2:	4313      	orrs	r3, r2
100135e4:	81a3      	strh	r3, [r4, #12]
100135e6:	6560      	str	r0, [r4, #84]	; 0x54
100135e8:	bd70      	pop	{r4, r5, r6, pc}
100135ea:	46c0      	nop			; (mov r8, r8)
100135ec:	ffffefff 	.word	0xffffefff

100135f0 <__sclose>:
100135f0:	b510      	push	{r4, lr}
100135f2:	230e      	movs	r3, #14
100135f4:	5ec9      	ldrsh	r1, [r1, r3]
100135f6:	f000 f815 	bl	10013624 <_close_r>
100135fa:	bd10      	pop	{r4, pc}

100135fc <_write_r>:
100135fc:	b570      	push	{r4, r5, r6, lr}
100135fe:	0005      	movs	r5, r0
10013600:	0008      	movs	r0, r1
10013602:	0011      	movs	r1, r2
10013604:	2200      	movs	r2, #0
10013606:	4c06      	ldr	r4, [pc, #24]	; (10013620 <_write_r+0x24>)
10013608:	6022      	str	r2, [r4, #0]
1001360a:	001a      	movs	r2, r3
1001360c:	f7f7 fde2 	bl	1000b1d4 <_write>
10013610:	1c43      	adds	r3, r0, #1
10013612:	d103      	bne.n	1001361c <_write_r+0x20>
10013614:	6823      	ldr	r3, [r4, #0]
10013616:	2b00      	cmp	r3, #0
10013618:	d000      	beq.n	1001361c <_write_r+0x20>
1001361a:	602b      	str	r3, [r5, #0]
1001361c:	bd70      	pop	{r4, r5, r6, pc}
1001361e:	46c0      	nop			; (mov r8, r8)
10013620:	1001a774 	.word	0x1001a774

10013624 <_close_r>:
10013624:	2300      	movs	r3, #0
10013626:	b570      	push	{r4, r5, r6, lr}
10013628:	4c06      	ldr	r4, [pc, #24]	; (10013644 <_close_r+0x20>)
1001362a:	0005      	movs	r5, r0
1001362c:	0008      	movs	r0, r1
1001362e:	6023      	str	r3, [r4, #0]
10013630:	f7f7 fe0a 	bl	1000b248 <_close>
10013634:	1c43      	adds	r3, r0, #1
10013636:	d103      	bne.n	10013640 <_close_r+0x1c>
10013638:	6823      	ldr	r3, [r4, #0]
1001363a:	2b00      	cmp	r3, #0
1001363c:	d000      	beq.n	10013640 <_close_r+0x1c>
1001363e:	602b      	str	r3, [r5, #0]
10013640:	bd70      	pop	{r4, r5, r6, pc}
10013642:	46c0      	nop			; (mov r8, r8)
10013644:	1001a774 	.word	0x1001a774

10013648 <_fstat_r>:
10013648:	2300      	movs	r3, #0
1001364a:	b570      	push	{r4, r5, r6, lr}
1001364c:	4c06      	ldr	r4, [pc, #24]	; (10013668 <_fstat_r+0x20>)
1001364e:	0005      	movs	r5, r0
10013650:	0008      	movs	r0, r1
10013652:	0011      	movs	r1, r2
10013654:	6023      	str	r3, [r4, #0]
10013656:	f7f7 fdfb 	bl	1000b250 <_fstat>
1001365a:	1c43      	adds	r3, r0, #1
1001365c:	d103      	bne.n	10013666 <_fstat_r+0x1e>
1001365e:	6823      	ldr	r3, [r4, #0]
10013660:	2b00      	cmp	r3, #0
10013662:	d000      	beq.n	10013666 <_fstat_r+0x1e>
10013664:	602b      	str	r3, [r5, #0]
10013666:	bd70      	pop	{r4, r5, r6, pc}
10013668:	1001a774 	.word	0x1001a774

1001366c <_isatty_r>:
1001366c:	2300      	movs	r3, #0
1001366e:	b570      	push	{r4, r5, r6, lr}
10013670:	4c06      	ldr	r4, [pc, #24]	; (1001368c <_isatty_r+0x20>)
10013672:	0005      	movs	r5, r0
10013674:	0008      	movs	r0, r1
10013676:	6023      	str	r3, [r4, #0]
10013678:	f7f7 fdf0 	bl	1000b25c <_isatty>
1001367c:	1c43      	adds	r3, r0, #1
1001367e:	d103      	bne.n	10013688 <_isatty_r+0x1c>
10013680:	6823      	ldr	r3, [r4, #0]
10013682:	2b00      	cmp	r3, #0
10013684:	d000      	beq.n	10013688 <_isatty_r+0x1c>
10013686:	602b      	str	r3, [r5, #0]
10013688:	bd70      	pop	{r4, r5, r6, pc}
1001368a:	46c0      	nop			; (mov r8, r8)
1001368c:	1001a774 	.word	0x1001a774

10013690 <_lseek_r>:
10013690:	b570      	push	{r4, r5, r6, lr}
10013692:	0005      	movs	r5, r0
10013694:	0008      	movs	r0, r1
10013696:	0011      	movs	r1, r2
10013698:	2200      	movs	r2, #0
1001369a:	4c06      	ldr	r4, [pc, #24]	; (100136b4 <_lseek_r+0x24>)
1001369c:	6022      	str	r2, [r4, #0]
1001369e:	001a      	movs	r2, r3
100136a0:	f7f7 fdde 	bl	1000b260 <_lseek>
100136a4:	1c43      	adds	r3, r0, #1
100136a6:	d103      	bne.n	100136b0 <_lseek_r+0x20>
100136a8:	6823      	ldr	r3, [r4, #0]
100136aa:	2b00      	cmp	r3, #0
100136ac:	d000      	beq.n	100136b0 <_lseek_r+0x20>
100136ae:	602b      	str	r3, [r5, #0]
100136b0:	bd70      	pop	{r4, r5, r6, pc}
100136b2:	46c0      	nop			; (mov r8, r8)
100136b4:	1001a774 	.word	0x1001a774

100136b8 <memchr>:
100136b8:	b2c9      	uxtb	r1, r1
100136ba:	1882      	adds	r2, r0, r2
100136bc:	4290      	cmp	r0, r2
100136be:	d004      	beq.n	100136ca <memchr+0x12>
100136c0:	7803      	ldrb	r3, [r0, #0]
100136c2:	428b      	cmp	r3, r1
100136c4:	d002      	beq.n	100136cc <memchr+0x14>
100136c6:	3001      	adds	r0, #1
100136c8:	e7f8      	b.n	100136bc <memchr+0x4>
100136ca:	2000      	movs	r0, #0
100136cc:	4770      	bx	lr

100136ce <memmove>:
100136ce:	b510      	push	{r4, lr}
100136d0:	4288      	cmp	r0, r1
100136d2:	d902      	bls.n	100136da <memmove+0xc>
100136d4:	188b      	adds	r3, r1, r2
100136d6:	4298      	cmp	r0, r3
100136d8:	d301      	bcc.n	100136de <memmove+0x10>
100136da:	2300      	movs	r3, #0
100136dc:	e005      	b.n	100136ea <memmove+0x1c>
100136de:	1a9b      	subs	r3, r3, r2
100136e0:	3a01      	subs	r2, #1
100136e2:	d308      	bcc.n	100136f6 <memmove+0x28>
100136e4:	5c99      	ldrb	r1, [r3, r2]
100136e6:	5481      	strb	r1, [r0, r2]
100136e8:	e7fa      	b.n	100136e0 <memmove+0x12>
100136ea:	4293      	cmp	r3, r2
100136ec:	d003      	beq.n	100136f6 <memmove+0x28>
100136ee:	5ccc      	ldrb	r4, [r1, r3]
100136f0:	54c4      	strb	r4, [r0, r3]
100136f2:	3301      	adds	r3, #1
100136f4:	e7f9      	b.n	100136ea <memmove+0x1c>
100136f6:	bd10      	pop	{r4, pc}

100136f8 <_realloc_r>:
100136f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100136fa:	0006      	movs	r6, r0
100136fc:	000c      	movs	r4, r1
100136fe:	0015      	movs	r5, r2
10013700:	2900      	cmp	r1, #0
10013702:	d104      	bne.n	1001370e <_realloc_r+0x16>
10013704:	0011      	movs	r1, r2
10013706:	f7fe fdd5 	bl	100122b4 <_malloc_r>
1001370a:	0004      	movs	r4, r0
1001370c:	e018      	b.n	10013740 <_realloc_r+0x48>
1001370e:	2a00      	cmp	r2, #0
10013710:	d103      	bne.n	1001371a <_realloc_r+0x22>
10013712:	f7fe fd89 	bl	10012228 <_free_r>
10013716:	002c      	movs	r4, r5
10013718:	e012      	b.n	10013740 <_realloc_r+0x48>
1001371a:	f000 f827 	bl	1001376c <_malloc_usable_size_r>
1001371e:	4285      	cmp	r5, r0
10013720:	d90e      	bls.n	10013740 <_realloc_r+0x48>
10013722:	0029      	movs	r1, r5
10013724:	0030      	movs	r0, r6
10013726:	f7fe fdc5 	bl	100122b4 <_malloc_r>
1001372a:	1e07      	subs	r7, r0, #0
1001372c:	d007      	beq.n	1001373e <_realloc_r+0x46>
1001372e:	0021      	movs	r1, r4
10013730:	002a      	movs	r2, r5
10013732:	f7fe fd68 	bl	10012206 <memcpy>
10013736:	0021      	movs	r1, r4
10013738:	0030      	movs	r0, r6
1001373a:	f7fe fd75 	bl	10012228 <_free_r>
1001373e:	003c      	movs	r4, r7
10013740:	0020      	movs	r0, r4
10013742:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10013744 <_read_r>:
10013744:	b570      	push	{r4, r5, r6, lr}
10013746:	0005      	movs	r5, r0
10013748:	0008      	movs	r0, r1
1001374a:	0011      	movs	r1, r2
1001374c:	2200      	movs	r2, #0
1001374e:	4c06      	ldr	r4, [pc, #24]	; (10013768 <_read_r+0x24>)
10013750:	6022      	str	r2, [r4, #0]
10013752:	001a      	movs	r2, r3
10013754:	f7f7 fd1e 	bl	1000b194 <_read>
10013758:	1c43      	adds	r3, r0, #1
1001375a:	d103      	bne.n	10013764 <_read_r+0x20>
1001375c:	6823      	ldr	r3, [r4, #0]
1001375e:	2b00      	cmp	r3, #0
10013760:	d000      	beq.n	10013764 <_read_r+0x20>
10013762:	602b      	str	r3, [r5, #0]
10013764:	bd70      	pop	{r4, r5, r6, pc}
10013766:	46c0      	nop			; (mov r8, r8)
10013768:	1001a774 	.word	0x1001a774

1001376c <_malloc_usable_size_r>:
1001376c:	1f0b      	subs	r3, r1, #4
1001376e:	681a      	ldr	r2, [r3, #0]
10013770:	1f10      	subs	r0, r2, #4
10013772:	2a00      	cmp	r2, #0
10013774:	da04      	bge.n	10013780 <_malloc_usable_size_r+0x14>
10013776:	1889      	adds	r1, r1, r2
10013778:	3904      	subs	r1, #4
1001377a:	680b      	ldr	r3, [r1, #0]
1001377c:	18d0      	adds	r0, r2, r3
1001377e:	3804      	subs	r0, #4
10013780:	4770      	bx	lr
	...

10013784 <__aeabi_lmul>:
10013784:	b5f0      	push	{r4, r5, r6, r7, lr}
10013786:	464f      	mov	r7, r9
10013788:	4646      	mov	r6, r8
1001378a:	b4c0      	push	{r6, r7}
1001378c:	0416      	lsls	r6, r2, #16
1001378e:	0c36      	lsrs	r6, r6, #16
10013790:	4699      	mov	r9, r3
10013792:	0033      	movs	r3, r6
10013794:	0405      	lsls	r5, r0, #16
10013796:	0c2c      	lsrs	r4, r5, #16
10013798:	0c07      	lsrs	r7, r0, #16
1001379a:	0c15      	lsrs	r5, r2, #16
1001379c:	4363      	muls	r3, r4
1001379e:	437e      	muls	r6, r7
100137a0:	436f      	muls	r7, r5
100137a2:	4365      	muls	r5, r4
100137a4:	0c1c      	lsrs	r4, r3, #16
100137a6:	19ad      	adds	r5, r5, r6
100137a8:	1964      	adds	r4, r4, r5
100137aa:	469c      	mov	ip, r3
100137ac:	42a6      	cmp	r6, r4
100137ae:	d903      	bls.n	100137b8 <__aeabi_lmul+0x34>
100137b0:	2380      	movs	r3, #128	; 0x80
100137b2:	025b      	lsls	r3, r3, #9
100137b4:	4698      	mov	r8, r3
100137b6:	4447      	add	r7, r8
100137b8:	4663      	mov	r3, ip
100137ba:	0c25      	lsrs	r5, r4, #16
100137bc:	19ef      	adds	r7, r5, r7
100137be:	041d      	lsls	r5, r3, #16
100137c0:	464b      	mov	r3, r9
100137c2:	434a      	muls	r2, r1
100137c4:	4343      	muls	r3, r0
100137c6:	0c2d      	lsrs	r5, r5, #16
100137c8:	0424      	lsls	r4, r4, #16
100137ca:	1964      	adds	r4, r4, r5
100137cc:	1899      	adds	r1, r3, r2
100137ce:	19c9      	adds	r1, r1, r7
100137d0:	0020      	movs	r0, r4
100137d2:	bc0c      	pop	{r2, r3}
100137d4:	4690      	mov	r8, r2
100137d6:	4699      	mov	r9, r3
100137d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
100137da:	46c0      	nop			; (mov r8, r8)

100137dc <missed_call>:
100137dc:	37e4 1001 041e 001e                         .7......

100137e4 <missed_callBitmaps>:
100137e4:	0000 1010 0000 3838 001c 7c7c 003f f83e     ......88..||?.>.
100137f4:	007f f01f 80ff e01f 80ff c00f 80ff e00f     ................
10013804:	80ff f01f c0ff f83f 80ff 7c7c 007f 7838     ......?...||..8x
10013814:	007f 1010 007e 0000 007f 0000 003f 0000     ....~.......?...
10013824:	803f 0000 801f 0000 e01f 0000 e00f 0000     ?...............
10013834:	f007 0000 fc07 803f ff03 e07f ff01 e0ff     ......?.........
10013844:	ff00 f0ff 3f00 f0ff 1f00 f0ff 0700 e0ff     .....?..........
10013854:	0100 c0ff 0000 803f                         ......?.

1001385c <josefinSans_16ptDescriptors>:
1001385c:	0002 0000 0000 0000 0000 0000 0000 0000     ................
	...
1001388c:	0004 0015 0000 0000 0000 0000 0000 0000     ................
1001389c:	000d 002a 0004 0054 000a 0069 0009 0093     ..*...T...i.....
100138ac:	000b 00bd 0009 00e7 000a 0111 0009 013b     ..............;.
100138bc:	000a 0165 000a 018f 0000 0000 0000 0000     ..e.............
	...
100138e0:	000e 01b9 0000 0000 0000 0000 000d 01e3     ................
100138f0:	0000 0000 000a 020d 0000 0000 0000 0000     ................
10013900:	0000 0000 0006 0237 0000 0000 0000 0000     ......7.........
10013910:	0010 024c 000e 0276 0010 02a0 0000 0000     ..L...v.........
	...
10013928:	000b 02ca 000a 02f4 0000 0000 0000 0000     ................
10013938:	0014 031e 0000 0000 0000 0000 0000 0000     ................
	...
10013960:	000a 035d 000a 0387 0008 03b1 000a 03c6     ..].............
10013970:	0009 03f0 0000 0000 000a 041a 0009 0444     ..............D.
10013980:	0003 046e 0000 0000 0000 0000 0003 0483     ..n.............
10013990:	0000 0000 0009 0498 000a 04c2 000a 04ec     ................
100139a0:	0000 0000 0006 0516 0000 0000 0007 052b     ..............+.
100139b0:	0009 0540 000a 056a 0000 0000 0000 0000     ..@...j.........
100139c0:	000a 0594                                   ....

100139c4 <josefinSans_16ptFontInfo>:
100139c4:	2015 0079 385c 1001 39d0 1001               . y.\8...9..

100139d0 <josefinSans_16ptBitmaps>:
	...
100139f4:	3030 6060 00e0 0000 0000 0000 800f e038     00``..........8.
10013a04:	6070 3060 3060 30e0 38c0 38c0 30e0 3060     p``0`0.0.8.8.0`0
10013a14:	7060 6070 c039 800f 0000 0000 0000 0000     `pp`9...........
10013a24:	0000 f000 3030 3030 3030 3030 3030 3030     ....000000000000
10013a34:	0030 0000 0000 0000 0000 3e00 7300 e180     0..........>.s..
10013a44:	c180 c180 e180 6180 0380 0780 0600 0c00     .......a........
10013a54:	1800 3800 ff00 00c0 0000 0000 0000 0000     ...8............
10013a64:	0000 0000 ff00 0780 0600 0c00 1800 1c00     ................
10013a74:	3700 0300 0300 0380 0380 0380 e700 7c00     .7.............|
	...
10013a90:	0000 0100 0180 0380 0780 0780 0d80 1980     ................
10013aa0:	3980 7180 ff80 01e0 0180 0180 0180 0080     .9.q............
	...
10013abc:	7f00 6000 6000 6000 6000 7c00 6700 0300     ...`.`.`.`.|.g..
10013acc:	0300 0380 0380 0380 e700 7c00 0000 0000     ...........|....
	...
10013ae4:	0000 0300 0700 0e80 1c00 3800 7f00 7300     ...........8...s
10013af4:	e180 e0c0 c0c0 e0c0 61c0 73c0 1f80 0000     .........a.s....
	...
10013b10:	ff00 0380 0380 0700 0700 0600 0e00 0c00     ................
10013b20:	1c00 1800 1800 3800 3000 7000 0000 0000     .......8.0.p....
	...
10013b38:	0000 1e00 3300 7100 7180 3380 1e00 7300     .....3.q.q.3...s
10013b48:	6180 e0c0 c0c0 e0c0 61c0 73c0 3f80 0000     .a.......a.s.?..
	...
10013b64:	1f00 7300 6180 e0c0 c0c0 c0c0 61c0 73c0     ...s.a.......a.s
10013b74:	3f80 0380 0600 1c00 7800 3000 0000 0000     .?.......x.0....
10013b84:	0000 0000 0000 0300 0300 0300 0780 0780     ................
10013b94:	06c0 0cc0 0cc0 1c60 1f60 18f0 3030 3030     ......`.`...0000
10013ba4:	7018 6018 e01c 000c 0000 0000 0000 0000     .p.`............
10013bb4:	0000 ff00 e300 e0c0 e0e0 e070 e030 e038     ..........p.0.8.
10013bc4:	e038 e038 e038 e038 e030 e070 e3e0 ffc0     8.8.8.8.0.p.....
	...
10013be0:	ff00 e0c0 e000 e000 e000 e000 e000 ff00     ................
10013bf0:	e080 e000 e000 e000 e000 e000 e000 0000     ................
	...
10013c08:	0c00 0c0c 0c0c 0c0c 0c0c 0c0c 0c0c 1c0c     ................
10013c18:	381c 00f0 0000 03c0 03c0 07e0 0fe0 0ff0     .8..............
10013c28:	1ff8 3ffc 37ec 67ee e7e7 c7e3 87e3 87e1     ...?.7.g........
10013c38:	07e0 07e0 07e0 0000 0000 0000 0000 0000     ................
10013c48:	00c0 1cc0 1ce0 1cf0 1cf8 1cfc 1cee 1ce7     ................
10013c58:	1ce3 9ce3 dce1 fce0 7ce0 3ce0 1ce0 0ce0     .........|.<....
10013c68:	0c00 0000 0000 0000 0000 0000 e007 381e     ...............8
10013c78:	0c38 0670 0760 03e0 03e0 03c0 03e0 03e0     8.p.`...........
10013c88:	0760 0670 0c38 381e e007 0000 0000 0000     `.p.8..8........
10013c98:	0000 0000 0000 801f c071 0060 00e0 0060     ........q.`...`.
10013ca8:	0070 003e 800f c001 c000 e000 e000 c000     p.>.............
10013cb8:	c0e3 007f 0000 0000 0000 0000 0000 0000     ................
10013cc8:	c0ff 000c 000c 000c 000c 000c 000c 000c     ................
10013cd8:	000c 000c 000c 000c 000c 000c 000c 0000     ................
	...
10013cf4:	c0e1 7030 70c0 e070 3060 6060 7038 18e0     ..0p.pp.`0``8p..
10013d04:	c070 7118 1cc0 c0f9 d90c 0e80 80db df0f     p..q............
10013d14:	0700 008f 8f07 0300 000e 0603 0300 0006     ................
	...
10013d3c:	3e00 73c0 e1c0 c1c0 c0c0 c1c0 e1c0 73c0     .>.s...........s
10013d4c:	3ec0 00c0 0000 0000 0000 e000 e000 e000     .>..............
10013d5c:	e000 e000 e000 e000 e000 ff00 f300 e080     ................
10013d6c:	e0c0 e0c0 e0c0 e1c0 f3c0 ff80 0000 0000     ................
	...
10013d88:	3e00 e073 c0c0 e0c0 3e73 0000 0000 c000     .>s.....s>......
10013d98:	c000 c000 c000 c000 c000 c000 c000 c03e     ..............>.
10013da8:	c073 c0e1 c0c1 c0c0 c0c1 c0e1 c073 c03e     s...........s.>.
	...
10013dd0:	003e 0073 80e1 00c7 00fc 00e0 00e0 0073     >.s...........s.
10013de0:	003e 0000 0000 0000 0000 0000 0000 0000     >...............
	...
10013df8:	0000 c03e c073 c0e1 c0c1 c0c0 c0c1 c0e1     ..>.s...........
10013e08:	c073 c03e c001 8061 80f3 003f 00e0 00e0     s.>...a...?.....
10013e18:	00e0 00e0 00e0 00e0 00e0 00e0 00ff 80f3     ................
10013e28:	80e1 80e1 80e1 80e1 80e1 80e1 80e1 0000     ................
	...
10013e40:	0000 e000 0000 e0e0 e0e0 e0e0 e0e0 00e0     ................
10013e50:	0000 e000 e0e0 e0e0 e0e0 e0e0 e0e0 e0e0     ................
10013e60:	e0e0 e0e0 0000 0000 0000 0000 0000 0000     ................
	...
10013e78:	00df 80f3 80e1 80e1 80e1 80e1 80e1 80e1     ................
10013e88:	80e1 0000 0000 0000 0000 0000 0000 0000     ................
	...
10013ea0:	0000 003e 8073 80e1 c0c1 c0c1 c0c1 80e1     ..>.s...........
10013eb0:	8073 003e 0000 0000 0000 0000 0000 0000     s.>.............
	...
10013ecc:	00ff 80f3 c0e0 c0e0 c0e0 c0e0 c0e1 80f3     ................
10013edc:	00ff 00e0 00e0 00e0 00e0 0000 0000 0000     ................
10013eec:	0000 f0dc e0e0 e0e0 e0e0 00e0 0000 0000     ................
10013efc:	0000 0000 3030 3030 30fe 3030 3030 3030     ....0000.0000000
	...
10013f20:	80e1 80e1 80e1 80e1 80e1 80e3 80e3 8067     ..............g.
10013f30:	807d 0000 0000 0000 0000 0000 0000 0000     }...............
	...
10013f48:	0000 c0e1 8061 8073 0033 003f 001e 001e     ....a.s.3.?.....
10013f58:	000c 000c 0000 0000 0000 0000 0000 0000     ................
	...
10013f74:	c0e0 8061 8071 8033 003b 001f 001e 000e     ..a.q.3.;.......
10013f84:	000c 000c 0018 0018 0038 0000               ........8...

10013f90 <josefinSans_48ptBitmaps>:
	...
10013fbc:	0700 00f8 0000 ff3f 0000 ff00 c0ff 0100     ......?.........
10013fcc:	3fff 00e0 f003 f003 0700 00c0 00f8 800f     .?..............
10013fdc:	7c00 1f00 0000 003c 001e 1e00 3e00 0000     .|....<......>..
10013fec:	001f 003c 0f00 7c00 0000 000f 0078 0700     ..<....|....x...
10013ffc:	7880 0000 8007 00f0 0700 f080 0000 c003     .x..............
1001400c:	00f0 0300 f0c0 0000 c003 00f0 0300 f0c0     ................
1001401c:	0000 c003 00e0 0300 e0c0 0000 c003 00e0     ................
1001402c:	0300 e0c0 0000 c003 00f0 0300 f0c0 0000     ................
1001403c:	c003 00f0 0300 f0c0 0000 c003 00f0 0300     ................
1001404c:	7880 0000 8007 0078 0700 7880 0000 800f     .x....x....x....
1001405c:	003c 0f00 3e00 0000 001f 001e 1e00 1f00     <....>..........
1001406c:	0000 003e 800f 7c00 0700 00c0 00f8 e003     ..>....|........
1001407c:	f003 0100 0ffc 00e0 ff00 c0ff 0000 ff7f     ................
1001408c:	0000 1f00 00fc 0000 8000 0000 0000 0000     ................
1001409c:	80ff 80ff 80ff 8007 8007 8007 8007 8007     ................
100140ac:	8007 8007 8007 8007 8007 8007 8007 8007     ................
100140bc:	8007 8007 8007 8007 8007 8007 8007 8007     ................
100140cc:	8007 8007 8007 8007 8007 8007 8007 8007     ................
100140dc:	8007 8007 8007 8007 8007 8007 8007 8007     ................
100140ec:	8007 0000 7f00 0080 ff01 00e0 ff07 00f8     ................
100140fc:	f30f 00fc 801f 007e 003e 001f 003c 000f     ......~.>...<...
1001410c:	007c 800f 0078 8007 0078 8007 0070 8003     |...x...x...p...
1001411c:	00f0 c003 00f0 c003 00f0 c003 00f0 c003     ................
1001412c:	0070 c003 0078 8003 0078 8007 0038 8007     p...x...x...8...
1001413c:	003c 8007 001e 000f 0018 000f 0000 001e     <...............
1001414c:	0000 003e 0000 003c 0000 007c 0000 00f8     ..>...<...|.....
1001415c:	0100 00f0 0100 00e0 0300 00e0 0700 00c0     ................
1001416c:	0f00 0080 1f00 0000 3e00 0000 7c00 0000     .........>...|..
1001417c:	fc00 0000 f801 0000 f003 0000 e007 0000     ................
1001418c:	c00f 0000 ff1f f0ff ff3f f0ff ff7f f0ff     ........?.......
	...
100141a4:	0000 ff3f 3ffe fcff ff3f 00f8 7000 0000     ..?..?..?....p..
100141b4:	00f0 e001 0100 00c0 8003 0700 0080 000f     ................
100141c4:	0e00 0000 001e 3c00 0000 0038 7800 0000     .......<..8..x..
100141d4:	00fc ff00 0180 c0ff 0702 00e0 f001 0000     ................
100141e4:	00f8 7c00 0000 003c 1e00 0000 001e 0e00     ...|..<.........
100141f4:	0000 000e 0f00 0000 000f 0e00 0000 000e     ................
10014204:	1e00 0000 001e 3c00 0000 207c f800 0178     .......<..| ..x.
10014214:	fef0 f007 ff7f 1fc0 80ff fe07 0000 0040     ..............@.
10014224:	0000 0000 0000 0001 0000 0001 0000 0003     ................
10014234:	0000 0007 0000 000f 0000 000f 0000 001f     ................
10014244:	0000 003f 0000 007f 0000 00ff 0000 00ff     ..?.............
10014254:	0100 00ef 0300 00cf 0700 00cf 0f00 008f     ................
10014264:	0f00 000f 1e00 000f 3e00 000f 7c00 000f     .........>...|..
10014274:	7800 000f f000 000f e001 000f e003 000f     .x..............
10014284:	c007 000f 8007 000f 000f 000f 001f 000f     ................
10014294:	003e 000f ff7f fcff ff7f fcff ffff fcff     >...............
100142a4:	0000 000f 0000 000f 0000 000f 0000 000f     ................
100142b4:	0000 000f 0000 000f 0000 000f 0000 000f     ................
100142c4:	0000 000f 0000 000f 0000 000f 0000 0000     ................
100142d4:	0000 0000 0000 ff1f 1ff8 f8ff ff1f 1cf8     ................
100142e4:	0000 001c 1c00 0000 001c 1c00 0000 001c     ................
100142f4:	1c00 0000 001c 1c00 0000 001c 1c00 0000     ................
10014304:	fc1d 1f00 00ff ff1f 1fc0 e09f 0318 20f0     ............... 
10014314:	f800 0000 007c 3c00 0000 003e 1e00 0000     ....|..<..>.....
10014324:	001e 0e00 0000 000e 0f00 0000 000e 0e00     ................
10014334:	0000 001e 1e00 0000 001e 3c00 0000 207c     ...........<..| 
10014344:	f800 0130 fcf0 e007 ff7f 3fc0 80ff fe0f     ..0........?....
10014354:	0000 0040 0000 0000 0000 0000 0000 000c     ..@.............
10014364:	0000 001e 0000 003f 0000 00fe 0100 00f8     ......?.........
10014374:	0300 00f0 0700 00c0 0f00 0080 3f00 0000     .............?..
10014384:	7e00 0000 fc00 0000 f801 0000 e001 0000     .~..............
10014394:	e003 0000 df07 00c0 ff0f 00f0 ff0f 00fc     ................
100143a4:	f91f 00fe c01f 003f 003f 800f 003e c007     ......?.?...>...
100143b4:	007c c003 007c e001 0078 e001 0078 e000     |...|...x...x...
100143c4:	0070 f000 00f0 f000 00f0 f000 00f0 f000     p...............
100143d4:	00f0 f000 0078 f000 0078 e001 0078 e001     ....x...x...x...
100143e4:	003c e003 003e c003 001f 8007 801f 801f     <...>...........
100143f4:	e00f 007f ff07 00fe ff01 00f8 7f00 00e0     ................
10014404:	0200 0000 0000 0000 0000 0000 ffff e0ff     ................
10014414:	ffff c0ff ffff 80ff 0000 8007 0000 800f     ................
10014424:	0000 000f 0000 001f 0000 001e 0000 003e     ..............>.
10014434:	0000 003c 0000 003c 0000 007c 0000 0078     ..<...<...|...x.
10014444:	0000 00f8 0000 00f0 0100 00f0 0100 00e0     ................
10014454:	0100 00e0 0300 00e0 0300 00c0 0700 00c0     ................
10014464:	0700 0080 0700 0080 0f00 0000 0f00 0000     ................
10014474:	1f00 0000 1e00 0000 3e00 0000 3c00 0000     .........>...<..
10014484:	3c00 0000 7800 0000 7800 0000 f800 0000     .<...x...x......
10014494:	f000 0000 f001 0000 e001 0000 e001 0000     ................
100144a4:	e003 0000 c003 0000 c007 0000 8007 0000     ................
100144b4:	0000 0000 1f00 0080 7f00 00e0 ff01 00f8     ................
100144c4:	f903 00f8 e003 007c c007 001e 8007 001e     ......|.........
100144d4:	000f 000f 000f 000f 000f 000f 000f 000f     ................
100144e4:	000f 000f 000f 000f 8007 001e c007 003e     ..............>.
100144f4:	e003 007c ff01 00f8 7f00 00e0 ff03 00fc     ..|.............
10014504:	f907 00fe c00f 003f 001f 800f 003e c007     ......?.....>...
10014514:	003c c003 007c e001 0078 e001 0078 e000     <...|...x...x...
10014524:	0070 f000 00f0 f000 00f0 f000 00f0 f000     p...............
10014534:	00f0 f000 0078 f000 0078 e001 0078 e001     ....x...x...x...
10014544:	003c e003 003e c003 001f c007 801f 801f     <...>...........
10014554:	e00f 007f ff07 00fe ff01 00f8 7f00 00e0     ................
10014564:	0200 0000 0000 0000 0000 0000 3f00 00c0     .............?..
10014574:	ff00 00f0 ff03 00fc f907 00fe c00f 001f     ................
10014584:	001f 800f 003e c007 003c e003 007c e001     ....>...<...|...
10014594:	0078 e001 0078 f000 0070 f000 00f0 f000     x...x...p.......
100145a4:	00f0 f000 00f0 f000 0070 f000 0078 f000     ........p...x...
100145b4:	0078 e001 0078 e001 003c e003 003e e007     x...x...<...>...
100145c4:	001f c00f c00f c01f f907 80ff ff03 80ff     ................
100145d4:	ff00 00ef 3f00 009e 0000 003e 0000 007c     .....?....>...|.
100145e4:	0000 00f8 0100 00f0 0300 00e0 0f00 00c0     ................
100145f4:	1f00 0080 3f00 0000 7e00 0000 f801 0000     .....?...~......
10014604:	f003 0000 e00f 0000 8007 0000 0003 0000     ................
	...
10014620:	f870 f8f8 0070 0000 0000 0000 0000 0000     p...p...........
10014630:	0000 0000 0000 7000 f8f8 70f8 0000 0000     .......p...p....
10014640:	0000 0000                                   ....

10014644 <josefinSans_48ptFontInfo>:
10014644:	202c 003a 4650 1001 3f90 1001               , :.PF...?..

10014650 <josefinSans_48ptDescriptors>:
10014650:	0002 0000 0000 0000 0000 0000 0000 0000     ................
	...
10014690:	0022 002c 000c 0108 001c 0160 0018 0210     ".,.......`.....
100146a0:	001e 0294 0018 0344 001c 03c8 001b 0478     ......D.......x.
100146b0:	001c 0528 001c 05d8 0005 0688               ..(.........

100146bc <BLACK>:
	...

100146bd <WHITE>:
100146bd:	00e0 0c00                                        ...

100146c0 <microsoftSansSerif_8ptFontInfo>:
100146c0:	200c 007e 4b5c 1001 46cc 1001               . ~.\K...F..

100146cc <microsoftSansSerif_8ptBitmaps>:
	...
100146d8:	8000 8080 8080 8080 8000 0000 9000 9090     ................
	...
100146f0:	4800 fc48 4848 fc48 4848 0000 2000 a870     .HH.HHH.HH... p.
10014700:	60a0 2830 70a8 0020 6000 6492 1008 4c20     .`0(.p ..`.d.. L
10014710:	0c92 0000 4000 a0a0 4040 90a8 6890 0000     .....@..@@...h..
10014720:	8000 8080 0000 0000 0000 0000 4000 8080     .............@..
10014730:	8080 8080 8080 4080 8000 4040 4040 4040     .......@..@@@@@@
10014740:	4040 8040 a000 a040 0000 0000 0000 0000     @@@...@.........
10014750:	0000 0000 2020 20f8 0020 0000 0000 0000     ....  .  .......
10014760:	0000 0000 4000 0080 0000 0000 0000 00c0     .....@..........
	...
1001477c:	8000 0000 1000 1010 2020 4040 8080 0000     ........  @@....
1001478c:	7000 8888 8888 8888 7088 0000 2000 20e0     .p.......p... . 
1001479c:	2020 2020 2020 0000 7000 0888 1008 4020           ...p.... @
100147ac:	f880 0000 7000 0888 3008 0808 7088 0000     .....p...0...p..
100147bc:	1000 3030 5050 f890 1010 0000 f800 8080     ..00PP..........
100147cc:	88f0 0808 7088 0000 7000 8088 f080 8888     .....p...p......
100147dc:	7088 0000 f800 1008 2010 4020 4040 0000     .p.......  @@@..
100147ec:	7000 8888 7088 8888 7088 0000 7000 8888     .p...p...p...p..
100147fc:	7888 0808 7088 0000 0000 0000 0080 0000     .x...p..........
1001480c:	8000 0000 0000 0000 0040 0000 4000 0080     ........@....@..
1001481c:	0000 1000 4020 4080 1020 0000 0000 0000     .... @.@ .......
1001482c:	f800 f800 0000 0000 0000 8000 2040 2010     ............@ . 
1001483c:	8040 0000 7000 0888 1008 2020 2000 0000     @....p....  . ..
1001484c:	0000 001e 8061 8040 408e 4092 4092 c08d     ....a.@..@.@.@..
1001485c:	0040 0060 001f 0000 1000 2810 4428 7c44     @.`........((DD|
1001486c:	8282 0000 f000 8888 f088 8888 f088 0000     ................
1001487c:	7800 8084 8080 8080 7884 0000 f000 8488     .x.......x......
1001488c:	8484 8484 f088 0000 f800 8080 f080 8080     ................
1001489c:	f880 0000 f800 8080 f080 8080 8080 0000     ................
100148ac:	7800 8084 9c80 8484 748c 0000 8400 8484     .x.......t......
100148bc:	fc84 8484 8484 0000 8000 8080 8080 8080     ................
100148cc:	8080 0000 1000 1010 1010 9010 6090 0000     .............`..
100148dc:	8800 a090 c0c0 90a0 8488 0000 8000 8080     ................
100148ec:	8080 8080 f880 0000 8200 c682 aac6 92aa     ................
100148fc:	8292 0000 8400 c4c4 a4a4 8c94 848c 0000     ................
1001490c:	7800 8484 8484 8484 7884 0000 f800 8484     .x.......x......
1001491c:	f884 8080 8080 0000 7800 8484 8484 9484     .........x......
1001492c:	788c 0004 f800 8484 f884 8484 8484 0000     .x..............
1001493c:	7000 8088 7080 0808 7088 0000 f800 2020     .p...p...p....  
1001494c:	2020 2020 2020 0000 8400 8484 8484 8484           ..........
1001495c:	7884 0000 8200 4482 4444 2828 1010 0000     .x.....DDD((....
1001496c:	0000 2080 2080 4044 4044 4044 802a 802a     ... . D@D@D@*.*.
1001497c:	0011 0011 0000 0000 8200 4482 1028 4428     ...........D(.(D
1001498c:	8282 0000 8200 4482 1028 1010 1010 0000     .......D(.......
1001499c:	fe00 0402 1008 4020 fe80 0000 c000 8080     ...... @........
100149ac:	8080 8080 8080 c080 8000 8080 4040 2020     ............@@  
100149bc:	1010 0000 c000 4040 4040 4040 4040 c040     ......@@@@@@@@@.
100149cc:	5020 0088 0000 0000 0000 0000 0000 0000      P..............
100149dc:	0000 0000 0000 fc00 8000 0040 0000 0000     ..........@.....
	...
100149f4:	0870 8878 7888 0000 8000 8080 88f0 8888     p.x..x..........
10014a04:	f088 0000 0000 0000 8870 8080 7088 0000     ........p....p..
10014a14:	0800 0808 8878 8888 7888 0000 0000 0000     ....x....x......
10014a24:	8870 80f8 7088 0000 4000 8080 80c0 8080     p....p...@......
10014a34:	8080 0000 0000 0000 8878 8888 7888 f008     ........x....x..
10014a44:	8000 8080 c8b0 8888 8888 0000 8000 0000     ................
10014a54:	8080 8080 8080 0000 8000 0000 8080 8080     ................
10014a64:	8080 8080 8000 8080 a090 a0c0 8890 0000     ................
10014a74:	8000 8080 8080 8080 8080 0000 0000 0000     ................
10014a84:	92ec 9292 9292 0000 0000 0000 c8b0 8888     ................
10014a94:	8888 0000 0000 0000 8870 8888 7088 0000     ........p....p..
10014aa4:	0000 0000 88f0 8888 f088 8080 0000 0000     ................
10014ab4:	8878 8888 7888 0808 0000 0000 80c0 8080     x....x..........
10014ac4:	8080 0000 0000 0000 9060 2040 6090 0000     ........`.@ .`..
10014ad4:	0000 8080 80c0 8080 4080 0000 0000 0000     .........@......
10014ae4:	8888 8888 6898 0000 0000 0000 8888 5050     .....h........PP
10014af4:	2020 0000 0000 0000 9292 aaaa 4444 0000       ..........DD..
10014b04:	0000 0000 9090 6060 9090 0000 0000 0000     ......``........
10014b14:	4848 4848 2030 c020 0000 0000 10f0 4020     HHHH0  ....... @
10014b24:	f080 0000 4020 4040 8040 4040 4040 0020     .... @@@@.@@@@ .
10014b34:	8000 8080 8080 8080 8080 0080 4080 4040     .............@@@
10014b44:	2040 4040 4040 0080 0000 9864 0000 0000     @ @@@@....d.....
	...

10014b5c <microsoftSansSerif_8ptDescriptors>:
10014b5c:	0002 0000 0001 000c 0004 0018 0006 0024     ..............$.
10014b6c:	0005 0030 0007 003c 0005 0048 0001 0054     ..0...<...H...T.
10014b7c:	0002 0060 0002 006c 0003 0078 0005 0084     ..`...l...x.....
10014b8c:	0002 0090 0002 009c 0001 00a8 0004 00b4     ................
10014b9c:	0005 00c0 0003 00cc 0005 00d8 0005 00e4     ................
10014bac:	0005 00f0 0005 00fc 0005 0108 0005 0114     ................
10014bbc:	0005 0120 0005 012c 0001 0138 0002 0144     .. ...,...8...D.
10014bcc:	0004 0150 0005 015c 0004 0168 0005 0174     ..P...\...h...t.
10014bdc:	000a 0180 0007 0198 0005 01a4 0006 01b0     ................
10014bec:	0006 01bc 0005 01c8 0005 01d4 0006 01e0     ................
10014bfc:	0006 01ec 0001 01f8 0004 0204 0006 0210     ................
10014c0c:	0005 021c 0007 0228 0006 0234 0006 0240     ......(...4...@.
10014c1c:	0006 024c 0006 0258 0006 0264 0005 0270     ..L...X...d...p.
10014c2c:	0005 027c 0006 0288 0007 0294 000b 02a0     ..|.............
10014c3c:	0007 02b8 0007 02c4 0007 02d0 0002 02dc     ................
10014c4c:	0004 02e8 0002 02f4 0005 0300 0006 030c     ................
10014c5c:	0002 0318 0005 0324 0005 0330 0005 033c     ......$...0...<.
10014c6c:	0005 0348 0005 0354 0002 0360 0005 036c     ..H...T...`...l.
10014c7c:	0005 0378 0001 0384 0001 0390 0005 039c     ..x.............
10014c8c:	0001 03a8 0007 03b4 0005 03c0 0005 03cc     ................
10014c9c:	0005 03d8 0005 03e4 0002 03f0 0004 03fc     ................
10014cac:	0002 0408 0005 0414 0005 0420 0007 042c     .......... ...,.
10014cbc:	0004 0438 0005 0444 0004 0450 0003 045c     ..8...D...P...\.
10014ccc:	0001 0468 0003 0474 0006 0480 a1b4 1000     ..h...t.........
10014cdc:	a1c2 1000 a1d0 1000 a1de 1000 a1ec 1000     ................
10014cec:	a1fa 1000 a208 1000 a218 1000 a228 1000     ............(...
10014cfc:	a238 1000 a248 1000 a258 1000 a268 1000     8...H...X...h...
10014d0c:	a278 1000 a288 1000 a298 1000 a2a8 1000     x...............
10014d1c:	a2b8 1000 a2c8 1000 a2d8 1000 a2e8 1000     ................
10014d2c:	a2f8 1000 a308 1000 a318 1000 a328 1000     ............(...
10014d3c:	a338 1000 a348 1000 a358 1000 a366 1000     8...H...X...f...
10014d4c:	a374 1000 a382 1000 a390 1000 a39e 1000     t...............
10014d5c:	a3ac 1000 a3ba 1000 a3c8 1000 a3d8 1000     ................
10014d6c:	a3e8 1000 a3f8 1000 a408 1000 a418 1000     ................
10014d7c:	a428 1000 a438 1000 a448 1000 a458 1000     (...8...H...X...
10014d8c:	a468 1000 a478 1000 a488 1000 a498 1000     h...x...........
10014d9c:	a4a8 1000 a4b8 1000 a4c8 1000 a4d6 1000     ................
10014dac:	a4e4 1000 a510 1000 a51e 1000 a52c 1000     ............,...
10014dbc:	a53a 1000 a548 1000 a556 1000 a564 1000     :...H...V...d...
10014dcc:	a572 1000 a580 1000 a58e 1000 a59c 1000     r...............
10014ddc:	a5aa 1000 a5b8 1000 a5c6 1000 a5d4 1000     ................
10014dec:	a5e2 1000 a5f0 1000 a5fe 1000 a60c 1000     ................
10014dfc:	a61a 1000 a628 1000 a636 1000 a644 1000     ....(...6...D...
10014e0c:	a652 1000 a660 1000 a66e 1000 a67c 1000     R...`...n...|...
10014e1c:	a68a 1000 a698 1000 a6a6 1000 a6b4 1000     ................
10014e2c:	a6c2 1000 a6d0 1000 a6de 1000 a6ec 1000     ................
10014e3c:	a6fa 1000 a708 1000 a716 1000 a724 1000     ............$...
10014e4c:	a732 1000 a740 1000 a74e 1000 a75c 1000     2...@...N...\...
10014e5c:	a76a 1000 a778 1000 a786 1000 a794 1000     j...x...........
10014e6c:	a7a2 1000 a7b0 1000 a7be 1000 a7cc 1000     ................
10014e7c:	a7da 1000 a7e8 1000 a7f6 1000 a890 1000     ................
10014e8c:	a8b8 1000 a8e0 1000 a908 1000 ab48 1000     ............H...
10014e9c:	a938 1000 a950 1000 a9c8 1000 a9e0 1000     8...P...........
10014eac:	a968 1000 a980 1000 a998 1000 a9b0 1000     h...............
10014ebc:	a9f8 1000 acbc 1000 acbc 1000 acbc 1000     ................
10014ecc:	acbc 1000 acbc 1000 acbc 1000 acbc 1000     ................
10014edc:	acbc 1000 aaa0 1000 aab8 1000 aad0 1000     ................
10014eec:	ab5e 1000 aa28 1000 acbc 1000 acbc 1000     ^...(...........
10014efc:	acbc 1000 acbc 1000 acbc 1000 acbc 1000     ................
10014f0c:	aae8 1000 ab00 1000 ab18 1000 ab30 1000     ............0...
10014f1c:	acbc 1000 ac74 1000 ac8c 1000 acbc 1000     ....t...........
10014f2c:	acbc 1000 ab8a 1000 aba0 1000 abb6 1000     ................
10014f3c:	abcc 1000 acbc 1000 acbc 1000 acbc 1000     ................
10014f4c:	acbc 1000 acbc 1000 acbc 1000 acbc 1000     ................
10014f5c:	acbc 1000 a87c 1000 a8a4 1000 a8cc 1000     ....|...........
10014f6c:	a8f4 1000 a920 1000 aa10 1000 aa40 1000     .... .......@...
10014f7c:	aa58 1000 aa70 1000 aa88 1000 ab74 1000     X...p.......t...
10014f8c:	abe2 1000 ac5c 1000 aca4 1000 c51b a5d5     ....\...........
10014f9c:	0002 85a6 11e5 3935 bba0 fd5a 0000 0000     ......59..Z.....

10014fac <csc_gatt_client_handle>:
10014fac:	b279 1000 0000 0000 b291 1000 b2a9 1000     y...............
10014fbc:	b385 1000 0000 0000 0000 0000 0000 0000     ................
10014fcc:	b2c1 1000 0000 0000                         ........

10014fd4 <csc_gap_handle>:
	...
10014fe8:	b309 1000 b265 1000 0000 0000 0000 0000     ....e...........
10014ff8:	b41d 1000 0000 0000 0000 0000 0000 0000     ................
10015008:	0000 0000 b41d 1000 0000 0000 0000 0000     ................
	...
10015020:	000d 0000 6146 6c69 6465 7420 206f 7473     ....Failed to st
10015030:	7261 2074 6573 7672 6369 2065 6964 6373     art service disc
10015040:	766f 7265 2e79 7320 6174 7574 2073 203d     overy. status = 
10015050:	6425 0000 6146 6c69 7420 206f 7473 7261     %d..Fail to star
10015060:	2074 6964 6373 766f 7265 6320 6168 6172     t discover chara
10015070:	7463 7265 7369 6974 0063 0000 6544 6373     cteristic...Desc
10015080:	6972 7470 726f 4420 7369 6f63 6576 7972     riptor Discovery
10015090:	4620 6961 656c 0064 0a0d 6146 6c69 6465      Failed...Failed
100150a0:	7420 206f 6573 646e 6320 6168 6172 7463      to send charact
100150b0:	7265 7369 6974 2063 7257 7469 2065 6552     eristic Write Re
100150c0:	7571 7365 0074 0000 6441 6576 7472 7369     quest...Advertis
100150d0:	6d65 6e65 2074 6164 6174 7320 7465 6620     ement data set f
100150e0:	6961 656c 2064 6572 7361 6e6f 2520 0064     ailed reason %d.
100150f0:	6544 6976 6563 5320 6174 7472 6465 4120     Device Started A
10015100:	7664 7265 6974 6573 656d 746e 0000 0000     dvertisement....
10015110:	6544 6976 6563 4120 7664 7265 6974 6573     Device Advertise
10015120:	656d 746e 4620 6961 656c 0064               ment Failed.

1001512c <csc_gatt_server_handle>:
1001512c:	b275 1000 0000 0000 b305 1000 0000 0000     u...............
	...
10015154:	b64c 1000 b64e 1000 b634 1000 b634 1000     L...N...4...4...
10015164:	b634 1000 b64c 1000 b634 1000 b634 1000     4...L...4...4...
10015174:	be9a 1000 bf0e 1000 be82 1000 bf14 1000     ................
10015184:	be88 1000 be8e 1000 be94 1000 c56c 1000     ............l...
10015194:	c56c 1000 c56c 1000 c56c 1000 c56c 1000     l...l...l...l...
100151a4:	c56c 1000 c56c 1000 c56c 1000 c56c 1000     l...l...l...l...
100151b4:	c56c 1000 c56c 1000 c56c 1000 c56c 1000     l...l...l...l...
100151c4:	c56c 1000 c56c 1000 c56c 1000 c56c 1000     l...l...l...l...
100151d4:	c56c 1000 c56c 1000 c58a 1000 c58a 1000     l...l...........
100151e4:	c58a 1000 c58a 1000 c58a 1000 c58a 1000     ................
100151f4:	c58a 1000 c58a 1000 c58a 1000 c58a 1000     ................
10015204:	c5ac 1000 c5ac 1000 c5ac 1000 c5ac 1000     ................
10015214:	c5ac 1000 c5ac 1000 c5ac 1000 c5ac 1000     ................
10015224:	c5ac 1000 c5ac 1000 c5ce 1000 c5ce 1000     ................
10015234:	c5ce 1000 c5ce 1000 c5ce 1000 c5ce 1000     ................
10015244:	c5e8 1000 c5e8 1000 c5e8 1000 c5e8 1000     ................
10015254:	c5e8 1000 c5e8 1000 c5e8 1000 c5e8 1000     ................
10015264:	c5e8 1000 c602 1000 c602 1000 c624 1000     ............$...
10015274:	c624 1000 c63e 1000 c624 1000 3231 3433     $...>...$...1234
10015284:	3635 0000 ab00 efcd cdab 00ef c51b a5d5     56..............
10015294:	0002 85a6 11e5 3935 bba0 fd5a 0000 0000     ......59..Z.....
100152a4:	0600 b2d6 05f0 f8f0 0000 0000               ............

100152b0 <ble_mgr_gatt_server_handle>:
	...
100152c8:	b591 1000 b5cd 1000 b595 1000 0000 0000     ................
100152d8:	6353 6e61 696e 676e 2020 6166 6c69 6465     Scanning  failed
100152e8:	0000 0000 544d 2055 6843 6e61 6567 4620     ....MTU Change F
100152f8:	6961 656c 2c64 4320 6e6f 656e 7463 6f69     ailed, Connectio
10015308:	206e 6148 646e 656c 253a 2c64 4f20 6570     n Handle:%d, Ope
10015318:	6172 6974 6e6f 253a 0064 0000 6544 6976     ration:%d...Devi
10015328:	6563 6420 7369 6f63 6e6e 6365 6574 2064     ce disconnected 
10015338:	6552 7361 6e6f 303a 2578 3230 2078 6148     Reason:0x%02x Ha
10015348:	646e 656c 303d 2578 0078 0000 6e45 7263     ndle=0x%x...Encr
10015358:	7079 6974 6e6f 6620 6961 656c 0064 0000     yption failed...
10015368:	6e45 7263 7079 6974 6e6f 6320 6d6f 6c70     Encryption compl
10015378:	7465 6465 7320 6375 6563 7373 7566 6c6c     eted successfull
10015388:	0079 0000 4c42 2045 6544 6976 6563 6e20     y...BLE Device n
10015398:	746f 6620 756f 646e 6520 636e 7972 7470     ot found encrypt
100153a8:	6f69 206e 6e69 6f66 0000 0000 6e49 6f66     ion info....Info
100153b8:	6d3a 7861 6d69 6d75 6e20 2e6f 666f 7320     :maximum no.of s
100153c8:	6163 206e 6564 6976 6563 7220 6165 6863     can device reach
100153d8:	6465 2e2e 532e 6f74 7070 6e69 2067 6353     ed...Stopping Sc
100153e8:	6e61 0000 6146 6c69 6465 7420 206f 7473     an..Failed to st
100153f8:	706f 7320 6163 6e6e 6e69 0067 6150 7269     op scanning.Pair
10015408:	6e69 2067 6166 6c69 6465 2e2e 442e 7369     ing failed...Dis
10015418:	6f63 6e6e 6365 6974 676e 0000 6944 6373     connecting..Disc
10015428:	6e6f 656e 7463 5220 7165 6575 7473 4620     onnect Request F
10015438:	6961 656c 0064 0000 6150 7269 6e69 2067     ailed...Pairing 
10015448:	7270 636f 6465 7275 2065 6f63 706d 656c     procedure comple
10015458:	6574 2064 7573 6363 7365 6673 6c75 796c     ted successfully
10015468:	0000 0000 4c42 2045 6544 6976 6563 6e20     ....BLE Device n
10015478:	746f 6620 756f 646e 7420 206f 7473 726f     ot found to stor
10015488:	2065 6874 2065 6170 7269 6e69 2067 6e69     e the pairing in
10015498:	6f66 0000 6e45 7263 7079 6974 6e6f 4e20     fo..Encryption N
100154a8:	746f 7320 6174 7472 6465 0000 6c53 7661     ot started..Slav
100154b8:	2065 6553 7563 6972 7974 5220 7165 2d20     e Security Req -
100154c8:	4120 7475 6568 746e 6369 7461 6f69 206e      Authentication 
100154d8:	6146 6c69 6465 0000 6150 7269 5220 7165     Failed..Pair Req
100154e8:	6575 7473 2d20 4120 7475 6568 746e 6369     uest - Authentic
100154f8:	7461 6f69 206e 6146 6c69 6465 0000 0000     ation Failed....
10015508:	6e45 6574 2072 6874 2065 6150 7373 656b     Enter the Passke
10015518:	2879 2d36 6944 6967 2974 6920 206e 6554     y(6-Digit) in Te
10015528:	6d72 6e69 6c61 003a 6950 206e 6954 656d     rminal:.Pin Time
10015538:	756f 0074 6944 6373 6e6f 656e 7463 6e69     out.Disconnectin
10015548:	2067 2e2e 002e 0000 6c50 6165 6573 4520     g ......Please E
10015558:	746e 7265 7420 6568 6620 6c6f 6f6c 6977     nter the followi
10015568:	676e 5020 7361 2d73 6f63 6564 6f28 206e     ng Pass-code(on 
10015578:	746f 6568 2072 6544 6976 6563 3a29 0000     other Device):..
10015588:	6150 7269 6b2d 7965 7220 7065 796c 6620     Pair-key reply f
10015598:	6961 656c 0064 0000 4f4f 2042 6546 7461     ailed...OOB Feat
100155a8:	7275 2065 6f4e 2074 7573 7070 726f 6574     ure Not supporte
100155b8:	0064 0000 6e45 6574 6572 2064 6150 7373     d...Entered Pass
100155c8:	632d 646f 3a65 0000 6150 7269 6e69 2067     -code:..Pairing 
100155d8:	6e69 6f66 6d72 7461 6f69 206e 666f 7020     information of p
100155e8:	6565 2072 6564 6976 6563 6920 2073 6f6e     eer device is no
100155f8:	2074 7661 6961 616c 6c62 2e65 0000 0000     t available.....
10015608:	6c50 6165 6573 7520 706e 6961 2072 6874     Please unpair th
10015618:	2065 6564 6976 6563 6620 6f72 206d 6570     e device from pe
10015628:	7265 6420 7665 6369 2865 6f6d 6962 656c     er device(mobile
10015638:	2029 6573 7474 6e69 7367 6d20 6e65 2075     ) settings menu 
10015648:	6e61 2064 7473 7261 2074 6170 7269 6e69     and start pairin
10015658:	2067 6761 6961 006e 6e45 7263 7079 6974     g again.Encrypti
10015668:	6e6f 5220 7165 6575 7473 5220 7065 796c     on Request Reply
10015678:	4620 6961 656c 0064 6e49 7469 6169 696c      Failed.Initiali
10015688:	697a 676e 5320 4d41 3142 0031 4153 424d     zing SAMB11.SAMB
10015698:	3131 4920 696e 6974 6c61 7a69 7461 6f69     11 Initializatio
100156a8:	206e 6166 6c69 6465 0000 0000 6c50 6165     n failed....Plea
100156b8:	6573 6320 6568 6b63 7420 6568 7020 776f     se check the pow
100156c8:	7265 6120 646e 6320 6e6f 656e 7463 6f69     er and connectio
100156d8:	206e 202f 6168 6472 6177 6572 6320 6e6f     n / hardware con
100156e8:	656e 7463 726f 0000 484b 554c 2d47 5753     nector..KHLUG-SW
100156f8:	0000 0000 6544 6976 6563 6e20 6d61 2065     ....Device name 
10015708:	6573 2074 6166 6c69 6465 0000 4442 6120     set failed..BD a
10015718:	6464 6572 7373 6720 7465 6620 6961 656c     ddress get faile
10015728:	0064 0000 4442 4120 6464 6572 7373 303a     d...BD Address:0
10015738:	2578 3230 2558 3230 2558 3230 2558 3230     x%02X%02X%02X%02
10015748:	2558 3230 2558 3230 2c58 4120 6464 6572     X%02X%02X, Addre
10015758:	7373 5420 7079 3a65 6425 0000 6553 2074     ss Type:%d..Set 
10015768:	4c42 2045 6544 6976 6563 6320 6e6f 6966     BLE Device confi
10015778:	7567 6172 6974 6e6f 6620 6961 656c 0064     guration failed.
10015788:	6553 2074 4c42 2045 6544 6976 6563 4120     Set BLE Device A
10015798:	6464 6572 7373 6620 6961 656c 0064 0000     ddress failed...
100157a8:	6353 6e61 696e 676e 2e2e 502e 656c 7361     Scanning...Pleas
100157b8:	2065 6177 7469 2e2e 002e 0000 6c53 7661     e wait......Slav
100157c8:	2065 6573 7563 6972 7974 7220 7165 6575     e security reque
100157d8:	7473 6620 6961 656c 0064 0000 6f43 6e6e     st failed...Conn
100157e8:	6365 6574 2064 6f74 7020 6565 2072 6564     ected to peer de
100157f8:	6976 6563 7720 7469 2068 6461 7264 7365     vice with addres
10015808:	2073 7830 3025 7832 3025 7832 3025 7832     s 0x%02x%02x%02x
10015818:	3025 7832 3025 7832 3025 7832 0000 0000     %02x%02x%02x....
10015828:	6f43 6e6e 6365 6974 6e6f 4820 6e61 6c64     Connection Handl
10015838:	2065 6425 0000 0000 6552 6f73 766c 6e69     e %d....Resolvin
10015848:	2067 6152 646e 6d6f 6120 6464 6572 7373     g Random address
10015858:	6620 6961 656c 2a64 002a 0000 614d 2078      failed**...Max 
10015868:	756e 626d 7265 6f20 2066 6f63 6e6e 6365     number of connec
10015878:	6974 6e6f 7220 6165 6863 6465 203a 6425     tion reached: %d
10015888:	3d20 3d3d 443e 7369 6f63 6e6e 6365 6974      ===>Disconnecti
10015898:	676e 2e2e 002e 0000 6544 6976 6563 4320     ng......Device C
100158a8:	6e6f 656e 7463 6f69 206e 6146 6c69 6465     onnection Failed
100158b8:	2d20 5320 6174 7574 3a73 2520 0064 0000      - Status: %d...
100158c8:	4c42 2045 6441 6576 7472 7369 6d65 6e65     BLE Advertisemen
100158d8:	2074 6164 6174 7320 7465 6620 6961 656c     t data set faile
100158e8:	0064 0000                                   d...

100158ec <ble_mgr_gap_handle>:
100158ec:	b58d 1000 b749 1000 b5a5 1000 0000 0000     ....I...........
100158fc:	0000 0000 c235 1000 b5fd 1000 b5a1 1000     ....5...........
1001590c:	b8e9 1000 b7c9 1000 baed 1000 b901 1000     ................
1001591c:	bc41 1000 bd85 1000 b685 1000 c471 1000     A...........q...
	...
10015938:	c51b a5d5 0002 85a6 11e5 3935 bba0 fd5a     ..........59..Z.
10015948:	0000 0000 c51b a5d5 0002 85a6 11e5 3935     ..............59
10015958:	bba1 fd5a 0000 0000 7461 625f 656c 635f     ..Z.....at_ble_c
10015968:	6168 6172 7463 7265 7369 6974 5f63 6176     haracteristic_va
10015978:	756c 5f65 6567 2074 6176 756c 2065 6567     lue_get value ge
10015988:	2074 6166 6c69 6465 0000 0000 7461 625f     t failed....at_b
10015998:	656c 635f 6168 6172 7463 7265 7369 6974     le_characteristi
100159a8:	5f63 6176 756c 5f65 6573 2074 6176 756c     c_value_set valu
100159b8:	2065 6573 2074 6166 6c69 6465 0000 0000     e set failed....
100159c8:	7461 625f 656c 6e5f 746f 6669 6369 7461     at_ble_notificat
100159d8:	6f69 5f6e 6573 646e 2020 6166 6c69 6465     ion_send  failed
100159e8:	0000 0000 6425 3a20 2520 0064 6425 3a20     ....%d : %d.%d :
100159f8:	3020 6425 0000 0000 7325 202c 6425 2520      0%d....%s, %d %
10015a08:	0073 0000 764f 7265 6974 656d 2d20 4320     s...Overtime - C
10015a18:	7361 2068 6143 6873 0000 0000 6e49 7469     ash Cash....Init
10015a28:	6169 696c 697a 676e 4320 7375 6f74 206d     ializing Custom 
10015a38:	6553 6972 6c61 4320 6168 2074 7041 6c70     Serial Chat Appl
10015a48:	6369 7461 6f69 006e 614a 006e 6546 0062     ication.Jan.Feb.
10015a58:	614d 0072 7041 0072 614d 0079 754a 006e     Mar.Apr.May.Jun.
10015a68:	754a 006c 7541 0067 6553 0070 634f 0074     Jul.Aug.Sep.Oct.
10015a78:	6f4e 0076 6544 0063 6f4d 006e 7554 0065     Nov.Dec.Mon.Tue.
10015a88:	6557 0064 6854 0075 7246 0069 6153 0074     Wed.Thu.Fri.Sat.
10015a98:	7553 006e                                   Sun.

10015a9c <str_day>:
10015a9c:	5a80 1001 5a84 1001 5a88 1001 5a8c 1001     .Z...Z...Z...Z..
10015aac:	5a90 1001 5a94 1001 5a98 1001               .Z...Z...Z..

10015ab8 <app_gap_handle>:
	...
10015acc:	d411 1000 d44d 1000 0000 0000 0000 0000     ....M...........
	...

10015b04 <str_month>:
10015b04:	5a50 1001 5a54 1001 5a58 1001 5a5c 1001     PZ..TZ..XZ..\Z..
10015b14:	5a60 1001 5a64 1001 5a68 1001 5a6c 1001     `Z..dZ..hZ..lZ..
10015b24:	5a70 1001 5a74 1001 5a78 1001 5a7c 1001     pZ..tZ..xZ..|Z..
10015b34:	7441 656d 206c 6f43 7072 022e                    Atmel Corp.

10015b3f <CSWTCH.45>:
10015b3f:	0402 0010                                        ...

10015b42 <CSWTCH.47>:
10015b42:	0300 0301 0303 0303 0303 0303 0303 0202          ...............

10015b51 <client_conf_uuid>:
10015b51:	2902                                        .)

10015b53 <presentation_format_uuid>:
10015b53:	2904                                        .)

10015b55 <user_desc_uuid>:
10015b55:	2901                                        .)

10015b57 <server_conf_uuid>:
10015b57:	2903                                        .)

10015b59 <extended_props_uuid>:
10015b59:	2900                                        .)

10015b5b <include_uuid>:
10015b5b:	2802                                        .(

10015b5d <char_uuid>:
10015b5d:	2803 2c00 0114 ec10 0112 ec10 0112 ea10     .(.,............
10015b6d:	0112 0410 0114 0410 0114 f610 0113 ea10     ................
10015b7d:	0112 0410 0114 f610 0113 0410 0114 ea10     ................
10015b8d:	0112 0c10 0114 0c10 0114 0c10 0114 0c10     ................
10015b9d:	0116 4310 0000 7400                              ...C...

10015ba4 <_global_impure_ptr>:
10015ba4:	5c74 1001                                   t\..

10015ba8 <__sf_fake_stdin>:
	...

10015bc8 <__sf_fake_stdout>:
	...

10015be8 <__sf_fake_stderr>:
	...
10015c08:	2d23 2b30 0020 6c68 004c 6665 4567 4746     #-0+ .hlL.efgEFG
10015c18:	3000 3231 3433 3635 3837 4139 4342 4544     .0123456789ABCDE
10015c28:	0046 3130 3332 3534 3736 3938 6261 6463     F.0123456789abcd
10015c38:	6665 0000                                   ef..

10015c3c <_init>:
10015c3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10015c3e:	46c0      	nop			; (mov r8, r8)
10015c40:	bcf8      	pop	{r3, r4, r5, r6, r7}
10015c42:	bc08      	pop	{r3}
10015c44:	469e      	mov	lr, r3
10015c46:	4770      	bx	lr

10015c48 <__init_array_start>:
10015c48:	100080b1 	.word	0x100080b1

10015c4c <_fini>:
10015c4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10015c4e:	46c0      	nop			; (mov r8, r8)
10015c50:	bcf8      	pop	{r3, r4, r5, r6, r7}
10015c52:	bc08      	pop	{r3}
10015c54:	469e      	mov	lr, r3
10015c56:	4770      	bx	lr

10015c58 <__fini_array_start>:
10015c58:	10008089 	.word	0x10008089
